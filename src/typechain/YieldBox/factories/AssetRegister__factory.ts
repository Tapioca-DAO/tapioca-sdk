/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AssetRegister, AssetRegisterInterface } from "../AssetRegister";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    name: "AssetRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "assetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ids",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isApprovedForAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "registerAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461013057608081016001600160401b0381118282101761011a57604052600481526020810190600091828152604082018381526060830191848352600554680100000000000000008110156101065760018101806005558110156100f2576005865260036020872091020193519060058210156100de5784549051610100600160a81b0360089190911b1660ff929092166001600160a81b031990911617178355516001830180546001600160a01b039092166001600160a01b031990921691909117905551600290910155506040516113e790816101368239f35b634e487b7160e01b86526021600452602486fd5b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908162fdd58e146110325750806301ffc9a714610fc55780630e89341c14610f315780632d4e1d5214610ee95780632eb2c2d614610ca25780634e1273f414610b47578063a22cb46514610ab8578063a75fcb1e14610a60578063b061db9414610505578063b8489fb514610417578063bd85b039146103f0578063cf35bdd01461036f578063e985e9c514610321578063eafe7a74146102fe5763f242432a146100c757600080fd5b346102fa5760a03660031901126102fa576100e061106f565b6100e861108a565b6044359060643560843567ffffffffffffffff81116102f65761010e9036908701611142565b9390926001600160a01b0380961690818a526020968a8852898b20338c528852898b20848c52885260ff8a8c2054163384149081156102ee575b5080156102cd575b1561028a57811692918a9184828a7fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628e61018b85151561131f565b8388526002835280882089895283528088206101a88c825461135a565b90558488526002835280882089895283528088206101c78c8254611367565b90558a8151938a85528401523392a43b6101df575080f35b61021e88968b519889978896879563f23a6e6160e01b9e8f8852339088015260248701526044860152606485015260a0608485015260a48401916112b2565b03925af19182156102805761024794508592610253575b50506001600160e01b031916146112d3565b38808080808080808880f35b6102729250803d10610279575b61026a81836111c1565b810190611292565b3880610235565b503d610260565b84513d87823e3d90fd5b895162461bcd60e51b8152808a01899052601460248201527f5472616e73666572206e6f7420616c6c6f7765640000000000000000000000006044820152606490fd5b50828b5260018852898b20338c528852600160ff8b8d205416151514610150565b905038610148565b8780fd5b8280fd5b50503461031d578160031936011261031d576020906005549051908152f35b5080fd5b50503461031d578060031936011261031d5760ff8160209361034161106f565b61034961108a565b6001600160a01b0391821683526001875283832091168252855220549151911615158152f35b5091903461031d57602036600319011261031d5782356005548110156102fa5761039890611170565b5080549160ff8316926001600160a01b03906002826001860154169401549483519660058210156103dd575060809750865260081c1660208501528301526060820152f35b634e487b7160e01b815260218952602490fd5b50346102fa5760203660031901126102fa5760209282913581526003845220549051908152f35b50346102fa5760603660031901126102fa5761043161106f565b916024359160443580151591828203610501576005548510156104be5750906104ae7f6aceb1b079beeabdd8c2f30cd221ca27ec52e9d0aef6bb229cc175cf15dd778b9392338852876020526001600160a01b038489209716968789526020528388208689526020528388209060ff801983541691151516179055565b815193845260208401523392a380f35b606490602085519162461bcd60e51b8352820152601d60248201527f41737365744d616e616765723a206173736574206e6f742076616c69640000006044820152fd5b8680fd5b5091903461031d57610516366110a0565b919094926005958682101594856103dd57600183149788159889610a52575b878115610a2f575b50156109ec5761054c846110e2565b996001600160a01b03978887169687855260209c8d52898b86209616958686528d528a85208986528d528a8520549b8c1561058b575b8d8d8d51908152f35b909192939495969798809a9c5015908382156109de575b50501561099b57816107ea57861591828015610840575b156107fd576107ea57816107e1575b81156107d6575b5015610793578154988851926080840184811067ffffffffffffffff82111761078057908b9392918b528785528c85018981528b8601938885526801000000000000000060608801968d8852101561076d576106308e600181018555611170565b97909761075b57519283101561074857508554905174ffffffffffffffffffffffffffffffffffffffffff1990911660ff9092169190911760089190911b74ffffffffffffffffffffffffffffffffffffffff0016178455905160018401805473ffffffffffffffffffffffffffffffffffffffff191691909216179055516002909101557f30605d4cd099421ed12ca1ba642a1ea2659f679b5cdd0ccd032586640eeaff4391869188907f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b908490610708886110e2565b8982528d528181208582528d528181208a82528d5283828220558151908d82528d820152a281519081528789820152a43880808080808080808080610582565b634e487b7160e01b885260219052602487fd5b634e487b7160e01b8952888252602489fd5b634e487b7160e01b885260419052602487fd5b634e487b7160e01b865260418452602486fd5b875162461bcd60e51b81529081018a9052601560248201527f5969656c64426f783a204e6f74206120746f6b656e00000000000000000000006044820152606490fd5b90503b1515386105cf565b871591506105c8565b634e487b7160e01b855260218352602485fd5b8a5162461bcd60e51b81528085018e9052601b60248201527f5969656c64426f783a205374726174656779206d69736d6174636800000000006044820152606490fd5b50508951630c3e9ce360e21b81528c8185818a5afa908115610991578691610958575b50848110156109455785908814806108dd575b80156105b957508a516305f5c3df60e21b81528d8186818b5afa9081156108d35787916108a6575b508a146105b9565b90508d81813d83116108cc575b6108bd81836111c1565b8101031261050157513861089e565b503d6108b3565b8c513d89823e3d90fd5b508a51633dad37ed60e21b81528d8186818b5afa9081156108d357908d91889161090b575b50168914610876565b8f8193508092503d831161093e575b61092481836111c1565b8101031261050157518c81168103610501578c9038610902565b503d61091a565b634e487b7160e01b865260218452602486fd5b90508c81813d831161098a575b61096f81836111c1565b810103126109865751848110156109865738610863565b8580fd5b503d610965565b8b513d88823e3d90fd5b895162461bcd60e51b81528084018d9052601e60248201527f5969656c64426f783a204e6f20746f6b656e496420666f7220455243323000006044820152606490fd5b9091506109455738836105a2565b875162461bcd60e51b81526020818c0152601f60248201527f41737365744d616e616765723a2063616e6e6f7420616464204e6174697665006044820152606490fd5b9050610a3f57600384148761053d565b634e487b7160e01b825260218a52602482fd5b509550809560028414610535565b50503461031d57606036600319011261031d5760ff81602093610a8161106f565b610a8961108a565b6001600160a01b0391821683528287528383209116825285528181206044358252855220549151911615158152f35b50503461031d578060031936011261031d57610ad261106f565b906024359081151591828103610b4357610b169033865260016020526001600160a01b038387209516948587526020528286209060ff801983541691151516179055565b519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b8480fd5b5082903461031d578260031936011261031d5767ffffffffffffffff91813583811161031d57610b7a9036908401611111565b91909360249081359081116102fa5791848692610b9b899536908401611111565b949092610ba98689146111f9565b610bb288611245565b93610bbf885195866111c1565b888552610bcb89611245565b602099868b019891601f1901368a37875b818110610c25575050505050505083519485948186019282875251809352850193925b828110610c0e57505050500390f35b835185528695509381019392810192600101610bff565b610c368183889e9b9a9c9d9e611282565b356001600160a01b038116809103610c9e578852600289528b8820610c5c828587611282565b35895289528b8820548a51821015610c8c5790610c81918a8260051b8d01015261125d565b9a999896979a610bdc565b634e487b7160e01b8952603286528789fd5b8880fd5b50346102fa5760031960a036820112610ee557610cbd61106f565b610cc561108a565b9067ffffffffffffffff906044358281116102f657610ce79036908701611111565b929094606435828111610ee157610d019036908901611111565b92608435908111610edd5790610d1d8897949236908b01611142565b929094610d2b8289146111f9565b6001600160a01b038d8d8284169b8c93610d4685151561131f565b839b169a8b935b8d808310610e6f57610d8c92507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb939150845194808652850191611374565b91808303602082015280610da23394898b611374565b0390a43b610dae578b80f35b8a51988997889763bc197c8160e01b9c8d8a5233908a015260248901526044880160a0905260a4880190610de192611374565b9084878303016064880152610df592611374565b91848303016084850152610e08926112b2565b0381875a94602095f1908115610e6257610e3593508491610e44575b506001600160e01b031916146112d3565b38808080808080808080808b80f35b610e5c915060203d81116102795761026a81836111c1565b38610e24565b50505051903d90823e3d90fd5b95610e8583610ed198610eca9698979598611282565b3590610e92878b8d611282565b3595835260026020918183528585208486528352858520610eb489825461135a565b9055845281528383209183525220918254611367565b905561125d565b878d8f8c938e91610d4d565b8a80fd5b8980fd5b8380fd5b50503461031d5780602092610f08610f00366110a0565b9390926110e2565b6001600160a01b0380921685528752848420911683528552828220908252845220549051908152f35b50346102fa5760209283600319360112610fc2578251918483019083821067ffffffffffffffff831117610faf575083949291945283815282519382859384528251928382860152825b848110610f9957505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610f7b565b634e487b7160e01b835260419052602482fd5b80fd5b50346102fa5760203660031901126102fa57359063ffffffff60e01b82168092036102fa57602092506301ffc9a760e01b8214918215611021575b8215611010575b50519015158152f35b6303a24d0760e21b14915038611007565b636cdb3d1360e11b81149250611000565b849084346102fa57806003193601126102fa576020926001600160a01b0361105861106f565b168152600284528181206024358252845220548152f35b600435906001600160a01b038216820361108557565b600080fd5b602435906001600160a01b038216820361108557565b608090600319011261108557600435600581101561108557906001600160a01b0390602435828116810361108557916044359081168103611085579060643590565b60058110156110fb576000526004602052604060002090565b634e487b7160e01b600052602160045260246000fd5b9181601f840112156110855782359167ffffffffffffffff8311611085576020808501948460051b01011161108557565b9181601f840112156110855782359167ffffffffffffffff8311611085576020838186019501011161108557565b6005548110156111ab576003906005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176111e357604052565b634e487b7160e01b600052604160045260246000fd5b1561120057565b60405162461bcd60e51b815260206004820152601860248201527f455243313135353a204c656e677468206d69736d6174636800000000000000006044820152606490fd5b67ffffffffffffffff81116111e35760051b60200190565b600019811461126c5760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156111ab5760051b0190565b9081602091031261108557516001600160e01b0319811681036110855790565b908060209392818452848401376000828201840152601f01601f1916010190565b156112da57565b60405162461bcd60e51b815260206004820152601260248201527f57726f6e672072657475726e2076616c756500000000000000000000000000006044820152606490fd5b1561132657565b60405162461bcd60e51b815260206004820152600c60248201526b4e6f2030206164647265737360a01b6044820152606490fd5b9190820391821161126c57565b9190820180921161126c57565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83116110855760209260051b80928483013701019056fea26469706673582212201f16181f238c1acb0fa7d93b8aa333037808f69e026dc138edffad8f39585f3964736f6c63430008120033";

type AssetRegisterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetRegisterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetRegister__factory extends ContractFactory {
  constructor(...args: AssetRegisterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AssetRegister";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetRegister> {
    return super.deploy(overrides || {}) as Promise<AssetRegister>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AssetRegister {
    return super.attach(address) as AssetRegister;
  }
  override connect(signer: Signer): AssetRegister__factory {
    return super.connect(signer) as AssetRegister__factory;
  }
  static readonly contractName: "AssetRegister";

  public readonly contractName: "AssetRegister";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetRegisterInterface {
    return new utils.Interface(_abi) as AssetRegisterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetRegister {
    return new Contract(address, _abi, signerOrProvider) as AssetRegister;
  }
}
