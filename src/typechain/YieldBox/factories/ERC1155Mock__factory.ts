/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155Mock, ERC1155MockInterface } from "../ERC1155Mock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isApprovedForAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "transferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferSingle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061138b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c80634e1273f41161008c578063bd85b03911610066578063bd85b03914610231578063e985e9c514610251578063f242432a1461027f578063f5298aca1461029257600080fd5b80634e1273f4146101cb578063a22cb465146101eb578063a75fcb1e146101fe57600080fd5b80630e89341c116100c85780630e89341c14610164578063156e29f6146101925780631aec811b146101a55780632eb2c2d6146101b857600080fd5b8062fdd58e146100ee57806301ffc9a71461012c5780630731a3691461014f575b600080fd5b6101196100fc366004610c4a565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61013f61013a366004610c8d565b6102a5565b6040519015158152602001610123565b61016261015d366004610cfd565b6102f7565b005b610185610172366004610d8e565b5060408051602081019091526000815290565b6040516101239190610da7565b6101626101a0366004610dfc565b61030d565b6101626101b3366004610e2f565b61031d565b6101626101c6366004610eb3565b61032f565b6101de6101d9366004610f6e565b610480565b6040516101239190610fda565b6101626101f936600461101e565b6105cb565b61013f61020c36600461105a565b6000602081815293815260408082208552928152828120909352825290205460ff1681565b61011961023f366004610d8e565b60036020526000908152604090205481565b61013f61025f366004611096565b600160209081526000928352604080842090915290825290205460ff1681565b61016261028d3660046110c9565b610637565b6101626102a0366004610dfc565b610761565b60006001600160e01b031982166301ffc9a760e01b14806102d65750636cdb3d1360e11b6001600160e01b03198316145b806102f157506303a24d0760e21b6001600160e01b03198316145b92915050565b61030586868686868661076c565b505050505050565b610318838383610923565b505050565b610329848484846109f3565b50505050565b84831461037e5760405162461bcd60e51b815260206004820152601860248201527708aa48662626a6a744098cadccee8d040dad2e6dac2e8c6d60431b60448201526064015b60405180910390fd5b61038c88888888888861076c565b6001600160a01b0387163b156104765760405163bc197c8160e01b808252906001600160a01b0389169063bc197c81906103d89033908d908c908c908c908c908c908c9060040161118e565b602060405180830381600087803b1580156103f257600080fd5b505af1158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a91906111f2565b6001600160e01b031916146104765760405162461bcd60e51b815260206004820152601260248201527157726f6e672072657475726e2076616c756560701b6044820152606401610375565b5050505050505050565b6060838281146104cd5760405162461bcd60e51b815260206004820152601860248201527708aa48662626a6a744098cadccee8d040dad2e6dac2e8c6d60431b6044820152606401610375565b8067ffffffffffffffff8111156104e6576104e661120f565b60405190808252806020026020018201604052801561050f578160200160208202803683370190505b50915060005b818110156105c1576002600088888481811061053357610533611225565b9050602002016020810190610548919061123b565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086868481811061057c5761057c611225565b905060200201358152602001908152602001600020548382815181106105a4576105a4611225565b6020908102919091010152806105b98161126c565b915050610515565b5050949350505050565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b038616600090815260208181526040808320338452825280832087845290915290205461066f90879060ff16610ada565b61067b868686866109f3565b6001600160a01b0385163b156103055760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906106c39033908b908a908a908a908a90600401611287565b602060405180830381600087803b1580156106dd57600080fd5b505af11580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071591906111f2565b6001600160e01b031916146103055760405162461bcd60e51b815260206004820152601260248201527157726f6e672072657475726e2076616c756560701b6044820152606401610375565b610318838383610b67565b6001600160a01b0385166107925760405162461bcd60e51b8152600401610375906112ce565b8260005b818110156108be576001600160a01b03881660009081526020818152604080832033845290915281206107fa918a91908989868181106107d8576107d8611225565b602090810292909201358352508101919091526040016000205460ff16610ada565b600086868381811061080e5761080e611225565b905060200201359050600085858481811061082b5761082b611225565b6001600160a01b038d1660009081526002602090815260408083208884528252822080549390910294909401359450849392509061086a9084906112f4565b90915550506001600160a01b0389166000908152600260209081526040808320858452909152812080548392906108a290849061130b565b92505081905550505080806108b69061126c565b915050610796565b50856001600160a01b0316876001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb888888886040516109129493929190611323565b60405180910390a450505050505050565b6001600160a01b0383166109495760405162461bcd60e51b8152600401610375906112ce565b6001600160a01b03831660009081526002602090815260408083208584529091528120805483929061097c90849061130b565b90915550506000828152600360205260408120805483929061099f90849061130b565b909155505060408051838152602081018390526001600160a01b0385169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291015b60405180910390a4505050565b6001600160a01b038316610a195760405162461bcd60e51b8152600401610375906112ce565b6001600160a01b038416600090815260026020908152604080832085845290915281208054839290610a4c9084906112f4565b90915550506001600160a01b038316600090815260026020908152604080832085845290915281208054839290610a8490849061130b565b909155505060408051838152602081018390526001600160a01b03808616929087169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b6001600160a01b038216331480610aee5750805b80610b2057506001600160a01b03821660009081526001602081815260408084203385529091529091205460ff161515145b610b635760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c881b9bdd08185b1b1bddd95960621b6044820152606401610375565b5050565b6001600160a01b038316610b8d5760405162461bcd60e51b8152600401610375906112ce565b6001600160a01b038316600090815260026020908152604080832085845290915281208054839290610bc09084906112f4565b909155505060008281526003602052604081208054839290610be39084906112f4565b909155505060408051838152602081018390526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291016109e6565b80356001600160a01b0381168114610c4557600080fd5b919050565b60008060408385031215610c5d57600080fd5b610c6683610c2e565b946020939093013593505050565b6001600160e01b031981168114610c8a57600080fd5b50565b600060208284031215610c9f57600080fd5b8135610caa81610c74565b9392505050565b60008083601f840112610cc357600080fd5b50813567ffffffffffffffff811115610cdb57600080fd5b6020830191508360208260051b8501011115610cf657600080fd5b9250929050565b60008060008060008060808789031215610d1657600080fd5b610d1f87610c2e565b9550610d2d60208801610c2e565b9450604087013567ffffffffffffffff80821115610d4a57600080fd5b610d568a838b01610cb1565b90965094506060890135915080821115610d6f57600080fd5b50610d7c89828a01610cb1565b979a9699509497509295939492505050565b600060208284031215610da057600080fd5b5035919050565b600060208083528351808285015260005b81811015610dd457858101830151858201604001528201610db8565b81811115610de6576000604083870101525b50601f01601f1916929092016040019392505050565b600080600060608486031215610e1157600080fd5b610e1a84610c2e565b95602085013595506040909401359392505050565b60008060008060808587031215610e4557600080fd5b610e4e85610c2e565b9350610e5c60208601610c2e565b93969395505050506040820135916060013590565b60008083601f840112610e8357600080fd5b50813567ffffffffffffffff811115610e9b57600080fd5b602083019150836020828501011115610cf657600080fd5b60008060008060008060008060a0898b031215610ecf57600080fd5b610ed889610c2e565b9750610ee660208a01610c2e565b9650604089013567ffffffffffffffff80821115610f0357600080fd5b610f0f8c838d01610cb1565b909850965060608b0135915080821115610f2857600080fd5b610f348c838d01610cb1565b909650945060808b0135915080821115610f4d57600080fd5b50610f5a8b828c01610e71565b999c989b5096995094979396929594505050565b60008060008060408587031215610f8457600080fd5b843567ffffffffffffffff80821115610f9c57600080fd5b610fa888838901610cb1565b90965094506020870135915080821115610fc157600080fd5b50610fce87828801610cb1565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b8181101561101257835183529284019291840191600101610ff6565b50909695505050505050565b6000806040838503121561103157600080fd5b61103a83610c2e565b91506020830135801515811461104f57600080fd5b809150509250929050565b60008060006060848603121561106f57600080fd5b61107884610c2e565b925061108660208501610c2e565b9150604084013590509250925092565b600080604083850312156110a957600080fd5b6110b283610c2e565b91506110c060208401610c2e565b90509250929050565b60008060008060008060a087890312156110e257600080fd5b6110eb87610c2e565b95506110f960208801610c2e565b94506040870135935060608701359250608087013567ffffffffffffffff81111561112357600080fd5b610d7c89828a01610e71565b81835260006001600160fb1b0383111561114857600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a0604082018190526000906111bb908301888a61112f565b82810360608401526111ce81878961112f565b905082810360808401526111e3818587611165565b9b9a5050505050505050505050565b60006020828403121561120457600080fd5b8151610caa81610c74565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561124d57600080fd5b610caa82610c2e565b634e487b7160e01b600052601160045260246000fd5b600060001982141561128057611280611256565b5060010190565b6001600160a01b03878116825286166020820152604081018590526060810184905260a0608082018190526000906112c29083018486611165565b98975050505050505050565b6020808252600c908201526b4e6f2030206164647265737360a01b604082015260600190565b60008282101561130657611306611256565b500390565b6000821982111561131e5761131e611256565b500190565b60408152600061133760408301868861112f565b828103602084015261134a81858761112f565b97965050505050505056fea264697066735822122056c809e7723f7936495c13f77a796e790b34765064d34f7b3ffce6a761d151ee64736f6c63430008090033";

type ERC1155MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Mock__factory extends ContractFactory {
  constructor(...args: ERC1155MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155Mock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Mock> {
    return super.deploy(overrides || {}) as Promise<ERC1155Mock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155Mock {
    return super.attach(address) as ERC1155Mock;
  }
  connect(signer: Signer): ERC1155Mock__factory {
    return super.connect(signer) as ERC1155Mock__factory;
  }
  static readonly contractName: "ERC1155Mock";
  public readonly contractName: "ERC1155Mock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MockInterface {
    return new utils.Interface(_abi) as ERC1155MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Mock;
  }
}
