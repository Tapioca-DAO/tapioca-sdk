/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ERC1155, ERC1155Interface } from "../ERC1155";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isApprovedForAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610bc6908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908162fdd58e146108bd5750806301ffc9a7146108505780630e89341c146107bc5780632eb2c2d6146105795780634e1273f41461041e578063a22cb46514610398578063a75fcb1e14610340578063bd85b03914610319578063e985e9c5146102c75763f242432a1461009057600080fd5b346102c35760a03660031901126102c3576100a96108fa565b6100b1610915565b6044359060643560843567ffffffffffffffff81116102bf576100d7903690870161095c565b9390926001600160a01b0380961690818a526020968a8852898b20338c528852898b20848c52885260ff8a8c2054163384149081156102b7575b508015610296575b1561025357811692918a9184828a7fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628e610154851515610afe565b8388526002835280882089895283528088206101718c8254610b39565b90558488526002835280882089895283528088206101908c8254610b46565b90558a8151938a85528401523392a43b6101a8575080f35b6101e788968b519889978896879563f23a6e6160e01b9e8f8852339088015260248701526044860152606485015260a0608485015260a4840191610a91565b03925af1918215610249576102109450859261021c575b50506001600160e01b03191614610ab2565b38808080808080808880f35b61023b9250803d10610242575b61023381836109d6565b810190610a71565b38806101fe565b503d610229565b84513d87823e3d90fd5b895162461bcd60e51b8152808a01899052601460248201527f5472616e73666572206e6f7420616c6c6f7765640000000000000000000000006044820152606490fd5b50828b5260018852898b20338c528852600160ff8b8d205416151514610119565b905038610111565b8780fd5b8280fd5b50503461031557806003193601126103155760ff816020936102e76108fa565b6102ef610915565b6001600160a01b0391821683526001875283832091168252855220549151911615158152f35b5080fd5b50346102c35760203660031901126102c35760209282913581526003845220549051908152f35b5050346103155760603660031901126103155760ff816020936103616108fa565b610369610915565b6001600160a01b0391821683528287528383209116825285528181206044358252855220549151911615158152f35b5050346103155780600319360112610315576103b26108fa565b906024359081151580920361041a5733845260016020526001600160a01b0381852093169283855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b8380fd5b5082903461031557826003193601126103155767ffffffffffffffff91813583811161031557610451903690840161092b565b91909360249081359081116102c3579184869261047289953690840161092b565b94909261048086891461098a565b61048988610a0e565b93610496885195866109d6565b8885526104a289610a0e565b602099868b019891601f1901368a37875b8181106104fc575050505050505083519485948186019282875251809352850193925b8281106104e557505050500390f35b8351855286955093810193928101926001016104d6565b61050d8183889e9b9a9c9d9e610a4b565b356001600160a01b038116809103610575578852600289528b8820610533828587610a4b565b35895289528b8820548a518210156105635790610558918a8260051b8d010152610a26565b9a999896979a6104b3565b634e487b7160e01b8952603286528789fd5b8880fd5b50346102c35760031960a03682011261041a576105946108fa565b61059c610915565b9067ffffffffffffffff906044358281116102bf576105be903690870161092b565b9290946064358281116107b8576105d8903690890161092b565b926084359081116107b457906105f48897949236908b0161095c565b92909461060282891461098a565b6001600160a01b038d8d8284169b8c9361061d851515610afe565b839b169a8b935b8d8083106107465761066392507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb939150845194808652850191610b53565b918083036020820152806106793394898b610b53565b0390a43b610685578b80f35b8a51988997889763bc197c8160e01b9c8d8a5233908a015260248901526044880160a0905260a48801906106b892610b53565b90848783030160648801526106cc92610b53565b918483030160848501526106df92610a91565b0381875a94602095f19081156107395761070c9350849161071b575b506001600160e01b03191614610ab2565b38808080808080808080808b80f35b610733915060203d81116102425761023381836109d6565b386106fb565b50505051903d90823e3d90fd5b9561075c836107a8986107a19698979598610a4b565b3590610769878b8d610a4b565b359583526002602091818352858520848652835285852061078b898254610b39565b9055845281528383209183525220918254610b46565b9055610a26565b878d8f8c938e91610624565b8a80fd5b8980fd5b50346102c3576020928360031936011261084d578251918483019083821067ffffffffffffffff83111761083a575083949291945283815282519382859384528251928382860152825b84811061082457505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610806565b634e487b7160e01b835260419052602482fd5b80fd5b50346102c35760203660031901126102c357359063ffffffff60e01b82168092036102c357602092506301ffc9a760e01b82149182156108ac575b821561089b575b50519015158152f35b6303a24d0760e21b14915038610892565b636cdb3d1360e11b8114925061088b565b849084346102c357806003193601126102c3576020926001600160a01b036108e36108fa565b168152600284528181206024358252845220548152f35b600435906001600160a01b038216820361091057565b600080fd5b602435906001600160a01b038216820361091057565b9181601f840112156109105782359167ffffffffffffffff8311610910576020808501948460051b01011161091057565b9181601f840112156109105782359167ffffffffffffffff8311610910576020838186019501011161091057565b1561099157565b60405162461bcd60e51b815260206004820152601860248201527f455243313135353a204c656e677468206d69736d6174636800000000000000006044820152606490fd5b90601f8019910116810190811067ffffffffffffffff8211176109f857604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116109f85760051b60200190565b6000198114610a355760010190565b634e487b7160e01b600052601160045260246000fd5b9190811015610a5b5760051b0190565b634e487b7160e01b600052603260045260246000fd5b9081602091031261091057516001600160e01b0319811681036109105790565b908060209392818452848401376000828201840152601f01601f1916010190565b15610ab957565b60405162461bcd60e51b815260206004820152601260248201527f57726f6e672072657475726e2076616c756500000000000000000000000000006044820152606490fd5b15610b0557565b60405162461bcd60e51b815260206004820152600c60248201526b4e6f2030206164647265737360a01b6044820152606490fd5b91908203918211610a3557565b91908201809211610a3557565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83116109105760209260051b80928483013701019056fea2646970667358221220ebb139dcc92f5588f9d833831802b53a8473431e53e66689b77cf2b2425750fb64736f6c63430008120033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }
  static readonly contractName: "ERC1155";

  public readonly contractName: "ERC1155";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
