/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ERC1155, ERC1155Interface } from "../ERC1155";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isApprovedForAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611067806100206000396000f3fe608060405234801561001057600080fd5b50600436106100bd5760003560e01c8063a22cb46511610076578063bd85b0391161005b578063bd85b039146101cc578063e985e9c5146101ec578063f242432a1461021a57600080fd5b8063a22cb46514610186578063a75fcb1e1461019957600080fd5b80630e89341c116100a75780630e89341c146101235780632eb2c2d6146101515780634e1273f41461016657600080fd5b8062fdd58e146100c257806301ffc9a714610100575b600080fd5b6100ed6100d0366004610a57565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61011361010e366004610a9a565b61022d565b60405190151581526020016100f7565b610144610131366004610abe565b5060408051602081019091526000815290565b6040516100f79190610ad7565b61016461015f366004610bb4565b6102ca565b005b610179610174366004610c6f565b610435565b6040516100f79190610cdb565b610164610194366004610d1f565b61057b565b6101136101a7366004610d5b565b6000602081815293815260408082208552928152828120909352825290205460ff1681565b6100ed6101da366004610abe565b60036020526000908152604090205481565b6101136101fa366004610d97565b600160209081526000928352604080842090915290825290205460ff1681565b610164610228366004610dca565b6105e7565b60006001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000148061029057507fd9b67a26000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b806102c457507f0e89341c000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b84831461031e5760405162461bcd60e51b815260206004820152601860248201527f455243313135353a204c656e677468206d69736d61746368000000000000000060448201526064015b60405180910390fd5b61032c88888888888861072e565b6001600160a01b0387163b1561042b576040517fbc197c8100000000000000000000000000000000000000000000000000000000808252906001600160a01b0389169063bc197c81906103919033908d908c908c908c908c908c908c90600401610eb6565b6020604051808303816000875af11580156103b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d49190610f1a565b6001600160e01b0319161461042b5760405162461bcd60e51b815260206004820152601260248201527f57726f6e672072657475726e2076616c756500000000000000000000000000006044820152606401610315565b5050505050505050565b6060838281146104875760405162461bcd60e51b815260206004820152601860248201527f455243313135353a204c656e677468206d69736d6174636800000000000000006044820152606401610315565b8067ffffffffffffffff8111156104a0576104a0610f37565b6040519080825280602002602001820160405280156104c9578160200160208202803683370190505b50915060005b8181101561057157600260008888848181106104ed576104ed610f4d565b90506020020160208101906105029190610f63565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086868481811061053657610536610f4d565b9050602002013581526020019081526020016000205483828151811061055e5761055e610f4d565b60209081029190910101526001016104cf565b5050949350505050565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b038616600090815260208181526040808320338452825280832087845290915290205461061f90879060ff1661089f565b61062b86868686610935565b6001600160a01b0385163b15610726576040517ff23a6e6100000000000000000000000000000000000000000000000000000000808252906001600160a01b0387169063f23a6e619061068c9033908b908a908a908a908a90600401610f7e565b6020604051808303816000875af11580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf9190610f1a565b6001600160e01b031916146107265760405162461bcd60e51b815260206004820152601260248201527f57726f6e672072657475726e2076616c756500000000000000000000000000006044820152606401610315565b505050505050565b6001600160a01b0385166107735760405162461bcd60e51b815260206004820152600c60248201526b4e6f2030206164647265737360a01b6044820152606401610315565b8260005b8181101561083a57600086868381811061079357610793610f4d565b90506020020135905060008585848181106107b0576107b0610f4d565b6001600160a01b038d166000908152600260209081526040808320888452825282208054939091029490940135945084939250906107ef908490610fd9565b90915550506001600160a01b038916600090815260026020908152604080832085845290915281208054839290610827908490610fec565b9091555050600190920191506107779050565b50856001600160a01b0316876001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8888888860405161088e9493929190610fff565b60405180910390a450505050505050565b6001600160a01b0382163314806108b35750805b806108e557506001600160a01b03821660009081526001602081815260408084203385529091529091205460ff161515145b6109315760405162461bcd60e51b815260206004820152601460248201527f5472616e73666572206e6f7420616c6c6f7765640000000000000000000000006044820152606401610315565b5050565b6001600160a01b03831661097a5760405162461bcd60e51b815260206004820152600c60248201526b4e6f2030206164647265737360a01b6044820152606401610315565b6001600160a01b0384166000908152600260209081526040808320858452909152812080548392906109ad908490610fd9565b90915550506001600160a01b0383166000908152600260209081526040808320858452909152812080548392906109e5908490610fec565b909155505060408051838152602081018390526001600160a01b03808616929087169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b80356001600160a01b0381168114610a5257600080fd5b919050565b60008060408385031215610a6a57600080fd5b610a7383610a3b565b946020939093013593505050565b6001600160e01b031981168114610a9757600080fd5b50565b600060208284031215610aac57600080fd5b8135610ab781610a81565b9392505050565b600060208284031215610ad057600080fd5b5035919050565b60006020808352835180602085015260005b81811015610b0557858101830151858201604001528201610ae9565b506000604082860101526040601f19601f8301168501019250505092915050565b60008083601f840112610b3857600080fd5b50813567ffffffffffffffff811115610b5057600080fd5b6020830191508360208260051b8501011115610b6b57600080fd5b9250929050565b60008083601f840112610b8457600080fd5b50813567ffffffffffffffff811115610b9c57600080fd5b602083019150836020828501011115610b6b57600080fd5b60008060008060008060008060a0898b031215610bd057600080fd5b610bd989610a3b565b9750610be760208a01610a3b565b9650604089013567ffffffffffffffff80821115610c0457600080fd5b610c108c838d01610b26565b909850965060608b0135915080821115610c2957600080fd5b610c358c838d01610b26565b909650945060808b0135915080821115610c4e57600080fd5b50610c5b8b828c01610b72565b999c989b5096995094979396929594505050565b60008060008060408587031215610c8557600080fd5b843567ffffffffffffffff80821115610c9d57600080fd5b610ca988838901610b26565b90965094506020870135915080821115610cc257600080fd5b50610ccf87828801610b26565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b81811015610d1357835183529284019291840191600101610cf7565b50909695505050505050565b60008060408385031215610d3257600080fd5b610d3b83610a3b565b915060208301358015158114610d5057600080fd5b809150509250929050565b600080600060608486031215610d7057600080fd5b610d7984610a3b565b9250610d8760208501610a3b565b9150604084013590509250925092565b60008060408385031215610daa57600080fd5b610db383610a3b565b9150610dc160208401610a3b565b90509250929050565b60008060008060008060a08789031215610de357600080fd5b610dec87610a3b565b9550610dfa60208801610a3b565b94506040870135935060608701359250608087013567ffffffffffffffff811115610e2457600080fd5b610e3089828a01610b72565b979a9699509497509295939492505050565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610e7457600080fd5b8260051b80836020870137939093016020019392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a06040830152610ee360a08301888a610e42565b8281036060840152610ef6818789610e42565b90508281036080840152610f0b818587610e8d565b9b9a5050505050505050505050565b600060208284031215610f2c57600080fd5b8151610ab781610a81565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215610f7557600080fd5b610ab782610a3b565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a06080830152610fb760a083018486610e8d565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102c4576102c4610fc3565b808201808211156102c4576102c4610fc3565b604081526000611013604083018688610e42565b8281036020840152611026818587610e42565b97965050505050505056fea26469706673582212204b9c728f4370c291aaaf49fc2ca6ffdd8fc279ac2ad898d932c3878dfc9b03b964736f6c63430008160033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }
  static readonly contractName: "ERC1155";

  public readonly contractName: "ERC1155";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
