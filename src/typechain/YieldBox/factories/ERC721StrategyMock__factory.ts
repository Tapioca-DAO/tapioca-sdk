/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721StrategyMock,
  ERC721StrategyMockInterface,
} from "../ERC721StrategyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "yieldBox_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161064b38038061064b83398101604081905261002f91610062565b6001600160a01b0392831660c052911660805260a0526100a5565b6001600160a01b038116811461005f57600080fd5b50565b60008060006060848603121561007757600080fd5b83516100828161004a565b60208501519093506100938161004a565b80925050604084015190509250925092565b60805160a05160c0516105626100e960003960006101de01526000818161013d01526103160152600081816102300152818161026a015261033c01526105626000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063afa91cc611610071578063afa91cc6146101c6578063ce845d1d14610182578063de406577146101d9578063e3575f0514610182578063f3fef3a314610218578063f6b4dfb41461022b57600080fd5b806306fdde03146100b9578063150b7a021461010057806317d70f7c1461013857806330fa738c1461016d57806350188301146101825780637284e4161461018a575b600080fd5b6100ea6040518060400160405280601281526020017145524337323153747261746567794d6f636b60701b81525081565b6040516100f7919061039c565b60405180910390f35b61011f61010e36600461040d565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100f7565b61015f7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100f7565b610175600281565b6040516100f791906104a8565b61015f610252565b6100ea6040518060400160405280601981526020017f4d6f636b20537472617465677920666f722074657374696e670000000000000081525081565b6101d76101d43660046104d0565b50565b005b6102007f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100f7565b6101d76102263660046104e9565b6102f1565b6102007f000000000000000000000000000000000000000000000000000000000000000081565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156102b457600080fd5b505afa1580156102c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ec9190610513565b905090565b604051632142170760e11b81523060048201526001600160a01b0383811660248301527f000000000000000000000000000000000000000000000000000000000000000060448301527f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b15801561038057600080fd5b505af1158015610394573d6000803e3d6000fd5b505050505050565b600060208083528351808285015260005b818110156103c9578581018301518582016040015282016103ad565b818111156103db576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461040857600080fd5b919050565b60008060008060006080868803121561042557600080fd5b61042e866103f1565b945061043c602087016103f1565b935060408601359250606086013567ffffffffffffffff8082111561046057600080fd5b818801915088601f83011261047457600080fd5b81358181111561048357600080fd5b89602082850101111561049557600080fd5b9699959850939650602001949392505050565b60208101600583106104ca57634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156104e257600080fd5b5035919050565b600080604083850312156104fc57600080fd5b610505836103f1565b946020939093013593505050565b60006020828403121561052557600080fd5b505191905056fea26469706673582212208f099cfb5b17c6109f349b4abb8738fcafa2907e2c7c613ff44f9002015fea4e64736f6c63430008090033";

type ERC721StrategyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721StrategyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721StrategyMock__factory extends ContractFactory {
  constructor(...args: ERC721StrategyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721StrategyMock";
  }

  deploy(
    yieldBox_: string,
    token: string,
    tokenId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721StrategyMock> {
    return super.deploy(
      yieldBox_,
      token,
      tokenId_,
      overrides || {}
    ) as Promise<ERC721StrategyMock>;
  }
  getDeployTransaction(
    yieldBox_: string,
    token: string,
    tokenId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      yieldBox_,
      token,
      tokenId_,
      overrides || {}
    );
  }
  attach(address: string): ERC721StrategyMock {
    return super.attach(address) as ERC721StrategyMock;
  }
  connect(signer: Signer): ERC721StrategyMock__factory {
    return super.connect(signer) as ERC721StrategyMock__factory;
  }
  static readonly contractName: "ERC721StrategyMock";
  public readonly contractName: "ERC721StrategyMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721StrategyMockInterface {
    return new utils.Interface(_abi) as ERC721StrategyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721StrategyMock {
    return new Contract(address, _abi, signerOrProvider) as ERC721StrategyMock;
  }
}
