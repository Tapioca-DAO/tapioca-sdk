/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MaliciousMasterContractMock,
  MaliciousMasterContractMockInterface,
} from "../MaliciousMasterContractMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "yieldBox",
        type: "address",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610198806100206000396000f3fe6080604052600436106100295760003560e01c80634ddf47d41461002e578063d018db3e14610042575b600080fd5b61004061003c3660046100c0565b5050565b005b34801561004e57600080fd5b5061004061005d366004610132565b60405163a22cb46560e01b8152306004820152600160248201526001600160a01b0382169063a22cb46590604401600060405180830381600087803b1580156100a557600080fd5b505af11580156100b9573d6000803e3d6000fd5b5050505050565b600080602083850312156100d357600080fd5b823567ffffffffffffffff808211156100eb57600080fd5b818501915085601f8301126100ff57600080fd5b81358181111561010e57600080fd5b86602082850101111561012057600080fd5b60209290920196919550909350505050565b60006020828403121561014457600080fd5b81356001600160a01b038116811461015b57600080fd5b939250505056fea2646970667358221220ae8f3ac262a7b9909fd918c117297a9e87711989c88dfcc2a6775d0ef745aa2464736f6c63430008090033";

type MaliciousMasterContractMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaliciousMasterContractMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MaliciousMasterContractMock__factory extends ContractFactory {
  constructor(...args: MaliciousMasterContractMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MaliciousMasterContractMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MaliciousMasterContractMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<MaliciousMasterContractMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MaliciousMasterContractMock {
    return super.attach(address) as MaliciousMasterContractMock;
  }
  connect(signer: Signer): MaliciousMasterContractMock__factory {
    return super.connect(signer) as MaliciousMasterContractMock__factory;
  }
  static readonly contractName: "MaliciousMasterContractMock";
  public readonly contractName: "MaliciousMasterContractMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaliciousMasterContractMockInterface {
    return new utils.Interface(_abi) as MaliciousMasterContractMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MaliciousMasterContractMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MaliciousMasterContractMock;
  }
}
