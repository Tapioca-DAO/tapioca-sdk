/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SushiStakingStrategy,
  SushiStakingStrategyInterface,
} from "../SushiStakingStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610b39380380610b3983398101604081905261002f91610058565b6001600160a01b0316608052736b3595068778dd592e39a122f4f5a5cf09c90fe260a052610088565b60006020828403121561006a57600080fd5b81516001600160a01b038116811461008157600080fd5b9392505050565b60805160a051610a7e6100bb600039600061019001526000818161013e015281816101e801526102600152610a7e6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063afa91cc611610071578063afa91cc614610124578063ce845d1d14610114578063de40657714610139578063e3575f0514610114578063f3fef3a314610178578063f6b4dfb41461018b57600080fd5b806306fdde03146100ae57806317d70f7c146100e957806330fa738c146100ff57806350188301146101145780637284e4161461011c575b600080fd5b6100d36040518060400160405280600681526020016578535553484960d01b81525081565b6040516100e0919061088b565b60405180910390f35b6100f1600081565b6040519081526020016100e0565b610107600181565b6040516100e091906108be565b6100f16101b2565b6100d36101c1565b6101376101323660046108e6565b6101dd565b005b6101607f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e0565b6101376101863660046108ff565b610255565b6101607f000000000000000000000000000000000000000000000000000000000000000081565b60006101bc6102ca565b905090565b604051806060016040528060298152602001610a206029913981565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102495760405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b60448201526064015b60405180910390fd5b61025281610382565b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102bc5760405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b6044820152606401610240565b6102c682826103ea565b5050565b6000806102eb736b3595068778dd592e39a122f4f5a5cf09c90fe2306104e0565b90506000610321736b3595068778dd592e39a122f4f5a5cf09c90fe2738798249c2e607446efb7ad49ec89dd1865ff42726104e0565b90506000610343738798249c2e607446efb7ad49ec89dd1865ff4272306104e0565b905061037082610366738798249c2e607446efb7ad49ec89dd1865ff42726105f7565b83919060006106f9565b61037a908461094d565b935050505090565b604051632967cf8360e21b815260048101829052738798249c2e607446efb7ad49ec89dd1865ff42729063a59f3e0c90602401600060405180830381600087803b1580156103cf57600080fd5b505af11580156103e3573d6000803e3d6000fd5b5050505050565b600061041e736b3595068778dd592e39a122f4f5a5cf09c90fe2738798249c2e607446efb7ad49ec89dd1865ff42726104e0565b9050600061043f738798249c2e607446efb7ad49ec89dd1865ff42726105f7565b9050738798249c2e607446efb7ad49ec89dd1865ff42726367dfd4c961046885848660016106f9565b6040518263ffffffff1660e01b815260040161048691815260200190565b600060405180830381600087803b1580156104a057600080fd5b505af11580156104b4573d6000803e3d6000fd5b506104da9250736b3595068778dd592e39a122f4f5a5cf09c90fe291508690508561074b565b50505050565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092839283929187169161053a9190610965565b600060405180830381855afa9150503d8060008114610575576040519150601f19603f3d011682016040523d82523d6000602084013e61057a565b606091505b509150915081801561058e57506020815110155b6105da5760405162461bcd60e51b815260206004820152601d60248201527f426f72696e6745524332303a2042616c616e63654f66206661696c65640000006044820152606401610240565b808060200190518101906105ee9190610981565b95945050505050565b60408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b1790529051600091829182916001600160a01b0386169161063d9190610965565b600060405180830381855afa9150503d8060008114610678576040519150601f19603f3d011682016040523d82523d6000602084013e61067d565b606091505b509150915081801561069157506020815110155b6106dd5760405162461bcd60e51b815260206004820152601f60248201527f426f72696e6745524332303a20746f74616c537570706c79206661696c6564006044820152606401610240565b808060200190518101906106f19190610981565b949350505050565b600082610706858761099a565b61071091906109b9565b905081801561073257508484610726858461099a565b61073091906109b9565b105b156106f15780610741816109db565b9695505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916107a79190610965565b6000604051808303816000865af19150503d80600081146107e4576040519150601f19603f3d011682016040523d82523d6000602084013e6107e9565b606091505b509150915081801561081357508051158061081357508080602001905181019061081391906109f6565b6103e35760405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606401610240565b60005b8381101561087a578181015183820152602001610862565b838111156104da5750506000910152565b60208152600082518060208401526108aa81604085016020870161085f565b601f01601f19169190910160400192915050565b60208101600583106108e057634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156108f857600080fd5b5035919050565b6000806040838503121561091257600080fd5b82356001600160a01b038116811461092957600080fd5b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561096057610960610937565b500190565b6000825161097781846020870161085f565b9190910192915050565b60006020828403121561099357600080fd5b5051919050565b60008160001904831182151516156109b4576109b4610937565b500290565b6000826109d657634e487b7160e01b600052601260045260246000fd5b500490565b60006000198214156109ef576109ef610937565b5060010190565b600060208284031215610a0857600080fd5b81518015158114610a1857600080fd5b939250505056fe5374616b657320535553484920696e746f2074686520537573686942617220666f7220785375736869a2646970667358221220e3a2555c88125373b431f3f45b98f65ad0ae8308a5db45eda40b2399541c918c64736f6c63430008090033";

type SushiStakingStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SushiStakingStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SushiStakingStrategy__factory extends ContractFactory {
  constructor(...args: SushiStakingStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SushiStakingStrategy";
  }

  deploy(
    _yieldBox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SushiStakingStrategy> {
    return super.deploy(
      _yieldBox,
      overrides || {}
    ) as Promise<SushiStakingStrategy>;
  }
  getDeployTransaction(
    _yieldBox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, overrides || {});
  }
  attach(address: string): SushiStakingStrategy {
    return super.attach(address) as SushiStakingStrategy;
  }
  connect(signer: Signer): SushiStakingStrategy__factory {
    return super.connect(signer) as SushiStakingStrategy__factory;
  }
  static readonly contractName: "SushiStakingStrategy";
  public readonly contractName: "SushiStakingStrategy";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SushiStakingStrategyInterface {
    return new utils.Interface(_abi) as SushiStakingStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SushiStakingStrategy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SushiStakingStrategy;
  }
}
