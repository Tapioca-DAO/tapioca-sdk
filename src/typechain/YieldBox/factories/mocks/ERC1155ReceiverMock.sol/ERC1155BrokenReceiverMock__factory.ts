/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1155BrokenReceiverMock,
  ERC1155BrokenReceiverMockInterface,
} from "../../../mocks/ERC1155ReceiverMock.sol/ERC1155BrokenReceiverMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610201908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908163bc197c8114610095575063f23a6e611461003757600080fd5b346100925760a036600319011261009257610050610121565b50610059610149565b5060843567ffffffffffffffff811161008e5761007a90369060040161019d565b50506040516310ef490760e31b8152602090f35b5080fd5b80fd5b90503461008e5760a036600319011261008e576100b0610121565b506100b9610149565b5067ffffffffffffffff9160443583811161008e576100dc90369060040161016c565b505060643583811161008e576100f690369060040161016c565b50506084359283116100925750610113602092369060040161019d565b50506310ef490760e31b8152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361014457565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361014457565b9181601f840112156101445782359167ffffffffffffffff8311610144576020808501948460051b01011161014457565b9181601f840112156101445782359167ffffffffffffffff831161014457602083818601950101116101445756fea26469706673582212206926e997ff37b1d5a84bb72519fc90a2be98b8813b2e8a2d30423df3d07106e064736f6c63430008120033";

type ERC1155BrokenReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BrokenReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155BrokenReceiverMock__factory extends ContractFactory {
  constructor(...args: ERC1155BrokenReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155BrokenReceiverMock";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155BrokenReceiverMock> {
    return super.deploy(overrides || {}) as Promise<ERC1155BrokenReceiverMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155BrokenReceiverMock {
    return super.attach(address) as ERC1155BrokenReceiverMock;
  }
  override connect(signer: Signer): ERC1155BrokenReceiverMock__factory {
    return super.connect(signer) as ERC1155BrokenReceiverMock__factory;
  }
  static readonly contractName: "ERC1155BrokenReceiverMock";

  public readonly contractName: "ERC1155BrokenReceiverMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BrokenReceiverMockInterface {
    return new utils.Interface(_abi) as ERC1155BrokenReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155BrokenReceiverMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155BrokenReceiverMock;
  }
}
