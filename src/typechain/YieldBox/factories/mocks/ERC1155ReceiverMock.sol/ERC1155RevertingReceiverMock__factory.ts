/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1155RevertingReceiverMock,
  ERC1155RevertingReceiverMockInterface,
} from "../../../mocks/ERC1155ReceiverMock.sol/ERC1155RevertingReceiverMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761020c908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c8063bc197c81146100845763f23a6e611461003357600080fd5b346100815760a03660031901126100815761004c610101565b50610055610129565b5060843567ffffffffffffffff811161007d5761007690369060040161017d565b50506101ab565b5080fd5b80fd5b50346100815760a03660031901126100815761009e610101565b506100a7610129565b5067ffffffffffffffff6044358181116100fd576100c990369060040161014c565b50506064358181116100fd576100e390369060040161014c565b505060843590811161007d5761007690369060040161017d565b8280fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361012457565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361012457565b9181601f840112156101245782359167ffffffffffffffff8311610124576020808501948460051b01011161012457565b9181601f840112156101245782359167ffffffffffffffff8311610124576020838186019501011161012457565b606460405162461bcd60e51b81526020600482015260046024820152634f6f707360e01b6044820152fdfea2646970667358221220c553f03b9a218fa71e702367f0f30b8c43d609f0f3a2c3b2f28793b5a05951e464736f6c63430008120033";

type ERC1155RevertingReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155RevertingReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155RevertingReceiverMock__factory extends ContractFactory {
  constructor(...args: ERC1155RevertingReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155RevertingReceiverMock";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155RevertingReceiverMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC1155RevertingReceiverMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155RevertingReceiverMock {
    return super.attach(address) as ERC1155RevertingReceiverMock;
  }
  override connect(signer: Signer): ERC1155RevertingReceiverMock__factory {
    return super.connect(signer) as ERC1155RevertingReceiverMock__factory;
  }
  static readonly contractName: "ERC1155RevertingReceiverMock";

  public readonly contractName: "ERC1155RevertingReceiverMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155RevertingReceiverMockInterface {
    return new utils.Interface(_abi) as ERC1155RevertingReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155RevertingReceiverMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155RevertingReceiverMock;
  }
}
