/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC1155StrategyMock,
  ERC1155StrategyMockInterface,
} from "../../mocks/ERC1155StrategyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "yieldBox_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516107f03803806107f083398101604081905261002f91610062565b6001600160a01b0392831660c052911660805260a0526100a5565b6001600160a01b038116811461005f57600080fd5b50565b60008060006060848603121561007757600080fd5b83516100828161004a565b60208501519093506100938161004a565b80925050604084015190509250925092565b60805160a05160c0516107006100f060003960006101fd015260008181610121015281816102a5015261037901526000818161026f015281816102ce01526103b401526107006000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063bc197c811161008c578063e3575f0511610066578063e3575f0514610166578063f23a6e6114610237578063f3fef3a314610257578063f6b4dfb41461026a57600080fd5b8063bc197c81146101bd578063ce845d1d14610166578063de406577146101f857600080fd5b806306fdde03146100d457806317d70f7c1461011c57806330fa738c1461015157806350188301146101665780637284e4161461016e578063afa91cc6146101aa575b600080fd5b610106604051806040016040528060138152602001724552433131353553747261746567794d6f636b60681b81525081565b6040516101139190610414565b60405180910390f35b6101437f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610113565b610159600381565b6040516101139190610469565b610143610291565b6101066040518060400160405280601981526020017f4d6f636b20537472617465677920666f722074657374696e670000000000000081525081565b6101bb6101b8366004610491565b50565b005b6101df6101cb366004610554565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b03199091168152602001610113565b61021f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610113565b6101df61024536600461060f565b63f23a6e6160e01b9695505050505050565b6101bb610265366004610687565b610354565b61021f7f000000000000000000000000000000000000000000000000000000000000000081565b604051627eeac760e11b81523060048201527f000000000000000000000000000000000000000000000000000000000000000060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062fdd58e9060440160206040518083038186803b15801561031757600080fd5b505afa15801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f91906106b1565b905090565b604051637921219560e11b81523060048201526001600160a01b0383811660248301527f000000000000000000000000000000000000000000000000000000000000000060448301526064820183905260a06084830152600060a48301527f0000000000000000000000000000000000000000000000000000000000000000169063f242432a9060c401600060405180830381600087803b1580156103f857600080fd5b505af115801561040c573d6000803e3d6000fd5b505050505050565b600060208083528351808285015260005b8181101561044157858101830151858201604001528201610425565b81811115610453576000604083870101525b50601f01601f1916929092016040019392505050565b602081016005831061048b57634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156104a357600080fd5b5035919050565b80356001600160a01b03811681146104c157600080fd5b919050565b60008083601f8401126104d857600080fd5b50813567ffffffffffffffff8111156104f057600080fd5b6020830191508360208260051b850101111561050b57600080fd5b9250929050565b60008083601f84011261052457600080fd5b50813567ffffffffffffffff81111561053c57600080fd5b60208301915083602082850101111561050b57600080fd5b60008060008060008060008060a0898b03121561057057600080fd5b610579896104aa565b975061058760208a016104aa565b9650604089013567ffffffffffffffff808211156105a457600080fd5b6105b08c838d016104c6565b909850965060608b01359150808211156105c957600080fd5b6105d58c838d016104c6565b909650945060808b01359150808211156105ee57600080fd5b506105fb8b828c01610512565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561062857600080fd5b610631876104aa565b955061063f602088016104aa565b94506040870135935060608701359250608087013567ffffffffffffffff81111561066957600080fd5b61067589828a01610512565b979a9699509497509295939492505050565b6000806040838503121561069a57600080fd5b6106a3836104aa565b946020939093013593505050565b6000602082840312156106c357600080fd5b505191905056fea2646970667358221220635f9fbab0d386e360b4b456ff01ab689ea670af137d94f8d67f75d2a1c16c7e64736f6c63430008090033";

type ERC1155StrategyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155StrategyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155StrategyMock__factory extends ContractFactory {
  constructor(...args: ERC1155StrategyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155StrategyMock";
  }

  override deploy(
    yieldBox_: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155StrategyMock> {
    return super.deploy(
      yieldBox_,
      token,
      tokenId_,
      overrides || {}
    ) as Promise<ERC1155StrategyMock>;
  }
  override getDeployTransaction(
    yieldBox_: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      yieldBox_,
      token,
      tokenId_,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155StrategyMock {
    return super.attach(address) as ERC1155StrategyMock;
  }
  override connect(signer: Signer): ERC1155StrategyMock__factory {
    return super.connect(signer) as ERC1155StrategyMock__factory;
  }
  static readonly contractName: "ERC1155StrategyMock";

  public readonly contractName: "ERC1155StrategyMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155StrategyMockInterface {
    return new utils.Interface(_abi) as ERC1155StrategyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155StrategyMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155StrategyMock;
  }
}
