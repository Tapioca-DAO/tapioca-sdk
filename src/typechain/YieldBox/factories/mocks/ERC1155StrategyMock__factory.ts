/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC1155StrategyMock,
  ERC1155StrategyMockInterface,
} from "../../mocks/ERC1155StrategyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "yieldBox_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346100b457601f61074538819003918201601f19168301916001600160401b038311848410176100b9578084926060946040528339810103126100b4578051906001600160a01b039081831683036100b457602081015191821682036100b457604001519160c05260805260a05260405161067590816100d0823960805181818160d2015281816101220152610502015260a05181818161016c015281816103bd01526104d6015260c0518161026d0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146103e05750816317d70f7c146103a557816330fa738c1461038957816350188301146102485781637284e41614610330578163afa91cc61461031b578163bc197c8114610291578163ce845d1d14610248578163de4065771461024d578163e3575f0514610248578163f23a6e61146101ee578163f3fef3a3146100fa575063f6b4dfb4146100b457600080fd5b346100f657816003193601126100f657602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b919050346101ea57806003193601126101ea576101156105b4565b91836001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001694853b156101ea5760c4908386519788948593637921219560e11b855230898601521660248401527f00000000000000000000000000000000000000000000000000000000000000006044840152602435606484015260a060848401528160a48401525af180156101e0576101b5578380f35b67ffffffffffffffff83116101cd5750523880808380f35b634e487b7160e01b845260419052602483fd5b82513d86823e3d90fd5b8280fd5b8284346102455760a0366003190112610245576102096105b4565b506102126105ca565b506084359067ffffffffffffffff8211610245575060209261023691369101610611565b50505163f23a6e6160e01b8152f35b80fd5b6104b0565b5050346100f657816003193601126100f657602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b8284346102455760a0366003190112610245576102ac6105b4565b506102b56105ca565b5067ffffffffffffffff906044358281116100f6576102d790369086016105e0565b50506064358281116100f6576102f090369086016105e0565b5050608435918211610245575060209261030c91369101610611565b50505163bc197c8160e01b8152f35b83346102455760203660031901126102455780f35b5050346100f657816003193601126100f65780516103859161035182610435565b601982527f4d6f636b20537472617465677920666f722074657374696e670000000000000060208301525191829182610467565b0390f35b5050346100f657816003193601126100f6576020905160038152f35b5050346100f657816003193601126100f657602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b849084346101ea57826003193601126101ea57610385925061040182610435565b601382527f4552433131353553747261746567794d6f636b0000000000000000000000000060208301525191829182610467565b6040810190811067ffffffffffffffff82111761045157604052565b634e487b7160e01b600052604160045260246000fd5b6020808252825181830181905290939260005b82811061049c57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161047a565b346105af5760008060031936011261024557604051627eeac760e11b81523060048201527f000000000000000000000000000000000000000000000000000000000000000060248201526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156105a4578291610545575b602082604051908152f35b905060203d811161059d575b601f8101601f1916820167ffffffffffffffff811183821017610589576020918391604052810103126100f65760209150513861053a565b634e487b7160e01b84526041600452602484fd5b503d610551565b6040513d84823e3d90fd5b600080fd5b600435906001600160a01b03821682036105af57565b602435906001600160a01b03821682036105af57565b9181601f840112156105af5782359167ffffffffffffffff83116105af576020808501948460051b0101116105af57565b9181601f840112156105af5782359167ffffffffffffffff83116105af57602083818601950101116105af5756fea2646970667358221220a125a5d45159f3bb2c551c03044dae5d4d2abfee4c65e63d681c3f475999815564736f6c63430008120033";

type ERC1155StrategyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155StrategyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155StrategyMock__factory extends ContractFactory {
  constructor(...args: ERC1155StrategyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155StrategyMock";
  }

  override deploy(
    yieldBox_: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155StrategyMock> {
    return super.deploy(
      yieldBox_,
      token,
      tokenId_,
      overrides || {}
    ) as Promise<ERC1155StrategyMock>;
  }
  override getDeployTransaction(
    yieldBox_: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      yieldBox_,
      token,
      tokenId_,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155StrategyMock {
    return super.attach(address) as ERC1155StrategyMock;
  }
  override connect(signer: Signer): ERC1155StrategyMock__factory {
    return super.connect(signer) as ERC1155StrategyMock__factory;
  }
  static readonly contractName: "ERC1155StrategyMock";

  public readonly contractName: "ERC1155StrategyMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155StrategyMockInterface {
    return new utils.Interface(_abi) as ERC1155StrategyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155StrategyMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155StrategyMock;
  }
}
