/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC1155StrategyMock,
  ERC1155StrategyMockInterface,
} from "../../mocks/ERC1155StrategyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "yieldBox_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516108be3803806108be83398101604081905261002f91610062565b6001600160a01b0392831660c052911660805260a0526100a5565b6001600160a01b038116811461005f57600080fd5b50565b60008060006060848603121561007757600080fd5b83516100828161004a565b60208501519093506100938161004a565b80925050604084015190509250925092565b60805160a05160c0516107ce6100f0600039600061024801526000818161013b0152818161032f01526104270152600081816102e001528181610358015261046201526107ce6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063bc197c811161008c578063e3575f0511610066578063e3575f0514610180578063f23a6e611461028f578063f3fef3a3146102c8578063f6b4dfb4146102db57600080fd5b8063bc197c81146101d7578063ce845d1d14610180578063de4065771461024357600080fd5b806350188301116100bd57806350188301146101805780637284e41614610188578063afa91cc6146101c457600080fd5b806306fdde03146100e457806317d70f7c1461013657806330fa738c1461016b575b600080fd5b6101206040518060400160405280601381526020017f4552433131353553747261746567794d6f636b0000000000000000000000000081525081565b60405161012d91906104c2565b60405180910390f35b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161012d565b610173600381565b60405161012d9190610511565b61015d610302565b6101206040518060400160405280601981526020017f4d6f636b20537472617465677920666f722074657374696e670000000000000081525081565b6101d56101d2366004610552565b50565b005b6102126101e5366004610622565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161012d565b61026a7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012d565b61021261029d3660046106dd565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b6101d56102d6366004610755565b6103dc565b61026a7f000000000000000000000000000000000000000000000000000000000000000081565b6040517efdd58e0000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000060248201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169062fdd58e90604401602060405180830381865afa1580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d7919061077f565b905090565b6040517ff242432a00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301527f000000000000000000000000000000000000000000000000000000000000000060448301526064820183905260a06084830152600060a48301527f0000000000000000000000000000000000000000000000000000000000000000169063f242432a9060c401600060405180830381600087803b1580156104a657600080fd5b505af11580156104ba573d6000803e3d6000fd5b505050505050565b60006020808352835180602085015260005b818110156104f0578581018301518582016040015282016104d4565b506000604082860101526040601f19601f8301168501019250505092915050565b602081016005831061054c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60006020828403121561056457600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461058f57600080fd5b919050565b60008083601f8401126105a657600080fd5b50813567ffffffffffffffff8111156105be57600080fd5b6020830191508360208260051b85010111156105d957600080fd5b9250929050565b60008083601f8401126105f257600080fd5b50813567ffffffffffffffff81111561060a57600080fd5b6020830191508360208285010111156105d957600080fd5b60008060008060008060008060a0898b03121561063e57600080fd5b6106478961056b565b975061065560208a0161056b565b9650604089013567ffffffffffffffff8082111561067257600080fd5b61067e8c838d01610594565b909850965060608b013591508082111561069757600080fd5b6106a38c838d01610594565b909650945060808b01359150808211156106bc57600080fd5b506106c98b828c016105e0565b999c989b5096995094979396929594505050565b60008060008060008060a087890312156106f657600080fd5b6106ff8761056b565b955061070d6020880161056b565b94506040870135935060608701359250608087013567ffffffffffffffff81111561073757600080fd5b61074389828a016105e0565b979a9699509497509295939492505050565b6000806040838503121561076857600080fd5b6107718361056b565b946020939093013593505050565b60006020828403121561079157600080fd5b505191905056fea26469706673582212205f4ff29735d9a8fa945a2af5b9a0878012ac2e8a50870c4d933a5a8ddd5c12e064736f6c63430008160033";

type ERC1155StrategyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155StrategyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155StrategyMock__factory extends ContractFactory {
  constructor(...args: ERC1155StrategyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155StrategyMock";
  }

  override deploy(
    yieldBox_: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155StrategyMock> {
    return super.deploy(
      yieldBox_,
      token,
      tokenId_,
      overrides || {}
    ) as Promise<ERC1155StrategyMock>;
  }
  override getDeployTransaction(
    yieldBox_: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      yieldBox_,
      token,
      tokenId_,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155StrategyMock {
    return super.attach(address) as ERC1155StrategyMock;
  }
  override connect(signer: Signer): ERC1155StrategyMock__factory {
    return super.connect(signer) as ERC1155StrategyMock__factory;
  }
  static readonly contractName: "ERC1155StrategyMock";

  public readonly contractName: "ERC1155StrategyMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155StrategyMockInterface {
    return new utils.Interface(_abi) as ERC1155StrategyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155StrategyMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155StrategyMock;
  }
}
