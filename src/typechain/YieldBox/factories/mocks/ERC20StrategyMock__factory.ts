/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC20StrategyMock,
  ERC20StrategyMockInterface,
} from "../../mocks/ERC20StrategyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "yieldBox_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161079a38038061079a83398101604081905261002f9161005e565b6001600160a01b0391821660a05216608052610098565b6001600160a01b038116811461005b57600080fd5b50565b6000806040838503121561007157600080fd5b825161007c81610046565b602084015190925061008d81610046565b809150509250929050565b60805160a0516106c16100d9600039600081816101a701526102c60152600081816101f90152818161024c01528181610351015261038c01526106c16000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063afa91cc611610081578063e3575f051161005b578063e3575f051461014b578063f3fef3a3146101e1578063f6b4dfb4146101f457600080fd5b8063afa91cc61461018f578063ce845d1d1461014b578063de406577146101a257600080fd5b806330fa738c116100b257806330fa738c14610136578063501883011461014b5780637284e4161461015357600080fd5b806306fdde03146100ce57806317d70f7c14610120575b600080fd5b61010a6040518060400160405280601181526020017f455243323053747261746567794d6f636b00000000000000000000000000000081525081565b6040516101179190610542565b60405180910390f35b610128600081565b604051908152602001610117565b61013e600181565b6040516101179190610575565b61012861021b565b61010a6040518060400160405280601981526020017f4d6f636b20537472617465677920666f722074657374696e670000000000000081525081565b6101a061019d3660046105b6565b50565b005b6101c97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610117565b6101a06101ef3660046105e4565b6102c4565b6101c97f000000000000000000000000000000000000000000000000000000000000000081565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561029b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bf9190610610565b905090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eb6d3a116040518163ffffffff1660e01b8152600401602060405180830381865afa158015610322573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103469190610629565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603156103b3576103b36001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836103b7565b5050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691610441919061064d565b6000604051808303816000865af19150503d806000811461047e576040519150601f19603f3d011682016040523d82523d6000602084013e610483565b606091505b50915091508180156104ad5750805115806104ad5750808060200190518101906104ad9190610669565b610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604482015260640160405180910390fd5b5050505050565b60005b83811015610539578181015183820152602001610521565b50506000910152565b602081526000825180602084015261056181604085016020870161051e565b601f01601f19169190910160400192915050565b60208101600583106105b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000602082840312156105c857600080fd5b5035919050565b6001600160a01b038116811461019d57600080fd5b600080604083850312156105f757600080fd5b8235610602816105cf565b946020939093013593505050565b60006020828403121561062257600080fd5b5051919050565b60006020828403121561063b57600080fd5b8151610646816105cf565b9392505050565b6000825161065f81846020870161051e565b9190910192915050565b60006020828403121561067b57600080fd5b8151801515811461064657600080fdfea2646970667358221220ad30b43c06faf1610f3f0eda4b7a93849a18b49bcc498afed8725b28c4a7aca464736f6c63430008160033";

type ERC20StrategyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20StrategyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20StrategyMock__factory extends ContractFactory {
  constructor(...args: ERC20StrategyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20StrategyMock";
  }

  override deploy(
    yieldBox_: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20StrategyMock> {
    return super.deploy(
      yieldBox_,
      token,
      overrides || {}
    ) as Promise<ERC20StrategyMock>;
  }
  override getDeployTransaction(
    yieldBox_: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(yieldBox_, token, overrides || {});
  }
  override attach(address: string): ERC20StrategyMock {
    return super.attach(address) as ERC20StrategyMock;
  }
  override connect(signer: Signer): ERC20StrategyMock__factory {
    return super.connect(signer) as ERC20StrategyMock__factory;
  }
  static readonly contractName: "ERC20StrategyMock";

  public readonly contractName: "ERC20StrategyMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20StrategyMockInterface {
    return new utils.Interface(_abi) as ERC20StrategyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20StrategyMock {
    return new Contract(address, _abi, signerOrProvider) as ERC20StrategyMock;
  }
}
