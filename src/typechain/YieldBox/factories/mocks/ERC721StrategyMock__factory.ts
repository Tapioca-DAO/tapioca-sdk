/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721StrategyMock,
  ERC721StrategyMockInterface,
} from "../../mocks/ERC721StrategyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "yieldBox_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346100ad57601f61061038819003918201601f19168301916001600160401b038311848410176100b2578084926060946040528339810103126100ad578051906001600160a01b039081831683036100ad57602081015191821682036100ad57604001519160c05260805260a05260405161054790816100c9823960805181818160c4015281816101120152610464015260a05181818161015d01526102b3015260c051816101ed0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b600091823560e01c90816306fdde031461034c57508063150b7a02146102d657806317d70f7c1461029c57806330fa738c1461028157806350188301146101c95780637284e41614610229578063afa91cc614610211578063ce845d1d146101c9578063de406577146101ce578063e3575f05146101c9578063f3fef3a3146100ec5763f6b4dfb4146100a657600080fd5b346100e857816003193601126100e857602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b50346100e857806003193601126100e85761010561041c565b90826001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001693843b156101c5576064908385519687948593632142170760e11b85523060048601521660248401527f000000000000000000000000000000000000000000000000000000000000000060448401525af180156101bb57610191578280f35b67ffffffffffffffff82116101a7575238808280f35b634e487b7160e01b83526041600452602483fd5b81513d85823e3d90fd5b8280fd5b610437565b50346100e857816003193601126100e857602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b82346102265760203660031901126102265780f35b80fd5b50346100e857816003193601126100e857805161027d91610249826103a1565b601982527f4d6f636b20537472617465677920666f722074657374696e6700000000000000602083015251918291826103d3565b0390f35b50346100e857816003193601126100e8576020905160028152f35b50346100e857816003193601126100e857602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346100e85760803660031901126100e8576102f061041c565b506024356001600160a01b038116036100e85760643567ffffffffffffffff808211610348573660238301121561034857816004013590811161034857369101602401116100e85751630a85bd0160e11b8152602090f35b8380fd5b919050346101c557826003193601126101c55761027d925061036d826103a1565b601282527f45524337323153747261746567794d6f636b0000000000000000000000000000602083015251918291826103d3565b6040810190811067ffffffffffffffff8211176103bd57604052565b634e487b7160e01b600052604160045260246000fd5b6020808252825181830181905290939260005b82811061040857505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016103e6565b600435906001600160a01b038216820361043257565b600080fd5b3461043257600080600319360112610226576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156105065782916104a7575b602082604051908152f35b905060203d81116104ff575b601f8101601f1916820167ffffffffffffffff8111838210176104eb576020918391604052810103126100e85760209150513861049c565b634e487b7160e01b84526041600452602484fd5b503d6104b3565b6040513d84823e3d90fdfea26469706673582212203f88aba932043e46f1050a7507aa56a0d4b897c416b0205415793b618f884bd564736f6c63430008120033";

type ERC721StrategyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721StrategyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721StrategyMock__factory extends ContractFactory {
  constructor(...args: ERC721StrategyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC721StrategyMock";
  }

  override deploy(
    yieldBox_: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721StrategyMock> {
    return super.deploy(
      yieldBox_,
      token,
      tokenId_,
      overrides || {}
    ) as Promise<ERC721StrategyMock>;
  }
  override getDeployTransaction(
    yieldBox_: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      yieldBox_,
      token,
      tokenId_,
      overrides || {}
    );
  }
  override attach(address: string): ERC721StrategyMock {
    return super.attach(address) as ERC721StrategyMock;
  }
  override connect(signer: Signer): ERC721StrategyMock__factory {
    return super.connect(signer) as ERC721StrategyMock__factory;
  }
  static readonly contractName: "ERC721StrategyMock";

  public readonly contractName: "ERC721StrategyMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721StrategyMockInterface {
    return new utils.Interface(_abi) as ERC721StrategyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721StrategyMock {
    return new Contract(address, _abi, signerOrProvider) as ERC721StrategyMock;
  }
}
