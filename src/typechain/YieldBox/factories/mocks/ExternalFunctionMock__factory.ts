/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ExternalFunctionMock,
  ExternalFunctionMockInterface,
} from "../../mocks/ExternalFunctionMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
    ],
    name: "Result",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "sum",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061012e806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063cad0899b14602d575b600080fd5b603c60383660046098565b604e565b60405190815260200160405180910390f35b60006058828460b9565b90507fa9bb0fa194e939eadb11be8d62dd4a16e0f5e89f37fb73fa7f0f8446f1abba6181604051608a91815260200190565b60405180910390a192915050565b6000806040838503121560aa57600080fd5b50508035926020909101359150565b8082018082111560f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9291505056fea26469706673582212202373a30db50eea50b6d99758df04adf95603805b8da65e09a65d9c6b5911320764736f6c63430008160033";

type ExternalFunctionMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExternalFunctionMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExternalFunctionMock__factory extends ContractFactory {
  constructor(...args: ExternalFunctionMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ExternalFunctionMock";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExternalFunctionMock> {
    return super.deploy(overrides || {}) as Promise<ExternalFunctionMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExternalFunctionMock {
    return super.attach(address) as ExternalFunctionMock;
  }
  override connect(signer: Signer): ExternalFunctionMock__factory {
    return super.connect(signer) as ExternalFunctionMock__factory;
  }
  static readonly contractName: "ExternalFunctionMock";

  public readonly contractName: "ExternalFunctionMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExternalFunctionMockInterface {
    return new utils.Interface(_abi) as ExternalFunctionMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExternalFunctionMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExternalFunctionMock;
  }
}
