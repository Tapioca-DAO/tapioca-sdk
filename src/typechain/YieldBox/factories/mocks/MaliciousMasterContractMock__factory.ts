/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MaliciousMasterContractMock,
  MaliciousMasterContractMockInterface,
} from "../../mocks/MaliciousMasterContractMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "yieldBox",
        type: "address",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761015d908161001c8239f35b600080fdfe6080806040526004908136101561001557600080fd5b600091823560e01c80634ddf47d4146100db5763d018db3e1461003757600080fd5b346100d75760203660031901126100d75782813573ffffffffffffffffffffffffffffffffffffffff81168091036100d357803b156100d35760448483819363a22cb46560e01b83523087840152600160248401525af180156100c85761009c578280f35b67ffffffffffffffff82116100b5575060405238808280f35b634e487b7160e01b835260419052602482fd5b6040513d85823e3d90fd5b5080fd5b8280fd5b838260203660031901126100d35780359067ffffffffffffffff908183116101235736602384011215610123578201359081116100d757369101602401116101205780f35b80fd5b8380fdfea2646970667358221220ef71c726731769b5dede073d953151bd64fd37419b517f5b608694081ba1b9c264736f6c63430008120033";

type MaliciousMasterContractMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaliciousMasterContractMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MaliciousMasterContractMock__factory extends ContractFactory {
  constructor(...args: MaliciousMasterContractMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MaliciousMasterContractMock";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MaliciousMasterContractMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<MaliciousMasterContractMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MaliciousMasterContractMock {
    return super.attach(address) as MaliciousMasterContractMock;
  }
  override connect(signer: Signer): MaliciousMasterContractMock__factory {
    return super.connect(signer) as MaliciousMasterContractMock__factory;
  }
  static readonly contractName: "MaliciousMasterContractMock";

  public readonly contractName: "MaliciousMasterContractMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaliciousMasterContractMockInterface {
    return new utils.Interface(_abi) as MaliciousMasterContractMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MaliciousMasterContractMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MaliciousMasterContractMock;
  }
}
