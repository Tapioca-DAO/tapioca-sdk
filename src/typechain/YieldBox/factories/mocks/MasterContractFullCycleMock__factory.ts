/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MasterContractFullCycleMock,
  MasterContractFullCycleMockInterface,
} from "../../mocks/MasterContractFullCycleMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc1155",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc1155Strategy",
    outputs: [
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ethStrategy",
    outputs: [
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenStrategy",
    outputs: [
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100bd57601f610c6738819003918201601f19168301916001600160401b038311848410176100c2578084926020946040528339810103126100bd57516001600160a01b03811681036100bd57608052604051610b8e90816100d9823960805181818160ce015281816101c40152818161026d015281816102e901528181610367015281816103e20152818161048801528181610531015281816105ad0152818161062b015281816106a80152818161072101526107a40152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c9081634ddf47d414610a0257816359a81aef146109de57508063a59a9db8146109b7578063ab49ba2b14610990578063c040622614610140578063d56022d714610119578063d5f39488146100f2578063de406577146100ae5763fc0c546a1461008257600080fd5b346100a95760003660031901126100a95760206001600160a01b0360015416604051908152f35b600080fd5b346100a95760003660031901126100a95760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100a95760003660031901126100a95760206001600160a01b0360005416604051908152f35b346100a95760003660031901126100a95760206001600160a01b0360025416604051908152f35b60003660031901126100a9576001600160a01b03600154166001600160a01b03600354166001600160a01b03600054169060405192636cd5703160e01b845260016004850152602484015260448301526000606483015280608483015260a48201526103e860c4820152600060e48201526040816101048160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af180156107fc57610972575b506001600160a01b03600154166001600160a01b03600354166001600160a01b03600054169060405192636cd5703160e01b845260016004850152602484015260448301526000606483015280608483015260a4820152600060c482015264174876e80060e48201526040816101048160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af180156107fc57610954575b506001600160a01b03600154166001600160a01b0360035416604051916316a70ea960e11b83526001600484015260248301526044820152600060648201526020816084816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156107fc57600091610922575b5060008054604080516311a5cc7760e31b8152600481018590526001600160a01b039283166024820181905260448201526103e8606482015260848101849052929091839160a4918391907f0000000000000000000000000000000000000000000000000000000000000000165af180156107fc57610904575b5060008054604080516311a5cc7760e31b815260048101949094526001600160a01b039182166024850181905260448501526064840183905264174876e800608485015291839160a49183917f0000000000000000000000000000000000000000000000000000000000000000165af180156107fc576108e6575b506001600160a01b03600254166001600160a01b03600454166001600160a01b03600054169060405192636cd5703160e01b84526003600485015260248401526044830152602a606483015280608483015260a48201526103e860c4820152600060e48201526040816101048160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af180156107fc576108c8575b506001600160a01b03600254166001600160a01b03600454166001600160a01b03600054169060405192636cd5703160e01b84526003600485015260248401526044830152602a606483015280608483015260a4820152600060c482015264174876e80060e48201526040816101048160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af180156107fc576108aa575b506001600160a01b03600254166001600160a01b0360045416604051916316a70ea960e11b83526003600484015260248301526044820152602a60648201526020816084816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156107fc57600091610878575b5060008054604080516311a5cc7760e31b8152600481018590526001600160a01b039283166024820181905260448201526103e8606482015260848101849052929091839160a4918391907f0000000000000000000000000000000000000000000000000000000000000000165af180156107fc5761085a575b5060008054604080516311a5cc7760e31b8152600481018590526001600160a01b039283166024820181905260448201526064810184905264174876e8006084820152929091839160a4918391907f0000000000000000000000000000000000000000000000000000000000000000165af180156107fc5761083c575b506001600160a01b03600554166001600160a01b03600054166040519163028e08eb60e61b8352600483015260248201526103e860448201526040816064816103e86001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af180156107fc5761081e575b50600181018091116108085760008054604080516311a5cc7760e31b815260048101949094526001600160a01b039182166024850181905260448501526103e860648501526084840183905291839160a49183917f0000000000000000000000000000000000000000000000000000000000000000165af180156107fc576107d257005b6107f39060403d6040116107f5575b6107eb8183610b0a565b810190610b42565b005b503d6107e1565b6040513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b6108369060403d6040116107f5576107eb8183610b0a565b5061074e565b6108549060403d6040116107f5576107eb8183610b0a565b506106d5565b6108729060403d6040116107f5576107eb8183610b0a565b50610658565b90506020813d6020116108a2575b8161089360209383610b0a565b810103126100a95751816105de565b3d9150610886565b6108c29060403d6040116107f5576107eb8183610b0a565b5061055e565b6108e09060403d6040116107f5576107eb8183610b0a565b506104b5565b6108fe9060403d6040116107f5576107eb8183610b0a565b5061040f565b61091c9060403d6040116107f5576107eb8183610b0a565b50610394565b90506020813d60201161094c575b8161093d60209383610b0a565b810103126100a957518161031a565b3d9150610930565b61096c9060403d6040116107f5576107eb8183610b0a565b5061029a565b61098a9060403d6040116107f5576107eb8183610b0a565b506101f1565b346100a95760003660031901126100a95760206001600160a01b0360045416604051908152f35b346100a95760003660031901126100a95760206001600160a01b0360035416604051908152f35b346100a95760003660031901126100a9576020906001600160a01b03600554168152f35b60203660031901126100a95760043567ffffffffffffffff8082116100a957366023830112156100a95781600401359081116100a95781013660248201116100a9578160c09103126100a957610a5a60248201610af6565b610a6660448301610af6565b90610aaa610a7660648501610af6565b9260c4610a8560848701610af6565b94610a9260a48801610af6565b966001600160a01b0396878080978196829501610af6565b16996001600160a01b03199a8b60055416176005551689600454161760045516876003541617600355168560025416176002551683600154161760015516906000541617600055600080f35b35906001600160a01b03821682036100a957565b90601f8019910116810190811067ffffffffffffffff821117610b2c57604052565b634e487b7160e01b600052604160045260246000fd5b91908260409103126100a957602082519201519056fea2646970667358221220c7debab38c87251d3cc046cf3800cd9e38f20913cf50bc314d110c1b47a533ec64736f6c63430008120033";

type MasterContractFullCycleMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterContractFullCycleMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterContractFullCycleMock__factory extends ContractFactory {
  constructor(...args: MasterContractFullCycleMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MasterContractFullCycleMock";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MasterContractFullCycleMock> {
    return super.deploy(
      _yieldBox,
      overrides || {}
    ) as Promise<MasterContractFullCycleMock>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, overrides || {});
  }
  override attach(address: string): MasterContractFullCycleMock {
    return super.attach(address) as MasterContractFullCycleMock;
  }
  override connect(signer: Signer): MasterContractFullCycleMock__factory {
    return super.connect(signer) as MasterContractFullCycleMock__factory;
  }
  static readonly contractName: "MasterContractFullCycleMock";

  public readonly contractName: "MasterContractFullCycleMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterContractFullCycleMockInterface {
    return new utils.Interface(_abi) as MasterContractFullCycleMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterContractFullCycleMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MasterContractFullCycleMock;
  }
}
