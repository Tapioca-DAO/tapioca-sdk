/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  YieldOptions,
  YieldOptionsInterface,
} from "../../../samples/Options.sol/YieldOptions";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Exercise",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetAmount",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "asset",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "currency",
        type: "uint32",
      },
      {
        internalType: "uint128",
        name: "price",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "expiry",
        type: "uint32",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "exercise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "optionTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "minterTo",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "options",
    outputs: [
      {
        internalType: "uint32",
        name: "asset",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "currency",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "expiry",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "optionAssetId",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "minterAssetId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "assetAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawEarly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051620021703803806200217083398101604081905261003191610056565b600080546001600160a01b0319166001600160a01b0392909216919091179055610086565b60006020828403121561006857600080fd5b81516001600160a01b038116811461007f57600080fd5b9392505050565b6120da80620000966000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636d9a640a1161005b5780636d9a640a14610120578063a86265bb14610133578063de40657714610146578063f1502cca1461017157600080fd5b80630ad58d2f1461008d5780633381b76c146100a2578063409e2205146100b55780635734b9681461010d575b600080fd5b6100a061009b366004611a6e565b610192565b005b6100a06100b0366004611a6e565b610624565b6100c86100c3366004611aa3565b6109ca565b6040805163ffffffff97881681529587166020870152938616938501939093529084166060840152909216608082015260a081019190915260c0015b60405180910390f35b6100a061011b366004611abc565b610a2f565b6100a061012e366004611a6e565b610d2d565b6100a0610141366004611b02565b610f24565b600054610159906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b61018461017f366004611b39565b6111b4565b604051908152602001610104565b6000600184815481106101a7576101a7611baa565b60009182526020909120600290910201805490915068010000000000000000900463ffffffff164210156102225760405162461bcd60e51b815260206004820152601660248201527f4f7074696f6e206e6f742079657420657870697265640000000000000000000060448201526064015b60405180910390fd5b600054815460405163bd85b03960e01b815263ffffffff600160801b8304811660048301526001600160a01b0390931692630411b252923092879290911690859063bd85b03990602401602060405180830381865afa158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad9190611bc0565b600054875460405163bd85b03960e01b815264010000000090910463ffffffff1660048201528a916001600160a01b03169063bd85b03990602401602060405180830381865afa158015610305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103299190611bc0565b6103339190611bef565b61033d9190611c1c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1681526001600160a01b03948516600482015293909216602484015263ffffffff1660448301526064820152608401600060405180830381600087803b1580156103af57600080fd5b505af11580156103c3573d6000803e3d6000fd5b5050600054835460405163bd85b03960e01b815263ffffffff600160801b8304811660048301526001600160a01b039093169450630411b2529350309287921690859063bd85b03990602401602060405180830381865afa15801561042c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104509190611bc0565b600054875460405163bd85b03960e01b815264010000000090910463ffffffff1660048201528a916001600160a01b03169063bd85b03990602401602060405180830381865afa1580156104a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cc9190611bc0565b6104d69190611bef565b6104e09190611c1c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1681526001600160a01b03948516600482015293909216602484015263ffffffff1660448301526064820152608401600060405180830381600087803b15801561055257600080fd5b505af1158015610566573d6000803e3d6000fd5b50506000548354604051634f752fb360e11b8152600160801b90910463ffffffff166004820152336024820152604481018790526001600160a01b039091169250639eea5f669150606401600060405180830381600087803b1580156105cb57600080fd5b505af11580156105df573d6000803e3d6000fd5b505060408051878152602081018790523393507f9da6493a92039daf47d1f2d7a782299c5994c6323eb1e972f69c432089ec52bf92500160405180910390a250505050565b60006001848154811061063957610639611baa565b60009182526020909120600290910201805490915068010000000000000000900463ffffffff1642106106ae5760405162461bcd60e51b815260206004820152601660248201527f4f7074696f6e206e6f74207965742065787069726564000000000000000000006044820152606401610219565b6000548154604051634f752fb360e11b8152600160601b90910463ffffffff166004820152336024820152604481018590526001600160a01b0390911690639eea5f6690606401600060405180830381600087803b15801561070f57600080fd5b505af1158015610723573d6000803e3d6000fd5b50506000548354604051634f752fb360e11b8152600160801b90910463ffffffff166004820152336024820152604481018790526001600160a01b039091169250639eea5f669150606401600060405180830381600087803b15801561078857600080fd5b505af115801561079c573d6000803e3d6000fd5b505060008054845460405163bd85b03960e01b815263ffffffff909116600482015291935083925082916001600160a01b039091169063bd85b03990602401602060405180830381865afa1580156107f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081c9190611bc0565b9050801561088757600184015461083b87670de0b6b3a7640000611bef565b6108459190611c1c565b925080831115610882576001840154670de0b6b3a7640000906108688386611c30565b6108729190611bef565b61087c9190611c1c565b91508092505b61088b565b8591505b6000548454604051630208d92960e11b81523060048201526001600160a01b03888116602483015264010000000090920463ffffffff16604482015260648101859052911690630411b25290608401600060405180830381600087803b1580156108f457600080fd5b505af1158015610908573d6000803e3d6000fd5b50506000548654604051630208d92960e11b81523060048201526001600160a01b038a8116602483015263ffffffff90921660448201526064810188905291169250630411b2529150608401600060405180830381600087803b15801561096e57600080fd5b505af1158015610982573d6000803e3d6000fd5b5050604080518a8152602081018a90523393507f9da6493a92039daf47d1f2d7a782299c5994c6323eb1e972f69c432089ec52bf92500160405180910390a250505050505050565b600181815481106109da57600080fd5b60009182526020909120600290910201805460019091015463ffffffff80831693506401000000008304811692680100000000000000008104821692600160601b8204831692600160801b9092049091169086565b600060018581548110610a4457610a44611baa565b60009182526020909120600290910201805490915068010000000000000000900463ffffffff164210610ab95760405162461bcd60e51b815260206004820152600e60248201527f4f7074696f6e20657870697265640000000000000000000000000000000000006044820152606401610219565b600054815460405163bd85b03960e01b815263ffffffff90911660048201526001600160a01b039091169063bd85b03990602401602060405180830381865afa158015610b0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2e9190611bc0565b15610b7b5760405162461bcd60e51b815260206004820152601d60248201527f4f7074696f6e73206578657263697365642c206e6f206d696e74696e670000006044820152606401610219565b6000548154604051630208d92960e11b815233600482015230602482015263ffffffff9091166044820152606481018690526001600160a01b0390911690630411b25290608401600060405180830381600087803b158015610bdc57600080fd5b505af1158015610bf0573d6000803e3d6000fd5b5050600054835460405163020da84160e61b8152600160601b90910463ffffffff1660048201526001600160a01b03878116602483015260448201899052909116925063836a10409150606401600060405180830381600087803b158015610c5757600080fd5b505af1158015610c6b573d6000803e3d6000fd5b5050600054835460405163020da84160e61b8152600160801b90910463ffffffff1660048201526001600160a01b03868116602483015260448201899052909116925063836a10409150606401600060405180830381600087803b158015610cd257600080fd5b505af1158015610ce6573d6000803e3d6000fd5b505060408051888152602081018890523393507f4e3883c75cc9c752bb1db2e406a822e4a75067ae77ad9a0a4d179f2709b9e1f69250015b60405180910390a25050505050565b600060018481548110610d4257610d42611baa565b906000526020600020906002020190506000670de0b6b3a7640000826001015485610d6d9190611bef565b610d779190611c1c565b6000548354604051630208d92960e11b815233600482015230602482015264010000000090910463ffffffff166044820152606481018390529192506001600160a01b031690630411b25290608401600060405180830381600087803b158015610de057600080fd5b505af1158015610df4573d6000803e3d6000fd5b50506000548454604051630208d92960e11b815230600482015233602482015263ffffffff9091166044820152606481018890526001600160a01b039091169250630411b2529150608401600060405180830381600087803b158015610e5957600080fd5b505af1158015610e6d573d6000803e3d6000fd5b5050600054845460405163020da84160e61b8152600160601b90910463ffffffff1660048201526001600160a01b03878116602483015260448201869052909116925063836a10409150606401600060405180830381600087803b158015610ed457600080fd5b505af1158015610ee8573d6000803e3d6000fd5b505060408051888152602081018590523393507f48b43f133ac721cb5f6e2a3d8ab7caee987bccfb4197537cf43c9f907f057f3a925001610d1e565b600060018381548110610f3957610f39611baa565b60009182526020909120600290910201805490915068010000000000000000900463ffffffff164210610fae5760405162461bcd60e51b815260206004820152601260248201527f4f7074696f6e20686173206578706972656400000000000000000000000000006044820152606401610219565b6000548154604051634f752fb360e11b8152600160601b90910463ffffffff166004820152336024820152604481018490526001600160a01b0390911690639eea5f6690606401600060405180830381600087803b15801561100f57600080fd5b505af1158015611023573d6000803e3d6000fd5b5050600054835460018501546001600160a01b039092169350630411b25292503391309163ffffffff169061106088670de0b6b3a7640000611bef565b61106a9190611c1c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1681526001600160a01b03948516600482015293909216602484015263ffffffff1660448301526064820152608401600060405180830381600087803b1580156110dc57600080fd5b505af11580156110f0573d6000803e3d6000fd5b50506000548354604051630208d92960e11b815230600482015233602482015264010000000090910463ffffffff166044820152606481018690526001600160a01b039091169250630411b2529150608401600060405180830381600087803b15801561115c57600080fd5b505af1158015611170573d6000803e3d6000fd5b505060408051868152602081018690523393507f0f0ef06b2bde74cd9e83806f30944029385e83657a76b7f8994a28119b460d8592500160405180910390a2505050565b6040805160c0810182526000606082018190526080820181905263ffffffff87811680845287821660208501526fffffffffffffffffffffffffffffffff871660a08501529085168385015281549351634e41a1fb60e01b8152600481019190915290926001600160a01b031690632482ee27908290634e41a1fb90602401600060405180830381865afa158015611250573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112789190810190611c7d565b6000546020850151604051634e41a1fb60e01b815263ffffffff90911660048201526001600160a01b0390911690634e41a1fb90602401600060405180830381865afa1580156112cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112f49190810190611c7d565b60a08501516000546020870151604051631fa3f33160e11b815263ffffffff909116600482015261137a92916001600160a01b031690633f47e662906024015b602060405180830381865afa158015611351573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113759190611d2a565b611711565b60405160200161138c93929190611d54565b60405160208183030381529060405260126040518363ffffffff1660e01b81526004016113ba929190611e40565b6020604051808303816000875af11580156113d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fd9190611ea8565b63ffffffff90811660608301526000548251604051634e41a1fb60e01b8152921660048301526001600160a01b031690632482ee27908290634e41a1fb90602401600060405180830381865afa15801561145b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114839190810190611c7d565b6000546020850151604051634e41a1fb60e01b815263ffffffff90911660048201526001600160a01b0390911690634e41a1fb90602401600060405180830381865afa1580156114d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114ff9190810190611c7d565b60a08501516000546020870151604051631fa3f33160e11b815263ffffffff909116600482015261154392916001600160a01b031690633f47e66290602401611334565b60405160200161155593929190611ec5565b60405160208183030381529060405260126040518363ffffffff1660e01b8152600401611583929190611efd565b6020604051808303816000875af11580156115a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c69190611ea8565b63ffffffff908116608083019081526001805480820182556000919091528351600282027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810180546020880151604089015160608a015197518916600160801b027fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff988a16600160601b027fffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffff928b166801000000000000000002929092167fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff938b166401000000000267ffffffffffffffff1990951697909a169690961792909217169690961795909517939093161790925560a0909201517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf79092019190915595945050505050565b60408051602880825260608281019093526000918291829182916020820181803683370190505090508660000361178057600360fc1b818461175281611f44565b95508151811061176457611764611baa565b60200101906001600160f81b031916908160001a9053506119a3565b61178b866012611f5d565b60ff1693505b600061179e85600a61205a565b6117a89089611c1c565b90506117b5600a82612066565b6117c084600a611bef565b6117ca919061207a565b925082156118625760306117df600a83612066565b6117e9919061207a565b60f81b82856117f781611f44565b96508151811061180957611809611baa565b60200101906001600160f81b031916908160001a905350600184118015611843575061183685600a61205a565b6118409082611bef565b88145b801561185257508660ff168511155b1561185d57506119a3565b611924565b8660ff1685036118df57600360fc1b828561187c81611f44565b96508151811061188e5761188e611baa565b60200101906001600160f81b031916908160001a905350601760f91b82856118b581611f44565b9650815181106118c7576118c7611baa565b60200101906001600160f81b031916908160001a9053505b8660ff1685101561192457600360fc1b82856118fa81611f44565b96508151811061190c5761190c611baa565b60200101906001600160f81b031916908160001a9053505b60ff8716158015906119385750848760ff16145b80156119445750600083115b80156119505750600085115b1561198f57601760f91b828561196581611f44565b96508151811061197757611977611baa565b60200101906001600160f81b031916908160001a9053505b846119998161208d565b9550611791915050565b60008367ffffffffffffffff8111156119be576119be611c43565b6040519080825280601f01601f1916602001820160405280156119e8576020820181803683370190505b50905060005b84811015611a4457828181518110611a0857611a08611baa565b602001015160f81c60f81b828281518110611a2557611a25611baa565b60200101906001600160f81b031916908160001a9053506001016119ee565b509450505050505b92915050565b80356001600160a01b0381168114611a6957600080fd5b919050565b600080600060608486031215611a8357600080fd5b8335925060208401359150611a9a60408501611a52565b90509250925092565b600060208284031215611ab557600080fd5b5035919050565b60008060008060808587031215611ad257600080fd5b8435935060208501359250611ae960408601611a52565b9150611af760608601611a52565b905092959194509250565b60008060408385031215611b1557600080fd5b50508035926020909101359150565b63ffffffff81168114611b3657600080fd5b50565b60008060008060808587031215611b4f57600080fd5b8435611b5a81611b24565b93506020850135611b6a81611b24565b925060408501356fffffffffffffffffffffffffffffffff81168114611b8f57600080fd5b91506060850135611b9f81611b24565b939692955090935050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611bd257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417611a4c57611a4c611bd9565b634e487b7160e01b600052601260045260246000fd5b600082611c2b57611c2b611c06565b500490565b81810381811115611a4c57611a4c611bd9565b634e487b7160e01b600052604160045260246000fd5b60005b83811015611c74578181015183820152602001611c5c565b50506000910152565b600060208284031215611c8f57600080fd5b815167ffffffffffffffff80821115611ca757600080fd5b818401915084601f830112611cbb57600080fd5b815181811115611ccd57611ccd611c43565b604051601f8201601f19908116603f01168101908382118183101715611cf557611cf5611c43565b81604052828152876020848701011115611d0e57600080fd5b611d1f836020830160208801611c59565b979650505050505050565b600060208284031215611d3c57600080fd5b815160ff81168114611d4d57600080fd5b9392505050565b7f796f000000000000000000000000000000000000000000000000000000000000815260008451611d8c816002850160208901611c59565b7f3a000000000000000000000000000000000000000000000000000000000000006002918401918201528451611dc9816003840160208901611c59565b7f2000000000000000000000000000000000000000000000000000000000000000600392909101918201528351611e07816004840160208801611c59565b0160040195945050505050565b60008151808452611e2c816020860160208601611c59565b601f01601f19169290920160200192915050565b60808152600b60808201527f5969656c644f7074696f6e00000000000000000000000000000000000000000060a082015260c060208201526000611e8760c0830185611e14565b60ff9390931660408301525080820360609091015260008152602001919050565b600060208284031215611eba57600080fd5b8151611d4d81611b24565b7f796d000000000000000000000000000000000000000000000000000000000000815260008451611d8c816002850160208901611c59565b60808152601160808201527f5969656c644f7074696f6e4d696e74657200000000000000000000000000000060a082015260c060208201526000611e8760c0830185611e14565b600060018201611f5657611f56611bd9565b5060010190565b60ff8181168382160190811115611a4c57611a4c611bd9565b600181815b80851115611fb1578160001904821115611f9757611f97611bd9565b80851615611fa457918102915b93841c9390800290611f7b565b509250929050565b600082611fc857506001611a4c565b81611fd557506000611a4c565b8160018114611feb5760028114611ff557612011565b6001915050611a4c565b60ff84111561200657612006611bd9565b50506001821b611a4c565b5060208310610133831016604e8410600b8410161715612034575081810a611a4c565b61203e8383611f76565b806000190482111561205257612052611bd9565b029392505050565b6000611d4d8383611fb9565b60008261207557612075611c06565b500690565b80820180821115611a4c57611a4c611bd9565b60008161209c5761209c611bd9565b50600019019056fea264697066735822122033dbe0389e5419f4908283c2378add112fec6588360c1d6b4b4f0c018554112f64736f6c63430008160033";

type YieldOptionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldOptionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldOptions__factory extends ContractFactory {
  constructor(...args: YieldOptionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YieldOptions";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldOptions> {
    return super.deploy(_yieldBox, overrides || {}) as Promise<YieldOptions>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, overrides || {});
  }
  override attach(address: string): YieldOptions {
    return super.attach(address) as YieldOptions;
  }
  override connect(signer: Signer): YieldOptions__factory {
    return super.connect(signer) as YieldOptions__factory;
  }
  static readonly contractName: "YieldOptions";

  public readonly contractName: "YieldOptions";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldOptionsInterface {
    return new utils.Interface(_abi) as YieldOptionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldOptions {
    return new Contract(address, _abi, signerOrProvider) as YieldOptions;
  }
}
