/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  YieldOptions,
  YieldOptionsInterface,
} from "../../../samples/Options.sol/YieldOptions";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Exercise",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetAmount",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "asset",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "currency",
        type: "uint32",
      },
      {
        internalType: "uint128",
        name: "price",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "expiry",
        type: "uint32",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "exercise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "optionTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "minterTo",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "options",
    outputs: [
      {
        internalType: "uint32",
        name: "asset",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "currency",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "expiry",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "optionAssetId",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "minterAssetId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "assetAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawEarly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007457601f611aef38819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b031916919091179055604051611a5f90816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80630ad58d2f146111e75780633381b76c14610e7b578063409e220514610e085780635734b96814610b215780636d9a640a1461094f578063a86265bb14610703578063de406577146106dd5763f1502cca1461007557600080fd5b346106da5760803660031901126106da576004359063ffffffff82168092036106d1576024359163ffffffff83168093036106d1576044356fffffffffffffffffffffffffffffffff81168091036106d6576064359063ffffffff82168092036106d1576040519460c0860186811067ffffffffffffffff8211176106bb57604052846060870152846080870152838652602086015260a085015260408401526001600160a01b038254169060405190634e41a1fb60e01b825260048201528281602481855afa90811561065b5783916106a1575b5063ffffffff6020850151169060405191634e41a1fb60e01b835260048301528382602481865afa918215610636578492610685575b5060a085015163ffffffff6020870151169060405191631fa3f33160e11b83526004830152602082602481885afa918215610607576024610296946101d660209895899895610250958c926105d8575b50611769565b60405194859261796f60f01b8a8501526101f9815180928c602288019101611613565b601d60f91b6022828601015261021a825180938c6023858901019101611613565b600160fd1b60238383870101015261023e835180948c8886868a0101019101611613565b830101010360048101845201826115d5565b856040519586948593632482ee2760e01b855260806004860152600b60848601526a2cb4b2b63227b83a34b7b760a91b60a486015260c0602486015260c48501906116cd565b601260448501528284820391600319830160648701525201925af19081156105cd579063ffffffff918391610666575b501660608301526001600160a01b0381541663ffffffff83511660405190634e41a1fb60e01b825260048201528281602481855afa90811561065b578391610641575b5063ffffffff6020850151169060405191634e41a1fb60e01b835260048301528382602481865afa918215610636578492610612575b5060a085015163ffffffff6020870151169060405191631fa3f33160e11b83526004830152602082602481885afa91821561060757602461045a9461039460209895899895610402958c926105d85750611769565b60405194859261796d60f01b8a8501526103b7815180928c602288019101611613565b8301601d60f91b60228201526103d6825180938c602385019101611613565b01600160fd1b60238201526103f3825180938b8785019101611613565b010360048101845201826115d5565b856040519586948593632482ee2760e01b855260806004860152601160848601527f5969656c644f7074696f6e4d696e74657200000000000000000000000000000060a486015260c0602486015260c48501906116cd565b601260448501528284820391600319830160648701525201925af19081156105cd579063ffffffff91839161059e575b50166080830152600154906801000000000000000082101561058a57600182016001556104b682611571565b9190916105765750825181546020808601516040808801516060808a01516080808c015173ffffffffffffffffffffffffffffffffffffffff1990981663ffffffff999099169890981794861b67ffffffff00000000169490941791831b6bffffffff0000000000000000169190911792901b6fffffffff00000000000000000000000016919091179290931b73ffffffff000000000000000000000000000000001691909117835560a094909401516001929092019190915551908152f35b634e487b7160e01b81526004819052602490fd5b634e487b7160e01b81526041600452602490fd5b6105c0915060203d6020116105c6575b6105b881836115d5565b8101906116b1565b3861048a565b503d6105ae565b6040513d84823e3d90fd5b6105f99192508a3d8c11610600575b6105f181836115d5565b810190611698565b90386101d0565b503d6105e7565b6040513d88823e3d90fd5b61062f9192503d8086833e61062781836115d5565b810190611636565b903861033f565b6040513d86823e3d90fd5b61065591503d8085833e61062781836115d5565b38610309565b6040513d85823e3d90fd5b61067f915060203d6020116105c6576105b881836115d5565b386102c6565b61069a9192503d8086833e61062781836115d5565b9038610180565b6106b591503d8085833e61062781836115d5565b3861014a565b634e487b7160e01b600052604160045260246000fd5b600080fd5b8280fd5b80fd5b50346106da57806003193601126106da576001600160a01b036020915416604051908152f35b50346106da5760403660031901126106da576024359060043561072581611571565b509283549363ffffffff94858160401c1642101561090a576001600160a01b03908186541690813b156108de57604051634f752fb360e11b815260609190911c881663ffffffff1660048201523360248201526044810185905290869082908183816064810103925af18015610607579086916108f6575b5081905416958083541691670de0b6b3a76400009788860298868a0414861517156108e2576107d688996001879a98999a015490611716565b90803b156108de57604051630208d92960e11b80825233600483015230602483015263ffffffff969096166044820152606481019290925286908290608490829084905af19081156106075786916108ca575b505416925492803b156108c65760405192835230600484015233602484015260209390931c1663ffffffff1660448201526064810184905290829082908183816084810103925af180156105cd576108b2575b505060405191825260208201527f0f0ef06b2bde74cd9e83806f30944029385e83657a76b7f8994a28119b460d8560403392a280f35b6108bb906115c1565b6106d657823861087c565b8480fd5b6108d3906115c1565b6108c6578438610829565b8680fd5b634e487b7160e01b88526011600452602488fd5b6108ff906115c1565b6108c657843861079d565b60405162461bcd60e51b815260206004820152601260248201527f4f7074696f6e20686173206578706972656400000000000000000000000000006044820152606490fd5b50346106da578061095f36611547565b61096b83949293611571565b5090670de0b6b3a7640000610984600184015486611736565b04936001600160a01b038085541691845492803b156108de57604051630208d92960e11b80825233600483015230602483015263ffffffff60209690961c86166044830152606482018a905291889082908183816084810103925af1908115610b16578891610b02575b50548654851692908416803b15610afe5760405192835230600484015233602484015263ffffffff93909316604483015260648201529086908290608490829084905af1908115610607578691610aea575b505416925460601c16823b15610ae65760405163020da84160e61b815263ffffffff90911660048201526001600160a01b0390911660248201526044810184905290829082908183816064810103925af180156105cd57610ad2575b505060405191825260208201527f48b43f133ac721cb5f6e2a3d8ab7caee987bccfb4197537cf43c9f907f057f3a60403392a280f35b610adb906115c1565b6106d6578238610a9c565b8380fd5b610af3906115c1565b6108c6578438610a40565b8880fd5b610b0b906115c1565b6108de5786386109ee565b6040513d8a823e3d90fd5b50346106da5760803660031901126106da57604435906004356024356001600160a01b0380851685036106d1576064359481861686036106d157610b6484611571565b509081549663ffffffff808960401c16421015610dc35780858954169916946040519563bd85b03960e01b8752806004880152868b81602460209a8b935afa908115610db8578b91610d8b575b50610d46578a8a9b9a9798999a3b15610d2e57604051630208d92960e11b815233600482015230602482015263ffffffff929092166044830152606482018a905287908290608490829084905af1908115610d23578791610d32575b5054855460601c831694908216803b15610d2e5760405163020da84160e61b80825263ffffffff90971660048201526001600160a01b039092166024830152604482018a9052879082908183816064810103925af1908115610d23578791610d0b575b505416935460801c1692803b156108c65760405192835263ffffffff9390931660048301526001600160a01b03166024820152604481018590529082908290606490829084905af180156105cd57610cf7575b50506040519283528201527f4e3883c75cc9c752bb1db2e406a822e4a75067ae77ad9a0a4d179f2709b9e1f660403392a280f35b610d00906115c1565b610ae6578338610cc3565b610d14906115c1565b610d1f578538610c70565b8580fd5b6040513d89823e3d90fd5b8780fd5b610d3b906115c1565b610d1f578538610c0d565b60405162461bcd60e51b815260048101889052601d60248201527f4f7074696f6e73206578657263697365642c206e6f206d696e74696e670000006044820152606490fd5b90508781813d8311610db1575b610da281836115d5565b810103126106d1575138610bb1565b503d610d98565b6040513d8d823e3d90fd5b60405162461bcd60e51b815260206004820152600e60248201527f4f7074696f6e20657870697265640000000000000000000000000000000000006044820152606490fd5b50346106da5760203660031901126106da57600435906001548210156106da5760c0610e3383611571565b50600181549101546040519163ffffffff908181168452818160201c166020850152818160401c166040850152818160601c16606085015260801c16608083015260a0820152f35b50346106da57610e8a36611547565b929190610e9682611571565b508054610ead63ffffffff8260401c1642106119dd565b6001600160a01b03855416803b15610d1f57604051634f752fb360e11b80825260609390931c63ffffffff1660048201523360248201526044810185905290869082908183816064810103925af18015610607579086916111d3575b506001600160a01b039054169063ffffffff835460801c1690823b156108de5760405190815263ffffffff919091166004820152336024820152604481018490529085908290606490829084905af18015611124579085916111bf575b5050839484956001600160a01b0386541683546040519263bd85b03960e01b845263ffffffff82166004850152602084602481865afa9384156111b4578994611180575b508315611172575085670de0b6b3a7640000810204670de0b6b3a764000014861517156108e257600185015498610feb8a670de0b6b3a76400008902611716565b9380851161112f575b50889950979596975b823b156108de57604051630208d92960e11b81523060048201526001600160a01b038616602482015260209290921c63ffffffff166044830152606482015290859082908183816084810103925af1908115611124578591611110575b5054925463ffffffff16926001600160a01b0316803b156108c657604051630208d92960e11b81523060048201526001600160a01b03909316602484015263ffffffff909316604483015260648201529082908290818381608481015b03925af180156105cd576110fc575b505060405191825260208201527f9da6493a92039daf47d1f2d7a782299c5994c6323eb1e972f69c432089ec52bf60403392a280f35b611105906115c1565b6106d65782386110c6565b611119906115c1565b610ae657833861105a565b6040513d87823e3d90fd5b938481039150811161115e57611153899a670de0b6b3a7640000929a98999a611736565b043898979698610ff4565b634e487b7160e01b89526011600452602489fd5b925087985085969795610ffd565b9093506020813d6020116111ac575b8161119c602093836115d5565b810103126106d157519238610faa565b3d915061118f565b6040513d8b823e3d90fd5b6111c8906115c1565b610ae6578338610f66565b6111dc906115c1565b6108c6578438610f09565b50346106da576111f636611547565b6111ff83611571565b5090815461121863ffffffff8260401c164210156119dd565b856001600160a01b0381541660405163bd85b03960e01b815263ffffffff8460201c166004820152602081602481855afa801561065b5787908490611511575b6112629250611736565b60405163bd85b03960e01b8152608085901c63ffffffff16600482015290602082602481865afa9081156106365784916114db575b6112a19250611716565b90803b156106d657604051630208d92960e11b81523060048201526001600160a01b038616602482015263ffffffff94909416604485015260648401919091528290608490829084905af18015610607576114c6575b509084916001600160a01b038354169082549060405163bd85b03960e01b815263ffffffff8360201c166004820152602081602481875afa8015610607578791879161148b575b509061134991611736565b60405163bd85b03960e01b8152608084901c63ffffffff16600482015290602082602481885afa918215610d23578792611453575b509061138991611716565b92803b15610d1f57604051630208d92960e11b81523060048201526001600160a01b0392909216602483015263ffffffff929092166044820152606481019290925283908290608490829084905af190811561065b57839161143b575b5054905460801c63ffffffff16906001600160a01b0316803b156106d657604051634f752fb360e11b815263ffffffff90921660048301523360248301526044820184905282908290818381606481016110b7565b611444906115c1565b61144f5781386113e6565b5080fd5b915095506020813d602011611483575b81611470602093836115d5565b810103126106d15751889561138961137e565b3d9150611463565b965050506020853d6020116114be575b816114a8602093836115d5565b810103126106d15761134986899651909161133e565b3d915061149b565b6114d390959192956115c1565b9390386112f7565b90506020823d602011611509575b816114f6602093836115d5565b81010312610ae6576112a1915190611297565b3d91506114e9565b50506020813d60201161153f575b8161152c602093836115d5565b810103126106d657866112629151611258565b3d915061151f565b60609060031901126106d15760043590602435906044356001600160a01b03811681036106d15790565b6001548110156115ab57600160005260011b7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b67ffffffffffffffff81116106bb57604052565b90601f8019910116810190811067ffffffffffffffff8211176106bb57604052565b67ffffffffffffffff81116106bb57601f01601f191660200190565b60005b8381106116265750506000910152565b8181015183820152602001611616565b6020818303126106d15780519067ffffffffffffffff82116106d1570181601f820112156106d1578051611669816115f7565b9261167760405194856115d5565b818452602082840101116106d1576116959160208085019101611613565b90565b908160209103126106d1575160ff811681036106d15790565b908160209103126106d1575163ffffffff811681036106d15790565b906020916116e681518092818552858086019101611613565b601f01601f1916010190565b604d811161170057600a0a90565b634e487b7160e01b600052601160045260246000fd5b8115611720570490565b634e487b7160e01b600052601260045260246000fd5b8181029291811591840414171561170057565b60001981146117005760010190565b9081518110156115ab570160200190565b604051929160009182916060860167ffffffffffffffff8111878210176119c957604052602886526040366020880137816118275750505060306117b66117af83611749565b9285611758565b535b6117c1816115f7565b906117cf60405192836115d5565b808252601f196117de826115f7565b0136602084013760005b8181106117f6575090925050565b611822906001600160f81b031961180d8288611758565b511660001a61181c8286611758565b53611749565b6117e8565b60ff90959391929495166012810160ff81116119b55792958115159360ff165b611859611853826116f2565b89611716565b93600a80890298808a048214901517156117005785069485890180991161170057881515918783600014611962575060308701809711611700576118b761189f82611749565b9760f81b6001600160f81b03191660001a918a611758565b53600186119081611946575b508061193c575b61192e5785905b81611924575b8161191c575b5080611913575b6118f8575b80156117005760001901611847565b602e61190d61190686611749565b9588611758565b536118e9565b508015156118e4565b9050386118dd565b84831491506118d7565b5050945050919350506117b8565b50838211156118ca565b61195a9150611954846116f2565b90611736565b8914386118c3565b9291509550848314611992575b848310156118d157603061198c61198588611749565b978a611758565b536118d1565b60306119a061198588611749565b53602e6119af61198588611749565b5361196f565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b84526041600452602484fd5b156119e457565b60405162461bcd60e51b815260206004820152601660248201527f4f7074696f6e206e6f74207965742065787069726564000000000000000000006044820152606490fdfea26469706673582212209b5690f58b13de61789161865f7677f3fd395441f6ee51583afc11b4af35511164736f6c63430008120033";

type YieldOptionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldOptionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldOptions__factory extends ContractFactory {
  constructor(...args: YieldOptionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YieldOptions";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldOptions> {
    return super.deploy(_yieldBox, overrides || {}) as Promise<YieldOptions>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, overrides || {});
  }
  override attach(address: string): YieldOptions {
    return super.attach(address) as YieldOptions;
  }
  override connect(signer: Signer): YieldOptions__factory {
    return super.connect(signer) as YieldOptions__factory;
  }
  static readonly contractName: "YieldOptions";

  public readonly contractName: "YieldOptions";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldOptionsInterface {
    return new utils.Interface(_abi) as YieldOptionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldOptions {
    return new Contract(address, _abi, signerOrProvider) as YieldOptions;
  }
}
