/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Tokenizer, TokenizerInterface } from "../../samples/Tokenizer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceAsset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceAsset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107ab3803806107ab83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610718806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063441a3e7014610046578063de4065771461005b578063e2bbb1581461008a575b600080fd5b610059610054366004610483565b61009d565b005b60005461006e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b610059610098366004610483565b6101c5565b60008281526001602052604081205490546001600160a01b0316639eea5f6682336100d086670de0b6b3a76400006104a5565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815260048101939093526001600160a01b0390911660248301526044820152606401600060405180830381600087803b15801561013657600080fd5b505af115801561014a573d6000803e3d6000fd5b5050600054604051630208d92960e11b815230600482015233602482015260448101879052606481018690526001600160a01b039091169250630411b25291506084015b600060405180830381600087803b1580156101a857600080fd5b505af11580156101bc573d6000803e3d6000fd5b50505050505050565b6000828152600160205260408120549081900361039a576000546040517ead800c000000000000000000000000000000000000000000000000000000008152600481018590526001600160a01b0390911690632482ee2790829062ad800c90602401600060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261026c919081019061050a565b60405160200161027c91906105b7565b60408051808303601f19018152908290526000547f4e41a1fb0000000000000000000000000000000000000000000000000000000083526004830188905290916001600160a01b0390911690634e41a1fb90602401600060405180830381865afa1580156102ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610316919081019061050a565b60405160200161032691906105fc565b60405160208183030381529060405260126040518463ffffffff1660e01b81526004016103559392919061066d565b6020604051808303816000875af1158015610374573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039891906106b5565b505b600054604051630208d92960e11b815233600482015230602482015260448101859052606481018490526001600160a01b0390911690630411b25290608401600060405180830381600087803b1580156103f357600080fd5b505af1158015610407573d6000803e3d6000fd5b50506000546001600160a01b0316915063836a10409050823361043286670de0b6b3a76400006104a5565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815260048101939093526001600160a01b039091166024830152604482015260640161018e565b6000806040838503121561049657600080fd5b50508035926020909101359150565b80820281158282048414176104ca57634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156105015781810151838201526020016104e9565b50506000910152565b60006020828403121561051c57600080fd5b815167ffffffffffffffff8082111561053457600080fd5b818401915084601f83011261054857600080fd5b81518181111561055a5761055a6104d0565b604051601f8201601f19908116603f01168101908382118183101715610582576105826104d0565b8160405282815287602084870101111561059b57600080fd5b6105ac8360208301602088016104e6565b979650505050505050565b7f546f6b656e697a656420000000000000000000000000000000000000000000008152600082516105ef81600a8501602087016104e6565b91909101600a0192915050565b7f74000000000000000000000000000000000000000000000000000000000000008152600082516106348160018501602087016104e6565b9190910160010192915050565b600081518084526106598160208601602086016104e6565b601f01601f19169290920160200192915050565b6080815260006106806080830186610641565b82810360208401526106928186610641565b60ff94909416604084015250508082036060909101526000815260200192915050565b6000602082840312156106c757600080fd5b815163ffffffff811681146106db57600080fd5b939250505056fea264697066735822122075ca34f7e818a824c2e9457fc6a5b01135f6959afc2a80450b373c19d53cbd7764736f6c63430008160033";

type TokenizerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenizerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tokenizer__factory extends ContractFactory {
  constructor(...args: TokenizerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Tokenizer";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Tokenizer> {
    return super.deploy(_yieldBox, overrides || {}) as Promise<Tokenizer>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, overrides || {});
  }
  override attach(address: string): Tokenizer {
    return super.attach(address) as Tokenizer;
  }
  override connect(signer: Signer): Tokenizer__factory {
    return super.connect(signer) as Tokenizer__factory;
  }
  static readonly contractName: "Tokenizer";

  public readonly contractName: "Tokenizer";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenizerInterface {
    return new utils.Interface(_abi) as TokenizerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Tokenizer {
    return new Contract(address, _abi, signerOrProvider) as Tokenizer;
  }
}
