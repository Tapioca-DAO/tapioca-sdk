/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { YieldSwap, YieldSwapInterface } from "../../samples/YieldSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "share0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "asset0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "asset1",
        type: "uint32",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pairLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pairs",
    outputs: [
      {
        internalType: "uint128",
        name: "reserve0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "reserve1",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "asset0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "asset1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "lpAssetId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "kLast",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007457601f61189638819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161180690816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c908163568acb79146112c4575080637a76f19b14610e525780638d56c63914610c2757806394bf804d1461089c578063b1357bf914610734578063b91ac788146106b9578063ba9a7a561461069c578063be0b3ae314610668578063de406577146106425763fcd3533c1461008f57600080fd5b346104bb5760403660031901126104bb576100a861152b565b6100b3600435611541565b5082546001820154604051627eeac760e11b815230600482015263ffffffff82166024820152929490936001600160a01b0390921692909190602081604481875afa90811561049c578391610610575b50604051627eeac760e11b8152306004820152602086811c63ffffffff16602483015290959086604481885afa9586156104e55784966105d8575b5060408051627eeac760e11b815230600482015291901c63ffffffff166024820181905294909160208380604481010381855afa9283156105cd578593610599575b5060405163bd85b03960e01b815260048101879052602081602481865afa90811561058e57869161055a575b506101c16101c6826101c16101cd9588611601565b611614565b9885611601565b9486151580610551575b1561050c57813b156104c957604051634f752fb360e11b815263ffffffff919091166004820152306024820152604481019290925283908290606490829084905af1801561049c579083916104f4575b5054600186015463ffffffff1691906001600160a01b0316803b156104f057604051630208d92960e11b8082523060048301526001600160a01b038416602483015263ffffffff949094166044820152606481018790529084908290608490829084905af180156104e5579084916104cd575b506001600160a01b039054169063ffffffff600188015460201c1692823b156104c9576040519081523060048201526001600160a01b03909116602482015263ffffffff909216604483015260648201849052829082908183816084810103925af180156104be579082916104a7575b50546001850154604051627eeac760e11b815230600482015263ffffffff8216602482015291602090839060449082906001600160a01b03165afa91821561049c578392610464575b5063ffffffff6020916001600160801b036103706103ca95611777565b895491166fffffffffffffffffffffffffffffffff199091161788558454604051627eeac760e11b815230600482015291841c9290921663ffffffff1660248201529283916001600160a01b031690829081906044820190565b03915afa9182156104585791610420575b506040936103eb61041492611777565b81546001600160801b031660809190911b6fffffffffffffffffffffffffffffffff1916179055565b82519182526020820152f35b90506020813d602011610450575b8161043b602093836115bc565b8101031261044b575160406103db565b600080fd5b3d915061042e565b604051903d90823e3d90fd5b91506020823d602011610494575b8161047f602093836115bc565b8101031261044b5790519063ffffffff610353565b3d9150610472565b6040513d85823e3d90fd5b6104b090611592565b6104bb57803861030a565b80fd5b6040513d84823e3d90fd5b8480fd5b6104d690611592565b6104e157823861029a565b8280fd5b6040513d86823e3d90fd5b8380fd5b6104fd90611592565b610508578138610227565b5080fd5b60405162461bcd60e51b815260206004820152601560248201527f5969656c64537761703a204e6f7420656e6f75676800000000000000000000006044820152606490fd5b508515156101d7565b90506020813d602011610586575b81610575602093836115bc565b8101031261044b57516101c16101ac565b3d9150610568565b6040513d88823e3d90fd5b9092506020813d6020116105c5575b816105b5602093836115bc565b8101031261044b57519138610180565b3d91506105a8565b6040513d87823e3d90fd5b9095506020813d602011610608575b816105f4602093836115bc565b8101031261044b57519463ffffffff61013e565b3d91506105e7565b90506020813d60201161063a575b8161062b602093836115bc565b8101031261044b575138610103565b3d915061061e565b50346104bb57806003193601126104bb576001600160a01b036020915416604051908152f35b50346104bb5760403660031901126104bb576040602091600435815260028352818120602435825283522054604051908152f35b50346104bb57806003193601126104bb5760206040516103e88152f35b50346104bb5760203660031901126104bb57600435906001548210156104bb5760c06106e483611541565b508054906002600182015491015490604051926001600160801b038116845260801c602084015263ffffffff908181166040850152818160201c16606085015260401c16608083015260a0820152f35b50346104bb5760208060031936011261050857610752600435611541565b5082546001820154604051627eeac760e11b80825230600483015263ffffffff80841660248401526001600160a01b03949293909287908590604490829089165afa80156108915787948991610859575b50946001600160801b036107b961080297611777565b166001600160801b031988541617875588541691604051958694859384938452871c16306004840190929163ffffffff6020916001600160a01b03604085019616845216910152565b03915afa9283156104e5578493610825575b50506103eb61082292611777565b80f35b90809350813d8311610852575b61083c81836115bc565b8101031261044b576103eb610822925192610814565b503d610832565b85819692503d831161088a575b61087081836115bc565b8101031261044b5792518693906001600160801b036107a3565b503d610866565b6040513d8a823e3d90fd5b50346104bb5760403660031901126104bb576108b661152b565b906108c2600435611541565b5081546001820154604051627eeac760e11b80825230600483015263ffffffff831660248301529395919490929091906001600160a01b0316602084604481845afa93841561049c578394610bf3575b50604051948552306004860152602086811c63ffffffff16602487015285604481845afa94851561049c578395610bbf575b50865461095a6001600160801b038216866115de565b6109678260801c886115de565b9160405163bd85b03960e01b815263ffffffff8a60401c166004820152602081602481885afa908115610bb4578791610b82575b5080610b3d5750506109b5916109b091611601565b611634565b6103e7198101908111610b295795813b156104f05763ffffffff6064859283604051958694859363020da84160e61b855260401c1660048401528160248401526103e860448401525af1801561049c57908391610b15575b50505b8415610ad0576001600160a01b038254169063ffffffff600188015460401c16823b156104f05760405163020da84160e61b815263ffffffff90911660048201526001600160a01b0390911660248201526044810186905290829082908183816064810103925af180156104be57610abc575b602085610ab4886103eb886001600160801b03610a9f8a611777565b166001600160801b0319845416178355611777565b604051908152f35b610ac68291611592565b6104bb5780610a83565b60405162461bcd60e51b815260206004820152601a60248201527f5969656c64537761703a204e6f7420656e6f756768206d696e740000000000006044820152606490fd5b610b1e90611592565b610508578138610a0d565b634e487b7160e01b84526011600452602484fd5b90949850610b6b9350610b616101c1926101c1836001600160801b03891692611601565b9460801c92611601565b80821015610b7b57505b93610a10565b9050610b75565b90506020813d602011610bac575b81610b9d602093836115bc565b8101031261044b57513861099b565b3d9150610b90565b6040513d89823e3d90fd5b9094506020813d602011610beb575b81610bdb602093836115bc565b8101031261044b57519338610944565b3d9150610bce565b9093506020813d602011610c1f575b81610c0f602093836115bc565b8101031261044b57519238610912565b3d9150610c02565b50346104bb5760403660031901126104bb5780610c4261152b565b610c4d600435611541565b5082546001820154604051627eeac760e11b80825230600483015263ffffffff9092166024820181905293926001600160a01b039190821690602081604481855afa908115610891578891610e1a575b50610cb3906001600160801b03865416906115de565b94813b15610e1657604051630208d92960e11b8082523060048301526001600160a01b038916602483015263ffffffff9290921660448201526064810196909652949087908290608490829084905af1908115610bb4578791610e02575b5054600184015460405193845230600485015263ffffffff602091821c1660248501819052949290911692919082604481865afa918215610bb4578792610dca575b5090610d63915460801c906115de565b93813b15610dc6576040519384523060048501526001600160a01b0316602484015263ffffffff91909116604483015260648201929092529082908290608490829084905af180156104be57610db65750f35b610dbf90611592565b6104bb5780f35b8580fd5b915095506020813d602011610dfa575b81610de7602093836115bc565b8101031261044b57518695610d63610d53565b3d9150610dda565b610e0b90611592565b610dc6578538610d11565b8780fd5b9750506020873d602011610e4a575b81610e36602093836115bc565b8101031261044b57610cb388975190610c9d565b3d9150610e29565b50346104bb5760803660031901126104bb576001600160a01b0360643516606435036104bb57610e83600435611541565b50602435158015906112b9575b156112745780546001600160801b038116602435109081611265575b5015611220576001600160a01b0382541663ffffffff60018301541690803b156104f057836040518092818381610f23630208d92960e11b988983526024359060643530600486019060609295949363ffffffff9160808401976001600160a01b0380921685521660208401521660408201520152565b03925af180156104e55761120d575b5082906001600160a01b03825416906001840154823b156104f057604051918252306004830152606480356001600160a01b0316602484015263ffffffff60209290921c9190911660448084019190915235908201529082908290608490829084905af180156104be576111f9575b50546001820154604051627eeac760e11b80825230600483015263ffffffff831660248301526001600160a01b039093169392909190602083604481885afa92831561058e5786936111c3575b50604051908152306004820152602091821c63ffffffff1660248201529384908180604481015b03915afa9283156104e557849361118f575b508154926001600160801b038416611041602435826115de565b8311156111895761105d611057602435836115de565b846115de565b8560801c9061106e604435836115de565b8411156111825761108a611084604435846115de565b856115de565b905b1590811591611178575b5015611133576110a68385611601565b9102906001600160801b03821691820361111f57106110eb57610822936001600160801b036110d76103eb94611777565b16906001600160801b031916178355611777565b60405162461bcd60e51b815260206004820152600c60248201526b5969656c64537761703a204b60a01b6044820152606490fd5b634e487b7160e01b87526011600452602487fd5b60405162461bcd60e51b815260206004820152601360248201527f5969656c64537761703a204e6f20696e707574000000000000000000000000006044820152606490fd5b9050151538611096565b879061108c565b8561105d565b9092506020813d6020116111bb575b816111ab602093836115bc565b8101031261044b57519138611027565b3d915061119e565b9092506020813d6020116111f1575b816111df602093836115bc565b8101031261044b575191611015610fee565b3d91506111d2565b61120290611592565b610508578138610fa1565b61121990939193611592565b9138610f32565b60405162461bcd60e51b815260206004820152601c60248201527f5969656c64537761703a204c697175696469747920746f6f206c6f77000000006044820152606490fd5b905060801c6044351038610eac565b60405162461bcd60e51b815260206004820152601960248201527f5969656c64537761703a204f757470757420746f6f206c6f77000000000000006044820152606490fd5b506044351515610e90565b82346104bb5760403660031901126104bb5760043563ffffffff8082168083036104f05760243582811693848203610dc657938593928291869111611520575b50506001600160a01b03835416632482ee2760e01b875260806004880152601160848801527f5969656c64426f78204c5020546f6b656e00000000000000000000000000000060a488015260c06024880152600360c4880152620594c560ec1b60e488015260126044880152610100606488015283610104880152866101248160209889945af195861561049c5783966114e8575b508160015494169081845260028652826040852091169081855286528460408520556040519660c0880188811067ffffffffffffffff8211176114d4576040528488528688019385855260408901938452606089019283528060808a019216825260a0890194868652680100000000000000008810156114c0576001880160015561142388611541565b9790976114ac57509851985160801b6fffffffffffffffffffffffffffffffff19166001600160801b039990991698909817855595969495939460029490600187019351166bffffffff000000000000000067ffffffff00000000855494518b1b16925160401b16926bffffffffffffffffffffffff1916171717905551910155604051908152f35b634e487b7160e01b81526004819052602490fd5b634e487b7160e01b87526041600452602487fd5b634e487b7160e01b86526041600452602486fd5b9095508481813d8311611519575b61150081836115bc565b810103126104e1575181811681036104e1579486611399565b503d6114f6565b915093508680611304565b602435906001600160a01b038216820361044b57565b60015481101561157c576003906001600052027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b67ffffffffffffffff81116115a657604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176115a657604052565b919082039182116115eb57565b634e487b7160e01b600052601160045260246000fd5b818102929181159184041417156115eb57565b811561161e570490565b634e487b7160e01b600052601260045260246000fd5b8015611771576116ff816000908360801c80611765575b508060401c80611758575b508060201c8061174b575b508060101c8061173e575b508060081c80611731575b508060041c80611724575b508060021c80611717575b50600191828092811c611710575b1c1b6116a78185611614565b01811c6116b48185611614565b01811c6116c18185611614565b01811c6116ce8185611614565b01811c6116db8185611614565b01811c6116e88185611614565b01811c6116f58185611614565b01901c8092611614565b8082101561170b575090565b905090565b018161169b565b600291509101903861168d565b6004915091019038611682565b6008915091019038611677565b601091509101903861166c565b6020915091019038611661565b6040915091019038611656565b9150506080903861164b565b50600090565b6001600160801b039081811161178b571690565b60405162461bcd60e51b815260206004820152601c60248201527f426f72696e674d6174683a2075696e74313238204f766572666c6f77000000006044820152606490fdfea26469706673582212209428fc3f296e54bf303c121033bc41f96877bd9ca977c844201fcad0276c239a64736f6c63430008120033";

type YieldSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldSwap__factory extends ContractFactory {
  constructor(...args: YieldSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YieldSwap";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldSwap> {
    return super.deploy(_yieldBox, overrides || {}) as Promise<YieldSwap>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, overrides || {});
  }
  override attach(address: string): YieldSwap {
    return super.attach(address) as YieldSwap;
  }
  override connect(signer: Signer): YieldSwap__factory {
    return super.connect(signer) as YieldSwap__factory;
  }
  static readonly contractName: "YieldSwap";

  public readonly contractName: "YieldSwap";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldSwapInterface {
    return new utils.Interface(_abi) as YieldSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldSwap {
    return new Contract(address, _abi, signerOrProvider) as YieldSwap;
  }
}
