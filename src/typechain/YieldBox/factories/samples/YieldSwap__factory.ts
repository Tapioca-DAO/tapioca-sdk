/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { YieldSwap, YieldSwapInterface } from "../../samples/YieldSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "share0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "asset0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "asset1",
        type: "uint32",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pairLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pairs",
    outputs: [
      {
        internalType: "uint128",
        name: "reserve0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "reserve1",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "asset0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "asset1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "lpAssetId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "kLast",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611b95380380611b9583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611b02806100936000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063b91ac78811610076578063be0b3ae31161005b578063be0b3ae314610197578063de406577146101c2578063fcd3533c146101ed57600080fd5b8063b91ac78814610137578063ba9a7a561461018e57600080fd5b80638d56c639116100a75780638d56c639146100fe57806394bf804d14610111578063b1357bf91461012457600080fd5b8063568acb79146100c35780637a76f19b146100e9575b600080fd5b6100d66100d13660046118e2565b610215565b6040519081526020015b60405180910390f35b6100fc6100f7366004611937565b61047a565b005b6100fc61010c366004611976565b610950565b6100d661011f366004611976565b610be8565b6100fc6101323660046119a2565b611001565b61014a6101453660046119a2565b611136565b604080516001600160801b03978816815296909516602087015263ffffffff93841694860194909452908216606085015216608083015260a082015260c0016100e0565b6100d66103e881565b6100d66101a53660046119bb565b600260209081526000928352604080842090915290825290205481565b6000546101d5906001600160a01b031681565b6040516001600160a01b0390911681526020016100e0565b6102006101fb366004611976565b61119e565b604080519283526020830191909152016100e0565b60008163ffffffff168363ffffffff16111561022f579091905b600080546040517f2482ee2700000000000000000000000000000000000000000000000000000000815260806004820152601160848201527f5969656c64426f78204c5020546f6b656e00000000000000000000000000000060a482015260c06024820152600360c48201527f594c50000000000000000000000000000000000000000000000000000000000060e482015260126044820152610100606482015261010481018390526001600160a01b0390911690632482ee2790610124016020604051808303816000875af115801561030d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033191906119dd565b6001805463ffffffff9687166000818152600260209081526040808320998b16808452998252808320859055805160c08101825283815291820183815290820193845260608201998a52958a166080820190815260a082018381528587018755959092525194516001600160801b03908116600160801b02951694909417600383027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681019190915590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782018054985195518a16600160401b026bffffffff000000000000000019968b166401000000000267ffffffffffffffff19909a1692909a169190911797909717939093169690961790945592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8909301929092555090919050565b60006001858154811061048f5761048f6119fa565b9060005260206000209060030201905060008411806104ae5750600083115b6104ff5760405162461bcd60e51b815260206004820152601960248201527f5969656c64537761703a204f757470757420746f6f206c6f770000000000000060448201526064015b60405180910390fd5b80546001600160801b03168410801561052857508054600160801b90046001600160801b031683105b6105745760405162461bcd60e51b815260206004820152601c60248201527f5969656c64537761703a204c697175696469747920746f6f206c6f770000000060448201526064016104f6565b6000546001820154604051630208d92960e11b81523060048201526001600160a01b03858116602483015263ffffffff909216604482015260648101879052911690630411b25290608401600060405180830381600087803b1580156105d957600080fd5b505af11580156105ed573d6000803e3d6000fd5b50506000546001840154604051630208d92960e11b81523060048201526001600160a01b03878116602483015264010000000090920463ffffffff1660448201526064810188905291169250630411b2529150608401600060405180830381600087803b15801561065d57600080fd5b505af1158015610671573d6000803e3d6000fd5b5050600080546001850154604051627eeac760e11b815230600482015263ffffffff90911660248201529193506001600160a01b0316915062fdd58e90604401602060405180830381865afa1580156106ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f29190611a10565b600080546001850154604051627eeac760e11b815230600482015264010000000090910463ffffffff16602482015292935090916001600160a01b039091169062fdd58e90604401602060405180830381865afa158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b9190611a10565b83549091506000906107979088906001600160801b0316611a3f565b83116107a45760006107c4565b83546107ba9088906001600160801b0316611a3f565b6107c49084611a3f565b84549091506000906107e7908890600160801b90046001600160801b0316611a3f565b83116107f457600061081b565b8454610811908890600160801b90046001600160801b0316611a3f565b61081b9084611a3f565b9050600082118061082c5750600081115b6108785760405162461bcd60e51b815260206004820152601360248201527f5969656c64537761703a204e6f20696e7075740000000000000000000000000060448201526064016104f6565b8454610896906001600160801b03600160801b820481169116611a52565b6001600160801b03166108a98486611a7d565b10156108f75760405162461bcd60e51b815260206004820152600c60248201527f5969656c64537761703a204b000000000000000000000000000000000000000060448201526064016104f6565b610900846116d3565b85546fffffffffffffffffffffffffffffffff19166001600160801b039190911617855561092d836116d3565b85546001600160801b03918216600160801b029116179094555050505050505050565b600060018381548110610965576109656119fa565b600091825260208220915460039190910290910160018101548154604051627eeac760e11b8152306004820181905263ffffffff909316602482018190529395506001600160a01b0390941693630411b25293879290916001600160801b0390911690869062fdd58e90604401602060405180830381865afa1580156109ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a139190611a10565b610a1d9190611a3f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1681526001600160a01b03948516600482015293909216602484015263ffffffff1660448301526064820152608401600060405180830381600087803b158015610a8f57600080fd5b505af1158015610aa3573d6000803e3d6000fd5b505060005460018401548454604051627eeac760e11b8152306004820181905264010000000090930463ffffffff16602482018190526001600160a01b039094169550630411b2529450919287929091600160801b90046001600160801b031690869062fdd58e90604401602060405180830381865afa158015610b2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4f9190611a10565b610b599190611a3f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1681526001600160a01b03948516600482015293909216602484015263ffffffff1660448301526064820152608401600060405180830381600087803b158015610bcb57600080fd5b505af1158015610bdf573d6000803e3d6000fd5b50505050505050565b60008060018481548110610bfe57610bfe6119fa565b6000918252602082208254600392909202016001810154604051627eeac760e11b815230600482015263ffffffff90911660248201529093506001600160a01b039091169062fdd58e90604401602060405180830381865afa158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c9190611a10565b600080546001850154604051627eeac760e11b815230600482015264010000000090910463ffffffff16602482015292935090916001600160a01b039091169062fdd58e90604401602060405180830381865afa158015610cf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d159190611a10565b8354909150600090610d30906001600160801b031684611a3f565b8454909150600090610d5290600160801b90046001600160801b031684611a3f565b60008054600188015460405163bd85b03960e01b8152600160401b90910463ffffffff16600482015292935090916001600160a01b039091169063bd85b03990602401602060405180830381865afa158015610db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd69190611a10565b905080600003610e87576103e8610df5610df08486611a7d565b611730565b610dff9190611a3f565b60008054600189015460405163020da84160e61b8152600160401b90910463ffffffff16600482015260248101929092526103e860448301529198506001600160a01b039091169063836a104090606401600060405180830381600087803b158015610e6a57600080fd5b505af1158015610e7e573d6000803e3d6000fd5b50505050610ed8565b8554610ed5906001600160801b0316610ea08386611a7d565b610eaa9190611aaa565b8754600160801b90046001600160801b0316610ec68486611a7d565b610ed09190611aaa565b61181f565b96505b60008711610f285760405162461bcd60e51b815260206004820152601a60248201527f5969656c64537761703a204e6f7420656e6f756768206d696e7400000000000060448201526064016104f6565b600054600187015460405163020da84160e61b8152600160401b90910463ffffffff1660048201526001600160a01b038a81166024830152604482018a90529091169063836a104090606401600060405180830381600087803b158015610f8e57600080fd5b505af1158015610fa2573d6000803e3d6000fd5b50505050610faf856116d3565b86546fffffffffffffffffffffffffffffffff19166001600160801b0391909116178655610fdc846116d3565b86546001600160801b03918216600160801b0291161790955550939695505050505050565b600060018281548110611016576110166119fa565b60009182526020822091546003919091029091016001810154604051627eeac760e11b815230600482015263ffffffff90911660248201529092506110ae916001600160a01b03169062fdd58e906044015b602060405180830381865afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a99190611a10565b6116d3565b81546fffffffffffffffffffffffffffffffff19166001600160801b03919091161781556000546001820154604051627eeac760e11b815230600482015264010000000090910463ffffffff16602482015261111b916001600160a01b03169062fdd58e90604401611068565b81546001600160801b03918216600160801b02911617905550565b6001818154811061114657600080fd5b60009182526020909120600390910201805460018201546002909201546001600160801b038083169450600160801b9092049091169163ffffffff808216926401000000008304821692600160401b90049091169086565b6000806000600185815481106111b6576111b66119fa565b6000918252602082208254600392909202016001810154604051627eeac760e11b815230600482015263ffffffff90911660248201529093506001600160a01b039091169062fdd58e90604401602060405180830381865afa158015611220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112449190611a10565b600080546001850154604051627eeac760e11b815230600482015264010000000090910463ffffffff16602482015292935090916001600160a01b039091169062fdd58e90604401602060405180830381865afa1580156112a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cd9190611a10565b600080546001860154604051627eeac760e11b8152306004820152600160401b90910463ffffffff16602482015292935090916001600160a01b039091169062fdd58e90604401602060405180830381865afa158015611331573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113559190611a10565b60008054600187015460405163bd85b03960e01b8152600160401b90910463ffffffff16600482015292935090916001600160a01b039091169063bd85b03990602401602060405180830381865afa1580156113b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d99190611a10565b9050806113e68584611a7d565b6113f09190611aaa565b9650806113fd8484611a7d565b6114079190611aaa565b95506000871180156114195750600086115b6114655760405162461bcd60e51b815260206004820152601560248201527f5969656c64537761703a204e6f7420656e6f756768000000000000000000000060448201526064016104f6565b60005460018601546040517f9eea5f66000000000000000000000000000000000000000000000000000000008152600160401b90910463ffffffff166004820152306024820152604481018490526001600160a01b0390911690639eea5f6690606401600060405180830381600087803b1580156114e257600080fd5b505af11580156114f6573d6000803e3d6000fd5b50506000546001880154604051630208d92960e11b81523060048201526001600160a01b038d8116602483015263ffffffff9092166044820152606481018c905291169250630411b2529150608401600060405180830381600087803b15801561155f57600080fd5b505af1158015611573573d6000803e3d6000fd5b50506000546001880154604051630208d92960e11b81523060048201526001600160a01b038d8116602483015264010000000090920463ffffffff166044820152606481018b905291169250630411b2529150608401600060405180830381600087803b1580156115e357600080fd5b505af11580156115f7573d6000803e3d6000fd5b50506000546001880154604051627eeac760e11b815230600482015263ffffffff909116602482015261163f93506001600160a01b03909116915062fdd58e90604401611068565b85546fffffffffffffffffffffffffffffffff19166001600160801b03919091161785556000546001860154604051627eeac760e11b815230600482015264010000000090910463ffffffff1660248201526116ac916001600160a01b03169062fdd58e90604401611068565b85546001600160801b03918216600160801b02911617909455509396929550919350505050565b60006001600160801b0382111561172c5760405162461bcd60e51b815260206004820152601c60248201527f426f72696e674d6174683a2075696e74313238204f766572666c6f770000000060448201526064016104f6565b5090565b60008160000361174257506000919050565b6000600161174f84611839565b901c6001901b9050600181848161176857611768611a94565b048201901c9050600181848161178057611780611a94565b048201901c9050600181848161179857611798611a94565b048201901c905060018184816117b0576117b0611a94565b048201901c905060018184816117c8576117c8611a94565b048201901c905060018184816117e0576117e0611a94565b048201901c905060018184816117f8576117f8611a94565b048201901c90506118188182858161181257611812611a94565b0461181f565b9392505050565b600081831061182e5781611830565b825b90505b92915050565b600080608083901c1561184e57608092831c92015b604083901c1561186057604092831c92015b602083901c1561187257602092831c92015b601083901c1561188457601092831c92015b600883901c1561189657600892831c92015b600483901c156118a857600492831c92015b600283901c156118ba57600292831c92015b600183901c156118335760010192915050565b63ffffffff811681146118df57600080fd5b50565b600080604083850312156118f557600080fd5b8235611900816118cd565b91506020830135611910816118cd565b809150509250929050565b80356001600160a01b038116811461193257600080fd5b919050565b6000806000806080858703121561194d57600080fd5b84359350602085013592506040850135915061196b6060860161191b565b905092959194509250565b6000806040838503121561198957600080fd5b823591506119996020840161191b565b90509250929050565b6000602082840312156119b457600080fd5b5035919050565b600080604083850312156119ce57600080fd5b50508035926020909101359150565b6000602082840312156119ef57600080fd5b8151611818816118cd565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611a2257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561183357611833611a29565b6001600160801b03818116838216028082169190828114611a7557611a75611a29565b505092915050565b808202811582820484141761183357611833611a29565b634e487b7160e01b600052601260045260246000fd5b600082611ac757634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f18c2ed31aae540a5a4bff7f2430ae21fbcfeec20db9a2e6213b72a336adf85064736f6c63430008160033";

type YieldSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldSwap__factory extends ContractFactory {
  constructor(...args: YieldSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YieldSwap";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldSwap> {
    return super.deploy(_yieldBox, overrides || {}) as Promise<YieldSwap>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, overrides || {});
  }
  override attach(address: string): YieldSwap {
    return super.attach(address) as YieldSwap;
  }
  override connect(signer: Signer): YieldSwap__factory {
    return super.connect(signer) as YieldSwap__factory;
  }
  static readonly contractName: "YieldSwap";

  public readonly contractName: "YieldSwap";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldSwapInterface {
    return new utils.Interface(_abi) as YieldSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldSwap {
    return new Contract(address, _abi, signerOrProvider) as YieldSwap;
  }
}
