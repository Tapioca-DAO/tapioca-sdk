/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { YieldSwap, YieldSwapInterface } from "../../samples/YieldSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "share0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "asset0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "asset1",
        type: "uint32",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pairLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pairs",
    outputs: [
      {
        internalType: "uint128",
        name: "reserve0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "reserve1",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "asset0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "asset1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "lpAssetId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "kLast",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611bd0380380611bd083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611b3d806100936000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063b91ac78811610076578063be0b3ae31161005b578063be0b3ae314610197578063de406577146101c2578063fcd3533c146101ed57600080fd5b8063b91ac78814610137578063ba9a7a561461018e57600080fd5b80638d56c639116100a75780638d56c639146100fe57806394bf804d14610111578063b1357bf91461012457600080fd5b8063568acb79146100c35780637a76f19b146100e9575b600080fd5b6100d66100d136600461191d565b610215565b6040519081526020015b60405180910390f35b6100fc6100f7366004611972565b610492565b005b6100fc61010c3660046119b1565b610968565b6100d661011f3660046119b1565b610c00565b6100fc6101323660046119dd565b611028565b61014a6101453660046119dd565b61115d565b604080516001600160801b03978816815296909516602087015263ffffffff93841694860194909452908216606085015216608083015260a082015260c0016100e0565b6100d66103e881565b6100d66101a53660046119f6565b600260209081526000928352604080842090915290825290205481565b6000546101d5906001600160a01b031681565b6040516001600160a01b0390911681526020016100e0565b6102006101fb3660046119b1565b6111ca565b604080519283526020830191909152016100e0565b60008163ffffffff168363ffffffff16111561022f579091905b600080546040517f2482ee2700000000000000000000000000000000000000000000000000000000815260806004820152601160848201527f5969656c64426f78204c5020546f6b656e00000000000000000000000000000060a482015260c06024820152600360c48201527f594c50000000000000000000000000000000000000000000000000000000000060e482015260126044820152610100606482015261010481018390526001600160a01b0390911690632482ee2790610124016020604051808303816000875af115801561030d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103319190611a18565b6001805463ffffffff9687166000818152600260209081526040808320998b16808452998252808320859055805160c08101825283815291820183815290820193845260608201998a52958a166080820190815260a082018381528587018755959092525194516001600160801b03908116600160801b02951694909417600383027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681019190915590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782018054985195518a1668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff968b166401000000000267ffffffffffffffff19909a1692909a169190911797909717939093169690961790945592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8909301929092555090919050565b6000600185815481106104a7576104a7611a35565b9060005260206000209060030201905060008411806104c65750600083115b6105175760405162461bcd60e51b815260206004820152601960248201527f5969656c64537761703a204f757470757420746f6f206c6f770000000000000060448201526064015b60405180910390fd5b80546001600160801b03168410801561054057508054600160801b90046001600160801b031683105b61058c5760405162461bcd60e51b815260206004820152601c60248201527f5969656c64537761703a204c697175696469747920746f6f206c6f7700000000604482015260640161050e565b6000546001820154604051630208d92960e11b81523060048201526001600160a01b03858116602483015263ffffffff909216604482015260648101879052911690630411b25290608401600060405180830381600087803b1580156105f157600080fd5b505af1158015610605573d6000803e3d6000fd5b50506000546001840154604051630208d92960e11b81523060048201526001600160a01b03878116602483015264010000000090920463ffffffff1660448201526064810188905291169250630411b2529150608401600060405180830381600087803b15801561067557600080fd5b505af1158015610689573d6000803e3d6000fd5b5050600080546001850154604051627eeac760e11b815230600482015263ffffffff90911660248201529193506001600160a01b0316915062fdd58e90604401602060405180830381865afa1580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070a9190611a4b565b600080546001850154604051627eeac760e11b815230600482015264010000000090910463ffffffff16602482015292935090916001600160a01b039091169062fdd58e90604401602060405180830381865afa15801561076f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107939190611a4b565b83549091506000906107af9088906001600160801b0316611a7a565b83116107bc5760006107dc565b83546107d29088906001600160801b0316611a7a565b6107dc9084611a7a565b84549091506000906107ff908890600160801b90046001600160801b0316611a7a565b831161080c576000610833565b8454610829908890600160801b90046001600160801b0316611a7a565b6108339084611a7a565b905060008211806108445750600081115b6108905760405162461bcd60e51b815260206004820152601360248201527f5969656c64537761703a204e6f20696e70757400000000000000000000000000604482015260640161050e565b84546108ae906001600160801b03600160801b820481169116611a8d565b6001600160801b03166108c18486611ab8565b101561090f5760405162461bcd60e51b815260206004820152600c60248201527f5969656c64537761703a204b0000000000000000000000000000000000000000604482015260640161050e565b6109188461170e565b85546fffffffffffffffffffffffffffffffff19166001600160801b03919091161785556109458361170e565b85546001600160801b03918216600160801b029116179094555050505050505050565b60006001838154811061097d5761097d611a35565b600091825260208220915460039190910290910160018101548154604051627eeac760e11b8152306004820181905263ffffffff909316602482018190529395506001600160a01b0390941693630411b25293879290916001600160801b0390911690869062fdd58e90604401602060405180830381865afa158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611a4b565b610a359190611a7a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1681526001600160a01b03948516600482015293909216602484015263ffffffff1660448301526064820152608401600060405180830381600087803b158015610aa757600080fd5b505af1158015610abb573d6000803e3d6000fd5b505060005460018401548454604051627eeac760e11b8152306004820181905264010000000090930463ffffffff16602482018190526001600160a01b039094169550630411b2529450919287929091600160801b90046001600160801b031690869062fdd58e90604401602060405180830381865afa158015610b43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b679190611a4b565b610b719190611a7a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1681526001600160a01b03948516600482015293909216602484015263ffffffff1660448301526064820152608401600060405180830381600087803b158015610be357600080fd5b505af1158015610bf7573d6000803e3d6000fd5b50505050505050565b60008060018481548110610c1657610c16611a35565b6000918252602082208254600392909202016001810154604051627eeac760e11b815230600482015263ffffffff90911660248201529093506001600160a01b039091169062fdd58e90604401602060405180830381865afa158015610c80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca49190611a4b565b600080546001850154604051627eeac760e11b815230600482015264010000000090910463ffffffff16602482015292935090916001600160a01b039091169062fdd58e90604401602060405180830381865afa158015610d09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2d9190611a4b565b8354909150600090610d48906001600160801b031684611a7a565b8454909150600090610d6a90600160801b90046001600160801b031684611a7a565b60008054600188015460405163bd85b03960e01b81526801000000000000000090910463ffffffff16600482015292935090916001600160a01b039091169063bd85b03990602401602060405180830381865afa158015610dcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df39190611a4b565b905080600003610ea9576103e8610e12610e0d8486611ab8565b61176b565b610e1c9190611a7a565b60008054600189015460405163020da84160e61b81526801000000000000000090910463ffffffff16600482015260248101929092526103e860448301529198506001600160a01b039091169063836a104090606401600060405180830381600087803b158015610e8c57600080fd5b505af1158015610ea0573d6000803e3d6000fd5b50505050610efa565b8554610ef7906001600160801b0316610ec28386611ab8565b610ecc9190611ae5565b8754600160801b90046001600160801b0316610ee88486611ab8565b610ef29190611ae5565b61185a565b96505b60008711610f4a5760405162461bcd60e51b815260206004820152601a60248201527f5969656c64537761703a204e6f7420656e6f756768206d696e74000000000000604482015260640161050e565b600054600187015460405163020da84160e61b81526801000000000000000090910463ffffffff1660048201526001600160a01b038a81166024830152604482018a90529091169063836a104090606401600060405180830381600087803b158015610fb557600080fd5b505af1158015610fc9573d6000803e3d6000fd5b50505050610fd68561170e565b86546fffffffffffffffffffffffffffffffff19166001600160801b03919091161786556110038461170e565b86546001600160801b03918216600160801b0291161790955550939695505050505050565b60006001828154811061103d5761103d611a35565b60009182526020822091546003919091029091016001810154604051627eeac760e11b815230600482015263ffffffff90911660248201529092506110d5916001600160a01b03169062fdd58e906044015b602060405180830381865afa1580156110ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d09190611a4b565b61170e565b81546fffffffffffffffffffffffffffffffff19166001600160801b03919091161781556000546001820154604051627eeac760e11b815230600482015264010000000090910463ffffffff166024820152611142916001600160a01b03169062fdd58e9060440161108f565b81546001600160801b03918216600160801b02911617905550565b6001818154811061116d57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160801b038083169450600160801b9092049091169163ffffffff8082169264010000000083048216926801000000000000000090049091169086565b6000806000600185815481106111e2576111e2611a35565b6000918252602082208254600392909202016001810154604051627eeac760e11b815230600482015263ffffffff90911660248201529093506001600160a01b039091169062fdd58e90604401602060405180830381865afa15801561124c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112709190611a4b565b600080546001850154604051627eeac760e11b815230600482015264010000000090910463ffffffff16602482015292935090916001600160a01b039091169062fdd58e90604401602060405180830381865afa1580156112d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f99190611a4b565b600080546001860154604051627eeac760e11b81523060048201526801000000000000000090910463ffffffff16602482015292935090916001600160a01b039091169062fdd58e90604401602060405180830381865afa158015611362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113869190611a4b565b60008054600187015460405163bd85b03960e01b81526801000000000000000090910463ffffffff16600482015292935090916001600160a01b039091169063bd85b03990602401602060405180830381865afa1580156113eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140f9190611a4b565b90508061141c8584611ab8565b6114269190611ae5565b9650806114338484611ab8565b61143d9190611ae5565b955060008711801561144f5750600086115b61149b5760405162461bcd60e51b815260206004820152601560248201527f5969656c64537761703a204e6f7420656e6f7567680000000000000000000000604482015260640161050e565b60005460018601546040517f9eea5f660000000000000000000000000000000000000000000000000000000081526801000000000000000090910463ffffffff166004820152306024820152604481018490526001600160a01b0390911690639eea5f6690606401600060405180830381600087803b15801561151d57600080fd5b505af1158015611531573d6000803e3d6000fd5b50506000546001880154604051630208d92960e11b81523060048201526001600160a01b038d8116602483015263ffffffff9092166044820152606481018c905291169250630411b2529150608401600060405180830381600087803b15801561159a57600080fd5b505af11580156115ae573d6000803e3d6000fd5b50506000546001880154604051630208d92960e11b81523060048201526001600160a01b038d8116602483015264010000000090920463ffffffff166044820152606481018b905291169250630411b2529150608401600060405180830381600087803b15801561161e57600080fd5b505af1158015611632573d6000803e3d6000fd5b50506000546001880154604051627eeac760e11b815230600482015263ffffffff909116602482015261167a93506001600160a01b03909116915062fdd58e9060440161108f565b85546fffffffffffffffffffffffffffffffff19166001600160801b03919091161785556000546001860154604051627eeac760e11b815230600482015264010000000090910463ffffffff1660248201526116e7916001600160a01b03169062fdd58e9060440161108f565b85546001600160801b03918216600160801b02911617909455509396929550919350505050565b60006001600160801b038211156117675760405162461bcd60e51b815260206004820152601c60248201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604482015260640161050e565b5090565b60008160000361177d57506000919050565b6000600161178a84611874565b901c6001901b905060018184816117a3576117a3611acf565b048201901c905060018184816117bb576117bb611acf565b048201901c905060018184816117d3576117d3611acf565b048201901c905060018184816117eb576117eb611acf565b048201901c9050600181848161180357611803611acf565b048201901c9050600181848161181b5761181b611acf565b048201901c9050600181848161183357611833611acf565b048201901c90506118538182858161184d5761184d611acf565b0461185a565b9392505050565b6000818310611869578161186b565b825b90505b92915050565b600080608083901c1561188957608092831c92015b604083901c1561189b57604092831c92015b602083901c156118ad57602092831c92015b601083901c156118bf57601092831c92015b600883901c156118d157600892831c92015b600483901c156118e357600492831c92015b600283901c156118f557600292831c92015b600183901c1561186e5760010192915050565b63ffffffff8116811461191a57600080fd5b50565b6000806040838503121561193057600080fd5b823561193b81611908565b9150602083013561194b81611908565b809150509250929050565b80356001600160a01b038116811461196d57600080fd5b919050565b6000806000806080858703121561198857600080fd5b8435935060208501359250604085013591506119a660608601611956565b905092959194509250565b600080604083850312156119c457600080fd5b823591506119d460208401611956565b90509250929050565b6000602082840312156119ef57600080fd5b5035919050565b60008060408385031215611a0957600080fd5b50508035926020909101359150565b600060208284031215611a2a57600080fd5b815161185381611908565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611a5d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561186e5761186e611a64565b6001600160801b03818116838216028082169190828114611ab057611ab0611a64565b505092915050565b808202811582820484141761186e5761186e611a64565b634e487b7160e01b600052601260045260246000fd5b600082611b0257634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212205fe1e0aacab8bc3616ce1d61d60bf94960b681f37c46c2ebf4459257665d909264736f6c63430008160033";

type YieldSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldSwap__factory extends ContractFactory {
  constructor(...args: YieldSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YieldSwap";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldSwap> {
    return super.deploy(_yieldBox, overrides || {}) as Promise<YieldSwap>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, overrides || {});
  }
  override attach(address: string): YieldSwap {
    return super.attach(address) as YieldSwap;
  }
  override connect(signer: Signer): YieldSwap__factory {
    return super.connect(signer) as YieldSwap__factory;
  }
  static readonly contractName: "YieldSwap";

  public readonly contractName: "YieldSwap";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldSwapInterface {
    return new utils.Interface(_abi) as YieldSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldSwap {
    return new Contract(address, _abi, signerOrProvider) as YieldSwap;
  }
}
