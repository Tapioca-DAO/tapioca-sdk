/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Simulations, SimulationsInterface } from "../Simulations";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "am",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "m",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "p",
        type: "uint256",
      },
    ],
    name: "computeAM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cumulative",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "am",
        type: "uint256",
      },
    ],
    name: "computeCumulative",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "test",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610313908161001c8239f35b600080fdfe608060405260048036101561001357600080fd5b6000803560e01c80636dc70f4514610201578063dfa3e23a146101b65763f8a8fd6d1461003f57600080fd5b346101b357806003193601126101b35780918182905b600a90818310156101af5785800286810487148715171561019c57606490810180911161019c578587600383111561018357505080600181811c81810180911161017057915b83831061014557505050866100af91610281565b906100ba878361028e565b50600184019081851161013257906100d5836100da9361023e565b610261565b95918290811161011557506100ee9161023e565b906000198114610102576001019093610055565b634e487b7160e01b845260118352602484fd5b81101561012a5761012591610281565b6100ee565b5050826100ee565b634e487b7160e01b875260118652602487fd5b909192506101628399949596999361015d8184610261565b61023e565b9398959493821c919061009b565b634e487b7160e01b895260118852602489fd5b9091610193575b6100af91610281565b6001915061018a565b634e487b7160e01b865260118552602486fd5b8480f35b80fd5b50346101b3576020906101c83661021f565b91819081116101e457506101dc925061023e565b604051908152f35b8210156101fa576101f59250610281565b6101dc565b50506101dc565b50346101b35760206101dc6100d56102183661021f565b929161023e565b606090600319011261023957600435906024359060443590565b600080fd5b9190820180921161024b57565b634e487b7160e01b600052601160045260246000fd5b811561026b570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161024b57565b9080156102d65760328202918083046032149015171561024b576102b191610261565b600060328211156102c3575050603290565b5060058110156102d35750600590565b90565b505060329056fea2646970667358221220f0030b73973fd4f719593be460461ad7b588f1cc6d24fd01fa70d516a55d3f6e64736f6c63430008120033";

type SimulationsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimulationsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Simulations__factory extends ContractFactory {
  constructor(...args: SimulationsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Simulations";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Simulations> {
    return super.deploy(overrides || {}) as Promise<Simulations>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Simulations {
    return super.attach(address) as Simulations;
  }
  override connect(signer: Signer): Simulations__factory {
    return super.connect(signer) as Simulations__factory;
  }
  static readonly contractName: "Simulations";

  public readonly contractName: "Simulations";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimulationsInterface {
    return new utils.Interface(_abi) as SimulationsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Simulations {
    return new Contract(address, _abi, signerOrProvider) as Simulations;
  }
}
