/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Vesting, VestingInterface } from "../Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "NotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "VestingDurationNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cliff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_seededAmount",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "registerUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seeded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestClaimTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "revoked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "vested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100d157601f610d5238819003918201601f19168301916001600160401b038311848410176100d6578084926060946040528339810103126100d157805160208201516040909201516001600160a01b03811691908290036100d15760018060a01b0319600093818554169260405133877f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360016002558660075582156100c25750600555600655331617179055604051610c6590816100ed8239f35b6301d6ee2f60e71b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c908163078dfbe7146108ba5781630fb5a6b41461089b57816313d033c01461087c578163334041a61461085d578163399ae7241461073c578163402914f5146107165781634e71d92d146104745781634e71e0c8146103d35781637102b728146103995781638da5cb5b14610371578163a87430ba14610312578163af38d757146102e6578163be9a6555146102c8578163d54ad2a1146102a9578163e30c397814610280578163fa0b5e551461013a57508063fc0c546a146101125763fea5657c146100e957600080fd5b3461010e578160031936011261010e57602090610107600754610b96565b9051908152f35b5080fd5b503461010e578160031936011261010e5760035490516001600160a01b039091168152602090f35b90503461027c578160031936011261027c576101546109b2565b835460243593916001600160a01b039161017190831633146109cd565b835461026d571691821561025f578315610251578285526008602052818520546102435781519060808201906001600160401b038211838310176102305750906003918352602081018382019060608301948784528882528886528883528689526008602052882092518355516001830155516002820155019051151560ff8019835416911617905561020682600954610a7c565b6009557fe29d35093005f4d575e1003753426b57a7f64378ba73332eef9c6ccc2b8decd68380a380f35b634e487b7160e01b875260419052602486fd5b9051630ea075bf60e21b8152fd5b90516332457ad960e21b8152fd5b905163d23f952160e01b8152fd5b5050516302ed543d60e51b8152fd5b8280fd5b50503461010e578160031936011261010e5760015490516001600160a01b039091168152602090f35b50503461010e578160031936011261010e57602090600a549051908152f35b90503461027c578260031936011261027c5760209250549051908152f35b50503461010e578160031936011261010e57602090610107610309600754610b96565b600a5490610a18565b50503461010e57602036600319011261010e5760809181906001600160a01b0361033a6109b2565b1681526008602052209081549160018101549160ff6003600284015493015416928151948552602085015283015215156060820152f35b50503461010e578160031936011261010e57905490516001600160a01b039091168152602090f35b50503461010e57602036600319011261010e576020916101079082906001600160a01b036103c56109b2565b168152600885522054610b96565b9190503461027c578260031936011261027c576001546001600160a01b03929091838316919033839003610431575050808454938416600080516020610c108339815191528680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b8391503461010e578160031936011261010e57600290818054146106d35781805580541580156106c9575b6106bb576104ac33610a3b565b9081156106ad576104bf82600a54610a7c565b600a553384526020600881526001868620016104dc848254610a7c565b905533808652600882528686204290860155600354875163a9059cbb60e01b81850190815260248201939093526044808201879052815260808101926001600160401b03926001600160a01b0316918385118186101761069a5760c0810185811085821117610687578b528585527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460a082015251899182919082855af1903d15610678573d92831161066557906105b39392918a51926105a687601f19601f8401160185610a89565b83523d8a8785013e610ac2565b8051806105e9575b8660018787337fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a8580a35580f35b81839181010312610661578101518015908115036106615761060c5780806105bb565b855162461bcd60e51b815291820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260849150fd5b8580fd5b634e487b7160e01b895260418652602489fd5b906105b3939250606091610ac2565b634e487b7160e01b8b526041885260248bfd5b634e487b7160e01b8a526041875260248afd5b84516312d37ee560e31b8152fd5b8351636f312cbd60e01b8152fd5b506007541561049f565b606490602085519162461bcd60e51b8352820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b50503461010e57602036600319011261010e576020906101076107376109b2565b610a3b565b9190503461027c578060031936011261027c576001600160a01b0390823582811690819003610817576107766024359386541633146109cd565b835461084d57821561083d57826009541161082d57600380546001600160a01b0319168217905581516370a0823160e01b8152308582015290602090829060249082905afa9081156108235790839186916107eb575b50106107dc575060075542905580f35b516351940b3960e11b81529050fd5b9150506020813d821161081b575b8161080660209383610a89565b8101031261081757829051386107cc565b8480fd5b3d91506107f9565b82513d87823e3d90fd5b815163342ccafd60e21b81528490fd5b815163df95788360e01b81528490fd5b81516302ed543d60e51b81528490fd5b50503461010e578160031936011261010e576020906007549051908152f35b50503461010e578160031936011261010e576020906005549051908152f35b50503461010e578160031936011261010e576020906006549051908152f35b9190503461027c57606036600319011261027c576108d66109b2565b91602435918215158303610817576044359283151584036106615760018060a01b039485916109098389541633146109cd565b15610999571692831590811591610991575b5015610956575050808354928316600080516020610c108339815191528580a36001600160a01b031991821617825560018054909116905580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b90503861091b565b93505050501660018060a01b0319600154161760015580f35b600435906001600160a01b03821682036109c857565b600080fd5b156109d457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b91908203918211610a2557565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0316600081815260086020526040902054610a799190610a6190610b96565b90600052600860205260016040600020015490610a18565b90565b91908201809211610a2557565b601f909101601f19168101906001600160401b03821190821017610aac57604052565b634e487b7160e01b600052604160045260246000fd5b91929015610b245750815115610ad6575090565b3b15610adf5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610b375750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610b7d575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610b5a565b600454908115610c0857610bac60055483610a7c565b4210610c085760065491610bc08382610a7c565b421015610c0257610bd19042610a18565b90818102918183041490151715610a25578115610bec570490565b634e487b7160e01b600052601260045260246000fd5b50905090565b505060009056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220475c1b0e8878fd052cacedfd5fd804c1a7b05ecbb9131bee19e19ee9dce2809a64736f6c63430008120033";

type VestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vesting__factory extends ContractFactory {
  constructor(...args: VestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Vesting";
  }

  override deploy(
    _cliff: PromiseOrValue<BigNumberish>,
    _duration: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vesting> {
    return super.deploy(
      _cliff,
      _duration,
      _owner,
      overrides || {}
    ) as Promise<Vesting>;
  }
  override getDeployTransaction(
    _cliff: PromiseOrValue<BigNumberish>,
    _duration: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cliff,
      _duration,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  override connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }
  static readonly contractName: "Vesting";

  public readonly contractName: "Vesting";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}
