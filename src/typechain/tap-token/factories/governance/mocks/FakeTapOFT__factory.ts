/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FakeTapOFT,
  FakeTapOFTInterface,
} from "../../../governance/mocks/FakeTapOFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TwTAP",
        name: "twTap",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "contract IERC20[]",
        name: "_rewardTokens",
        type: "address[]",
      },
    ],
    name: "fakeClaimAndSendReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200033b576040906001600160401b03908083018281118282101762000325578352600b81526020916a11985ad94815185c13d19560aa1b838301528351928484018481108382111762000325578552600493848152630465441560e41b8282015283519083821162000310576003928354926001968785811c9516801562000305575b83861014620002f0578190601f958681116200029a575b508390868311600114620002335760009262000227575b505060001982871b1c191690871b1784555b8151948511620002125786548681811c9116801562000207575b82821014620001f257838111620001a7575b50809285116001146200013957509383949184926000956200012d575b50501b92600019911b1c19161790555b51610c8b9081620003418239f35b0151935038806200010f565b92919084601f1981168860005285600020956000905b898383106200018c575050501062000171575b50505050811b0190556200011f565b01519060f884600019921b161c191690553880808062000162565b8587015189559097019694850194889350908101906200014f565b87600052816000208480880160051c820192848910620001e8575b0160051c019087905b828110620001db575050620000f2565b60008155018790620001cb565b92508192620001c2565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000e0565b604187634e487b7160e01b6000525260246000fd5b015190503880620000b4565b90899350601f1983169188600052856000209260005b878282106200028357505084116200026a575b505050811b018455620000c6565b015160001983891b60f8161c191690553880806200025c565b8385015186558d9790950194938401930162000249565b90915086600052836000208680850160051c820192868610620002e6575b918b91869594930160051c01915b828110620002d65750506200009d565b600081558594508b9101620002c6565b92508192620002b8565b602289634e487b7160e01b6000525260246000fd5b94607f169462000086565b604186634e487b7160e01b6000525260246000fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461076c57508163095ea7b31461074257816318160ddd1461072357816323b872dd14610659578163313ce5671461063d57816339509351146105ed57816340c10f19146105c857816370a08231146105915781637c928fe91461057057816395d89b411461048a578163a457c2d7146103e5578163a9059cbb146103b4578163c37c98291461010f575063dd62ed3e146100bf57600080fd5b3461010b578060031936011261010b576020916100da61088c565b826100e36108a7565b6001600160a01b03928316845260018652922091166000908152908352819020549051908152f35b5080fd5b905082346103b15760603660031901126103b1576001600160a01b03918035838116908190036103ad5760449485359167ffffffffffffffff968784116103a957366023850112156103a9578385013593888511610396578460051b9884519360209661017e888d01876108bd565b855286850192836024809d83010191368311610392578d01905b82821061037657505050803b15610311578a899187948c8b87519788956377eceed560e01b87528a87019281359088015286015289518091526064850192918c87915b83831061034f5750505050508383809203925af180156102d55761032a575b5050855b82518110156103265788886102138386610c2b565b5116868a6102218588610c2b565b51168751938480926370a0823160e01b8252308d8301525afa91821561031c5784898b8a948f9482976102df575b508a51968795869463a9059cbb60e01b865233908601528401525af180156102d55761029a575b506000198114610288576001016101fe565b634e487b7160e01b8752601186528887fd5b8581813d83116102ce575b6102af81836108bd565b810103126102ca5751801515036102c65789610276565b8680fd5b8780fd5b503d6102a5565b85513d8a823e3d90fd5b959450955050505081813d8311610315575b6102fb81836108bd565b81010312610311578a84898b8a9451953861024f565b8880fd5b503d6102f1565b86513d8b823e3d90fd5b8680f35b819792971161033d5783529488806101fa565b634e487b7160e01b8252604186528882fd5b819396985084600195985095919295511681520194019101908c94928794928f8d906101db565b81358d8116810361038e578152908901908901610198565b8c80fd5b8b80fd5b634e487b7160e01b875260418652602487fd5b8580fd5b8280fd5b80fd5b50503461010b578060031936011261010b576020906103de6103d461088c565b6024359033610918565b5160018152f35b905082346103b157826003193601126103b15761040061088c565b918360243592338152600160205281812060018060a01b0386168252602052205490828210610439576020856103de8585038733610a86565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b83833461010b578160031936011261010b57805191809380549160019083821c92828516948515610566575b60209586861081146105535785895290811561052f57506001146104f4575b6104f087876104e6828c03836108bd565b5191829182610843565b0390f35b9080949750528583205b82841061051c57505050826104f0946104e6928201019486806104d5565b80548685018801529286019281016104fe565b60ff19168887015250505050151560051b83010192506104e6826104f086806104d5565b634e487b7160e01b845260228352602484fd5b93607f16936104b6565b83903461010b57602036600319011261010b5761058e903533610b88565b80f35b50503461010b57602036600319011261010b5760209181906001600160a01b036105b961088c565b16815280845220549051908152f35b50503461010b573660031901126103b15761058e6105e461088c565b60243590610b88565b50503461010b578060031936011261010b576103de60209261063661061061088c565b338352600186528483206001600160a01b038216845286529184902054602435906108f5565b9033610a86565b50503461010b578160031936011261010b576020905160128152f35b8391503461010b57606036600319011261010b5761067561088c565b61067d6108a7565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036106b7575b6020866103de878787610918565b8482106106e057509183916106d5602096956103de95033383610a86565b9193948193506106a9565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461010b578160031936011261010b576020906002549051908152f35b50503461010b578060031936011261010b576020906103de61076261088c565b6024359033610a86565b9291503461083f578360031936011261083f57600354600181811c9186908281168015610835575b6020958686108214610822575084885290811561080057506001146107c5575b6104f086866104e6828b03836108bd565b929550600383528583205b8284106107ed57505050826104f0946104e69282010194386107b4565b80548685018801529286019281016107d0565b60ff191687860152505050151560051b83010192506104e6826104f0386107b4565b634e487b7160e01b845260229052602483fd5b93607f1693610794565b8380fd5b6020808252825181830181905290939260005b82811061087857505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610856565b600435906001600160a01b03821682036108a257565b600080fd5b602435906001600160a01b03821682036108a257565b90601f8019910116810190811067ffffffffffffffff8211176108df57604052565b634e487b7160e01b600052604160045260246000fd5b9190820180921161090257565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215610a3357169182156109e25760008281528060205260408120549180831061098e57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610b375716918215610ae75760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b0316908115610be6577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082610bca6000946002546108f5565b60025584845283825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b8051821015610c3f5760209160051b010190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212201654f97eb1ab61e2f08139e042177c0740a3606b38a598410c2f2031fcbb115a64736f6c63430008130033";

type FakeTapOFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FakeTapOFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FakeTapOFT__factory extends ContractFactory {
  constructor(...args: FakeTapOFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FakeTapOFT";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FakeTapOFT> {
    return super.deploy(overrides || {}) as Promise<FakeTapOFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FakeTapOFT {
    return super.attach(address) as FakeTapOFT;
  }
  override connect(signer: Signer): FakeTapOFT__factory {
    return super.connect(signer) as FakeTapOFT__factory;
  }
  static readonly contractName: "FakeTapOFT";

  public readonly contractName: "FakeTapOFT";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FakeTapOFTInterface {
    return new utils.Interface(_abi) as FakeTapOFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FakeTapOFT {
    return new Contract(address, _abi, signerOrProvider) as FakeTapOFT;
  }
}
