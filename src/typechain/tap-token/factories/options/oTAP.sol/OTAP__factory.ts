/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { OTAP, OTAPInterface } from "../../../options/oTAP.sol/OTAP";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "expiry",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "discount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "tOLP",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct TapOption",
        name: "option",
        type: "tuple",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "expiry",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "discount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "tOLP",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct TapOption",
        name: "option",
        type: "tuple",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "attributes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "expiry",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "discount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "tOLP",
            type: "uint256",
          },
        ],
        internalType: "struct TapOption",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "broker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "brokerClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "isApprovedOrOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_expiry",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_discount",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "_tOLP",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintedOTAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "options",
    outputs: [
      {
        internalType: "uint128",
        name: "expiry",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "discount",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "tOLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610140604081815234620003fa576200001882620003ff565b600a8252602090818301906904f7074696f6e205441560b41b928383528151936200004385620003ff565b600a8552818501528151916200005983620003ff565b6004958684526306f5441560e41b838501528151946200007986620003ff565b60019182875284870192603160f81b845288519660018060401b03998a8911620003e5576000988954918483811c93168015620003da575b8a841014620002e4578190601f9384811162000387575b508a9084831160011462000322578c9262000316575b5050600019600383901b1c191690841b1789555b8151918b8311620003035783548481811c91168015620002f8575b8a821014620002e457908183859493116200028f575b50899183116001146200022b578a926200021f575b5050600019600383901b1c191690821b1790555b51902094519020928460e052610100968488524660a0528251938401947f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f968787528486015260608501524660808501523060a085015260a0845260c0840196848810908811176200020c5750508490525190206080523060c052610120908152611f7d928362000432843960805183611e46015260a05183611f01015260c05183611e10015260e05183611e9501525182611ebb01525181611e720152f35b634e487b7160e01b825260419052602490fd5b01519050388062000138565b848b52898b208594509190601f1984168c5b8c8282106200027857505084116200025e575b505050811b0190556200014c565b015160001960f88460031b161c1916905538808062000250565b83850151865588979095019493840193016200023d565b90919250848b52898b208380860160051c8201928c8710620002da575b91869588929594930160051c01915b828110620002cb57505062000123565b8d8155869550879101620002bb565b92508192620002ac565b50634e487b7160e01b8a5260228d5260248afd5b90607f16906200010d565b634e487b7160e01b8a5260418d5260248afd5b015190503880620000de565b8c80528b8d208794509190601f1984168e8e5b8282106200036f575050841162000355575b505050811b018955620000f2565b015160001960f88460031b161c1916905538808062000347565b8385015186558a979095019493840193018e62000335565b9091508b80528a8c208480850160051c8201928d8610620003d0575b918891869594930160051c01915b828110620003c1575050620000c8565b8e8155859450889101620003b1565b92508192620003a3565b92607f1692620000b1565b60418c634e487b7160e01b6000525260246000fd5b600080fd5b604081019081106001600160401b038211176200041b57604052565b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101d257806306fdde03146101cd578063081812fc146101c8578063095ea7b3146101c35780631239824c146101be578063162094c4146101b95780631eac071c146101b457806323b872dd146101af5780633644e515146101aa578063409e2205146101a557806342842e0e146101a057806342966c681461019b578063430c2081146101965780634f558e79146101915780636352211e1461018c5780636c8b703f1461015f57806370a08231146101875780637ac2ff7b146101825780637ecebe001461017d57806395d89b4114610178578063a22cb46514610173578063abff01101461016e578063b47be4fc14610169578063b88d4fde14610164578063c87b56dd1461015f578063d05dcc6a1461015a578063d2423b51146101555763e985e9c51461015057600080fd5b61135f565b611264565b6111b5565b610c56565b61112d565b6110f4565b6110cb565b610fe7565b610f53565b610f19565b610dcd565b610d2c565b610b56565b610b20565b610aef565b6109e4565b6109bc565b610974565b610951565b610928565b610889565b610759565b6104d7565b6103d5565b610379565b6102b8565b6101ee565b6001600160e01b03198116036101e957565b600080fd5b346101e95760203660031901126101e957602060043561020d816101d7565b63ffffffff60e01b166380ac58cd60e01b811490811561024b575b811561023a575b506040519015158152f35b6301ffc9a760e01b1490503861022f565b635b5e139f60e01b81149150610228565b60005b83811061026f5750506000910152565b818101518382015260200161025f565b906020916102988151809281855285808601910161025c565b601f01601f1916010190565b9060206102b592818152019061027f565b90565b346101e957600080600319360112610376576040518180546102d981610b74565b8084529060019081811690811561034e5750600114610313575b61030f8461030381880382610c35565b604051918291826102a4565b0390f35b93508180526020938483205b82841061033b575050508161030f9361030392820101936102f3565b805485850187015292850192810161031f565b61030f96506103039450602092508593915060ff191682840152151560051b820101936102f3565b80fd5b346101e95760203660031901126101e95760206103976004356115af565b6040516001600160a01b039091168152f35b600435906001600160a01b03821682036101e957565b602435906001600160a01b03821682036101e957565b346101e95760403660031901126101e9576103ee6103a9565b6024356103fa8161151a565b916001600160a01b03808416908216811461045c5761042c9361042791331490811561042e575b5061153d565b6118e5565b005b6001600160a01b0316600090815260056020908152604080832033845290915290205460ff16905038610421565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b602435906001600160801b03821682036101e957565b604435906001600160801b03821682036101e957565b346101e95760803660031901126101e9576104f06103a9565b6104f86104ab565b906105016104c1565b6009549091906001600160a01b03908116330361071c576105236008546113bc565b92836008556040519161053583610be4565b6000835283169182156106d85761030f956106947ff85fc5db92230761a679201cf357af068b25f3ca445054bcf465e9bc613839209361063e6106396106c5958a809a6105a66105a161059d84600052600260205260018060a01b0360406000205416151590565b1590565b611b57565b6000828152600260205260409020546105c8906001600160a01b031615611b57565b6001600160a01b03811660009081526003602052604090206001815401905561061e816105ff846000526002602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b818b6000600080516020611f288339815191528180a46119ba565b6116cb565b61067461065588600052600a602052604060002090565b80546001600160801b0319166001600160801b03909516949094178455565b82546001600160801b031660809190911b6001600160801b031916178255565b606435600182018190556040805192546001600160801b038116845260801c60208401528201529081906060820190565b0390a36040519081529081906020820190565b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b60405162461bcd60e51b815260206004820152601560248201527427aa20a81d1037b7363c9037b7363ca13937b5b2b960591b6044820152606490fd5b346101e95760403660031901126101e957602460043581356001600160401b038082116101e957366023830112156101e95781600401359081116101e957368482840101116101e9576107b46107af84336116eb565b611ab7565b6000928352602093600b855260408420926107d9836107d38654610b74565b86611b03565b8495601f841160011461081857509484958394959361080b575b5050508160011b916000199060031b1c191617905580f35b01013590503880806107f3565b91601f1984169661082e86600052602060002090565b9387905b89821061086f57505084600196979810610853575b50505050811b01905580f35b60001960f88660031b161c199201013516905538808080610847565b806001849786839596890101358155019601920190610832565b346101e95760003660031901126101e9576009546001600160a01b0381166108bc576001600160a01b0319163317600955005b60405162461bcd60e51b815260206004820152600f60248201526e4f5441503a206f6e6c79206f6e636560881b6044820152606490fd5b60609060031901126101e9576001600160a01b039060043582811681036101e9579160243590811681036101e9579060443590565b346101e95761042c610939366108f3565b9161094c61094784336116eb565b6115ed565b6117bd565b346101e95760003660031901126101e957602061096c611e0d565b604051908152f35b346101e95760203660031901126101e957600435600052600a60205260606040600020600181549101546040519160018060801b038116835260801c60208301526040820152f35b346101e95761042c6109cd366108f3565b90604051926109db84610be4565b6000845261164f565b346101e95760203660031901126101e957600435610a056107af82336116eb565b610a0e8161151a565b50610a188161151a565b90806000809382825260046020526040822060018060a01b0319815416905560018060a01b03168082526003602052604082206000198154019055610a7a610a6a846000526002602052604060002090565b80546001600160a01b0319169055565b600080516020611f288339815191528280a4610aa081600052600a602052604060002090565b6040805182546001600160801b038116825260801c60208201526001909201549082015233907f0f3b9092d3439c7f5326f5648434eeaea09fe55519bc9331f2a1dc2bc1e5424590606090a380f35b346101e95760403660031901126101e9576020610b16610b0d6103a9565b602435906116eb565b6040519015158152f35b346101e95760203660031901126101e9576004356000908152600260209081526040909120546001600160a01b03161515610b16565b346101e95760203660031901126101e957602061039760043561151a565b90600182811c92168015610ba4575b6020831014610b8e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610b83565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b03821117610bdf57604052565b610bae565b602081019081106001600160401b03821117610bdf57604052565b604081019081106001600160401b03821117610bdf57604052565b60c081019081106001600160401b03821117610bdf57604052565b90601f801991011681019081106001600160401b03821117610bdf57604052565b346101e9576020806003193601126101e9576000906004358252600b81526040822060405183819490835490610c8b82610b74565b94858552600192878482169182600014610d08575050600114610ccc575b505050610cb892500383610c35565b61030f60405192828493845283019061027f565b869350819291528282205b858310610cf0575050610cb89350820101388080610ca9565b80548389018501528794508693909201918101610cd7565b935094505050610cb894915060ff191682840152151560051b820101388080610ca9565b346101e95760203660031901126101e9576001600160a01b03610d4d6103a9565b168015610d7657600052600360205261030f604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b346101e95760c03660031901126101e957610de66103a9565b602435604435916064359260ff841684036101e957804211610ed45761042c93610ec161042792610e9b610e198761151a565b93610ea9610e428660018060a01b03166000526006602052604060002090815491600183019055565b9360405193849160208301968c8c899094939260809260a08301967f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad845260018060a01b03166020840152604083015260608201520152565b03601f198101845283610c35565b610ebc60a4359360843593519020611dc6565b611bef565b6001600160a01b03908116911614611ba3565b60405162461bcd60e51b815260206004820152601e60248201527f4552433732315065726d69743a206578706972656420646561646c696e6500006044820152606490fd5b346101e95760203660031901126101e9576001600160a01b03610f3a6103a9565b1660005260066020526020604060002054604051908152f35b346101e95760008060031936011261037657604051816001805490610f7782610b74565b8085529181811690811561034e5750600114610f9d5761030f8461030381880382610c35565b80945082526020938483205b828410610fc5575050508161030f9361030392820101936102f3565b8054858501870152928501928101610fa9565b6024359081151582036101e957565b346101e95760403660031901126101e9576110006103a9565b611008610fd8565b6001600160a01b0382169133831461108a57816110476110589233600052600560205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b604051901515815233907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b60405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606490fd5b346101e95760003660031901126101e9576009546040516001600160a01b039091168152602090f35b346101e95760003660031901126101e9576020600854604051908152f35b6001600160401b038111610bdf57601f01601f191660200190565b346101e95760803660031901126101e9576111466103a9565b61114e6103bf565b606435916001600160401b0383116101e957366023840112156101e95782600401359161117a83611112565b926111886040519485610c35565b80845236602482870101116101e957602081600092602461042c980183880137850101526044359161164f565b346101e95760203660031901126101e95760043560409060008280516111da81610bc4565b82815282602082015201526111ee8161151a565b90600052600a60205261030f8260002092600181519461120d86610bc4565b8054828060801b038116875260801c602087015201548185015251928392839092916040606091608084019560018060a01b0316845260018060801b03808251166020860152602082015116828501520151910152565b6040806003193601126101e9576001600160401b03600480358281116101e957366023820112156101e95780820135928084116101e9576024600594368282881b860101116101e957946112b6610fd8565b9336819003604219019160005b8881106112cc57005b8481831b84010135848112156101e957830185810135908782116101e95760440181360381136101e95760009182916113098e51809381936113e1565b0390305af46113166113ef565b901580611358575b611331575061132c906113bc565b6112c3565b8861135461133f8d9361141f565b925162461bcd60e51b815292839283016102a4565b0390fd5b508761131e565b346101e95760403660031901126101e957602060ff6113b061137f6103a9565b6113876103bf565b6001600160a01b0391821660009081526005865260408082209290931681526020919091522090565b54166040519015158152f35b60001981146113cb5760010190565b634e487b7160e01b600052601160045260246000fd5b908092918237016000815290565b3d1561141a573d9061140082611112565b9161140e6040519384610c35565b82523d6000602084013e565b606090565b6044815110611499576004810151810190602081602484019303126101e9576024810151906001600160401b0382116101e95701816043820112156101e957602481015161146c81611112565b9261147a6040519485610c35565b818452604482840101116101e9576102b591604460208501910161025c565b506040516114a681610bff565b601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b156114da57565b60405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606490fd5b6000908152600260205260409020546001600160a01b03166102b58115156114d3565b1561154457565b60405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b6000818152600260205260409020546115d2906001600160a01b031615156114d3565b6000908152600460205260409020546001600160a01b031690565b156115f457565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b9161167693916106399361166661094784336116eb565b6116718383836117bd565b611a7b565b565b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b156116d257565b60405162461bcd60e51b81528061135460048201611678565b6001600160a01b03806116fd8461151a565b169281831692848414948515611733575b5050831561171d575b50505090565b611729919293506115af565b1614388080611717565b60009081526005602090815260408083206001600160a01b03949094168352929052205460ff169350388061170e565b1561176a57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b6117e1906117ca8461151a565b6001600160a01b0382811693909182168414611763565b83169283156118945761184461187f926118138561180d6118018a61151a565b6001600160a01b031690565b14611763565b61182a610a6a886000526004602052604060002090565b6001600160a01b0316600090815260036020526040902090565b80546000190190556001600160a01b0381166000908152600360205260409020600181540190556105ff856000526002602052604060002090565b600080516020611f28833981519152600080a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b600082815260046020526040902080546001600160a01b0319166001600160a01b0383161790556001600160a01b038061191e8461151a565b169116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4565b908160209103126101e957516102b5816101d7565b6102b5939260809260018060a01b03168252600060208301526040820152816060820152019061027f565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526102b59291019061027f565b909190803b15611a73576119ec602091600093604051948580948193630a85bd0160e11b998a8452336004850161195e565b03926001600160a01b03165af160009181611a43575b50611a3557611a0f6113ef565b80519081611a305760405162461bcd60e51b81528061135460048201611678565b602001fd5b6001600160e01b0319161490565b611a6591925060203d8111611a6c575b611a5d8183610c35565b810190611949565b9038611a02565b503d611a53565b505050600190565b92909190823b15611aae576119ec926020926000604051809681958294630a85bd0160e11b9a8b85523360048601611989565b50505050600190565b15611abe57565b60405162461bcd60e51b815260206004820152601c60248201527f4f5441503a206f6e6c7920617070726f766564206f72206f776e6572000000006044820152606490fd5b90601f8111611b1157505050565b600091825260208220906020601f850160051c83019410611b4d575b601f0160051c01915b828110611b4257505050565b818155600101611b36565b9092508290611b2d565b15611b5e57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b15611baa57565b60405162461bcd60e51b815260206004820152601f60248201527f4552433732315065726d69743a20696e76616c6964207369676e6174757265006044820152606490fd5b916102b59391611bfe93611d41565b919091611c26565b60051115611c1057565b634e487b7160e01b600052602160045260246000fd5b611c2f81611c06565b80611c375750565b611c4081611c06565b60018103611c885760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606490fd5b611c9181611c06565b60028103611cde5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80611cea600392611c06565b14611cf157565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b9291906fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311611dba5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15611dad5781516001600160a01b03811615611da7579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b611dce611e0d565b9060405190602082019261190160f01b84526022830152604282015260428152608081018181106001600160401b03821117610bdf5760405251902090565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611efe575b15611e68577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152611ef881610c1a565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611e3f56feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212207e1bc59844bfd70aa874585ad32a30650326cb83eade5ffd8f452da1b4d08f7564736f6c63430008120033";

type OTAPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OTAPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OTAP__factory extends ContractFactory {
  constructor(...args: OTAPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OTAP";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OTAP> {
    return super.deploy(overrides || {}) as Promise<OTAP>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OTAP {
    return super.attach(address) as OTAP;
  }
  override connect(signer: Signer): OTAP__factory {
    return super.connect(signer) as OTAP__factory;
  }
  static readonly contractName: "OTAP";

  public readonly contractName: "OTAP";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OTAPInterface {
    return new utils.Interface(_abi) as OTAPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OTAP {
    return new Contract(address, _abi, signerOrProvider) as OTAP;
  }
}
