/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { OTAP, OTAPInterface } from "../../../options/oTAP.sol/OTAP";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "expiry",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "discount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "tOLP",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct TapOption",
        name: "option",
        type: "tuple",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "expiry",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "discount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "tOLP",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct TapOption",
        name: "option",
        type: "tuple",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "attributes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "expiry",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "discount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "tOLP",
            type: "uint256",
          },
        ],
        internalType: "struct TapOption",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "broker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "brokerClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "isApprovedOrOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_expiry",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_discount",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "_tOLP",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintedOTAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "options",
    outputs: [
      {
        internalType: "uint128",
        name: "expiry",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "discount",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "tOLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610140604081815234620003fa576200001882620003ff565b600a8252602090818301906904f7074696f6e205441560b41b928383528151936200004385620003ff565b600a8552818501528151916200005983620003ff565b6004958684526306f5441560e41b838501528151946200007986620003ff565b60019182875284870192603160f81b845288519660018060401b03998a8911620003e5576000988954918483811c93168015620003da575b8a841014620002e4578190601f9384811162000387575b508a9084831160011462000322578c9262000316575b5050600019600383901b1c191690841b1789555b8151918b8311620003035783548481811c91168015620002f8575b8a821014620002e457908183859493116200028f575b50899183116001146200022b578a926200021f575b5050600019600383901b1c191690821b1790555b51902094519020928460e052610100968488524660a0528251938401947f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f968787528486015260608501524660808501523060a085015260a0845260c0840196848810908811176200020c5750508490525190206080523060c052610120908152611f02928362000432843960805183611dcb015260a05183611e86015260c05183611d95015260e05183611e1a01525182611e4001525181611df70152f35b634e487b7160e01b825260419052602490fd5b01519050388062000138565b848b52898b208594509190601f1984168c5b8c8282106200027857505084116200025e575b505050811b0190556200014c565b015160001960f88460031b161c1916905538808062000250565b83850151865588979095019493840193016200023d565b90919250848b52898b208380860160051c8201928c8710620002da575b91869588929594930160051c01915b828110620002cb57505062000123565b8d8155869550879101620002bb565b92508192620002ac565b50634e487b7160e01b8a5260228d5260248afd5b90607f16906200010d565b634e487b7160e01b8a5260418d5260248afd5b015190503880620000de565b8c80528b8d208794509190601f1984168e8e5b8282106200036f575050841162000355575b505050811b018955620000f2565b015160001960f88460031b161c1916905538808062000347565b8385015186558a979095019493840193018e62000335565b9091508b80528a8c208480850160051c8201928d8610620003d0575b918891869594930160051c01915b828110620003c1575050620000c8565b8e8155859450889101620003b1565b92508192620003a3565b92607f1692620000b1565b60418c634e487b7160e01b6000525260246000fd5b600080fd5b604081019081106001600160401b038211176200041b57604052565b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101d257806306fdde03146101cd578063081812fc146101c8578063095ea7b3146101c35780631239824c146101be578063162094c4146101b95780631eac071c146101b457806323b872dd146101af5780633644e515146101aa578063409e2205146101a557806342842e0e146101a057806342966c681461019b578063430c2081146101965780634f558e79146101915780636352211e1461018c5780636c8b703f1461015f57806370a08231146101875780637ac2ff7b146101825780637ecebe001461017d57806395d89b4114610178578063a22cb46514610173578063abff01101461016e578063b47be4fc14610169578063b88d4fde14610164578063c87b56dd1461015f578063d05dcc6a1461015a578063d2423b51146101555763e985e9c51461015057600080fd5b6111e9565b6110ee565b61103f565b610af2565b610fb7565b610f7e565b610f55565b610e83565b610def565b610db5565b610c69565b610bc8565b6109f0565b6109d2565b6109a1565b6108b7565b61088f565b610847565b610814565b6107eb565b61074c565b61061c565b6104dd565b6103d5565b610379565b6102b8565b6101ee565b6001600160e01b03198116036101e957565b600080fd5b346101e95760203660031901126101e957602060043561020d816101d7565b63ffffffff60e01b166380ac58cd60e01b811490811561024b575b811561023a575b506040519015158152f35b6301ffc9a760e01b1490503861022f565b635b5e139f60e01b81149150610228565b60005b83811061026f5750506000910152565b818101518382015260200161025f565b906020916102988151809281855285808601910161025c565b601f01601f1916010190565b9060206102b592818152019061027f565b90565b346101e957600080600319360112610376576040518180546102d981610a0e565b8084529060019081811690811561034e5750600114610313575b61030f8461030381880382610acf565b604051918291826102a4565b0390f35b93508180526020938483205b82841061033b575050508161030f9361030392820101936102f3565b805485850187015292850192810161031f565b61030f96506103039450602092508593915060ff191682840152151560051b820101936102f3565b80fd5b346101e95760203660031901126101e957602061039760043561145e565b6040516001600160a01b039091168152f35b600435906001600160a01b03821682036101e957565b602435906001600160a01b03821682036101e957565b346101e95760403660031901126101e9576103ee6103a9565b6024356103fa816113c9565b916001600160a01b0380841690821681146104625761042c9361042791331490811561042e575b506113ec565b611772565b005b6001600160a01b0316600090815260056020526040902061045c915061045590339061136b565b5460ff1690565b38610421565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b602435906001600160801b03821682036101e957565b604435906001600160801b03821682036101e957565b346101e95760803660031901126101e9576104f66103a9565b6104fe6104b1565b906105076104c7565b6009546001600160a01b03939190841633036105df576105a961030f9261059c61053260085461123a565b9361053c85600855565b6105468588611a1b565b61057c61055d86600052600a602052604060002090565b80546001600160801b0319166001600160801b03909516949094178455565b82546001600160801b031660809190911b6001600160801b031916178255565b60643560018201556119f0565b81604051958695167ff85fc5db92230761a679201cf357af068b25f3ca445054bcf465e9bc61383920600080a482526020820190565b60405162461bcd60e51b815260206004820152601560248201527427aa20a81d1037b7363c9037b7363ca13937b5b2b960591b6044820152606490fd5b346101e95760403660031901126101e957602460043581356001600160401b038082116101e957366023830112156101e95781600401359081116101e957368482840101116101e957610677610672843361158d565b611951565b6000928352602093600b8552604084209261069c836106968654610a0e565b8661199c565b8495601f84116001146106db5750948495839495936106ce575b5050508160011b916000199060031b1c191617905580f35b01013590503880806106b6565b91601f198416966106f186600052602060002090565b9387905b89821061073257505084600196979810610716575b50505050811b01905580f35b60001960f88660031b161c19920101351690553880808061070a565b8060018497868395968901013581550196019201906106f5565b346101e95760003660031901126101e9576009546001600160a01b03811661077f576001600160a01b0319163317600955005b60405162461bcd60e51b815260206004820152600f60248201526e4f5441503a206f6e6c79206f6e636560881b6044820152606490fd5b60609060031901126101e9576001600160a01b039060043582811681036101e9579160243590811681036101e9579060443590565b346101e95761042c6107fc366107b6565b9161080f61080a843361158d565b61148a565b611674565b346101e95760003660031901126101e957602061082f611d92565b604051908152f35b6000526002602052604060002090565b346101e95760203660031901126101e957600435600052600a60205260606040600020600181549101546040519160018060801b038116835260801c60208301526040820152f35b346101e95761042c6108a0366107b6565b90604051926108ae84610a7e565b600084526114ec565b346101e95760203660031901126101e9576004356108d8610672823361158d565b6108e1816113c9565b506108eb816113c9565b600082815260046020908152604080832080546001600160a01b03191690556001600160a01b039093168083526003909152918120805460001901905591908190839061094a61093a84610837565b80546001600160a01b0319169055565b600080516020611ead8339815191528280a461097861097382600052600a602052604060002090565b6119f0565b90337f0f3b9092d3439c7f5326f5648434eeaea09fe55519bc9331f2a1dc2bc1e542458480a480f35b346101e95760403660031901126101e95760206109c86109bf6103a9565b6024359061158d565b6040519015158152f35b346101e95760203660031901126101e95760206109c86004356117c6565b346101e95760203660031901126101e95760206103976004356113c9565b90600182811c92168015610a3e575b6020831014610a2857565b634e487b7160e01b600052602260045260246000fd5b91607f1691610a1d565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b03821117610a7957604052565b610a48565b602081019081106001600160401b03821117610a7957604052565b604081019081106001600160401b03821117610a7957604052565b60c081019081106001600160401b03821117610a7957604052565b601f909101601f19168101906001600160401b03821190821017610a7957604052565b346101e9576020806003193601126101e9576000906004358252600b81526040822060405183819490835490610b2782610a0e565b94858552600192878482169182600014610ba4575050600114610b68575b505050610b5492500383610acf565b61030f60405192828493845283019061027f565b869350819291528282205b858310610b8c575050610b549350820101388080610b45565b80548389018501528794508693909201918101610b73565b935094505050610b5494915060ff191682840152151560051b820101388080610b45565b346101e95760203660031901126101e9576001600160a01b03610be96103a9565b168015610c1257600052600360205261030f604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b346101e95760c03660031901126101e957610c826103a9565b602435604435916064359260ff841684036101e957804211610d705761042c93610d5d61042792610d37610cb5876113c9565b93610d45610cde8660018060a01b03166000526006602052604060002090815491600183019055565b9360405193849160208301968c8c899094939260809260a08301967f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad845260018060a01b03166020840152604083015260608201520152565b03601f198101845283610acf565b610d5860a4359360843593519020611d4c565b611b75565b6001600160a01b03908116911614611b29565b60405162461bcd60e51b815260206004820152601e60248201527f4552433732315065726d69743a206578706972656420646561646c696e6500006044820152606490fd5b346101e95760203660031901126101e9576001600160a01b03610dd66103a9565b1660005260066020526020604060002054604051908152f35b346101e95760008060031936011261037657604051816001805490610e1382610a0e565b8085529181811690811561034e5750600114610e395761030f8461030381880382610acf565b80945082526020938483205b828410610e61575050508161030f9361030392820101936102f3565b8054858501870152928501928101610e45565b6024359081151582036101e957565b346101e95760403660031901126101e957610e9c6103a9565b610ea4610e74565b6001600160a01b03821691338314610f145781610ed1610ee292336000526005602052604060002061136b565b9060ff801983541691151516179055565b604051901515815233907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b60405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606490fd5b346101e95760003660031901126101e9576009546040516001600160a01b039091168152602090f35b346101e95760003660031901126101e9576020600854604051908152f35b6001600160401b038111610a7957601f01601f191660200190565b346101e95760803660031901126101e957610fd06103a9565b610fd86103bf565b606435916001600160401b0383116101e957366023840112156101e95782600401359161100483610f9c565b926110126040519485610acf565b80845236602482870101116101e957602081600092602461042c98018388013785010152604435916114ec565b346101e95760203660031901126101e957600435604090600082805161106481610a5e565b8281528260208201520152611078816113c9565b90600052600a60205261030f8260002092600181519461109786610a5e565b8054828060801b038116875260801c602087015201548185015251928392839092916040606091608084019560018060a01b0316845260018060801b03808251166020860152602082015116828501520151910152565b6040806003193601126101e9576001600160401b03600480358281116101e957366023820112156101e95780820135928084116101e9576024600594368282881b860101116101e95794611140610e74565b9336819003604219019160005b88811061115657005b8481831b84010135848112156101e957830185810135908782116101e95760440181360381136101e95760009182916111938e518093819361125f565b0390305af46111a061126d565b9015806111e2575b6111bb57506111b69061123a565b61114d565b886111de6111c98d9361129d565b925162461bcd60e51b815292839283016102a4565b0390fd5b50876111a8565b346101e95760403660031901126101e957602060ff61122e6112096103a9565b6112116103bf565b6001600160a01b039091166000908152600585526040902061136b565b54166040519015158152f35b60001981146112495760010190565b634e487b7160e01b600052601160045260246000fd5b908092918237016000815290565b3d15611298573d9061127e82610f9c565b9161128c6040519384610acf565b82523d6000602084013e565b606090565b6044815110611317576004810151810190602081602484019303126101e9576024810151906001600160401b0382116101e95701816043820112156101e95760248101516112ea81610f9c565b926112f86040519485610acf565b818452604482840101116101e9576102b591604460208501910161025c565b5060405161132481610a99565b601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6001600160a01b0316600090815260036020526040902090565b9060018060a01b0316600052602052604060002090565b1561138957565b60405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606490fd5b6000908152600260205260409020546001600160a01b03166102b5811515611382565b156113f357565b60405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b61146f61146a826117c6565b611382565b6000908152600460205260409020546001600160a01b031690565b1561149157565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b9161151893916115139361150361080a843361158d565b61150e838383611674565b611915565b61156d565b565b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b1561157457565b60405162461bcd60e51b8152806111de6004820161151a565b6001600160a01b038061159f846113c9565b1692818316928484149485156115d5575b505083156115bf575b50505090565b6115cb9192935061145e565b16143880806115b9565b60ff929550906115f1916000526005602052604060002061136b565b54169238806115b0565b1561160257565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b80546001600160a01b0319166001600160a01b03909216919091179055565b61169890611681846113c9565b6001600160a01b03828116939091821684146115fb565b8316928315611721576116e661170c926116ca856116c46116b88a6113c9565b6001600160a01b031690565b146115fb565b6116e161093a886000526004602052604060002090565b611351565b80546000190190556116f781611351565b6001815401905561170785610837565b611655565b600080516020611ead833981519152600080a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b816000526004602052611789816040600020611655565b6001600160a01b038061179b846113c9565b169116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4565b6000908152600260205260409020546001600160a01b0316151590565b908160209103126101e957516102b5816101d7565b6102b5939260809260018060a01b03168252600060208301526040820152816060820152019061027f565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526102b59291019061027f565b909190803b1561190d57611886602091600093604051948580948193630a85bd0160e11b998a845233600485016117f8565b03926001600160a01b03165af1600091816118dd575b506118cf576118a961126d565b805190816118ca5760405162461bcd60e51b8152806111de6004820161151a565b602001fd5b6001600160e01b0319161490565b6118ff91925060203d8111611906575b6118f78183610acf565b8101906117e3565b903861189c565b503d6118ed565b505050600190565b92909190823b1561194857611886926020926000604051809681958294630a85bd0160e11b9a8b85523360048601611823565b50505050600190565b1561195857565b60405162461bcd60e51b815260206004820152601c60248201527b27aa20a81d1037b7363c9030b8383937bb32b21037b91037bbb732b960211b6044820152606490fd5b90601f81116119aa57505050565b600091825260208220906020601f850160051c830194106119e6575b601f0160051c01915b8281106119db57505050565b8181556001016119cf565b90925082906119c6565b6040805182546001600160801b038116825260801c6020820152600190920154908201526060902090565b90604051611a2881610a7e565b600081526001600160a01b038316918215611a9a57611518938161151394611a58611a52836117c6565b15611ade565b611a64611a52836117c6565b611a6d83611351565b60018154019055611a818361170784610837565b6000600080516020611ead8339815191528180a4611854565b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b15611ae557565b60405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606490fd5b15611b3057565b60405162461bcd60e51b815260206004820152601f60248201527f4552433732315065726d69743a20696e76616c6964207369676e6174757265006044820152606490fd5b916102b59391611b8493611cc7565b919091611bac565b60051115611b9657565b634e487b7160e01b600052602160045260246000fd5b611bb581611b8c565b80611bbd5750565b611bc681611b8c565b60018103611c0e5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606490fd5b611c1781611b8c565b60028103611c645760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80611c70600392611b8c565b14611c7757565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b9291906fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311611d405791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15611d335781516001600160a01b03811615611d2d579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b611d54611d92565b9060405190602082019261190160f01b845260228301526042820152604281526080810181811060018060401b03821117610a795760405251902090565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611e83575b15611ded577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152611e7d81610ab4565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611dc456feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122063d37019c2aade0264e8b942a8d77d6a447f35b47c93a8efd74e92518f40459464736f6c63430008120033";

type OTAPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OTAPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OTAP__factory extends ContractFactory {
  constructor(...args: OTAPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OTAP";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OTAP> {
    return super.deploy(overrides || {}) as Promise<OTAP>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OTAP {
    return super.attach(address) as OTAP;
  }
  override connect(signer: Signer): OTAP__factory {
    return super.connect(signer) as OTAP__factory;
  }
  static readonly contractName: "OTAP";

  public readonly contractName: "OTAP";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OTAPInterface {
    return new utils.Interface(_abi) as OTAPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OTAP {
    return new Contract(address, _abi, signerOrProvider) as OTAP;
  }
}
