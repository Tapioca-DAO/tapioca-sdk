/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { OTAP, OTAPInterface } from "../../../options/oTAP.sol/OTAP";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "expiry",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "discount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "tOLP",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct TapOption",
        name: "option",
        type: "tuple",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "expiry",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "discount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "tOLP",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct TapOption",
        name: "option",
        type: "tuple",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "attributes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "expiry",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "discount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "tOLP",
            type: "uint256",
          },
        ],
        internalType: "struct TapOption",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "broker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "brokerClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "isApprovedOrOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_expiry",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_discount",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "_tOLP",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintedOTAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "options",
    outputs: [
      {
        internalType: "uint128",
        name: "expiry",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "discount",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "tOLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610140604081815234620003fa576200001882620003ff565b600a8252602090818301906904f7074696f6e205441560b41b928383528151936200004385620003ff565b600a8552818501528151916200005983620003ff565b6004958684526306f5441560e41b838501528151946200007986620003ff565b60019182875284870192603160f81b845288519660018060401b03998a8911620003e5576000988954918483811c93168015620003da575b8a841014620002e4578190601f9384811162000387575b508a9084831160011462000322578c9262000316575b5050600019600383901b1c191690841b1789555b8151918b8311620003035783548481811c91168015620002f8575b8a821014620002e457908183859493116200028f575b50899183116001146200022b578a926200021f575b5050600019600383901b1c191690821b1790555b51902094519020928460e052610100968488524660a0528251938401947f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f968787528486015260608501524660808501523060a085015260a0845260c0840196848810908811176200020c5750508490525190206080523060c05261012090815261209d928362000432843960805183611f86015260a05183612041015260c05183611f57015260e05183611fd501525182611ffb01525181611fb20152f35b634e487b7160e01b825260419052602490fd5b01519050388062000138565b848b52898b208594509190601f1984168c5b8c8282106200027857505084116200025e575b505050811b0190556200014c565b015160001960f88460031b161c1916905538808062000250565b83850151865588979095019493840193016200023d565b90919250848b52898b208380860160051c8201928c8710620002da575b91869588929594930160051c01915b828110620002cb57505062000123565b8d8155869550879101620002bb565b92508192620002ac565b50634e487b7160e01b8a5260228d5260248afd5b90607f16906200010d565b634e487b7160e01b8a5260418d5260248afd5b015190503880620000de565b8c80528b8d208794509190601f1984168e8e5b8282106200036f575050841162000355575b505050811b018955620000f2565b015160001960f88460031b161c1916905538808062000347565b8385015186558a979095019493840193018e62000335565b9091508b80528a8c208480850160051c8201928d8610620003d0575b918891869594930160051c01915b828110620003c1575050620000c8565b8e8155859450889101620003b1565b92508192620003a3565b92607f1692620000b1565b60418c634e487b7160e01b6000525260246000fd5b600080fd5b604081019081106001600160401b038211176200041b57604052565b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101d257806306fdde03146101cd578063081812fc146101c8578063095ea7b3146101c35780631239824c146101be578063162094c4146101b95780631eac071c146101b457806323b872dd146101af5780633644e515146101aa578063409e2205146101a557806342842e0e146101a057806342966c681461019b578063430c2081146101965780634f558e79146101915780636352211e1461018c5780636c8b703f1461015f57806370a08231146101875780637ac2ff7b146101825780637ecebe001461017d57806395d89b4114610178578063a22cb46514610173578063abff01101461016e578063b47be4fc14610169578063b88d4fde14610164578063c87b56dd1461015f578063d05dcc6a1461015a578063d2423b51146101555763e985e9c51461015057600080fd5b6112de565b6111e2565b61112f565b610ba9565b6110a6565b61106c565b611045565b610f5c565b610ea8565b610e6e565b610d20565b610c7f565b610aa4565b610a6f565b610a3e565b61091f565b6108f7565b6108ae565b61088b565b610862565b6107b5565b610684565b610516565b6103f6565b61039b565b6102b8565b6101ee565b6001600160e01b03198116036101e957565b600080fd5b346101e95760203660031901126101e957602060043561020d816101d7565b63ffffffff60e01b166380ac58cd60e01b811490811561024b575b811561023a575b506040519015158152f35b6301ffc9a760e01b1490503861022f565b635b5e139f60e01b81149150610228565b60005b83811061026f5750506000910152565b818101518382015260200161025f565b906020916102988151809281855285808601910161025c565b601f01601f1916010190565b9060206102b592818152019061027f565b90565b346101e95760008060031936011261039857604051908080546102da81610ac2565b8085529160019180831690811561036e5750600114610314575b6103108561030481870382610b87565b604051918291826102a4565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610356575050508101602001610304826103106102f4565b8054602085870181019190915290930192810161033b565b8695506103109693506020925061030494915060ff191682840152151560051b82010192936102f4565b80fd5b346101e95760203660031901126101e95760206103b9600435611538565b6001600160a01b0360405191168152f35b600435906001600160a01b03821682036101e957565b602435906001600160a01b03821682036101e957565b346101e95760403660031901126101e95761040f6103ca565b60243561041b816114a4565b916001600160a01b03808416809183161461049b5761044d9361044891331490811561044f575b506114c6565b6118a5565b005b610495915061048e9061047633916001600160a01b03166000526005602052604060002090565b906001600160a01b0316600052602052604060002090565b5460ff1690565b38610442565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b602435906001600160801b03821682036101e957565b604435906001600160801b03821682036101e957565b346101e95760803660031901126101e95761052f6103ca565b6105376104ea565b90610540610500565b916001600160a01b03928360095416330361063f57610609610310926105db61056a600854611340565b9361057485600855565b61057e8588611b65565b6105b261059586600052600a602052604060002090565b9384906001600160801b03166001600160801b0319825416179055565b82546001600160801b031660809190911b6fffffffffffffffffffffffffffffffff1916178255565b606435600182018190556040805192546001600160801b038116845260801c60208401528201526060902090565b81604051958695167ff85fc5db92230761a679201cf357af068b25f3ca445054bcf465e9bc61383920600080a482526020820190565b60405162461bcd60e51b815260206004820152601560248201527f4f5441503a206f6e6c79206f6e6c7942726f6b657200000000000000000000006044820152606490fd5b346101e95760403660031901126101e9576024600435813567ffffffffffffffff8082116101e957366023830112156101e95781600401359081116101e957368482840101116101e9576106e06106db8433611671565b611ac5565b6000928352602093600b85526040842092610705836106ff8654610ac2565b86611b11565b8495601f8411600114610744575094849583949593610737575b5050508160011b916000199060031b1c191617905580f35b010135905038808061071f565b91601f1984169661075a86600052602060002090565b9387905b89821061079b5750508460019697981061077f575b50505050811b01905580f35b60001960f88660031b161c199201013516905538808080610773565b80600184978683959689010135815501960192019061075e565b346101e95760003660031901126101e9576009546001600160a01b0381166107e8576001600160a01b0319163317600955005b60405162461bcd60e51b815260206004820152600f60248201527f4f5441503a206f6e6c79206f6e636500000000000000000000000000000000006044820152606490fd5b60609060031901126101e9576001600160a01b039060043582811681036101e9579160243590811681036101e9579060443590565b346101e95761044d6108733661082d565b916108866108818433611671565b61157a565b61174c565b346101e95760003660031901126101e95760206108a6611f4d565b604051908152f35b346101e95760203660031901126101e957600435600052600a6020526060604060002060018154910154604051916001600160801b038116835260801c60208301526040820152f35b346101e95761044d6109083661082d565b906040519261091684610b33565b600084526115dc565b346101e95760203660031901126101e9576001600160a01b036004356109486106db8233611671565b610951816114a4565b508061095c816114a4565b6000938491838352600460205260408320821981541690551680825260036020526040822060001981540190556109b06109a0846000526002602052604060002090565b80546001600160a01b0319169055565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4610a156109eb82600052600a602052604060002090565b60609060016040519180546001600160801b038116845260801c6020840152015460408201522090565b90337f0f3b9092d3439c7f5326f5648434eeaea09fe55519bc9331f2a1dc2bc1e542458480a480f35b346101e95760403660031901126101e9576020610a65610a5c6103ca565b60243590611671565b6040519015158152f35b346101e95760203660031901126101e9576020610a6560043560005260026020526001600160a01b0360406000205416151590565b346101e95760203660031901126101e95760206103b96004356114a4565b90600182811c92168015610af2575b6020831014610adc57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610ad1565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610b2e57604052565b610afc565b6020810190811067ffffffffffffffff821117610b2e57604052565b6040810190811067ffffffffffffffff821117610b2e57604052565b60c0810190811067ffffffffffffffff821117610b2e57604052565b90601f8019910116810190811067ffffffffffffffff821117610b2e57604052565b346101e9576020806003193601126101e9576000906004358252600b81526040822060405183819490835490610bde82610ac2565b94858552600192878482169182600014610c5b575050600114610c1f575b505050610c0b92500383610b87565b61031060405192828493845283019061027f565b869350819291528282205b858310610c43575050610c0b9350820101388080610bfc565b80548389018501528794508693909201918101610c2a565b935094505050610c0b94915060ff191682840152151560051b820101388080610bfc565b346101e95760203660031901126101e9576001600160a01b03610ca06103ca565b168015610cc9576000526003602052610310604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b346101e95760c03660031901126101e957610d396103ca565b602435604435916064359260ff841684036101e957804211610e295761044d93610e1661044892610df0610d6c876114a4565b93610dfe610d96866001600160a01b03166000526006602052604060002090815491600183019055565b9360405193849160208301968c8c89909493926080926001600160a01b0360a08401977f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad8552166020840152604083015260608201520152565b03601f198101845283610b87565b610e1160a4359360843593519020611f05565b611d1f565b6001600160a01b03908116911614611cd3565b60405162461bcd60e51b815260206004820152601e60248201527f4552433732315065726d69743a206578706972656420646561646c696e6500006044820152606490fd5b346101e95760203660031901126101e9576001600160a01b03610e8f6103ca565b1660005260066020526020604060002054604051908152f35b346101e9576000806003193601126103985760405190806001805491610ecd83610ac2565b8086529282811690811561036e5750600114610ef3576103108561030481870382610b87565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610f35575050508101602001610304826103106102f4565b80546020858701810191909152909301928101610f1a565b6024359081151582036101e957565b346101e95760403660031901126101e957610f756103ca565b610f7d610f4d565b6001600160a01b038216918233146110005781610fbd610fce923360005260056020526040600020906001600160a01b0316600052602052604060002090565b9060ff801983541691151516179055565b604051901515815233907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b346101e95760003660031901126101e95760206001600160a01b0360095416604051908152f35b346101e95760003660031901126101e9576020600854604051908152f35b67ffffffffffffffff8111610b2e57601f01601f191660200190565b346101e95760803660031901126101e9576110bf6103ca565b6110c76103e0565b6064359167ffffffffffffffff83116101e957366023840112156101e9578260040135916110f48361108a565b926111026040519485610b87565b80845236602482870101116101e957602081600092602461044d98018388013785010152604435916115dc565b346101e95760203660031901126101e957600435604090600082805161115481610b12565b8281528260208201520152611168816114a4565b90600052600a6020526103108260002092600181519461118786610b12565b80546001600160801b038116875260801c6020870152015481850152519283928390929160406060916001600160a01b0360808501961684526001600160801b03808251166020860152602082015116828501520151910152565b6040806003193601126101e95767ffffffffffffffff600480358281116101e957366023820112156101e95780820135928084116101e9576024600594368282881b860101116101e95794611235610f4d565b9336819003604219019160005b88811061124b57005b8481831b84010135848112156101e957830185810135908782116101e95760440181360381136101e95760009182916112888e5180938193611365565b0390305af4611295611373565b9015806112d7575b6112b057506112ab90611340565b611242565b886112d36112be8d936113a3565b925162461bcd60e51b815292839283016102a4565b0390fd5b508761129d565b346101e95760403660031901126101e957602060ff6113346112fe6103ca565b6001600160a01b0361130e6103e0565b9116600052600584526040600020906001600160a01b0316600052602052604060002090565b54166040519015158152f35b600019811461134f5760010190565b634e487b7160e01b600052601160045260246000fd5b908092918237016000815290565b3d1561139e573d906113848261108a565b916113926040519384610b87565b82523d6000602084013e565b606090565b604481511061141e576004810151810190602081602484019303126101e95760248101519067ffffffffffffffff82116101e95701816043820112156101e95760248101516113f18161108a565b926113ff6040519485610b87565b818452604482840101116101e9576102b591604460208501910161025c565b5060405161142b81610b4f565b601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b1561145f57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b60005260026020526001600160a01b03604060002054166102b5811515611458565b156114cd57565b60405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b61156061155b8260005260026020526001600160a01b0360406000205416151590565b611458565b60005260046020526001600160a01b036040600020541690565b1561158157565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b916116089391611603936115f36108818433611671565b6115fe83838361174c565b611a81565b61160a565b565b1561161157565b60405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608490fd5b6001600160a01b0380611683846114a4565b1692818316928484149485156116b9575b505083156116a3575b50505090565b6116af91929350611538565b161438808061169d565b60ff929550906116e89160005260056020526040600020906001600160a01b0316600052602052604060002090565b5416923880611694565b156116f957565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b61177090611759846114a4565b6001600160a01b03828116939091821684146116f2565b8316928315611854576117d261182d926117a28561179c6117908a6114a4565b6001600160a01b031690565b146116f2565b6117b96109a0886000526004602052604060002090565b6001600160a01b03166000526003602052604060002090565b60001981540190556117f7816001600160a01b03166000526003602052604060002090565b60018154019055611812856000526002602052604060002090565b906001600160a01b03166001600160a01b0319825416179055565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b600082815260046020526040902080546001600160a01b0319166001600160a01b0383161790556001600160a01b03806118de846114a4565b169116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4565b908160209103126101e957516102b5816101d7565b6102b593926001600160a01b03608093168252600060208301526040820152816060820152019061027f565b90926102b594936080936001600160a01b0380921684521660208301526040820152816060820152019061027f565b909190803b15611a79576119b36020916001600160a01b03936000604051958680958194630a85bd0160e11b9a8b8452336004850161191e565b0393165af160009181611a49575b50611a3b576119ce611373565b80519081611a365760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608490fd5b602001fd5b6001600160e01b0319161490565b611a6b91925060203d8111611a72575b611a638183610b87565b810190611909565b90386119c1565b503d611a59565b505050600190565b92909190823b15611abc576119b39260209260006001600160a01b03604051809781968295630a85bd0160e11b9b8c8552336004860161194a565b50505050600190565b15611acc57565b60405162461bcd60e51b815260206004820152601c60248201527f4f5441503a206f6e6c7920617070726f766564206f72206f776e6572000000006044820152606490fd5b90601f8111611b1f57505050565b600091825260208220906020601f850160051c83019410611b5b575b601f0160051c01915b828110611b5057505050565b818155600101611b44565b9092508290611b3b565b90604051611b7281610b33565b600081526001600160a01b038316918215611c4357611608938161160394611bb9611bb38360005260026020526001600160a01b0360406000205416151590565b15611c87565b611bdc611bb38360005260026020526001600160a01b0360406000205416151590565b611bf9836001600160a01b03166000526003602052604060002090565b60018154019055611c1883611812846000526002602052604060002090565b60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4611979565b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b15611c8e57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b15611cda57565b60405162461bcd60e51b815260206004820152601f60248201527f4552433732315065726d69743a20696e76616c6964207369676e6174757265006044820152606490fd5b916102b59391611d2e93611e76565b919091611d56565b60051115611d4057565b634e487b7160e01b600052602160045260246000fd5b611d5f81611d36565b80611d675750565b611d7081611d36565b60018103611dbd5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611dc681611d36565b60028103611e135760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80611e1f600392611d36565b14611e2657565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611ef95791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15611eec5781516001600160a01b03811615611ee6579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b611f0d611f4d565b9060405190602082019261190160f01b845260228301526042820152604281526080810181811067ffffffffffffffff821117610b2e5760405251902090565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630148061203e575b15611fa8577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815261203881610b6b565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611f7f56fea2646970667358221220e6acef7f2f49d1bde5b15b23ce9e7708e87e132bc487705c32382e6002320d7464736f6c63430008120033";

type OTAPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OTAPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OTAP__factory extends ContractFactory {
  constructor(...args: OTAPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OTAP";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OTAP> {
    return super.deploy(overrides || {}) as Promise<OTAP>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OTAP {
    return super.attach(address) as OTAP;
  }
  override connect(signer: Signer): OTAP__factory {
    return super.connect(signer) as OTAP__factory;
  }
  static readonly contractName: "OTAP";

  public readonly contractName: "OTAP";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OTAPInterface {
    return new utils.Interface(_abi) as OTAPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OTAP {
    return new Contract(address, _abi, signerOrProvider) as OTAP;
  }
}
