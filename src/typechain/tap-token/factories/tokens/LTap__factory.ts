/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { LTap, LTapInterface } from "../../tokens/LTap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_tapToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxLockedUntil",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "StillLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "TooLate",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedUntil",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxLockedUntil",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockedUntil",
        type: "uint256",
      },
    ],
    name: "setLockedUntil",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610180346200052f57601f62001b8838819003918201601f19168301916001600160401b03831184841017620005345780849260409485528339810103126200052f578051906001600160a01b03821682036200052f576020015190604051916200006a836200054a565b6004918284526304c5441560e41b93846020820152604051946200008e866200054a565b84865280602087015260405190620000a6826200054a565b858252602082015260405195620000bd876200054a565b60018752603160f81b6020880152600080546001600160a01b031916339081178255907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a38051906001600160401b0382116200051a57600554600181811c911680156200050f575b6020821014620004fa579081601f849311620004a4575b50602090601f8311600114620004155760009262000409575b50508160011b916000199060031b1c1916176005555b8051906001600160401b038211620003f457600654600181811c91168015620003e9575b6020821014620003d4579081601f84931162000370575b50602090601f8311600114620002f657600092620002ea575b50508160011b916000199060031b1c1916176006555b602081519101209360208151910120938060e052610100948086524660a05260405160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f93848452604083015260608201524660808201523060a082015260a0815260c081019581871060018060401b03881117620002d55750856040525190206080523060c052610120908152610140918252826009556101609283526116019485620005678639608051856112fe015260a051856113ca015260c051856112cf015260e0518561134d015251846113730152518361132a01525182818161042e01526105540152518181816109dc0152610a480152f35b604190634e487b7160e01b6000525260246000fd5b015190503880620001c2565b6006600090815260008051602062001b688339815191529350601f198516905b8181106200035757509084600195949392106200033d575b505050811b01600655620001d8565b015160001960f88460031b161c191690553880806200032e565b9293602060018192878601518155019501930162000316565b600660005290915060008051602062001b68833981519152601f840160051c81019160208510620003c9575b90601f859493920160051c01905b818110620003b95750620001a9565b60008155849350600101620003aa565b90915081906200039c565b602287634e487b7160e01b6000525260246000fd5b90607f169062000192565b604186634e487b7160e01b6000525260246000fd5b01519050388062000158565b6005600090815293507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db091905b601f198416851062000488576001945083601f198116106200046e575b505050811b016005556200016e565b015160001960f88460031b161c191690553880806200045f565b8181015183556020948501946001909301929091019062000442565b90915060056000526020600020601f840160051c810160208510620004f2575b90849392915b601f830160051c82018110620004e25750506200013f565b60008155859450600101620004ca565b5080620004c4565b602288634e487b7160e01b6000525260246000fd5b90607f169062000128565b604187634e487b7160e01b6000525260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117620005345760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde0314610caf57508163078dfbe714610b95578163095ea7b314610b6b57816318160ddd14610b4d57816323b872dd14610a825781632cb60e9214610a1b578163313ce567146109ff57816333911652146109c45781633644e515146109a057816339509351146109515781634e71e0c81461089457816370a082311461085d5781637ecebe00146108265781638da5cb5b1461080057816395d89b41146106fd578163a457c2d714610654578163a9059cbb14610623578163b6b55f25146104f9578163be040fb01461037f578163ce0617ec14610360578163d505accf1461019457508063dd62ed3e1461014c5763e30c39781461012257600080fd5b346101485781600319360112610148576020906001600160a01b03600154169051908152f35b5080fd5b503461014857806003193601126101485780602092610169610db7565b610171610dd2565b6001600160a01b0391821683526003865283832091168252845220549051908152f35b839150346101485760e0366003190112610148576101b0610db7565b6101b8610dd2565b906044359260643560843560ff8116810361035c57814211610319576001600160a01b0390818516928389526007602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff821117610306578b525190206102ae916102a69161026e6112c5565b918c5191602083019361190160f01b8552602284015260428301526042825261029682610e33565b60c4359260a43592519020611236565b91909161111c565b16036102c357506102c093945061101a565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b5050346101485781600319360112610148576020906009549051908152f35b8383346101485781600319360112610148576009544211156104ea57338252602090600282528083205490331561049e5733845260028352808420549482861061045257826102c095963388526002865203828720558281540390558481518381527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853392a3519163a9059cbb60e01b9083015233602483015260448201526044815261042c81610e33565b7f00000000000000000000000000000000000000000000000000000000000000006113f0565b83608492519162461bcd60e51b8352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152fd5b5162461bcd60e51b8152808501839052602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b51636100d92960e11b81529050fd5b9190503461061f57602036600319011261061f5781359181516323b872dd60e01b60208201523360248201523060448201528360648201526064815260a0810181811067ffffffffffffffff82111761060c578352610578907f00000000000000000000000000000000000000000000000000000000000000006113f0565b33156105ca57610589838254610e87565b9055338352600260205280832082815401905551908152817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b634e487b7160e01b865260418352602486fd5b8280fd5b50503461014857806003193601126101485760209061064d610643610db7565b6024359033610eaa565b5160018152f35b905082346106fa57826003193601126106fa5761066f610db7565b91836024359233815260036020528181206001600160a01b03861682526020522054908282106106a95760208561064d858503873361101a565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b9190503461061f578260031936011261061f57805191836006549060019082821c9282811680156107f6575b60209586861082146107e357508488529081156107c15750600114610768575b610764868661075a828b0383610e65565b5191829182610d6e565b0390f35b929550600683527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8284106107ae57505050826107649461075a928201019438610749565b8054868501880152928601928101610791565b60ff191687860152505050151560051b830101925061075a8261076438610749565b634e487b7160e01b845260229052602483fd5b93607f1693610729565b5050346101485781600319360112610148576001600160a01b0360209254169051908152f35b50503461014857602036600319011261014857806020926001600160a01b0361084d610db7565b1681526007845220549051908152f35b50503461014857602036600319011261014857806020926001600160a01b03610884610db7565b1681526002845220549051908152f35b9190503461061f578260031936011261061f57600154906001600160a01b03928383169182330361090e5750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a373ffffffffffffffffffffffffffffffffffffffff199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b50503461014857806003193601126101485761064d602092610999610974610db7565b91338152600386528481206001600160a01b0384168252865284602435912054610e87565b903361101a565b5050346101485781600319360112610148576020906109bd6112c5565b9051908152f35b505034610148578160031936011261014857602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101485781600319360112610148576020905160128152f35b90503461061f57602036600319011261061f57803591610a466001600160a01b038554163314610de8565b7f00000000000000000000000000000000000000000000000000000000000000008311610a7557505060095580f35b5163ecdd1c2960e01b8152fd5b8391503461014857606036600319011261014857610a9e610db7565b610aa6610dd2565b9184604435946001600160a01b038416815260036020528181203382526020522054906000198203610ae1575b60208661064d878787610eaa565b848210610b0a5750918391610aff6020969561064d9503338361101a565b919394819350610ad3565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b90503461061f578260031936011261061f5760209250549051908152f35b50503461014857806003193601126101485760209061064d610b8b610db7565b602435903361101a565b9190503461061f57606036600319011261061f57610bb1610db7565b91602435918215158303610cab57604435928315158403610ca7576001600160a01b03948591610be5838954163314610de8565b15610c8d571692831590811591610c85575b5015610c425750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b03198092161782556001541660015580f35b906020606492519162461bcd60e51b8352820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152fd5b905038610bf7565b9350505050166001600160a01b0319600154161760015580f35b8580fd5b8480fd5b92915034610d6a5783600319360112610d6a57600554600181811c9186908281168015610d60575b60209586861082146107e357508488529081156107c15750600114610d0757610764868661075a828b0383610e65565b929550600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410610d4d57505050826107649461075a928201019438610749565b8054868501880152928601928101610d30565b93607f1693610cd7565b8380fd5b6020808252825181830181905290939260005b828110610da357505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610d81565b600435906001600160a01b0382168203610dcd57565b600080fd5b602435906001600160a01b0382168203610dcd57565b15610def57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6080810190811067ffffffffffffffff821117610e4f57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610e4f57604052565b91908201809211610e9457565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03809116918215610fc75716918215610f765760008281526002602052604081205491808310610f2257604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260028652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b038091169182156110cb571691821561107b5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260038252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6005811015611220578061112d5750565b6001810361117a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036111c75760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b6003146111d057565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116112b95791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156112ac5781516001600160a01b038116156112a6579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163014806113c7575b15611320577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610e4f5760405251902090565b507f000000000000000000000000000000000000000000000000000000000000000046146112f7565b6001600160a01b0316906040516040810167ffffffffffffffff9082811082821117610e4f576040526020938483527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858401526000808587829751910182855af1903d1561152b573d928311611517579061148c9392916040519261147f88601f19601f8401160185610e65565b83523d868885013e611536565b80518061149a575b50505050565b8184918101031261014857820151908115918215036106fa57506114c057808080611494565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b634e487b7160e01b85526041600452602485fd5b9061148c9392506060915b91929015611598575081511561154a575090565b3b156115535790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156115ab5750805190602001fd5b60405162461bcd60e51b81529081906115c79060048301610d6e565b0390fdfea2646970667358221220a057618e3e7487fda7e41ff6108ab59f87732cbcf435d3f1eb698a3aed83b9f964736f6c63430008120033f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f";

type LTapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LTapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LTap__factory extends ContractFactory {
  constructor(...args: LTapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LTap";
  }

  override deploy(
    _tapToken: PromiseOrValue<string>,
    _maxLockedUntil: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LTap> {
    return super.deploy(
      _tapToken,
      _maxLockedUntil,
      overrides || {}
    ) as Promise<LTap>;
  }
  override getDeployTransaction(
    _tapToken: PromiseOrValue<string>,
    _maxLockedUntil: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tapToken,
      _maxLockedUntil,
      overrides || {}
    );
  }
  override attach(address: string): LTap {
    return super.attach(address) as LTap;
  }
  override connect(signer: Signer): LTap__factory {
    return super.connect(signer) as LTap__factory;
  }
  static readonly contractName: "LTap";

  public readonly contractName: "LTap";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LTapInterface {
    return new utils.Interface(_abi) as LTapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LTap {
    return new Contract(address, _abi, signerOrProvider) as LTap;
  }
}
