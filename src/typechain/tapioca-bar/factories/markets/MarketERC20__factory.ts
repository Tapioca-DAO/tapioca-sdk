/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MarketERC20,
  MarketERC20Interface,
} from "../../markets/MarketERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ApprovalBorrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowanceBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveBorrow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint16",
        name: "actionType",
        type: "uint16",
      },
    ],
    name: "permitAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitBorrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61014060409080825234610198576110b1803803809161001f828561019d565b83398101602080838303126101985782516001600160401b0393848211610198570182601f820112156101985780519084821161016e5785519361006c601f8401601f191685018661019d565b82855283838301011161019857829060005b8381106101845750506000918401015283518481018181108582111761016e57600191839187528281520192603160f81b84528281519101209220908260e052610100948286524660a0528051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f948585528284015260608301524660808301523060a083015260a0825260c08201948286109086111761016e578490525190206080523060c052610120908152610ef092836101c1843960805183610a54015260a05183610b1e015260c05183610a1e015260e05183610aa301525182610ac901525181610a800152f35b634e487b7160e01b600052604160045260246000fd5b81810183015186820184015284920161007e565b600080fd5b601f909101601f19168101906001600160401b0382119082101761016e5760405256fe608080604052600436101561001357600080fd5b600090813560e01c908162a02a201461090257508063095ea7b3146108db57806318160ddd146108bf5780631da8bf101461081157806323b872dd146106745780633644e5151461065157806370a08231146106185780637ecebe00146105df5780637fa0b84e146105ad578063910dd7c814610372578063a9059cbb1461028f578063d505accf146100fc5763dd62ed3e146100af57600080fd5b346100f95760403660031901126100f95760406020916100cd61094e565b6100d5610969565b6001600160a01b039182168352600285528383209116825283522054604051908152f35b80fd5b50346100f95761010b3661097f565b9083959495421161024a576001600160a01b03878116808a52600460205260408a208054919692959290600019831461023657826101df9694928d9260016101d79896019055604051916020830193600080516020610e5b833981519152855260408401528a6060840152898c1660808401528c60a084015260c083015260e082015260e0815261019b816109ce565b5190206101a6610a1b565b9060405190602082019261190160f01b845260228301526042820152604281526101cf81610a00565b519020610d27565b919091610c12565b16036101f1576101ee92610e03565b80f35b60405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606490fd5b634e487b7160e01b8c52601160045260248cfd5b60405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b50346100f95760403660031901126100f9576102a961094e565b60243580928115801590610360575b6102f0575b50506040519182526001600160a01b0316903390600080516020610e9b83398151915290602090a3602060405160018152f35b3381526001602052604081205461030983821015610b44565b6001600160a01b0384169033829003610324575b50506102bd565b60409361033b91610336841515610b89565b610bce565b338352600160205283832055815220610355838254610bf1565b90558138808061031d565b50336001600160a01b038416146102b8565b50346100f95760403660031901126100f9576001600160401b036004358181116105815736602382011215610581578060040135908282116105995760405192601f8301601f19908116603f01168401908111848210176105855790849160405282845260208401923660248284010111610581578060246020930185378401015260243561ffff8116810361057d57610100918284805181010312610579575180151581036105795761042860408501610bfe565b9161043560608601610bfe565b9460808101519460a08201519260c08301519160ff831683036105755760e08401519301519380421161024a57851561056057600080516020610e5b833981519152915b6001600160a01b0388168b52600460205260408b2080549190600019831461054c579161ffff610509989694926101d798969460018401905560405194602086015216604084015260018060a01b038a16606084015260018060a01b038c1660808401528a60a084015260c083015260e082015260e081526104fa816109ce565b602081519101206101a6610a1b565b6001600160a01b038381169116036101f15715610536576101ee926001600160a01b039081169116610e03565b6101ee926001600160a01b039081169116610dac565b634e487b7160e01b8d52601160045260248dfd5b600080516020610e7b83398151915291610479565b8980fd5b8480fd5b8380fd5b8280fd5b634e487b7160e01b85526041600452602485fd5b634e487b7160e01b84526041600452602484fd5b50346100f95760403660031901126100f9576105d46105ca61094e565b6024359033610dac565b602060405160018152f35b50346100f95760203660031901126100f9576020906040906001600160a01b0361060761094e565b168152600483522054604051908152f35b50346100f95760203660031901126100f9576020906040906001600160a01b0361064061094e565b168152600183522054604051908152f35b50346100f957806003193601126100f957602061066c610a1b565b604051908152f35b50346100f95760603660031901126100f95761068e61094e565b90610697610969565b60443591826106d5575b506040519182526001600160a01b03908116921690600080516020610e9b83398151915290602090a3602060405160018152f35b6001600160a01b038481168083526001602090815260408420549286906106fe82861015610b44565b861693848403610713575b50505050506106a1565b83865260028352604080872033885284528620546001810161077d575b509260016020969361075b8794604097610336600080516020610e9b8339815191529c9a1515610b89565b9285525283832055815220610771858254610bf1565b90559138808581610709565b909181106107d1579260016020969361075b8a600080516020610e9b8339815191529a98956107ae8260409a610bce565b86895260028552898920338a528552898920559497509497995050939650610730565b60405162461bcd60e51b815260048101849052601860248201527745524332303a20616c6c6f77616e636520746f6f206c6f7760401b6044820152606490fd5b50346100f9576108203661097f565b9083959495421161024a576001600160a01b03878116808a52600460205260408a208054919692959290600019831461023657826108b09694928d9260016101d79896019055604051916020830193600080516020610e7b833981519152855260408401528a6060840152898c1660808401528c60a084015260c083015260e082015260e0815261019b816109ce565b16036101f1576101ee92610dac565b50346100f957806003193601126100f957602090604051908152f35b50346100f95760403660031901126100f9576105d46108f861094e565b6024359033610e03565b90503461094a57604036600319011261094a57604060209261092261094e565b61092a610969565b6001600160a01b0391821683526003865283832091168252845220548152f35b5080fd5b600435906001600160a01b038216820361096457565b600080fd5b602435906001600160a01b038216820361096457565b60e0906003190112610964576001600160a01b03906004358281168103610964579160243590811681036109645790604435906064359060843560ff81168103610964579060a4359060c43590565b61010081019081106001600160401b038211176109ea57604052565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b038211176109ea57604052565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610b1b575b15610a76577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811060018060401b038211176109ea5760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610a4d565b15610b4b57565b60405162461bcd60e51b815260206004820152601660248201527545524332303a2062616c616e636520746f6f206c6f7760501b6044820152606490fd5b15610b9057565b60405162461bcd60e51b815260206004820152601660248201527545524332303a206e6f207a65726f206164647265737360501b6044820152606490fd5b91908203918211610bdb57565b634e487b7160e01b600052601160045260246000fd5b91908201809211610bdb57565b51906001600160a01b038216820361096457565b6005811015610d115780610c235750565b60018103610c6b5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606490fd5b60028103610cb85760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600314610cc157565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291906fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311610da05791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15610d935781516001600160a01b03811615610d8d579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b909160207fe50de2333c10a9502fcb1d8ae13a51bbf423153dfc63c2b8997665b32154afc39160018060a01b03809416938460005260038352604060002095169485600052825280604060002055604051908152a3565b909160207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259160018060a01b03809416938460005260028352604060002095169485600052825280604060002055604051908152a356fe9cc5629bbe7baa98a89f6f8c2c396b83ab62dbb6cbb12f17f1d6ba7e6f53e2665c9ba5f0d101616843d7918f48ea857d6da95e04ac6d719e105e50a355e7c5d6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212201744ce319f7ba2fd8dc5149b7cf102596abb5fec8bebd4f621c6c1adc2dcc5ba64736f6c63430008120033";

type MarketERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketERC20__factory extends ContractFactory {
  constructor(...args: MarketERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MarketERC20";
  }

  override deploy(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketERC20> {
    return super.deploy(name, overrides || {}) as Promise<MarketERC20>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, overrides || {});
  }
  override attach(address: string): MarketERC20 {
    return super.attach(address) as MarketERC20;
  }
  override connect(signer: Signer): MarketERC20__factory {
    return super.connect(signer) as MarketERC20__factory;
  }
  static readonly contractName: "MarketERC20";

  public readonly contractName: "MarketERC20";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketERC20Interface {
    return new utils.Interface(_abi) as MarketERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketERC20 {
    return new Contract(address, _abi, signerOrProvider) as MarketERC20;
  }
}
