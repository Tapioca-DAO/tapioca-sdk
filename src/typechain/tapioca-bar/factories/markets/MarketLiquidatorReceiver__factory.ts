/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MarketLiquidatorReceiver,
  MarketLiquidatorReceiverInterface,
} from "../../markets/MarketLiquidatorReceiver";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExchangeRateNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "NoOracleAssigned",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapperAssigned",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "Reentrancy",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "OracleAssigned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "swapper",
        type: "address",
      },
    ],
    name: "SwapperAssigned",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
    ],
    name: "allowances",
    outputs: [
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_precision",
        type: "uint256",
      },
    ],
    name: "assignOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "assignSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "cachedRates",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onCollateralReceiver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "precision",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
    ],
    name: "swappers",
    outputs: [
      {
        internalType: "address",
        name: "swapper",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "updateRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461005757600080546001600160a01b0319919082169033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a33391331617176000556110e6908161005d8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c908163078dfbe714610dc9578163124c238314610b8b5781634e71e0c814610ad857816355b6ed5c14610a8f5781635cd3dc15146105fd5781636c43a2ca1461059b578163719d71121461037b5781638cad7fbe146103415781638da5cb5b14610319578163addd5099146101ec578163bbcd821e1461016b57508063bc71d8f914610134578063d73b1dc9146100e85763e30c3978146100bd57600080fd5b346100e457816003193601126100e45760015490516001600160a01b039091168152602090f35b5080fd5b50346100e45761012f6100fa36610f78565b939160018060a01b038091610113828954163314610fe7565b1686526005602052828620911685526020528320918254611032565b905580f35b50346100e45760203660031901126100e45760209181906001600160a01b0361015b610ed7565b1681526003845220549051908152f35b9050346101e857816003193601126101e857610185610ed7565b61018d610ef2565b9260018060a01b0380926101a5828854163314610fe7565b169283865260205284209216918260018060a01b03198254161790557fa02b5255ee60d1f9af74443960734d51468cf7ee586533c5b820a8cadd53cc6a8380a380f35b8280fd5b5050346100e4576020806003193601126101e8576001600160a01b039182610212610ed7565b16845260028252808420815193858583549161022d83610fad565b8083526001938885821691826000146102fb5750506001146102b8575b50600293929161025f91999695990388610f56565b8701541695015490805195869460608652865194856060880152805b8681106102a1575060808098508688010152850152830152601f80199101168101030190f35b8089018301518a820160800152899750820161027b565b93929150508388528686808a20948a955b8187106102e2575093949293509091820101600261024a565b80548b88018401529190950194899250889184016102c9565b60ff19168186015291151560051b840190910191506002905061024a565b5050346100e457816003193601126100e457905490516001600160a01b039091168152602090f35b9050346101e85760203660031901126101e8576020926001600160a01b03918391908361036c610ed7565b16825285522054169051908152f35b8383346100e457602090816003193601126101e85783359367ffffffffffffffff91828611610597573660238701121561059757858201359283116105975760249384870190600597863691878b1b0101116105935786546001600160a01b0398906103ea908a163314610fe7565b875b8681106103f7578880f35b828486888c8c8f808e9161041461040f8b858b611076565b61109c565b16845260029081895261043561040f8b60019584878c8b200154169b611076565b168452875284832091855197889563d6d7d52560e01b87528601528392805461045d81610fad565b8093880152868482169182600014610571575050600114610529575b5050508280910391855af191821561051f578b908c936104df575b50806104d6575b6104c5575b505060001981146104b3576001016103ec565b634e487b7160e01b8952601186528789fd5b8a5260038452858a20558a806104a0565b5081151561049b565b809350888092503d8311610518575b6104f88183610f56565b81010312610514578461050a83611069565b920151918d610494565b8a80fd5b503d6104ee565b87513d8d823e3d90fd5b909192508352898320918a84935b83851061054f57505050508201604401828038610479565b9194509295508391945080546044878a01015201930185928f928a8d96610537565b93925094505083925060449160ff19168284015215158a1b8201019138610479565b8680fd5b8480fd5b9050346101e8576105ab36610f78565b939160018060a01b0380916105c4828954163314610fe7565b16865260056020528286209116855260205283209081549283018093116105ea57505580f35b634e487b7160e01b845260119052602483fd5b828434610a8c5760a0366003190112610a8c57610618610ed7565b92610621610ef2565b6001600160a01b036044358181169290839003610597576064356084359367ffffffffffffffff90818611610a885736602387011215610a88578587013582811161098d57860195602494368689011161099157600654610a7857600160065586808b54169c169b8c036109f9578a516370a0823160e01b8152308a82015260209c9188169891908d8189818d5afa908115610a6e579087918d91610a39575b5010610a2957888b5260028d528760018d8d2001541615610a1957888b52898d52878c8c20541615610a09578c91839133036109b6575b031261098d578401359182156109a657868952878b52858a8a2054168a5194859363678a252760e11b8552898b8601528785015260448401528960648401528260846101409485935afa93841561099c57928992899795928c9795859461086a575b5050506101c4949596978352878c528b8787818620541693606082519b8c9a8b9963efa84c6d60e01b8b5284519282845116908c015286830151908b0152848201511660448a015201516064880152606083820151805160848a01528481015160a48a01528381015160c48a0152015160e488015201518051151561010487015201511515610124850152610144840152336101648401526101a0610184840152816101a48401525af1908115610860578391610831575b501561082357506006555160018152f35b825163081ceff360e41b8152fd5b90508381813d8311610859575b6108488183610f56565b810103126101e85784015185610812565b503d61083e565b84513d85823e3d90fd5b93509350809497508291959896503d8511610995575b61088a8183610f56565b81010392831261098d578951926108a084610f08565b60808112610991578a516108b381610f3a565b6108bc83611055565b81528c8301518d8201526108d18c8401611055565b8c8201526060830151606082015284526080607f19820112610991578a9081516108fa81610f3a565b6080840151815260a08401518e82015260c08401518382015260e08401516060820152858e015260ff19011261098d57895191828b019081118382101761097b57938a96938a938d6109676101208d9c9a966101c49a8d5261095f6101008201611069565b855201611069565b908201528882015291979695948d8061075a565b634e487b7160e01b8a5260418952868afd5b8880fd5b8980fd5b503d610880565b8a513d8b823e3d90fd5b895163f1640ae160e01b81528890fd5b915050338a5260058c528a8a20888b528c52848b8b2054106109f957818c91338c52600583528c8c208a8d5283528c8c206109f2888254611032565b90556106f8565b8a5163ea8e4eb560e01b81528990fd5b8b5163cf894fe360e01b81528a90fd5b8b51633c879e7760e11b81528a90fd5b8b5163342ccafd60e21b81528a90fd5b8f8193508092503d8311610a67575b610a528183610f56565b81010312610a63578690518f6106c1565b8b80fd5b503d610a48565b8d513d8e823e3d90fd5b8a5163558a1e0360e11b81528990fd5b8780fd5b80fd5b5050346100e457806003193601126100e45780602092610aad610ed7565b610ab5610ef2565b6001600160a01b0391821683526005865283832091168252845220549051908152f35b919050346101e857826003193601126101e8576001546001600160a01b03929091838316919033839003610b485750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b919050346101e85760803660031901126101e857610ba7610ed7565b610baf610ef2565b67ffffffffffffffff91604435918383116105935736602384011215610593578286013592848411610db65785519488602092601f1996610bf78589601f840116018a610f56565b80895236602482840101116101e857806024869301838b01378801015288546001600160a01b039290610c2d9084163314610fe7565b875196610c3988610f08565b875282818801941698898552838989019660643588521698898c52600283528b209751908151938411610da35750610c718854610fad565b601f8111610d60575b5081601f8411600114610cf55750600296508a919083610cea575b50508160011b916000199060031b1c19161785555b6001850191511660018060a01b0319825416179055519101557fd35615cf633cdd04206b370029477f61d6ad0a5bac9f345812359d782d14e89c8380a380f35b015190503880610c95565b92939495968416888c52838c20938c905b828210610d485750509160019391856002999897969410610d2f575b505050811b018555610caa565b015160001960f88460031b161c19169055388080610d22565b80600186978294978701518155019601940190610d06565b888c52828c20601f850160051c810191848610610d99575b601f0160051c01905b818110610d8e5750610c7a565b8c8155600101610d81565b9091508190610d78565b634e487b7160e01b8c526041905260248bfd5b634e487b7160e01b885260418752602488fd5b919050346101e85760603660031901126101e857610de5610ed7565b9160243591821515830361059757604435928315158403610ed35760018060a01b03948591610e18838954163314610fe7565b15610eba571692831590811591610eb2575b5015610e775750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b031991821617825560018054909116905580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b905038610e2a565b93505050501660018060a01b0319600154161760015580f35b8580fd5b600435906001600160a01b0382168203610eed57565b600080fd5b602435906001600160a01b0382168203610eed57565b6060810190811067ffffffffffffffff821117610f2457604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff821117610f2457604052565b90601f8019910116810190811067ffffffffffffffff821117610f2457604052565b6060906003190112610eed576001600160a01b03906004358281168103610eed57916024359081168103610eed579060443590565b90600182811c92168015610fdd575b6020831014610fc757565b634e487b7160e01b600052602260045260246000fd5b91607f1691610fbc565b15610fee57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b9190820391821161103f57565b634e487b7160e01b600052601160045260246000fd5b51906001600160a01b0382168203610eed57565b51908115158203610eed57565b91908110156110865760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b0381168103610eed579056fea2646970667358221220ba2b3a3b3d911c2d27cc43098393f16c9573c8a715192288e313d6fe109e96ee64736f6c63430008130033";

type MarketLiquidatorReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketLiquidatorReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketLiquidatorReceiver__factory extends ContractFactory {
  constructor(...args: MarketLiquidatorReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MarketLiquidatorReceiver";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketLiquidatorReceiver> {
    return super.deploy(overrides || {}) as Promise<MarketLiquidatorReceiver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MarketLiquidatorReceiver {
    return super.attach(address) as MarketLiquidatorReceiver;
  }
  override connect(signer: Signer): MarketLiquidatorReceiver__factory {
    return super.connect(signer) as MarketLiquidatorReceiver__factory;
  }
  static readonly contractName: "MarketLiquidatorReceiver";

  public readonly contractName: "MarketLiquidatorReceiver";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketLiquidatorReceiverInterface {
    return new utils.Interface(_abi) as MarketLiquidatorReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketLiquidatorReceiver {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MarketLiquidatorReceiver;
  }
}
