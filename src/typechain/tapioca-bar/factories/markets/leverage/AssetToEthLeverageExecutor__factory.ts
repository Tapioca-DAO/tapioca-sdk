/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AssetToEthLeverageExecutor,
  AssetToEthLeverageExecutorInterface,
} from "../../../markets/leverage/AssetToEthLeverageExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yb",
        type: "address",
      },
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "buildSwapDefaultData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collateralId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0346100e957601f6112ed38819003918201601f19168301916001600160401b038311848410176100ee578084926060946040528339810103126100e9578051906001600160a01b039081831683036100e9576020810151908282168092036100e957604001519182168092036100e95760008054604051946001600160a01b03199491851693919233907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a36080528360035416176003558260025416176002553391331617176000556111e8908161010582396080518181816102a50152610f190152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063078dfbe7146109b65780630fb5d60d1461078d5780632b3297f914610764578063437be622146107185780634e71e0c81461066a5780638da5cb5b146106415780639c82f2a4146105f5578063c990ad1c146102fd578063dbd01de1146102d4578063de4065771461028f578063e2211658146100d25763e30c39780361000e57346100cd5760003660031901126100cd576001546040516001600160a01b039091168152602090f35b600080fd5b346100cd5760603660031901126100cd576100eb610abe565b6001600160a01b039060243582811691908290036100cd5760405192604084018481106001600160401b03821117610279576040526002845260209261060f60f31b848601528160035416916040519363678a252760e11b85521660048401526024830152604435604483015260006064830152610140908183608481845afa90811561023e5761019c93859360009361024a575b5050604051630b7ecdc960e31b81529384926004840190610dc9565b61016061014483015281806101b5610164820189610b54565b03915afa801561023e5760009061020f575b6101f791506101e9604051948592858401526040808401526060830190610b54565b03601f198101845283610c0d565b61020b604051928284938452830190610b54565b0390f35b508181813d8311610237575b6102258183610c0d565b810103126100cd576101f790516101c7565b503d61021b565b6040513d6000823e3d90fd5b61026a929350803d10610272575b6102628183610c0d565b810190610cd5565b908680610180565b503d610258565b634e487b7160e01b600052604160045260246000fd5b346100cd5760003660031901126100cd576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100cd5760003660031901126100cd576002546040516001600160a01b039091168152602090f35b61030636610ad4565b600254604051633a304d8b60e21b815260006004820152336024820152602098959795969593918990829060449082906001600160a01b03165afa90811561023e576000916105c0575b50156105ae5761036a91610362610e4b565b810190610c56565b604051633c2f4f4360e11b815291929188816004816001600160a01b038a165afa90811561023e57600091610579575b506001600160a01b03166105675760035460405163678a252760e11b81526001600160a01b0384811660048301819052600060248401819052604484018c905260648401529991949216919061014085608481865afa92831561023e5761045f9a604096600095610544575b50610533575b50505061043d600060018060a01b03600354169285519a8b958694859363efa84c6d60e01b85526004850190610dc9565b88610144840152306101648401526101a06101848401526101a4830190610b54565b03925af194851561023e57600095610501575b5084106104ef576001600160a01b0382163b156100cd57604051630c46aac760e31b8152306004820181905260248201526044810185905292600084606481886001600160a01b0388165af192831561023e576104d89486946104e0575b503091610f00565b604051908152f35b6104e990610bdf565b876104d0565b60405163342ccafd60e21b8152600490fd5b61052491955060403d60401161052c575b61051c8183610c0d565b810190610e35565b509386610472565b503d610512565b61053c92611013565b89808061040c565b6105609195506101403d61014011610272576102628183610c0d565b938d610406565b6040516358700a0160e11b8152600490fd5b90508881813d83116105a7575b6105908183610c0d565b810103126100cd576105a190610cc1565b8961039a565b503d610586565b6040516303482c7160e21b8152600490fd5b90508881813d83116105ee575b6105d78183610c0d565b810103126100cd576105e890610c2e565b89610350565b503d6105cd565b346100cd5760203660031901126100cd576004356001600160a01b03818116918290036100cd5761062b90600054163314610b94565b600380546001600160a01b031916919091179055005b346100cd5760003660031901126100cd576000546040516001600160a01b039091168152602090f35b346100cd5760003660031901126100cd576001546001600160a01b0390818116338190036106d457806000549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b03199283161760005516600155005b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b346100cd5760203660031901126100cd576004356001600160a01b03818116918290036100cd5761074e90600054163314610b94565b600280546001600160a01b031916919091179055005b346100cd5760003660031901126100cd576003546040516001600160a01b039091168152602090f35b346100cd5761079b36610ad4565b959392949060018060a01b03908160025416976040518099633a304d8b60e21b82526000600483015233602483015281604460209c8d935afa90811561023e57600091610981575b50156105ae5782916107f791610362610e4b565b91909316604051633c2f4f4360e11b81528981600481855afa801561023e578491600091610949575b501661056757803b156100cd576040516339f4769360e01b815230600482015260248101899052906000908290604490829084905af1801561023e5761093a575b5081600354166040519263678a252760e11b84526000600485015286166024840152876044840152600060648401526101408084608481855afa98891561023e576108d49960409561043d9360009261091d575b5050855163efa84c6d60e01b81529a8b95869485936004850190610dc9565b03925af194851561023e576000956108fb575b5084106104ef576104d89284923091610f00565b61091591955060403d60401161052c5761051c8183610c0d565b5093866108e7565b6109339250803d10610272576102628183610c0d565b8c806108b5565b61094390610bdf565b88610861565b8092508b8092503d831161097a575b6109628183610c0d565b810103126100cd576109748491610cc1565b8b610820565b503d610958565b90508981813d83116109af575b6109988183610c0d565b810103126100cd576109a990610c2e565b8a6107e3565b503d61098e565b346100cd5760603660031901126100cd576109cf610abe565b60243580151581036100cd576044359081151582036100cd5760018060a01b03928391610a0183600054163314610b94565b15610aa5571690811590811591610a9d575b5015610a6057806000549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b031991821617600055600180549091169055005b60405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152606490fd5b905083610a13565b9150501660018060a01b03196001541617600155600080f35b600435906001600160a01b03821682036100cd57565b9060c06003198301126100cd57600435916001600160a01b0360243581811681036100cd579260443582811681036100cd57926064359260843590811681036100cd579160a4356001600160401b03928382116100cd57806023830112156100cd5781600401359384116100cd57602484830101116100cd576024019190565b919082519283825260005b848110610b80575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610b5f565b15610b9b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b03811161027957604052565b608081019081106001600160401b0382111761027957604052565b90601f801991011681019081106001600160401b0382111761027957604052565b519081151582036100cd57565b6001600160401b03811161027957601f01601f191660200190565b91906040838203126100cd578235926020810135906001600160401b0382116100cd570181601f820112156100cd57803590610c9182610c3b565b92610c9f6040519485610c0d565b828452602083830101116100cd57816000926020809301838601378301015290565b51906001600160a01b03821682036100cd57565b80910361014081126100cd5760408051926001600160401b0392606085018481118682101761027957808452608082126100cd57610d1281610bf2565b610d1b83610cc1565b815260208301516080870152610d32848401610cc1565b60a0870152606083015160c087015285526080607f198201126100cd5782908151610d5c81610bf2565b6080840151815260a0840151602082015260c08401518382015260e08401516060820152602087015260ff1901126100cd578151928383019081118482101761027957610dbe91610120918452610db66101008201610c2e565b855201610c2e565b602083015282015290565b60206040610120926060815160018060a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b91908260409103126100cd576020825192015190565b6003546001600160a01b03908116908115610eee576020906002541691604460405180948193633a304d8b60e21b83526000600484015260248301525afa90811561023e57600091610eb2575b5015610ea057565b60405163086a95e160e21b8152600490fd5b906020823d8211610ee6575b81610ecb60209383610c0d565b81010312610ee35750610edd90610c2e565b38610e98565b80fd5b3d9150610ebe565b604051631da137b560e01b8152600490fd5b600060a4926040959660018060a01b038098610f4083837f0000000000000000000000000000000000000000000000000000000000000000168096611013565b8851998a988997634d4d7cbd60e11b8952600489015216602487015216604485015260648401528160848401525af1801561023e57610f7c5750565b610f939060403d811161052c5761051c8183610c0d565b5050565b3d15610fc2573d90610fa882610c3b565b91610fb66040519384610c0d565b82523d6000602084013e565b606090565b15610fce57565b60405162461bcd60e51b815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c656400000000006044820152606490fd5b9190823b156111725760405163095ea7b360e01b60208083018281526001600160a01b038516602485015260006044808601829052855291969195939192918691829161105f81610bf2565b519082865af161106d610f97565b9080611133575b61107e9150610fc7565b8261108c575b505050505050565b6040518681019182526001600160a01b03949094166024850152604480850193909352918352839283929083906110c4606482610c0d565b51925af1906110d1610f97565b826110ee575b50506110e39150610fc7565b388080808080611084565b809192505191821592831561110d575b5050506110e3915038806110d7565b8293509184919281010312610ee357506110e39161112b9101610c2e565b3880806110fe565b50805187811591821561114d575b505061107e9150611074565b838092935001031261116e576111678761107e9201610c2e565b8738611141565b8580fd5b60405162461bcd60e51b815260206004820152601860248201527714d85999505c1c1c9bdd994e881b9bc818dbdb9d1c9858dd60421b6044820152606490fdfea264697066735822122077e1ef8853bf42b96bbfa67121e241504a46d690772e28ea261c2076fc39e5d964736f6c63430008130033";

type AssetToEthLeverageExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetToEthLeverageExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetToEthLeverageExecutor__factory extends ContractFactory {
  constructor(...args: AssetToEthLeverageExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AssetToEthLeverageExecutor";
  }

  override deploy(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetToEthLeverageExecutor> {
    return super.deploy(
      _yb,
      _swapper,
      _cluster,
      overrides || {}
    ) as Promise<AssetToEthLeverageExecutor>;
  }
  override getDeployTransaction(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yb, _swapper, _cluster, overrides || {});
  }
  override attach(address: string): AssetToEthLeverageExecutor {
    return super.attach(address) as AssetToEthLeverageExecutor;
  }
  override connect(signer: Signer): AssetToEthLeverageExecutor__factory {
    return super.connect(signer) as AssetToEthLeverageExecutor__factory;
  }
  static readonly contractName: "AssetToEthLeverageExecutor";

  public readonly contractName: "AssetToEthLeverageExecutor";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetToEthLeverageExecutorInterface {
    return new utils.Interface(_abi) as AssetToEthLeverageExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetToEthLeverageExecutor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AssetToEthLeverageExecutor;
  }
}
