/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AssetToGLPLeverageExecutor,
  AssetToGLPLeverageExecutorInterface,
} from "../../../markets/leverage/AssetToGLPLeverageExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yb",
        type: "address",
      },
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GlpNotValid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "NotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "buildSwapDefaultData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collateralId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461011857601f6115ad38819003918201601f19168301916001600160401b0383118484101761011d57808492608094604052833981010312610118578051906001600160a01b0390818316830361011857602081015182811680910361011857604082015191838316809303610118576060015192831683036101185760008054604051956001600160a01b03199491851693919233907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360805283600354161760035582600254161760025533913316171760005560a052611479908161013482396080518181816102b9015281816104bb0152610af3015260a051818181610392015281816109650152610aac0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c908163078dfbe714610c565781630fb5d60d146109bd5781632b3297f9146109945781633e413bee14610950578163437be622146109045781634e71e0c8146108515781638da5cb5b146108295781639c82f2a4146107dd578163c990ad1c14610311578163dbd01de1146102e8578163de406577146102a4578163e2211658146100dd575063e30c3978146100b257600080fd5b346100d957816003193601126100d95760015490516001600160a01b039091168152602090f35b5080fd5b919050346102a05760603660031901126102a0576100f9610d64565b602435936001600160a01b0393909190848616860361029b578351958487018781106001600160401b038211176102865785526002875260209561060f60f31b878901526003541690855190631fd177af60e11b82528180610166610140978894604435918985016110b9565b0381855afa93841561027c579087939291869561024d575b505061019a8651948593630b7ecdc960e31b85528401906110f0565b61016061014483015281806101b361016482018b610dfa565b03915afa91821561024257809261020b575b5050906101f8610207926101ea83519687928784015284808401526060830190610dfa565b03601f198101865285610ec9565b51928284938452830190610dfa565b0390f35b9091508382813d831161023b575b6102238183610ec9565b810103126102385750516101f86102076101c5565b80fd5b503d610219565b8351903d90823e3d90fd5b61026d929550803d10610275575b6102658183610ec9565b810190610fc5565b92388061017e565b503d61025b565b86513d87823e3d90fd5b604183634e487b7160e01b6000525260246000fd5b600080fd5b8280fd5b5050346100d957816003193601126100d957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346100d957816003193601126100d95760025490516001600160a01b039091168152602090f35b80838561031d36610d7a565b94909195929893600160a01b6001900392836002541696898b519d8e633a304d8b60e21b815201528c602498338a83015260209e8f91815a91604492fa90811561070e578b916107a8575b5015610798576103b99493929161038991610381611385565b810190610f4d565b92809792919e877f000000000000000000000000000000000000000000000000000000000000000016809761115c565b948510610782578a51633c2f4f4360e11b815282851695908e818a818a5afa908115610778578f8d9261073e575b505085811694851561072e57918e91610400949361115c565b9a8b1061071857895163095ea7b360e01b8082528188018690528189018b9052939291908d816044818e875af1801561070e57928e928c8f938f96908c916106c4575b5095518881526001600160a01b039092169582019586526020860193909352938492839182906040015b03925af180156106825761068c575b50823b15610659578851630c46aac760e31b8152308682015230878201528a6044820152888160648183885af180156106825790899161066e575b50507f000000000000000000000000000000000000000000000000000000000000000016948789519183835287878401528201528a816044818b875af1801561066457918a918c93610621575b5089519081526001600160a01b038716868201908152602081019290925292839182908a9082906040015b03925af18015610617579188969593918895936105ce575b508451634d4d7cbd60e11b81529182019081523060208201526001600160a01b039093166040840152606083019590955260006080830152849182908590829060a00103925af190811561024257506105a2575b5051908152f35b6105c190823d84116105c7575b6105b98183610ec9565b810190610faf565b5061059b565b503d6105af565b8092949697508a80929496503d8311610610575b6105ec8183610ec9565b8101031261060c5791858794926106058a989795610eea565b5090610547565b8580fd5b503d6105e2565b87513d88823e3d90fd5b8092508391933d831161065d575b6106398183610ec9565b810103126106595761052f928b926106518c93610eea565b509093610504565b8780fd5b503d61062f565b89513d8a823e3d90fd5b61067790610e85565b61065957878c6104b7565b8a513d8b823e3d90fd5b8b81813d83116106bd575b6106a18183610ec9565b810103126106b9576106b290610eea565b508b61047c565b8880fd5b503d610697565b945050509290935081813d8311610707575b6106e08183610ec9565b810103126107035761046d928e928c8f938f6106fc8d92610eea565b5096610443565b8a80fd5b503d6106d6565b8c513d8d823e3d90fd5b89516328e217f560e01b81528087018390528790fd5b8d5163305d420f60e11b81528a90fd5b90809250813d8311610771575b6107558183610ec9565b8101031261076d5761076690610f9b565b8f8f6103e7565b8b80fd5b503d61074b565b8d513d8e823e3d90fd5b8a516328e217f560e01b81528088018490528890fd5b8a516303482c7160e21b81528790fd5b90508d81813d83116107d6575b6107bf8183610ec9565b81010312610703576107d090610eea565b8e610368565b503d6107b5565b8390346100d95760203660031901126100d957356001600160a01b03818116918290036102a057610812908354163314610e3a565b600380546001600160a01b03191691909117905580f35b5050346100d957816003193601126100d957905490516001600160a01b039091168152602090f35b919050346102a057826003193601126102a0576001546001600160a01b039290918383169190338390036108c15750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b8390346100d95760203660031901126100d957356001600160a01b03818116918290036102a057610939908354163314610e3a565b600280546001600160a01b03191691909117905580f35b5050346100d957816003193601126100d957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346100d957816003193601126100d95760035490516001600160a01b039091168152602090f35b919050346102a0576109ce36610d7a565b989591949792600160a09592951b600190039485600254169a8951809c633a304d8b60e21b82528a8883015233602483015260209d8e91815a91604492fa908115610c4c578a91610c13575b5015610c0357610a2f87928d92610381611385565b95919294909d168c5193633c2f4f4360e11b8552848a81845afa938415610778578f8d95610bcb575b505089841615610bbb57803b1561076d578c516339f4769360e01b815230818b019081526020810184905290918d9183919082908490829060400103925af1801561077857610ba2575b509083610ad3928a7f000000000000000000000000000000000000000000000000000000000000000016809561115c565b918210610b8c57610ae79291848c9261115c565b978810610b74578316927f00000000000000000000000000000000000000000000000000000000000000001692865163095ea7b360e01b9081815285858201528760248201528a816044818b875af1801561066457918a918c93610621575089519081526001600160a01b038716868201908152602081019290925292839182908a90829060400161052f565b86516328e217f560e01b815290841681840152602490fd5b856024918b51916328e217f560e01b8352820152fd5b610ad392919b610bb28692610e85565b9b919250610aa2565b8c516358700a0160e11b81528990fd5b9080929550813d8311610bfc575b610be38183610ec9565b8101031261076d57610bf490610f9b565b92388f610a58565b503d610bd9565b89516303482c7160e21b81528690fd5b90508c81813d8311610c45575b610c2a8183610ec9565b81010312610c4157610c3b90610eea565b38610a1a565b8980fd5b503d610c20565b8b513d8c823e3d90fd5b919050346102a05760603660031901126102a057610c72610d64565b91602435918215158303610d605760443592831515840361060c5760018060a01b03948591610ca5838954163314610e3a565b15610d47571692831590811591610d3f575b5015610d045750508083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b031991821617825560018054909116905580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b905038610cb7565b93505050501660018060a01b0319600154161760015580f35b8480fd5b600435906001600160a01b038216820361029b57565b9060c060031983011261029b57600435916001600160a01b03602435818116810361029b5792604435828116810361029b579260643592608435908116810361029b579160a4356001600160401b039283821161029b578060238301121561029b57816004013593841161029b576024848301011161029b576024019190565b919082519283825260005b848110610e26575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e05565b15610e4157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b038111610e9857604052565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b03821117610e9857604052565b90601f801991011681019081106001600160401b03821117610e9857604052565b5190811515820361029b57565b81601f8201121561029b578035906001600160401b038211610e985760405192610f2b601f8401601f191660200185610ec9565b8284526020838301011161029b57816000926020809301838601378301015290565b60808183031261029b578035926001600160401b0391602081013583811161029b5784610f7b918301610ef7565b93604082013593606083013590811161029b57610f989201610ef7565b90565b51906001600160a01b038216820361029b57565b919082604091031261029b576020825192015190565b809103610140811261029b5760408051926001600160401b03926060850184811186821017610e98578084526080821261029b5761100281610eae565b61100b83610f9b565b815260208301516080870152611022848401610f9b565b60a0870152606083015160c087015285526080607f1982011261029b578290815161104c81610eae565b6080840151815260a0840151602082015260c08401518382015260e08401516060820152602087015260ff19011261029b5781519283830190811184821017610e98576110ae916101209184526110a66101008201610eea565b855201610eea565b602083015282015290565b6001600160a01b0391821681529116602082015260408101919091526000606082018190526080820181905260a082015260c00190565b60206040610120926060815160018060a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b918095949293919360018060a01b0390816003541690604096875190631fd177af60e11b8252818061119761014098899487600485016110b9565b0381865afa94851561137a57600095611357575b505082169788611246575b50508495965060006111ea91600396959654169261120b86519788968795869463efa84c6d60e01b865260048601906110f0565b610144840152306101648401526101a06101848401526101a4830190610dfa565b03925af191821561123c5760009261122257505090565b6112389250803d106105c7576105b98183610ec9565b5090565b513d6000823e3d90fd5b86519863095ea7b360e01b92838b5260048b0152600060248b01526020998a816044816000865af1801561134c57908b939291611313575b50600354895194855285166001600160a01b031660048501526024840191909152829081600081604481015b03925af1978815611308578697989695966112cb575b8897509594956111b6565b90809550813d8311611301575b6112e28183610ec9565b8101031261029b5760006111ea916112fa8896610eea565b50916112c0565b503d6112d8565b86513d6000823e3d90fd5b9283813d8311611345575b6113288183610ec9565b8101031261029b576112aa9361133e8c94610eea565b509361127e565b503d61131e565b89513d6000823e3d90fd5b84929550908161137292903d10610275576102658183610ec9565b9390386111ab565b88513d6000823e3d90fd5b6003546001600160a01b03908116908115611431576020906002541691604460405180948193633a304d8b60e21b83526000600484015260248301525afa908115611425576000916113ec575b50156113da57565b60405163086a95e160e21b8152600490fd5b906020823d821161141d575b8161140560209383610ec9565b81010312610238575061141790610eea565b386113d2565b3d91506113f8565b6040513d6000823e3d90fd5b604051631da137b560e01b8152600490fdfea264697066735822122051bb48f91ee01b4a6aa90336ad0ed97c6778999ea601efb0108736a7a752bdda64736f6c63430008120033";

type AssetToGLPLeverageExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetToGLPLeverageExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetToGLPLeverageExecutor__factory extends ContractFactory {
  constructor(...args: AssetToGLPLeverageExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AssetToGLPLeverageExecutor";
  }

  override deploy(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetToGLPLeverageExecutor> {
    return super.deploy(
      _yb,
      _swapper,
      _cluster,
      _usdc,
      overrides || {}
    ) as Promise<AssetToGLPLeverageExecutor>;
  }
  override getDeployTransaction(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yb,
      _swapper,
      _cluster,
      _usdc,
      overrides || {}
    );
  }
  override attach(address: string): AssetToGLPLeverageExecutor {
    return super.attach(address) as AssetToGLPLeverageExecutor;
  }
  override connect(signer: Signer): AssetToGLPLeverageExecutor__factory {
    return super.connect(signer) as AssetToGLPLeverageExecutor__factory;
  }
  static readonly contractName: "AssetToGLPLeverageExecutor";

  public readonly contractName: "AssetToGLPLeverageExecutor";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetToGLPLeverageExecutorInterface {
    return new utils.Interface(_abi) as AssetToGLPLeverageExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetToGLPLeverageExecutor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AssetToGLPLeverageExecutor;
  }
}
