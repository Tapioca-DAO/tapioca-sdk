/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AssetToGLPLeverageExecutor,
  AssetToGLPLeverageExecutorInterface,
} from "../../../markets/leverage/AssetToGLPLeverageExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yb",
        type: "address",
      },
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "buildSwapDefaultData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collateralId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461011f57601f6118e238819003918201601f19168301916001600160401b038311848410176101245780849260809460405283398101031261011f578051906001600160a01b0390818316830361011f57602081015182811680910361011f5760408201519183831680930361011f5760600151928316830361011f5760008054604051956001600160a01b03199491851693919233907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360805283600354161760035582600254161760025533913316171760005560a0526117a7908161013b82396080518181816102b50152818161050e0152610b96015260a05181818161038a0152818161040701528181610a0f0152610b4f0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c8063078dfbe714610e195780630fb5d60d14610a675780632b3297f914610a3e5780633e413bee146109f9578063437be622146109ac5780634e71e0c8146109005780638da5cb5b146108d95780639c82f2a414610888578063c990ad1c1461030d578063dbd01de1146102e4578063de4065771461029f578063e2211658146100d75763e30c3978146100ac57600080fd5b346100d457806003193601126100d4576001546040516001600160a01b039091168152602090f35b80fd5b50346100d45760603660031901126100d4576100f1610f21565b602435916001600160a01b0391828416840361029a5760405193604085018581106001600160401b03821117610284576040526002855260209361060f60f31b85870152600354169060405190631fd177af60e11b825281806101606101409687946044359160048501611344565b0381855afa92831561027957918493918693610198969361024a575b5050604051630b7ecdc960e31b8152948592600484019061137b565b61016061014483015281806101b161016482018a610fb7565b03915afa90811561023e57809161020c575b506101f491506101e6604051948592858401526040808401526060830190610fb7565b03601f198101845283611070565b610208604051928284938452830190610fb7565b0390f35b90508282813d8311610237575b6102238183611070565b810103126100d457506101f49051386101c3565b503d610219565b604051903d90823e3d90fd5b61026a929350803d10610272575b6102628183611070565b810190611250565b90388061017c565b503d610258565b6040513d86823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b50346100d457806003193601126100d4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100d457806003193601126100d4576002546040516001600160a01b039091168152602090f35b5061031736610f37565b9291906044602060018060a09a999a1b036002541660405192838092633a304d8b60e21b82528d60048301523360248301525afa90811561087d578991610830575b50906103b09461036b61037b9361109e565b610373611610565b81019061114b565b94839693919960018060a01b037f000000000000000000000000000000000000000000000000000000000000000016906113e7565b9283106107e957604051633c2f4f4360e11b8152916020836004816001600160a01b0389165afa9283156107de5787908994610799575b506001600160a01b03841694929361043493906104058715156111ad565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166113e7565b9485106107535760405163095ea7b360e01b8082526001600160a01b0385166004830152602482018890528795909390916020816044818a865af180156106b35761071a575b506040518481526001600160a01b03861660048201526024810188905290602090829060449082908a905af180156106d2576106dd575b506001600160a01b0384163b1561065e57604051630c46aac760e31b815230600482018190526024820152604481018790528581606481836001600160a01b038a165af19081156106d25786916106be575b505060018060a01b037f00000000000000000000000000000000000000000000000000000000000000001692604051908082528460048301528660248301526020826044818a60018060a01b038b165af180156106b357610675575b6040519081526001600160a01b03858116600483015260248201899052909560209250869160449183918a91165af193841561066a57869461061b575b5060408051634d4d7cbd60e11b8152959094869493859384926105c6929091309060048601611221565b03925af1801561061057602093506105e2575b50604051908152f35b6106039060403d604011610609575b6105fb8183611070565b81019061120b565b506105d9565b503d6105f1565b6040513d85823e3d90fd5b92919093506020833d602011610662575b8161063960209383611070565b8101031261065e576105c6946040946106528895611091565b5091929394509461059c565b8480fd5b3d915061062c565b6040513d87823e3d90fd5b6020823d6020116106ab575b8161068e60209383611070565b810103126106a7576106a1602092611091565b5061055f565b8680fd5b3d9150610681565b6040513d89823e3d90fd5b6106c790611042565b61065e578438610503565b6040513d88823e3d90fd5b6020813d602011610712575b816106f660209383611070565b8101031261070e5761070790611091565b50386104b1565b8580fd5b3d91506106e9565b6020813d60201161074b575b8161073360209383611070565b810103126106a75761074490611091565b503861047a565b3d9150610726565b60405162461bcd60e51b815260206004820152602a60248201526000805160206117528339815191526044820152690656e6f75676820474c560b41b6064820152608490fd5b929350506020823d6020116107d6575b816107b660209383611070565b810103126107d257866107cb61043493611199565b93926103e7565b8780fd5b3d91506107a9565b6040513d8a823e3d90fd5b60405162461bcd60e51b815260206004820152602b602482015260008051602061175283398151915260448201526a656e6f756768205553444360a81b6064820152608490fd5b9190506020823d602011610875575b8161084c60209383611070565b81010312610871576103b09461036b61086761037b94611091565b9293505094610359565b8880fd5b3d915061083f565b6040513d8b823e3d90fd5b50346100d45760203660031901126100d4576004356001600160a01b03818116918290036108d5576108be908354163314610ff7565b600380546001600160a01b03191691909117905580f35b8280fd5b50346100d457806003193601126100d457546040516001600160a01b039091168152602090f35b50346100d457806003193601126100d4576001546001600160a01b039081811633819003610968578084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b50346100d45760203660031901126100d4576004356001600160a01b03818116918290036108d5576109e2908354163314610ff7565b600280546001600160a01b03191691909117905580f35b50346100d457806003193601126100d4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100d457806003193601126100d4576003546040516001600160a01b039091168152602090f35b50346100d457610a7636610f37565b969495919260018060a09693961b0394856002541690604051998a92633a304d8b60e21b845289600485015233602485015283604460209d8e935afa92831561087d57908892918a94610dd6575b5061036b610ad2939461109e565b949293909a169160405192633c2f4f4360e11b84528c84600481845afa938415610d90578b94610d9f575b50610b0b8a851615156111ad565b803b15610d9b576040516339f4769360e01b815230600482015260248101839052908b908290604490829084905af18015610d9057610d77575b509083610b76928a7f00000000000000000000000000000000000000000000000000000000000000001680956113e7565b918210610d3057610b8a9291848a926113e7565b958610610ce8578316927f0000000000000000000000000000000000000000000000000000000000000000169260405163095ea7b360e01b9081815285600482015286602482015288816044818a875af180156106b35790899291610cb1575b506040519081526001600160a01b038616600482015260248101889052918290604490829089905af1801561066a57908694939291610c67575b5091849391610c4e95604094855197889586948593634d4d7cbd60e11b8552309060048601611221565b03925af190811561023e57506105e25750604051908152f35b90919293508681813d8311610caa575b610c818183611070565b8101031261065e5792604092858793610c9d610c4e9897611091565b5092945050919394610c24565b503d610c77565b909181813d8311610ce1575b610cc78183611070565b810103126106a75790610cda8992611091565b5038610bea565b503d610cbd565b60405162461bcd60e51b815260048101889052602c602482015260008051602061175283398151915260448201526b195b9bdd59da08105cdcd95d60a21b6064820152608490fd5b60405162461bcd60e51b8152600481018b9052602b602482015260008051602061175283398151915260448201526a656e6f756768205544534360a81b6064820152608490fd5b610b7692919a610d878692611042565b9a919250610b45565b6040513d8d823e3d90fd5b8a80fd5b9093508c81813d8311610dcf575b610db78183611070565b81010312610d9b57610dc890611199565b9238610afd565b503d610dad565b91935091508a81813d8111610e12575b610df08183611070565b810103126108715791610ad29161036b610e0a8a95611091565b949350610ac4565b503d610de6565b50346100d45760603660031901126100d457610e33610f21565b60243580151581036108d557604435908115158203610f1d5760018060a01b03928391610e64838754163314610ff7565b15610f06571690811590811591610efe575b5015610ec1578083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b031991821617825560018054909116905580f35b60405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152606490fd5b905038610e76565b9150501660018060a01b0319600154161760015580f35b8380fd5b600435906001600160a01b038216820361029a57565b9060c060031983011261029a57600435916001600160a01b03602435818116810361029a5792604435828116810361029a579260643592608435908116810361029a579160a4356001600160401b039283821161029a578060238301121561029a57816004013593841161029a576024848301011161029a576024019190565b919082519283825260005b848110610fe3575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610fc2565b15610ffe57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b03811161028457604052565b608081019081106001600160401b0382111761028457604052565b90601f801991011681019081106001600160401b0382111761028457604052565b5190811515820361029a57565b156110a557565b60405162461bcd60e51b815260206004820152602260248201527f4c657665726167654578656375746f723a2073656e646572206e6f742076616c6044820152611a5960f21b6064820152608490fd5b81601f8201121561029a578035906001600160401b0382116102845760405192611129601f8401601f191660200185611070565b8284526020838301011161029a57816000926020809301838601378301015290565b60808183031261029a578035926001600160401b0391602081013583811161029a57846111799183016110f5565b93604082013593606083013590811161029a5761119692016110f5565b90565b51906001600160a01b038216820361029a57565b156111b457565b60405162461bcd60e51b815260206004820152602960248201527f4173736574546f474c504c657665726167654578656375746f723a20676c70206044820152681b9bdd081d985b1a5960ba1b6064820152608490fd5b919082604091031261029a576020825192015190565b9081526001600160a01b0391821660208201529116604082015260608101919091526000608082015260a00190565b809103610140811261029a5760408051926001600160401b03926060850184811186821017610284578084526080821261029a5761128d81611055565b61129683611199565b8152602083015160808701526112ad848401611199565b60a0870152606083015160c087015285526080607f1982011261029a57829081516112d781611055565b6080840151815260a0840151602082015260c08401518382015260e08401516060820152602087015260ff19011261029a578151928383019081118482101761028457611339916101209184526113316101008201611091565b855201611091565b602083015282015290565b6001600160a01b0391821681529116602082015260408101919091526000606082018190526080820181905260a082015260c00190565b60206040610120926060815160018060a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b918095949293919360018060a01b0390816003541690604096875190631fd177af60e11b825281806114226101409889948760048501611344565b0381865afa948515611605576000956115e2575b5050821697886114d1575b505084959650600061147591600396959654169261149686519788968795869463efa84c6d60e01b8652600486019061137b565b610144840152306101648401526101a06101848401526101a4830190610fb7565b03925af19182156114c7576000926114ad57505090565b6114c39250803d10610609576105fb8183611070565b5090565b513d6000823e3d90fd5b86519863095ea7b360e01b92838b5260048b0152600060248b01526020998a816044816000865af180156115d757908b93929161159e575b50600354895194855285166001600160a01b031660048501526024840191909152829081600081604481015b03925af197881561159357869798969596611556575b889750959495611441565b90809550813d831161158c575b61156d8183611070565b8101031261029a576000611475916115858896611091565b509161154b565b503d611563565b86513d6000823e3d90fd5b9283813d83116115d0575b6115b38183611070565b8101031261029a57611535936115c98c94611091565b5093611509565b503d6115a9565b89513d6000823e3d90fd5b8492955090816115fd92903d10610272576102628183611070565b939038611436565b88513d6000823e3d90fd5b6003546001600160a01b03908116908115611700576020906002541691604460405180948193633a304d8b60e21b83526000600484015260248301525afa9081156116f4576000916116bb575b501561166557565b60405162461bcd60e51b815260206004820152602860248201527f4c657665726167654578656375746f723a2073776170706572206e6f742061756044820152671d1a1bdc9a5e995960c21b6064820152608490fd5b906020823d82116116ec575b816116d460209383611070565b810103126100d457506116e690611091565b3861165d565b3d91506116c7565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602360248201527f4c657665726167654578656375746f723a2073776170706572206e6f742076616044820152621b1a5960ea1b6064820152608490fdfe4173736574546f474c504c657665726167654578656375746f723a206e6f7420a26469706673582212208cc8ea6ee42b279de81c98029bbcefd278889a5723d07d39612bdc166ee9e2ea64736f6c63430008120033";

type AssetToGLPLeverageExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetToGLPLeverageExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetToGLPLeverageExecutor__factory extends ContractFactory {
  constructor(...args: AssetToGLPLeverageExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AssetToGLPLeverageExecutor";
  }

  override deploy(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetToGLPLeverageExecutor> {
    return super.deploy(
      _yb,
      _swapper,
      _cluster,
      _usdc,
      overrides || {}
    ) as Promise<AssetToGLPLeverageExecutor>;
  }
  override getDeployTransaction(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yb,
      _swapper,
      _cluster,
      _usdc,
      overrides || {}
    );
  }
  override attach(address: string): AssetToGLPLeverageExecutor {
    return super.attach(address) as AssetToGLPLeverageExecutor;
  }
  override connect(signer: Signer): AssetToGLPLeverageExecutor__factory {
    return super.connect(signer) as AssetToGLPLeverageExecutor__factory;
  }
  static readonly contractName: "AssetToGLPLeverageExecutor";

  public readonly contractName: "AssetToGLPLeverageExecutor";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetToGLPLeverageExecutorInterface {
    return new utils.Interface(_abi) as AssetToGLPLeverageExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetToGLPLeverageExecutor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AssetToGLPLeverageExecutor;
  }
}
