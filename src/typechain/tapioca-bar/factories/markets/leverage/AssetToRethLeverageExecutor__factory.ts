/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AssetToRethLeverageExecutor,
  AssetToRethLeverageExecutorInterface,
} from "../../../markets/leverage/AssetToRethLeverageExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yb",
        type: "address",
      },
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_balancerVault",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_balancerPoolId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "buildSwapDefaultData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collateralId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IBalancerVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0346200015557601f62001d9838819003918201601f19168301916001600160401b038311848410176200015a5780849260c09460405283398101031262000155578051906001600160a01b03908183168303620001555760208101519180831680930362000155576040820151918183168093036200015557620000886060820162000170565b60a0620000986080840162000170565b9201519460018060a01b031994856000541691604051983360007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a36080528660035416176003558560025416176002553390853316171760005560a05216906004541617600455600555611c1290816200018682396080518181816102bf0152818161060e0152610d36015260a0518181816103b201528181610455015281816104b80152818161051001528181610b5d0152610ce10152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001555756fe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c8063078dfbe714610f725780630fb5d60d14610bd35780632b3297f914610baa5780633e0dc34e14610b8c5780633fc8cef314610b47578063437be62214610afa5780634e71e0c814610a4e5780638da5cb5b14610a275780639c82f2a4146109d6578063c990ad1c14610317578063dbd01de1146102ee578063de406577146102a9578063e221165814610120578063e30c3978146100f75763fbfa77cf146100cc575061000e565b346100f457806003193601126100f4576004546040516001600160a01b039091168152602090f35b80fd5b50346100f457806003193601126100f4576001546040516001600160a01b039091168152602090f35b50346100f45760603660031901126100f45761013a611076565b906001600160a01b03906024359082821682036102575761015961138a565b926003541660405192631fd177af60e11b8452838061018461014098899460443591600485016117e6565b0381845afa92831561029e576101b89495839461026f575b5050604051630b7ecdc960e31b8152938493600485019061181d565b610160610144840152602093849181806101d661016482018a61110c565b03915afa908115610263579061022f575b610217915061020960405194859285840152604080840152606083019061110c565b03601f1981018452836111db565b61022b60405192828493845283019061110c565b0390f35b508181813d831161025c575b61024581836111db565b810103126102575761021790516101e7565b600080fd5b503d61023b565b604051903d90823e3d90fd5b61028f929450803d10610297575b61028781836111db565b8101906116f2565b91388061019c565b503d61027d565b6040513d84823e3d90fd5b50346100f457806003193601126100f4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100f457806003193601126100f4576002546040516001600160a01b039091168152602090f35b506103213661108c565b600254604051633a304d8b60e21b8152600481018a9052336024820152969795969394929390602090829060449082906001600160a01b03165afa80156109cb57899061098c575b6103739150611209565b61037b611aa7565b820195606083880312610893578235966020840135926001600160401b038411610988576103af89926103d7958701611260565b927f000000000000000000000000000000000000000000000000000000000000000090611889565b94851061092e57604051633c2f4f4360e11b8152946020866004816001600160a01b0389165afa9586156109235787966108e3575b506104216001600160a01b03871615156112ca565b60018060a01b03600454166040519063095ea7b360e01b825260048201528760248201526020816044818b60018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1801561089f576108aa575b506004805460405163095ea7b360e01b815291602091839182916104b39187916001600160a01b031690840161132a565b03818b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561089f57610862575b506102584201421161084e578694939291610534916040610258420192013590887f00000000000000000000000000000000000000000000000000000000000000006113b8565b60405163095ea7b360e01b81526001600160a01b03858116600483015260248201879052919691602090829060449082908a9087165af180156107b957610815575b506020604051809263095ea7b360e01b82528188816105998c8b6004840161132a565b03926001600160a01b03165af18015610771576107dc575b506001600160a01b0383163b156107d857604051630c46aac760e31b815230600482018190526024820152604481018690528481606481836001600160a01b0389165af19081156107715785916107c4575b505060018060a01b037f0000000000000000000000000000000000000000000000000000000000000000169160405163095ea7b360e01b81528360048201528560248201526020816044818960018060a01b038a165af180156107b95761077c575b506020604051809563095ea7b360e01b82528188816106888c8a6004840161132a565b03926001600160a01b03165af1938415610771578694610722575b5060408051634d4d7cbd60e11b8152959094869493859384926106cd92909130906004860161135b565b03925af1801561071757602093506106e9575b50604051908152f35b61070a9060403d604011610710575b61070281836111db565b810190611345565b506106e0565b503d6106f8565b6040513d85823e3d90fd5b92919093506020833d602011610769575b81610740602093836111db565b81010312610765576106cd9460409461075988956111fc565b509192939450946106a3565b8480fd5b3d9150610733565b6040513d87823e3d90fd5b6020813d6020116107b1575b81610795602093836111db565b810103126107ad576107a6906111fc565b5038610665565b8580fd5b3d9150610788565b6040513d88823e3d90fd5b6107cd90611197565b6107d8578338610603565b8380fd5b6020813d60201161080d575b816107f5602093836111db565b8101031261076557610806906111fc565b50386105b1565b3d91506107e8565b6020813d602011610846575b8161082e602093836111db565b810103126107ad5761083f906111fc565b5038610576565b3d9150610821565b634e487b7160e01b87526011600452602487fd5b6020813d602011610897575b8161087b602093836111db565b810103126108935761088c906111fc565b50386104ed565b8780fd5b3d915061086e565b6040513d8a823e3d90fd5b6020813d6020116108db575b816108c3602093836111db565b81010312610893576108d4906111fc565b5038610482565b3d91506108b6565b9095506020813d60201161091b575b816108ff602093836111db565b8101031261091757610910906112b6565b943861040c565b8680fd5b3d91506108f2565b6040513d89823e3d90fd5b60405162461bcd60e51b815260206004820152602c60248201527f4173736574546f526574684c657665726167654578656375746f723a206e6f7460448201526b040cadcdeeaced040ae8aa8960a31b6064820152608490fd5b8980fd5b506020813d6020116109c3575b816109a6602093836111db565b810103126109bf576109ba610373916111fc565b610369565b8880fd5b3d9150610999565b6040513d8b823e3d90fd5b50346100f45760203660031901126100f4576004356001600160a01b0381811691829003610a2357610a0c90835416331461114c565b600380546001600160a01b03191691909117905580f35b8280fd5b50346100f457806003193601126100f457546040516001600160a01b039091168152602090f35b50346100f457806003193601126100f4576001546001600160a01b039081811633819003610ab6578084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b03199283161783551660015580f35b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b50346100f45760203660031901126100f4576004356001600160a01b0381811691829003610a2357610b3090835416331461114c565b600280546001600160a01b03191691909117905580f35b50346100f457806003193601126100f4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100f457806003193601126100f4576020600554604051908152f35b50346100f457806003193601126100f4576003546040516001600160a01b039091168152602090f35b50346100f457610be23661108c565b969460018060a09894959693981b0394856002541698604051809a633a304d8b60e21b825289600483015233602483015281604460209d8e935afa80156109cb578990610f3c575b610c349150611209565b610c3c611aa7565b8801976060818a031261089357898101359860408201356001600160401b038111610988578891610c6e918401611260565b9316803b156109bf576040516339f4769360e01b8152898180610c9587306004840161132a565b038183865af18015610f3157908c9291610f1b575b50604051633c2f4f4360e11b81529190829060049082905afa9081156109cb578991610ee6575b50610cdf88821615156112ca565b7f000000000000000000000000000000000000000000000000000000000000000092610258420192834211610ed2578b9385938893610d2a9897610d249435926113b8565b91611889565b958610610e7d578316927f0000000000000000000000000000000000000000000000000000000000000000169260405163095ea7b360e01b9081815285600482015286602482015288816044818a875af180156109235790899291610e46575b506040519283918252818881610da48c8b6004840161132a565b03925af1801561077157908694939291610dfc575b5091849391610de395604094855197889586948593634d4d7cbd60e11b855230906004860161135b565b03925af190811561026357506106e95750604051908152f35b90919293508681813d8311610e3f575b610e1681836111db565b810103126107655792604092858793610e32610de398976111fc565b5092945050919394610db9565b503d610e0c565b909181813d8311610e76575b610e5c81836111db565b810103126109175790610e6f89926111fc565b5038610d8a565b503d610e52565b60405162461bcd60e51b815260048101889052602760248201527f4173736574546f526574684c657665726167654578656375746f723a206e6f74604482015266040cadcdeeaced60cb1b6064820152608490fd5b634e487b7160e01b8b52601160045260248bfd5b90508a81813d8311610f14575b610efd81836111db565b810103126109bf57610f0e906112b6565b38610cd1565b503d610ef3565b99610f29600493929b611197565b999091610caa565b6040513d8c823e3d90fd5b508a81813d8311610f6b575b610f5281836111db565b810103126109bf57610f66610c34916111fc565b610c2a565b503d610f48565b50346100f45760603660031901126100f457610f8c611076565b6024358015158103610a23576044359081151582036107d85760018060a01b03928391610fbd83875416331461114c565b1561105f571690811590811591611057575b501561101a578083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001600160a01b031991821617825560018054909116905580f35b60405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152606490fd5b905038610fcf565b9150501660018060a01b0319600154161760015580f35b600435906001600160a01b038216820361025757565b9060c060031983011261025757600435916001600160a01b036024358181168103610257579260443582811681036102575792606435926084359081168103610257579160a4356001600160401b039283821161025757806023830112156102575781600401359384116102575760248483010111610257576024019190565b919082519283825260005b848110611138575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611117565b1561115357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b0381116111aa57604052565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b038211176111aa57604052565b90601f801991011681019081106001600160401b038211176111aa57604052565b5190811515820361025757565b1561121057565b60405162461bcd60e51b815260206004820152602260248201527f4c657665726167654578656375746f723a2073656e646572206e6f742076616c6044820152611a5960f21b6064820152608490fd5b81601f82011215610257578035906001600160401b0382116111aa5760405192611294601f8401601f1916602001856111db565b8284526020838301011161025757816000926020809301838601378301015290565b51906001600160a01b038216820361025757565b156112d157565b60405162461bcd60e51b815260206004820152602b60248201527f4173736574546f526574684c657665726167654578656375746f723a2072455460448201526a12081b9bdd081d985b1a5960aa1b6064820152608490fd5b6001600160a01b039091168152602081019190915260400190565b9190826040910312610257576020825192015190565b9081526001600160a01b0391821660208201529116604082015260608101919091526000608082015260a00190565b60405190604082018281106001600160401b038211176111aa576040526002825261060f60f31b6020830152565b60405194959491926113c9836111c0565b3083526000602084015230604084015260006060840152600554936040519460c086018681106001600160401b038211176111aa576040908152908652600060208701526001600160a01b03848116918701919091521660608501526080840181905261143461138a565b60a08501526001600160a01b0382166115e5575b505060018060a01b0360045416604051956352bbbe2960e01b875260e06004880152835160e4880152602084015160028110156115cf57878094819360606114da60a060209a600097610104880152600180831b03604082015116610124880152600180831b0384820151166101448801526080810151610164880152015160c06101848701526101a486019061110c565b83516001600160a01b0390811660248701528a8501511515604487015260408501511660648601529201511515608484015260a4830189905260c483015203925af19283156115c35760009361158f575b50821061153457565b60405162461bcd60e51b815260206004820152602d60248201527f4173736574546f526574684c657665726167654578656375746f723a2072455460448201526c12081cddd85c0819985a5b1959609a1b6064820152608490fd5b9092506020813d6020116115bb575b816115ab602093836111db565b810103126102575751913861152b565b3d915061159e565b6040513d6000823e3d90fd5b634e487b7160e01b600052602160045260246000fd5b60018060a01b03600454166040519063095ea7b360e01b8252600482015260006024820152602081604481600060018060a01b0388165af180156115c3576116b0575b506020906116599260018060a01b0360045416600060405180968195829463095ea7b360e01b84526004840161132a565b03926001600160a01b03165af180156115c357611677575b80611448565b6020813d6020116116a8575b81611690602093836111db565b81010312610257576116a1906111fc565b5038611671565b3d9150611683565b906020823d6020116116ea575b816116ca602093836111db565b8101031261025757611659926116e16020936111fc565b50925090611628565b3d91506116bd565b80910361014081126102575760408051926001600160401b039260608501848111868210176111aa57808452608082126102575761172f816111c0565b611738836112b6565b81526020830151608087015261174f8484016112b6565b60a0870152606083015160c087015285526080607f198201126102575782908151611779816111c0565b6080840151815260a0840151602082015260c08401518382015260e08401516060820152602087015260ff19011261025757815192838301908111848210176111aa576117db916101209184526117d361010082016111fc565b8552016111fc565b602083015282015290565b6001600160a01b0391821681529116602082015260408101919091526000606082018190526080820181905260a082015260c00190565b60206040610120926060815160018060a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b918095949293919360018060a01b0390816003541690604096875190631fd177af60e11b825281806118c461014098899487600485016117e6565b0381865afa948515611a9c57600095611a79575b505082169788611973575b505084959650600061191791600396959654169261193886519788968795869463efa84c6d60e01b8652600486019061181d565b610144840152306101648401526101a06101848401526101a483019061110c565b03925af19182156119695760009261194f57505090565b6119659250803d106107105761070281836111db565b5090565b513d6000823e3d90fd5b86519863095ea7b360e01b92838b5260048b0152600060248b01526020998a816044816000865af18015611a6e57908b939291611a35575b506119cc9360008660035416918b519687958694859384526004840161132a565b03925af1978815611a2a578697989695966119ed575b8897509594956118e3565b90809550813d8311611a23575b611a0481836111db565b8101031261025757600061191791611a1c88966111fc565b50916119e2565b503d6119fa565b86513d6000823e3d90fd5b9283813d8311611a67575b611a4a81836111db565b81010312610257576119cc93611a608c946111fc565b50936119ab565b503d611a40565b89513d6000823e3d90fd5b849295509081611a9492903d106102975761028781836111db565b9390386118d8565b88513d6000823e3d90fd5b6003546001600160a01b03908116908115611b8b576020906002541691604460405180948193633a304d8b60e21b83526000600484015260248301525afa9081156115c357600091611b52575b5015611afc57565b60405162461bcd60e51b815260206004820152602860248201527f4c657665726167654578656375746f723a2073776170706572206e6f742061756044820152671d1a1bdc9a5e995960c21b6064820152608490fd5b906020823d8211611b83575b81611b6b602093836111db565b810103126100f45750611b7d906111fc565b38611af4565b3d9150611b5e565b60405162461bcd60e51b815260206004820152602360248201527f4c657665726167654578656375746f723a2073776170706572206e6f742076616044820152621b1a5960ea1b6064820152608490fdfea2646970667358221220f2c53314fd260cea6253e963e3bd097cd615cfcca11d0ed3737fc20efb5fdf4164736f6c63430008120033";

type AssetToRethLeverageExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetToRethLeverageExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetToRethLeverageExecutor__factory extends ContractFactory {
  constructor(...args: AssetToRethLeverageExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AssetToRethLeverageExecutor";
  }

  override deploy(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _balancerVault: PromiseOrValue<string>,
    _balancerPoolId: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetToRethLeverageExecutor> {
    return super.deploy(
      _yb,
      _swapper,
      _cluster,
      _weth,
      _balancerVault,
      _balancerPoolId,
      overrides || {}
    ) as Promise<AssetToRethLeverageExecutor>;
  }
  override getDeployTransaction(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _balancerVault: PromiseOrValue<string>,
    _balancerPoolId: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yb,
      _swapper,
      _cluster,
      _weth,
      _balancerVault,
      _balancerPoolId,
      overrides || {}
    );
  }
  override attach(address: string): AssetToRethLeverageExecutor {
    return super.attach(address) as AssetToRethLeverageExecutor;
  }
  override connect(signer: Signer): AssetToRethLeverageExecutor__factory {
    return super.connect(signer) as AssetToRethLeverageExecutor__factory;
  }
  static readonly contractName: "AssetToRethLeverageExecutor";

  public readonly contractName: "AssetToRethLeverageExecutor";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetToRethLeverageExecutorInterface {
    return new utils.Interface(_abi) as AssetToRethLeverageExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetToRethLeverageExecutor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AssetToRethLeverageExecutor;
  }
}
