/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ERC20Mock, ERC20MockInterface } from "../ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "extractTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hasMintRestrictions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_fee",
        type: "uint32",
      },
    ],
    name: "setTransferFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferFee",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "updateMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610160604052600c8054600160301b600160d01b03191690553480156200002557600080fd5b5060405162002a4b38038062002a4b8339810160408190526200004891620004ef565b6040805180820190915260018152603160f81b602082015285908190818760036200007483826200062f565b5060046200008382826200062f565b506200009591508390506005620001ab565b61012052620000a6816006620001ab565b61014052815160208084019190912060e052815190820120610100524660a0526200013460e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200014933620001e4565b600c805460ff191660ff84169081179091556200016890600a6200080e565b62000176906103e862000826565b600b55620001848162000236565b620001903084620002b9565b5050600c805461ff00191661010017905550620008b0915050565b6000602083511015620001cb57620001c3836200037c565b9050620001de565b81620001d884826200062f565b5060ff90505b92915050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b62000240620003bf565b6001600160a01b038116620002ab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620002b681620001e4565b50565b6001600160a01b038216620003115760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620002a2565b806002600082825462000325919062000840565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080829050601f81511115620003aa578260405163305a27a960e01b8152600401620002a2919062000856565b8051620003b7826200088b565b179392505050565b6009546001600160a01b031633146200041b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620002a2565b565b505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004555781810151838201526020016200043b565b50506000910152565b600082601f8301126200047057600080fd5b81516001600160401b03808211156200048d576200048d62000422565b604051601f8301601f19908116603f01168101908282118183101715620004b857620004b862000422565b81604052838152866020858801011115620004d257600080fd5b620004e584602083016020890162000438565b9695505050505050565b600080600080600060a086880312156200050857600080fd5b85516001600160401b03808211156200052057600080fd5b6200052e89838a016200045e565b965060208801519150808211156200054557600080fd5b5062000554888289016200045e565b94505060408601519250606086015160ff811681146200057357600080fd5b60808701519092506001600160a01b03811681146200059157600080fd5b809150509295509295909350565b600181811c90821680620005b457607f821691505b602082108103620005d557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200041d576000816000526020600020601f850160051c81016020861015620006065750805b601f850160051c820191505b81811015620006275782815560010162000612565b505050505050565b81516001600160401b038111156200064b576200064b62000422565b62000663816200065c84546200059f565b84620005db565b602080601f8311600181146200069b5760008415620006825750858301515b600019600386901b1c1916600185901b17855562000627565b600085815260208120601f198616915b82811015620006cc57888601518255948401946001909101908401620006ab565b5085821015620006eb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000752578160001904821115620007365762000736620006fb565b808516156200074457918102915b93841c939080029062000716565b509250929050565b6000826200076b57506001620001de565b816200077a57506000620001de565b81600181146200079357600281146200079e57620007be565b6001915050620001de565b60ff841115620007b257620007b2620006fb565b50506001821b620001de565b5060208310610133831016604e8410600b8410161715620007e3575081810a620001de565b620007ef838362000711565b8060001904821115620008065762000806620006fb565b029392505050565b60006200081f60ff8416836200075a565b9392505050565b8082028115828204841417620001de57620001de620006fb565b80820180821115620001de57620001de620006fb565b60208152600082518060208401526200087781604085016020870162000438565b601f01601f19169190910160400192915050565b80516020808301519190811015620005d55760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516121406200090b6000396000610b8b01526000610b60015260006117530152600061172b01526000611686015260006116b0015260006116da01526121406000f3fe6080604052600436106102025760003560e01c80637c928fe91161011d578063acb2ad6f116100b0578063d6b5a2db1161007f578063e01d55c511610064578063e01d55c51461065e578063e74b981b1461067e578063f2fde38b1461069e57600080fd5b8063d6b5a2db146105eb578063dd62ed3e1461060b57600080fd5b8063acb2ad6f1461056c578063d0e30db0146105a4578063d4a744ba146105ac578063d505accf146105cb57600080fd5b806395d89b41116100ec57806395d89b4114610501578063996517cf14610516578063a457c2d71461052c578063a9059cbb1461054c57600080fd5b80637c928fe91461046e5780637ecebe001461048e57806384b0196e146104ae5780638da5cb5b146104d657600080fd5b80632e9ef97611610195578063449a52f811610164578063449a52f81461039a57806346904840146103ba57806370a0823114610416578063715018a61461045957600080fd5b80632e9ef97614610323578063313ce567146103435780633644e51514610365578063395093511461037a57600080fd5b806321442ec9116101d157806321442ec91461029f57806322ae81af146102cc57806323b872dd146102e35780632e1a7d4d1461030357600080fd5b806306fdde031461020e578063095ea7b31461023957806318160ddd146102695780631d0dc2671461028857600080fd5b3661020957005b600080fd5b34801561021a57600080fd5b506102236106be565b6040516102309190611d7c565b60405180910390f35b34801561024557600080fd5b50610259610254366004611dbf565b610750565b6040519015158152602001610230565b34801561027557600080fd5b506002545b604051908152602001610230565b34801561029457600080fd5b5061029d61076a565b005b3480156102ab57600080fd5b5061027a6102ba366004611de9565b600a6020526000908152604090205481565b3480156102d857600080fd5b5061027a6201518081565b3480156102ef57600080fd5b506102596102fe366004611e04565b6107ac565b34801561030f57600080fd5b5061029d61031e366004611e40565b610842565b34801561032f57600080fd5b5061029d61033e366004611e59565b610916565b34801561034f57600080fd5b50600c5460405160ff9091168152602001610230565b34801561037157600080fd5b5061027a6109b3565b34801561038657600080fd5b50610259610395366004611dbf565b6109c2565b3480156103a657600080fd5b5061029d6103b5366004611dbf565b610a0e565b3480156103c657600080fd5b50600c546103f1906601000000000000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610230565b34801561042257600080fd5b5061027a610431366004611de9565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b34801561046557600080fd5b5061029d610a24565b34801561047a57600080fd5b5061029d610489366004611e40565b610a38565b34801561049a57600080fd5b5061027a6104a9366004611de9565b610b27565b3480156104ba57600080fd5b506104c3610b52565b6040516102309796959493929190611e7f565b3480156104e257600080fd5b5060095473ffffffffffffffffffffffffffffffffffffffff166103f1565b34801561050d57600080fd5b50610223610bf7565b34801561052257600080fd5b5061027a600b5481565b34801561053857600080fd5b50610259610547366004611dbf565b610c06565b34801561055857600080fd5b50610259610567366004611dbf565b610cc8565b34801561057857600080fd5b50600c5461058f9062010000900463ffffffff1681565b60405163ffffffff9091168152602001610230565b61029d610d40565b3480156105b857600080fd5b50600c5461025990610100900460ff1681565b3480156105d757600080fd5b5061029d6105e6366004611f41565b610d81565b3480156105f757600080fd5b5061029d610606366004611e40565b610f0c565b34801561061757600080fd5b5061027a610626366004611fb4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b34801561066a57600080fd5b5061029d610679366004611e40565b610f1f565b34801561068a57600080fd5b5061029d610699366004611de9565b610f2c565b3480156106aa57600080fd5b5061029d6106b9366004611de9565b610f85565b6060600380546106cd90611fe7565b80601f01602080910402602001604051908101604052809291908181526020018280546106f990611fe7565b80156107465780601f1061071b57610100808354040283529160200191610746565b820191906000526020600020905b81548152906001019060200180831161072957829003601f168201915b5050505050905090565b60003361075e81858561101f565b60019150505b92915050565b61077261119f565b600c80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff81166101009182900460ff1615909102179055565b600c546000908190620186a0906107cf9062010000900463ffffffff1685612063565b6107d9919061207a565b905060006107e782856120b5565b9050336107f5878284611206565b6108008787846112c3565b821561083557600c546108359088906601000000000000900473ffffffffffffffffffffffffffffffffffffffff16856112c3565b5060019695505050505050565b336000908152602081905260409020548111156108a65760405162461bcd60e51b815260206004820152600560248201527f4572726f7200000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6108b033826114e4565b604051339082156108fc029083906000818181858888f193505050501580156108dd573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b61091e61119f565b620186a063ffffffff8216106109765760405162461bcd60e51b815260206004820152601760248201527f45524332304d6f636b3a2066656520746f6f2068696768000000000000000000604482015260640161089d565b600c805463ffffffff90921662010000027fffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffff909216919091179055565b60006109bd61166c565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061075e9082908690610a099087906120c8565b61101f565b610a1661119f565b610a2082826117a4565b5050565b610a2c61119f565b610a36600061187d565b565b600c54610100900460ff1615610b0857600b54811115610a9a5760405162461bcd60e51b815260206004820152601960248201527f45524332304d6f636b3a20616d6f756e7420746f6f2062696700000000000000604482015260640161089d565b336000908152600a60205260409020544290610aba9062015180906120c8565b1115610b085760405162461bcd60e51b815260206004820152601460248201527f45524332304d6f636b3a20746f6f206561726c79000000000000000000000000604482015260640161089d565b336000818152600a60205260409020429055610b2490826117a4565b50565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260076020526040812054610764565b600060608082808083610b867f000000000000000000000000000000000000000000000000000000000000000060056118f4565b610bb17f000000000000000000000000000000000000000000000000000000000000000060066118f4565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b6060600480546106cd90611fe7565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610cb05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161089d565b610cbd828686840361101f565b506001949350505050565b600c546000908190620186a090610ceb9062010000900463ffffffff1685612063565b610cf5919061207a565b9050610d0b3385610d0684876120b5565b6112c3565b801561075e57600c5461075e9033906601000000000000900473ffffffffffffffffffffffffffffffffffffffff16836112c3565b610d4a33346117a4565b60405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b83421115610dd15760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161089d565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610e008c61199f565b60408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610e68826119d4565b90506000610e7882878787611a1c565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ef55760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161089d565b610f008a8a8a61101f565b50505050505050505050565b610f1461119f565b610b243033836112c3565b610f2761119f565b600b55565b610f3461119f565b600c805473ffffffffffffffffffffffffffffffffffffffff9092166601000000000000027fffffffffffff0000000000000000000000000000000000000000ffffffffffff909216919091179055565b610f8d61119f565b73ffffffffffffffffffffffffffffffffffffffff81166110165760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161089d565b610b248161187d565b73ffffffffffffffffffffffffffffffffffffffff83166110a75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161089d565b73ffffffffffffffffffffffffffffffffffffffff82166111305760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161089d565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60095473ffffffffffffffffffffffffffffffffffffffff163314610a365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161089d565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146112bd57818110156112b05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161089d565b6112bd848484840361101f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661134c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161089d565b73ffffffffffffffffffffffffffffffffffffffff82166113d55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161089d565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156114715760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161089d565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36112bd565b73ffffffffffffffffffffffffffffffffffffffff821661156d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161089d565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054818110156116095760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161089d565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101611192565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480156116d257507f000000000000000000000000000000000000000000000000000000000000000046145b156116fc57507f000000000000000000000000000000000000000000000000000000000000000090565b6109bd604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b73ffffffffffffffffffffffffffffffffffffffff82166118075760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161089d565b806002600082825461181991906120c8565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6009805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060ff831461190e5761190783611a44565b9050610764565b81805461191a90611fe7565b80601f016020809104026020016040519081016040528092919081815260200182805461194690611fe7565b80156119935780601f1061196857610100808354040283529160200191611993565b820191906000526020600020905b81548152906001019060200180831161197657829003601f168201915b50505050509050610764565b73ffffffffffffffffffffffffffffffffffffffff811660009081526007602052604090208054600181018255905b50919050565b60006107646119e161166c565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6000806000611a2d87878787611a83565b91509150611a3a81611b72565b5095945050505050565b60606000611a5183611cd7565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611aba5750600090506003611b69565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b0e573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611b6257600060019250925050611b69565b9150600090505b94509492505050565b6000816004811115611b8657611b866120db565b03611b8e5750565b6001816004811115611ba257611ba26120db565b03611bef5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161089d565b6002816004811115611c0357611c036120db565b03611c505760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161089d565b6003816004811115611c6457611c646120db565b03610b245760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161089d565b600060ff8216601f811115610764576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000815180845260005b81811015611d3e57602081850181015186830182015201611d22565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000611d8f6020830184611d18565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611dba57600080fd5b919050565b60008060408385031215611dd257600080fd5b611ddb83611d96565b946020939093013593505050565b600060208284031215611dfb57600080fd5b611d8f82611d96565b600080600060608486031215611e1957600080fd5b611e2284611d96565b9250611e3060208501611d96565b9150604084013590509250925092565b600060208284031215611e5257600080fd5b5035919050565b600060208284031215611e6b57600080fd5b813563ffffffff81168114611d8f57600080fd5b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e06020840152611ebc60e084018a611d18565b8381036040850152611ece818a611d18565b6060850189905273ffffffffffffffffffffffffffffffffffffffff8816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015611f2f57835183529284019291840191600101611f13565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215611f5c57600080fd5b611f6588611d96565b9650611f7360208901611d96565b95506040880135945060608801359350608088013560ff81168114611f9757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611fc757600080fd5b611fd083611d96565b9150611fde60208401611d96565b90509250929050565b600181811c90821680611ffb57607f821691505b6020821081036119ce577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761076457610764612034565b6000826120b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8181038181111561076457610764612034565b8082018082111561076457610764612034565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212208813a5e578d8c7c57edc20acded439667f252e0919a142717b304f1411888c0f64736f6c63430008160033";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20Mock";
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialAmount: PromiseOrValue<BigNumberish>,
    decimals_: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Mock> {
    return super.deploy(
      _name,
      _symbol,
      _initialAmount,
      decimals_,
      _owner,
      overrides || {}
    ) as Promise<ERC20Mock>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialAmount: PromiseOrValue<BigNumberish>,
    decimals_: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _initialAmount,
      decimals_,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Mock {
    return super.attach(address) as ERC20Mock;
  }
  override connect(signer: Signer): ERC20Mock__factory {
    return super.connect(signer) as ERC20Mock__factory;
  }
  static readonly contractName: "ERC20Mock";

  public readonly contractName: "ERC20Mock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new utils.Interface(_abi) as ERC20MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC20Mock;
  }
}
