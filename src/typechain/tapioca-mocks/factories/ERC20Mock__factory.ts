/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ERC20Mock, ERC20MockInterface } from "../ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "extractTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hasMintRestrictions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_fee",
        type: "uint32",
      },
    ],
    name: "setTransferFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferFee",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "updateMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610140604081815234620006835762001ecd803803809162000022828662000688565b843982019060a083830312620006835782516001600160401b03811162000683578262000051918501620006ac565b602084015190926001600160401b038211620006835762000074918501620006ac565b818401519060608501519460ff8616809603620006835760800151906001600160a01b038216820362000683578351948585016001600160401b038111878210176200043257855260018652603160f81b6020870190815281519092906001600160401b0381116200043257600354600181811c9116801562000678575b60208210146200055857601f81116200060e575b50806020601f8211600114620005855760009162000579575b508160011b916000199060031b1c1916176003555b8051906001600160401b038211620004325760045490600182811c921680156200056e575b6020831014620005585781601f849311620004e3575b50602090601f8311600114620004545760009262000448575b50508160011b916000199060031b1c1916176004555b60208151910120945190208460e052610100958187524660a05284519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f978885528784015260608301524660808301523060a083015260a0825260c082019282841060018060401b038511176200043257838752825190206080523060c052610120968752620002343362000723565b600a805465ffffffffff01600160d01b03191682179055604d81116200034257600a0a6103e890808202918204036200034257600955600754336001600160a01b0390911603620003ef5750506001600160a01b038116156200039c576200029c9062000723565b30156200035857600254818101809111620003425760025530600052600060205281600020818154019055815190815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203093a38261ff0019600a541617600a55519061176092836200076d843960805183611407015260a051836114d3015260c051836113d8015260e051836114560152518261147c015251816114330152f35b634e487b7160e01b600052601160045260246000fd5b815162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b825162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b907f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657261010460649362461bcd60e51b8452602060c4820152602060e48201520152fd5b634e487b7160e01b600052604160045260246000fd5b01519050388062000188565b6004600090815293507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b91905b601f1984168510620004c7576001945083601f19811610620004ad575b505050811b016004556200019e565b015160001960f88460031b161c191690553880806200049e565b8181015183556020948501946001909301929091019062000481565b60046000529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c810191602085106200054d575b90601f859493920160051c01905b8181106200053d57506200016f565b600081558493506001016200052e565b909150819062000520565b634e487b7160e01b600052602260045260246000fd5b91607f169162000159565b9050830151386200011f565b600360009081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9250601f198416905b818110620005f557509083600194939210620005db575b5050811b0160035562000134565b85015160001960f88460031b161c191690553880620005cd565b9192602060018192868a015181550194019201620005b6565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106200066d575b601f0160051c01905b81811062000660575062000106565b6000815560010162000651565b909150819062000648565b90607f1690620000f2565b600080fd5b601f909101601f19168101906001600160401b038211908210176200043257604052565b919080601f8401121562000683578251906001600160401b038211620004325760405191602091620006e8601f8301601f191684018562000688565b818452828287010111620006835760005b8181106200070f57508260009394955001015290565b8581018301518482018401528201620006f9565b600780546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816306fdde0314610f0457508063095ea7b314610eda57806318160ddd14610ebb5780631d0dc26714610e8357806321442ec914610e4c57806322ae81af14610e2e57806323b872dd14610d235780632e1a7d4d14610b835780632e9ef97614610ae4578063313ce56714610ac25780633644e51514610a9e5780633950935114610a4f578063449a52f814610a2257806346904840146109f757806370a08231146109c1578063715018a61461096d5780637c928fe91461086d5780637ecebe00146108365780638da5cb5b1461080e57806395d89b411461070a578063996517cf146106eb578063a457c2d714610646578063a9059cbb146105da578063acb2ad6f146105b2578063d0e30db01461056e578063d4a744ba14610547578063d505accf1461035c578063d6b5a2db14610332578063dd62ed3e146102e9578063e01d55c5146102c3578063e74b981b146102515763f2fde38b03610011573461024d57602036600319011261024d576101a361103f565b906101ac611070565b6001600160a01b038092169283156101fb575050600754826001600160a01b0319821617600755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b83346102c05760203660031901126102c05761026b61103f565b610273611070565b7fffffffffffff0000000000000000000000000000000000000000ffffffffffff79ffffffffffffffffffffffffffffffffffffffff000000000000600a549260301b16911617600a5580f35b80fd5b8382346102e55760203660031901126102e5576102de611070565b3560095580f35b5080fd5b5050346102e557806003193601126102e5578060209261030761103f565b61030f61105a565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b8382346102e55760203660031901126102e55761035990610351611070565b35333061159c565b80f35b508290346102e55760e03660031901126102e55761037861103f565b61038061105a565b90604435926064356084359060ff8216820361054357804211610500576001600160a01b03908185169283895260056020528989208054906001820190558a519260208401917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98352868d860152858a1660608601528a608086015260a085015260c084015260c0835260e083019267ffffffffffffffff93818110858211176104ed578c52519020906104326113ce565b928b5192602084019461190160f01b865260228501526042840152604283526080830190838210908211176104da5791610485939161047d938d5260c4359260a4359251902061133f565b919091611225565b16036104975750610359939450611123565b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b634e487b7160e01b8c526041885260248cfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b5050346102e557816003193601126102e55760209060ff600a5460081c1690519015158152f35b5050816003193601126102e55761058534336114f9565b513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a280f35b5050346102e557816003193601126102e55760209063ffffffff600a5460101c169051908152f35b5050346102e557806003193601126102e55760209061063f6105fa61103f565b6106386001600160a01b03602435610633600a54620186a061062563ffffffff8360101c168561170a565b0493849160301c163361159c565b61171d565b903361159c565b5160018152f35b5082346102c057826003193601126102c05761066061103f565b91836024359233815260016020528181206001600160a01b038616825260205220549082821061069a5760208561063f8585038733611123565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b5050346102e557816003193601126102e5576020906009549051908152f35b509190346102e557816003193601126102e557805191809380549160019083821c92828516948515610804575b60209586861081146107f1578589529081156107cd5750600114610775575b6107718787610767828c03836110c8565b5191829182610ff6565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106107ba57505050826107719461076792820101943880610756565b805486850188015292860192810161079c565b60ff19168887015250505050151560051b8301019250610767826107713880610756565b634e487b7160e01b845260228352602484fd5b93607f1693610737565b5050346102e557816003193601126102e5576020906001600160a01b03600754169051908152f35b5050346102e55760203660031901126102e557806020926001600160a01b0361085d61103f565b1681526005845220549051908152f35b508290346102e55760203660031901126102e55780359060ff600a5460081c166108ab575b50610359919233845260086020524290842055336114f9565b600954821161092a573383526008602052838320546201518081018091116109175742101561089257606490602085519162461bcd60e51b8352820152601460248201527f45524332304d6f636b3a20746f6f206561726c790000000000000000000000006044820152fd5b634e487b7160e01b845260118252602484fd5b606490602085519162461bcd60e51b8352820152601960248201527f45524332304d6f636b3a20616d6f756e7420746f6f20626967000000000000006044820152fd5b83346102c057806003193601126102c057610986611070565b806001600160a01b0360075481198116600755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102e55760203660031901126102e557806020926001600160a01b036109e861103f565b16815280845220549051908152f35b5050346102e557816003193601126102e5576020906001600160a01b03600a5460301c169051908152f35b5050346102e5573660031901126102c057610359610a3e61103f565b610a46611070565b602435906114f9565b5050346102e557806003193601126102e55761063f602092610a97610a7261103f565b91338152600186528481206001600160a01b0384168252865284602435912054611100565b9033611123565b5050346102e557816003193601126102e557602090610abb6113ce565b9051908152f35b5050346102e557816003193601126102e55760209060ff600a54169051908152f35b503461024d57602036600319011261024d5780359163ffffffff8316808403610b7f57620186a090610b14611070565b1015610b3c57505065ffffffff0000600a549160101b169065ffffffff0000191617600a5580f35b906020606492519162461bcd60e51b8352820152601760248201527f45524332304d6f636b3a2066656520746f6f20686967680000000000000000006044820152fd5b8480fd5b503461024d57602080600319360112610d1f57813591338552848252828486205410610cf6573315610cab573385528482528385205490838210610c5d57508290338652858352038385205581600254036002558383518381527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef833392a38380838015610c53575b8280929181923390f115610c47577f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659192519283523392a280f35b505051903d90823e3d90fd5b6108fc9150610c0c565b845162461bcd60e51b8152908101839052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60849184519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b60649184519162461bcd60e51b8352820152600560248201526422b93937b960d91b6044820152fd5b8380fd5b5082346102c05760603660031901126102c057610d3e61103f565b90610d4761105a565b9260443593610d70620186a0610d6863ffffffff600a5460101c168861170a565b04809661171d565b91866001600160a01b0394858716815260016020528181203382526020522054906000198203610dbc575b60208861063f898989610daf8a8a8461159c565b600a5460301c169061159c565b838210610deb575082602097969492610ddf61063f9795610daf94033387611123565b92949697509294610d9b565b606490602089519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346102e557816003193601126102e55760209051620151808152f35b5050346102e55760203660031901126102e557806020926001600160a01b03610e7361103f565b1681526008845220549051908152f35b83346102c057806003193601126102c057610e9c611070565b600a5461ff0060ff8260081c161560081b169061ff00191617600a5580f35b5050346102e557816003193601126102e5576020906002549051908152f35b5050346102e557806003193601126102e55760209061063f610efa61103f565b6024359033611123565b9291905034610d1f5783600319360112610d1f57600354600181811c9186908281168015610fec575b6020958686108214610fd95750848852908115610fb75750600114610f5e575b6107718686610767828b03836110c8565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610fa4575050508261077194610767928201019438610f4d565b8054868501880152928601928101610f87565b60ff191687860152505050151560051b83010192506107678261077138610f4d565b634e487b7160e01b845260229052602483fd5b93607f1693610f2d565b6020808252825181830181905290939260005b82811061102b57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501611009565b600435906001600160a01b038216820361105557565b600080fd5b602435906001600160a01b038216820361105557565b6001600160a01b0360075416330361108457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff8211176110ea57604052565b634e487b7160e01b600052604160045260246000fd5b9190820180921161110d57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038091169182156111d457169182156111845760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b600581101561132957806112365750565b600181036112835760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036112d05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b6003146112d957565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116113c25791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156113b55781516001600160a01b038116156113af579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163014806114d0575b15611429577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176110ea5760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611400565b6001600160a01b0316908115611557577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208261153b600094600254611100565b60025584845283825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6001600160a01b038091169182156116b757169182156116665760008281528060205260408120549180831061161257604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b8181029291811591840414171561110d57565b9190820391821161110d5756fea2646970667358221220b46db04c7be3f04f365c649027440ca3b7ae03ffabd45ab82aeacd24b8fdd65764736f6c63430008120033";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20Mock";
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialAmount: PromiseOrValue<BigNumberish>,
    decimals_: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Mock> {
    return super.deploy(
      _name,
      _symbol,
      _initialAmount,
      decimals_,
      _owner,
      overrides || {}
    ) as Promise<ERC20Mock>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _initialAmount: PromiseOrValue<BigNumberish>,
    decimals_: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _initialAmount,
      decimals_,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Mock {
    return super.attach(address) as ERC20Mock;
  }
  override connect(signer: Signer): ERC20Mock__factory {
    return super.connect(signer) as ERC20Mock__factory;
  }
  static readonly contractName: "ERC20Mock";

  public readonly contractName: "ERC20Mock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new utils.Interface(_abi) as ERC20MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC20Mock;
  }
}
