/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GmxMarketMock, GmxMarketMockInterface } from "../GmxMarketMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "uiFeeReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "address",
            name: "initialLongToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "initialShortToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "longTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "shortTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "minMarketTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct GmxMarketMock.CreateDepositParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createDeposit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "uiFeeReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "longTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "shortTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "minLongTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minShortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct GmxMarketMock.CreateWithdrawalParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createWithdrawal",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendWnt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461010e576001600160401b0390601f6115b638819003918201601f1916830191848311848410176100f857808492604094855283398101031261010e57610054602061004d83610113565b9201610113565b4660a05260405160208101907f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692188252466040820152306060820152606081526080810194818610908611176100f8576040859052519020608052600480546001600160a01b039384166001600160a01b0319918216179091556005805492909316911617905561148e9081610128823960805181610f03015260a05181610edd0152f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b038216820361010e5756fe6080604052600436101561001257600080fd5b60003560e01c806306fdde0314610147578063095ea7b31461014257806318160ddd1461013d57806323b872dd14610138578063313ce567146101335780633644e5151461012e5780633e413bee146101295780633fc8cef3146101245780635b4e95611461011f57806370a082311461011a5780637d39aaf1146101155780637ecebe001461011057806395d89b411461010b578063a9059cbb14610106578063ac9650d814610101578063ad23c5a1146100fc578063d505accf146100f7578063dd62ed3e146100f25763e6d66ac8146100ed57600080fd5b610cee565b610c89565b610ac2565b6109a0565b610897565b610710565b6106b2565b610674565b61065b565b61061d565b610501565b6104da565b6104b3565b610490565b610474565b6102c9565b61027f565b6101f1565b610194565b60005b83811061015f5750506000910152565b818101518382015260200161014f565b906020916101888151809281855285808601910161014c565b601f01601f1916010190565b346101db5760003660031901126101db576101d76040516101b481610f85565b6002815261474d60f01b602082015260405191829160208352602083019061016f565b0390f35b600080fd5b6001600160a01b038116036101db57565b346101db5760403660031901126101db5760043561020e816101e0565b6001600160a01b036024359133600052600160205282610245826040600020906001600160a01b0316600052602052604060002090565b5560405192835216907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101db5760003660031901126101db576020600354604051908152f35b60609060031901126101db576004356102b5816101e0565b906024356102c2816101e0565b9060443590565b346101db576103237fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6102fb3661029d565b9291939083610332575b6040519384526001600160a01b039081169416929081906020820190565b0390a360405160018152602090f35b61034f856001600160a01b03166000526000602052604060002090565b5461035c85821015610dc6565b846001600160a01b0391828416809389160361037b575b505050610305565b6103ce6103d3936103ba6103a28b6001600160a01b03166000526001602052604060002090565b336001600160a01b0316600052602052604060002090565b548460018201610423575b50501515610e12565b610e74565b6103f0866001600160a01b03166000526000602052604060002090565b5561040e816001600160a01b03166000526000602052604060002090565b610419858254610e81565b9055388481610373565b816103ce82610433941015610e8e565b61046c336104548d6001600160a01b03166000526001602052604060002090565b906001600160a01b0316600052602052604060002090565b5538846103c5565b346101db5760003660031901126101db57602060405160128152f35b346101db5760003660031901126101db5760206104ab610eda565b604051908152f35b346101db5760003660031901126101db5760206001600160a01b0360055416604051908152f35b346101db5760003660031901126101db5760206001600160a01b0360045416604051908152f35b6003196020368201126101db576004359067ffffffffffffffff82116101db576101809082360301126101db57610104816004013591610540836101e0565b01359060035490828201918281116106185782106105d3576001600160a01b037fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9161058d600094600355565b6105aa816001600160a01b03166000526000602052604060002090565b6105b5868254610e81565b90556040519485521692602090a360405161060f60f31b8152602090f35b60405162461bcd60e51b815260206004820152600d60248201527f4d696e74206f766572666c6f77000000000000000000000000000000000000006044820152606490fd5b610e5e565b346101db5760203660031901126101db576001600160a01b03600435610642816101e0565b1660005260006020526020604060002054604051908152f35b60403660031901126101db576106726004356101e0565b005b346101db5760203660031901126101db576001600160a01b03600435610699816101e0565b1660005260026020526020604060002054604051908152f35b346101db5760003660031901126101db576101d76040516106d281610f85565b600981527f474d206d61726b65740000000000000000000000000000000000000000000000602082015260405191829160208352602083019061016f565b346101db5760403660031901126101db5760043561072d816101e0565b6024358015801590610823575b61077f575b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6001600160a01b03604051931692806103233394829190602083019252565b61079c336001600160a01b03166000526000602052604060002090565b546107a982821015610dc6565b816001600160a01b038416918233036107c5575b50505061073f565b6103ce6107d3931515610e12565b6107f0336001600160a01b03166000526000602052604060002090565b5561080e826001600160a01b03166000526000602052604060002090565b610819828254610e81565b90553881816107bd565b506001600160a01b038216331461073a565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106108695750505050505090565b9091929394958480610887600193603f198682030187528a5161016f565b9801930193019194939290610859565b6020806003193601126101db5760043567ffffffffffffffff918282116101db57366023830112156101db5781600401359283116101db576024820191602436918560051b0101116101db576108ec83611298565b916040916108fc83519485610fde565b848452601f1961090b86611298565b0160005b8181106109915750505060005b848110610930578251806101d78682610835565b8060008061094261098c9489876112c6565b9061095188518093819361130d565b0390305af461097161096161117a565b9161096b8361135f565b9061131b565b61097b828761134b565b52610986818661134b565b50611098565b61091c565b6060868201840152820161090f565b6003196020368201126101db576004359067ffffffffffffffff82116101db57610160826004019183360301126101db57610ab291336000526000602052600060408120546109f96109f482600354610e74565b600355565b610a16336001600160a01b03166000526000602052604060002090565b610a21828254610e74565b905560405190815233907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a3610a89610a75610a696004546001600160a01b031690565b6001600160a01b031690565b610a7e846111c2565b60c4840135916111cf565b60e4610aa9610aa3610a696005546001600160a01b031690565b936111c2565b910135916111cf565b60405161060f60f31b8152602090f35b346101db5760e03660031901126101db57600435610adf816101e0565b60243590610aec826101e0565b60443590606435906084359360ff851685036101db576001600160a01b03906020610c02610bd88585811697610b23891515611000565b610b2e81421061104c565b610bd08a610bc2610b52856001600160a01b03166000526002602052604060002090565b93845494610b5f86611098565b90556040519485938b8b8601988991959493909260a09360c08401977f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c985526001600160a01b038092166020860152166040840152606083015260808201520152565b03601f198101835282610fde565b51902061111b565b6040805191825260ff909916602082015260a4359881019890985260c43560608901526080880190565b876000988992838052039060015afa15610c845784610c74826104547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92596610c5b89610c558d516001600160a01b031690565b146110b3565b6001600160a01b03166000526001602052604060002090565b556040519485521692602090a380f35b6110a7565b346101db5760403660031901126101db576020610ce5600435610cab816101e0565b6001600160a01b0360243591610cc0836101e0565b16600052600183526040600020906001600160a01b0316600052602052604060002090565b54604051908152f35b60008080610cfb3661029d565b91929060405160208101936323b872dd60e01b85523360248301526001600160a01b038093166044830152606482015260648152610d3881610fa6565b5193165af1610d4561117a565b81610d97575b5015610d5357005b606460405162461bcd60e51b815260206004820152602060248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c65646044820152fd5b8051801592508215610dac575b505038610d4b565b610dbf92506020809183010191016111aa565b3880610da4565b15610dcd57565b60405162461bcd60e51b815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f77000000000000000000006044820152606490fd5b15610e1957565b60405162461bcd60e51b815260206004820152601660248201527f45524332303a206e6f207a65726f2061646472657373000000000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b9190820391821161061857565b9190820180921161061857565b15610e9557565b60405162461bcd60e51b815260206004820152601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f7700000000000000006044820152606490fd5b467f000000000000000000000000000000000000000000000000000000000000000003610f25577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218825246604082015230606082015260608152610f6981610fc2565b51902090565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610fa157604052565b610f6f565b60a0810190811067ffffffffffffffff821117610fa157604052565b6080810190811067ffffffffffffffff821117610fa157604052565b90601f8019910116810190811067ffffffffffffffff821117610fa157604052565b1561100757565b60405162461bcd60e51b815260206004820152601860248201527f45524332303a204f776e65722063616e6e6f74206265203000000000000000006044820152606490fd5b1561105357565b60405162461bcd60e51b815260206004820152600e60248201527f45524332303a20457870697265640000000000000000000000000000000000006044820152606490fd5b60001981146106185760010190565b6040513d6000823e3d90fd5b156110ba57565b60405162461bcd60e51b815260206004820152601860248201527f45524332303a20496e76616c6964205369676e617475726500000000000000006044820152606490fd5b67ffffffffffffffff8111610fa157601f01601f191660200190565b6040519061112882610f85565b60028252610f696060602084019361190160f01b8552611146610eda565b60405194859261115f602085019889925192839161014c565b83019160208301526040820152036040810184520182610fde565b3d156111a5573d9061118b826110ff565b916111996040519384610fde565b82523d6000602084013e565b606090565b908160209103126101db575180151581036101db5790565b356111cc816101e0565b90565b600092838093604051602081019363a9059cbb60e01b85526001600160a01b03809316602483015260448201526044815261120981610fc2565b5193165af161121661117a565b81611269575b501561122457565b60405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606490fd5b805180159250821561127e575b50503861121c565b61129192506020809183010191016111aa565b3880611276565b67ffffffffffffffff8111610fa15760051b60200190565b634e487b7160e01b600052603260045260246000fd5b91908110156113085760051b81013590601e19813603018212156101db57019081359167ffffffffffffffff83116101db5760200182360381136101db579190565b6112b0565b908092918237016000815290565b156113235750565b60405162461bcd60e51b81526020600482015290819061134790602483019061016f565b0390fd5b80518210156113085760209160051b010190565b6103e881511161141e5760448151106113e4576004810151810190602081602484019303126101db5760248101519067ffffffffffffffff82116101db5701816043820112156101db5760248101516113b7816110ff565b926113c56040519485610fde565b818452604482840101116101db576111cc91604460208501910161014c565b506040516113f181610f85565b600e81527f6e6f2072657475726e2064617461000000000000000000000000000000000000602082015290565b5060405161142b81610f85565b600f81527f726561736f6e20746f6f206c6f6e67000000000000000000000000000000000060208201529056fea26469706673582212207752bc0ce4f16a06f261358532d7b5684a90bef0199b943ec9a629b55dcd1f7964736f6c63430008120033";

type GmxMarketMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GmxMarketMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GmxMarketMock__factory extends ContractFactory {
  constructor(...args: GmxMarketMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GmxMarketMock";
  }

  override deploy(
    _weth: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GmxMarketMock> {
    return super.deploy(
      _weth,
      _usdc,
      overrides || {}
    ) as Promise<GmxMarketMock>;
  }
  override getDeployTransaction(
    _weth: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_weth, _usdc, overrides || {});
  }
  override attach(address: string): GmxMarketMock {
    return super.attach(address) as GmxMarketMock;
  }
  override connect(signer: Signer): GmxMarketMock__factory {
    return super.connect(signer) as GmxMarketMock__factory;
  }
  static readonly contractName: "GmxMarketMock";

  public readonly contractName: "GmxMarketMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GmxMarketMockInterface {
    return new utils.Interface(_abi) as GmxMarketMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GmxMarketMock {
    return new Contract(address, _abi, signerOrProvider) as GmxMarketMock;
  }
}
