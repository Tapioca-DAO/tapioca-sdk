/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GmxMarketMock, GmxMarketMockInterface } from "../GmxMarketMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lp",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "uiFeeReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "address",
            name: "initialLongToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "initialShortToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "longTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "shortTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "minMarketTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct GmxMarketMock.CreateDepositParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createDeposit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "uiFeeReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "longTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "shortTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "minLongTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minShortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct GmxMarketMock.CreateWithdrawalParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createWithdrawal",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "glp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glpManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintAndStakeGlp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendWnt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_glp",
        type: "address",
      },
    ],
    name: "setGlp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_glpAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "unstakeAndRedeemGlp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001db638038062001db68339810160408190526200003491620000fc565b4660a08190526200009881604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020820152908101829052306060820152600090608001604051602081830303815290604052805190602001209050919050565b60805250600480546001600160a01b039485166001600160a01b03199182161790915560058054938516938216939093179092556006805491909316911617905562000146565b80516001600160a01b0381168114620000f757600080fd5b919050565b6000806000606084860312156200011257600080fd5b6200011d84620000df565b92506200012d60208501620000df565b91506200013d60408501620000df565b90509250925092565b60805160a051611c4a6200016c60003960006114080152600061143d0152611c4a6000f3fe6080604052600436106101965760003560e01c806370a08231116100e1578063ac9650d81161008a578063dd62ed3e11610064578063dd62ed3e146104eb578063e6d66ac814610523578063fa6db1bc14610536578063fe9027961461054957600080fd5b8063ac9650d814610498578063ad23c5a1146104b8578063d505accf146104cb57600080fd5b80637ecebe00116100bb5780637ecebe001461040557806395d89b4114610432578063a9059cbb1461047857600080fd5b806370a082311461039757806378a207ee146103c45780637d39aaf1146103f157600080fd5b8063313ce567116101435780633e413bee1161011d5780633e413bee1461032a5780633fc8cef3146103575780635b4e95611461038457600080fd5b8063313ce567146102d95780633644e515146102f5578063364e23111461030a57600080fd5b806318160ddd1161017457806318160ddd1461025157806323b872dd14610267578063313c06a01461028757600080fd5b806306fdde031461019b578063095ea7b3146101f35780630f3aa55414610223575b600080fd5b3480156101a757600080fd5b5060408051808201909152600281527f474d00000000000000000000000000000000000000000000000000000000000060208201525b6040516101ea9190611625565b60405180910390f35b3480156101ff57600080fd5b5061021361020e366004611668565b6105ab565b60405190151581526020016101ea565b34801561022f57600080fd5b5061024361023e366004611692565b610625565b6040519081526020016101ea565b34801561025d57600080fd5b5061024360035481565b34801561027357600080fd5b506102136102823660046116d8565b610677565b34801561029357600080fd5b506006546102b49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ea565b3480156102e557600080fd5b50604051601281526020016101ea565b34801561030157600080fd5b50610243610989565b34801561031657600080fd5b50610243610325366004611714565b610998565b34801561033657600080fd5b506005546102b49073ffffffffffffffffffffffffffffffffffffffff1681565b34801561036357600080fd5b506004546102b49073ffffffffffffffffffffffffffffffffffffffff1681565b61024361039236600461174d565b6109e0565b3480156103a357600080fd5b506102436103b2366004611789565b60006020819052908152604090205481565b3480156103d057600080fd5b506007546102b49073ffffffffffffffffffffffffffffffffffffffff1681565b6104036103ff366004611668565b5050565b005b34801561041157600080fd5b50610243610420366004611789565b60026020526000908152604090205481565b34801561043e57600080fd5b5060408051808201909152600981527f474d206d61726b6574000000000000000000000000000000000000000000000060208201526101dd565b34801561048457600080fd5b50610213610493366004611668565b610a3e565b6104ab6104a63660046117a4565b610c18565b6040516101ea9190611819565b6102436104c636600461189b565b610d61565b3480156104d757600080fd5b506104036104e63660046118d7565b610e02565b3480156104f757600080fd5b5061024361050636600461194a565b600160209081526000928352604080842090915290825290205481565b6104036105313660046116d8565b6110f3565b34801561054257600080fd5b50306102b4565b34801561055557600080fd5b50610403610564366004611789565b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106139086815260200190565b60405180910390a35060015b92915050565b60075460009061064d9073ffffffffffffffffffffffffffffffffffffffff1633308761111a565b61066e73ffffffffffffffffffffffffffffffffffffffff86168386611293565b50919392505050565b600081156109185773ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090205482811015610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f770000000000000000000060448201526064015b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146109165773ffffffffffffffffffffffffffffffffffffffff851660009081526001602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108455783811015610809576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f770000000000000000604482015260640161070b565b61081384826119ac565b73ffffffffffffffffffffffffffffffffffffffff871660009081526001602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff85166108c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f45524332303a206e6f207a65726f206164647265737300000000000000000000604482015260640161070b565b6108cc84836119ac565b73ffffffffffffffffffffffffffffffffffffffff808816600090815260208190526040808220939093559087168152908120805486929061090f9084906119bf565b9091555050505b505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161097791815260200190565b60405180910390a35060019392505050565b6000610993611403565b905090565b60006109bc73ffffffffffffffffffffffffffffffffffffffff861633308761111a565b60075461066e9073ffffffffffffffffffffffffffffffffffffffff163386611293565b6000610a176109f26020840184611789565b60065473ffffffffffffffffffffffffffffffffffffffff1690610100850135611293565b507f3078000000000000000000000000000000000000000000000000000000000000919050565b600081151580610a6357503373ffffffffffffffffffffffffffffffffffffffff8416145b15610bce573360009081526020819052604090205482811015610ae2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f7700000000000000000000604482015260640161070b565b3373ffffffffffffffffffffffffffffffffffffffff851614610bcc5773ffffffffffffffffffffffffffffffffffffffff8416610b7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f45524332303a206e6f207a65726f206164647265737300000000000000000000604482015260640161070b565b610b8683826119ac565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff861681529081208054859290610bc69084906119bf565b90915550505b505b60405182815273ffffffffffffffffffffffffffffffffffffffff84169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610613565b60608167ffffffffffffffff811115610c3357610c336119d2565b604051908082528060200260200182016040528015610c6657816020015b6060815260200190600190039081610c515790505b50905060005b82811015610d5a5760008030868685818110610c8a57610c8a611a01565b9050602002810190610c9c9190611a30565b604051610caa929190611a9c565b600060405180830381855af49150503d8060008114610ce5576040519150601f19603f3d011682016040523d82523d6000602084013e610cea565b606091505b509150915081610cf982611463565b90610d31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b9190611625565b5080848481518110610d4557610d45611a01565b60209081029190910101525050600101610c6c565b5092915050565b6000610d97610d736020840184611789565b60045473ffffffffffffffffffffffffffffffffffffffff169060c0850135611293565b610dcb610da76020840184611789565b60055473ffffffffffffffffffffffffffffffffffffffff169060e0850135611293565b33600081815260208190526040902054600654610a179273ffffffffffffffffffffffffffffffffffffffff90911691309061111a565b73ffffffffffffffffffffffffffffffffffffffff8716610e7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45524332303a204f776e65722063616e6e6f7420626520300000000000000000604482015260640161070b565b834210610ee8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f45524332303a2045787069726564000000000000000000000000000000000000604482015260640161070b565b73ffffffffffffffffffffffffffffffffffffffff871660008181526002602052604081208054600192610fac927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928d928d928d9291610f4883611aac565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810188905260e00160405160208183030381529060405280519060200120611506565b6040805160008152602081018083529290925260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610ffa573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614611081576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45524332303a20496e76616c6964205369676e61747572650000000000000000604482015260640161070b565b73ffffffffffffffffffffffffffffffffffffffff8781166000818152600160209081526040808320948b168084529482529182902089905590518881527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b61111573ffffffffffffffffffffffffffffffffffffffff841633848461111a565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916111b99190611ae4565b6000604051808303816000865af19150503d80600081146111f6576040519150601f19603f3d011682016040523d82523d6000602084013e6111fb565b606091505b50915091508180156112255750805115806112255750808060200190518101906112259190611b00565b61128b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c6564604482015260640161070b565b505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283929087169161132a9190611ae4565b6000604051808303816000865af19150503d8060008114611367576040519150601f19603f3d011682016040523d82523d6000602084013e61136c565b606091505b50915091508180156113965750805115806113965750808060200190518101906113969190611b00565b6113fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604482015260640161070b565b5050505050565b6000467f0000000000000000000000000000000000000000000000000000000000000000811461143b5761143681611576565b61145d565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b60606103e8825111156114a957505060408051808201909152600f81527f726561736f6e20746f6f206c6f6e670000000000000000000000000000000000602082015290565b6044825110156114ec57505060408051808201909152600e81527f6e6f2072657475726e2064617461000000000000000000000000000000000000602082015290565b6004820191508180602001905181019061061f9190611b22565b60006040518060400160405280600281526020017f1901000000000000000000000000000000000000000000000000000000000000815250611546611403565b8360405160200161155993929190611bed565b604051602081830303815290604052805190602001209050919050565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020820152908101829052306060820152600090608001611559565b60005b838110156115d25781810151838201526020016115ba565b50506000910152565b600081518084526115f38160208601602086016115b7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061163860208301846115db565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461166357600080fd5b919050565b6000806040838503121561167b57600080fd5b6116848361163f565b946020939093013593505050565b600080600080608085870312156116a857600080fd5b6116b18561163f565b935060208501359250604085013591506116cd6060860161163f565b905092959194509250565b6000806000606084860312156116ed57600080fd5b6116f68461163f565b92506117046020850161163f565b9150604084013590509250925092565b6000806000806080858703121561172a57600080fd5b6117338561163f565b966020860135965060408601359560600135945092505050565b60006020828403121561175f57600080fd5b813567ffffffffffffffff81111561177657600080fd5b8201610180818503121561163857600080fd5b60006020828403121561179b57600080fd5b6116388261163f565b600080602083850312156117b757600080fd5b823567ffffffffffffffff808211156117cf57600080fd5b818501915085601f8301126117e357600080fd5b8135818111156117f257600080fd5b8660208260051b850101111561180757600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561188e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261187c8583516115db565b94509285019290850190600101611842565b5092979650505050505050565b6000602082840312156118ad57600080fd5b813567ffffffffffffffff8111156118c457600080fd5b8201610160818503121561163857600080fd5b600080600080600080600060e0888a0312156118f257600080fd5b6118fb8861163f565b96506119096020890161163f565b95506040880135945060608801359350608088013560ff8116811461192d57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561195d57600080fd5b6119668361163f565b91506119746020840161163f565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561061f5761061f61197d565b8082018082111561061f5761061f61197d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611a6557600080fd5b83018035915067ffffffffffffffff821115611a8057600080fd5b602001915036819003821315611a9557600080fd5b9250929050565b8183823760009101908152919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611add57611add61197d565b5060010190565b60008251611af68184602087016115b7565b9190910192915050565b600060208284031215611b1257600080fd5b8151801515811461163857600080fd5b600060208284031215611b3457600080fd5b815167ffffffffffffffff80821115611b4c57600080fd5b818401915084601f830112611b6057600080fd5b815181811115611b7257611b726119d2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611bb857611bb86119d2565b81604052828152876020848701011115611bd157600080fd5b611be28360208301602088016115b7565b979650505050505050565b60008451611bff8184602089016115b7565b9190910192835250602082015260400191905056fea26469706673582212209b36e8c8204a42eb35932cf31602b68bc3872742ff1bfa4db52e8cb671252e5f64736f6c63430008160033";

type GmxMarketMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GmxMarketMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GmxMarketMock__factory extends ContractFactory {
  constructor(...args: GmxMarketMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GmxMarketMock";
  }

  override deploy(
    _weth: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _lp: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GmxMarketMock> {
    return super.deploy(
      _weth,
      _usdc,
      _lp,
      overrides || {}
    ) as Promise<GmxMarketMock>;
  }
  override getDeployTransaction(
    _weth: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _lp: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_weth, _usdc, _lp, overrides || {});
  }
  override attach(address: string): GmxMarketMock {
    return super.attach(address) as GmxMarketMock;
  }
  override connect(signer: Signer): GmxMarketMock__factory {
    return super.connect(signer) as GmxMarketMock__factory;
  }
  static readonly contractName: "GmxMarketMock";

  public readonly contractName: "GmxMarketMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GmxMarketMockInterface {
    return new utils.Interface(_abi) as GmxMarketMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GmxMarketMock {
    return new Contract(address, _abi, signerOrProvider) as GmxMarketMock;
  }
}
