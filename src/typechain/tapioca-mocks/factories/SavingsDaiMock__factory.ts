/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SavingsDaiMock,
  SavingsDaiMockInterface,
} from "../SavingsDaiMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dai",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "convertToShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "dai",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "maxRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "maxWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "previewRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "previewWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516116a33803806116a383398101604081905261002f916100bb565b4660a081905261009281604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020820152908101829052306060820152600090608001604051602081830303815290604052805190602001209050919050565b60805250600480546001600160a01b0319166001600160a01b03929092169190911790556100eb565b6000602082840312156100cd57600080fd5b81516001600160a01b03811681146100e457600080fd5b9392505050565b60805160a0516115936101106000396000610c3f01526000610c7401526115936000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80637ecebe00116100d8578063c6e6f5921161008c578063d905777e11610066578063d905777e14610318578063dd62ed3e1461032b578063f4b9fa751461035657600080fd5b8063c6e6f592146101ea578063ce96cb77146102ee578063d505accf1461030357600080fd5b8063a9059cbb116100bd578063a9059cbb146102c8578063b460af94146102db578063ba087652146102db57600080fd5b80637ecebe001461026f57806395d89b411461028f57600080fd5b8063313ce5671161012f5780634cdad506116101145780634cdad506146101ea5780636e553f651461023c57806370a082311461024f57600080fd5b8063313ce567146102255780633644e5151461023457600080fd5b80630a28a477116101605780630a28a477146101ea57806318160ddd1461020957806323b872dd1461021257600080fd5b806306fdde031461017c578063095ea7b3146101c7575b600080fd5b60408051808201909152600a81527f7344414920746f6b656e0000000000000000000000000000000000000000000060208201525b6040516101be9190611232565b60405180910390f35b6101da6101d53660046112ac565b61039b565b60405190151581526020016101be565b6101fb6101f83660046112d6565b90565b6040519081526020016101be565b6101fb60035481565b6101da6102203660046112ef565b610415565b604051601281526020016101be565b6101fb6106d9565b6101fb61024a36600461132b565b6106e8565b6101fb61025d366004611357565b60006020819052908152604090205481565b6101fb61027d366004611357565b60026020526000908152604090205481565b60408051808201909152600481527f734461690000000000000000000000000000000000000000000000000000000060208201526101b1565b6101da6102d63660046112ac565b610720565b6101fb6102e9366004611379565b6108c6565b6101fb6102fc366004611357565b5060035490565b6103166103113660046113b5565b6108ff565b005b6101fb610326366004611357565b610ba2565b6101fb610339366004611428565b600160209081526000928352604080842090915290825290205481565b6004546103769073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101be565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104039086815260200190565b60405180910390a35060015b92915050565b600081156106685773ffffffffffffffffffffffffffffffffffffffff8416600090815260208190526040902054828110156104985760405162461bcd60e51b815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f770000000000000000000060448201526064015b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146106665773ffffffffffffffffffffffffffffffffffffffff851660009081526001602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105af57838110156105735760405162461bcd60e51b815260206004820152601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f770000000000000000604482015260640161048f565b61057d8482611481565b73ffffffffffffffffffffffffffffffffffffffff871660009081526001602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff85166106125760405162461bcd60e51b815260206004820152601660248201527f45524332303a206e6f207a65726f206164647265737300000000000000000000604482015260640161048f565b61061c8483611481565b73ffffffffffffffffffffffffffffffffffffffff808816600090815260208190526040808220939093559087168152908120805486929061065f908490611494565b9091555050505b505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106c791815260200190565b60405180910390a35060019392505050565b60006106e3610c3a565b905090565b60006106f48284610c9a565b6004546107199073ffffffffffffffffffffffffffffffffffffffff16333086610d90565b5090919050565b60008115158061074557503373ffffffffffffffffffffffffffffffffffffffff8416145b1561087c5733600090815260208190526040902054828110156107aa5760405162461bcd60e51b815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f7700000000000000000000604482015260640161048f565b3373ffffffffffffffffffffffffffffffffffffffff85161461087a5773ffffffffffffffffffffffffffffffffffffffff841661082a5760405162461bcd60e51b815260206004820152601660248201527f45524332303a206e6f207a65726f206164647265737300000000000000000000604482015260640161048f565b6108348382611481565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff861681529081208054859290610874908490611494565b90915550505b505b60405182815273ffffffffffffffffffffffffffffffffffffffff84169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610403565b6004546000906108ed9073ffffffffffffffffffffffffffffffffffffffff168486610eef565b6108f78285611045565b509192915050565b73ffffffffffffffffffffffffffffffffffffffff87166109625760405162461bcd60e51b815260206004820152601860248201527f45524332303a204f776e65722063616e6e6f7420626520300000000000000000604482015260640161048f565b8342106109b15760405162461bcd60e51b815260206004820152600e60248201527f45524332303a2045787069726564000000000000000000000000000000000000604482015260640161048f565b73ffffffffffffffffffffffffffffffffffffffff871660008181526002602052604081208054600192610a75927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928d928d928d9291610a11836114a7565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810188905260e0016040516020818303038152906040528051906020012061115d565b6040805160008152602081018083529290925260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610ac3573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614610b305760405162461bcd60e51b815260206004820152601860248201527f45524332303a20496e76616c6964205369676e61747572650000000000000000604482015260640161048f565b73ffffffffffffffffffffffffffffffffffffffff8781166000818152600160209081526040808320948b168084529482529182902089905590518881527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b600480546040517f70a08231000000000000000000000000000000000000000000000000000000008152309281019290925260009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610c16573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040f91906114df565b6000467f00000000000000000000000000000000000000000000000000000000000000008114610c7257610c6d816111cd565b610c94565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b600081600354610caa9190611494565b9050600354811015610cfe5760405162461bcd60e51b815260206004820152600d60248201527f4d696e74206f766572666c6f7700000000000000000000000000000000000000604482015260640161048f565b600381905573ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604081208054849290610d38908490611494565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691610e2f91906114f8565b6000604051808303816000865af19150503d8060008114610e6c576040519150601f19603f3d011682016040523d82523d6000602084013e610e71565b606091505b5091509150818015610e9b575080511580610e9b575080806020019051810190610e9b9190611514565b610ee75760405162461bcd60e51b815260206004820181905260248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c6564604482015260640161048f565b505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691610f8691906114f8565b6000604051808303816000865af19150503d8060008114610fc3576040519150601f19603f3d011682016040523d82523d6000602084013e610fc8565b606091505b5091509150818015610ff2575080511580610ff2575080806020019051810190610ff29190611514565b61103e5760405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604482015260640161048f565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020548111156110ba5760405162461bcd60e51b815260206004820152600d60248201527f4275726e20746f6f206d75636800000000000000000000000000000000000000604482015260640161048f565b80600360008282546110cc9190611481565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290611106908490611481565b909155505060405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60006040518060400160405280600281526020017f190100000000000000000000000000000000000000000000000000000000000081525061119d610c3a565b836040516020016111b093929190611536565b604051602081830303815290604052805190602001209050919050565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921860208201529081018290523060608201526000906080016111b0565b60005b83811015611229578181015183820152602001611211565b50506000910152565b602081526000825180602084015261125181604085016020870161120e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146112a757600080fd5b919050565b600080604083850312156112bf57600080fd5b6112c883611283565b946020939093013593505050565b6000602082840312156112e857600080fd5b5035919050565b60008060006060848603121561130457600080fd5b61130d84611283565b925061131b60208501611283565b9150604084013590509250925092565b6000806040838503121561133e57600080fd5b8235915061134e60208401611283565b90509250929050565b60006020828403121561136957600080fd5b61137282611283565b9392505050565b60008060006060848603121561138e57600080fd5b8335925061139e60208501611283565b91506113ac60408501611283565b90509250925092565b600080600080600080600060e0888a0312156113d057600080fd5b6113d988611283565b96506113e760208901611283565b95506040880135945060608801359350608088013560ff8116811461140b57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561143b57600080fd5b61144483611283565b915061134e60208401611283565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561040f5761040f611452565b8082018082111561040f5761040f611452565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114d8576114d8611452565b5060010190565b6000602082840312156114f157600080fd5b5051919050565b6000825161150a81846020870161120e565b9190910192915050565b60006020828403121561152657600080fd5b8151801515811461137257600080fd5b6000845161154881846020890161120e565b9190910192835250602082015260400191905056fea264697066735822122016e015504d6a72138a4a9341b87e6f63671497fce4ced35c5b8e2f883dfff87064736f6c63430008160033";

type SavingsDaiMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SavingsDaiMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SavingsDaiMock__factory extends ContractFactory {
  constructor(...args: SavingsDaiMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SavingsDaiMock";
  }

  override deploy(
    _dai: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SavingsDaiMock> {
    return super.deploy(_dai, overrides || {}) as Promise<SavingsDaiMock>;
  }
  override getDeployTransaction(
    _dai: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_dai, overrides || {});
  }
  override attach(address: string): SavingsDaiMock {
    return super.attach(address) as SavingsDaiMock;
  }
  override connect(signer: Signer): SavingsDaiMock__factory {
    return super.connect(signer) as SavingsDaiMock__factory;
  }
  static readonly contractName: "SavingsDaiMock";

  public readonly contractName: "SavingsDaiMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SavingsDaiMockInterface {
    return new utils.Interface(_abi) as SavingsDaiMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SavingsDaiMock {
    return new Contract(address, _abi, signerOrProvider) as SavingsDaiMock;
  }
}
