/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  StargateRouterETHMock,
  StargateRouterETHMockInterface,
} from "../StargateRouterETHMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IStargateRouterMock",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20Mock",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IStargateRouterMock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "address payable",
        name: "_refundAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_toAddress",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minAmountLD",
        type: "uint256",
      },
    ],
    name: "swapETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC20Mock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161065438038061065483398101604081905261002f9161004e565b5050610088565b6001600160a01b038116811461004b57600080fd5b50565b6000806040838503121561006157600080fd5b825161006c81610036565b602084015190925061007d81610036565b809150509250929050565b6105bd806100976000396000f3fe6080604052600436106100345760003560e01c80631114cd2a14610039578063f887ea401461004e578063fc0c546a146100a4575b600080fd5b61004c61004736600461034c565b6100d1565b005b34801561005a57600080fd5b5060015461007b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100b057600080fd5b5060005461007b9073ffffffffffffffffffffffffffffffffffffffff1681565b813411610164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53746172676174653a206d73672e76616c7565206d757374206265203e205f6160448201527f6d6f756e744c4400000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b61018860405180606001604052806000815260200160008152602001606081525090565b6000546040517f7c928fe90000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff90911690637c928fe990602401600060405180830381600087803b1580156101f457600080fd5b505af1158015610208573d6000803e3d6000fd5b50506000546001546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152602481018890529116925063095ea7b391506044016020604051808303816000875af1158015610287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ab9190610410565b50600180546040517f9fbf10fc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691639fbf10fc91610311918b9181908c908a908a908a908f908f90600401610482565b600060405180830381600087803b15801561032b57600080fd5b505af115801561033f573d6000803e3d6000fd5b5050505050505050505050565b60008060008060008060a0878903121561036557600080fd5b863561ffff8116811461037757600080fd5b9550602087013573ffffffffffffffffffffffffffffffffffffffff811681146103a057600080fd5b9450604087013567ffffffffffffffff808211156103bd57600080fd5b818901915089601f8301126103d157600080fd5b8135818111156103e057600080fd5b8a60208285010111156103f257600080fd5b979a9699505060200196606081013595608090910135945092505050565b60006020828403121561042257600080fd5b8151801515811461043257600080fd5b9392505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600061012061ffff8c16835260208b60208501528a604085015273ffffffffffffffffffffffffffffffffffffffff8a1660608501528860808501528760a08501528160c0850152865182850152602087015161014085015260408701519150606061016085015281518061018086015260005b81811015610513578381018301518682016101a0015282016104f6565b506101a0925060008382870101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8201168501915050818482030160e08501526105638282018688610439565b84810361010086015260008152915050602081019c9b50505050505050505050505056fea26469706673582212208403ef30ec9826201b78993e50df58e91ff47b813a030fd4dcd2ea63282b09e464736f6c63430008160033";

type StargateRouterETHMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargateRouterETHMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargateRouterETHMock__factory extends ContractFactory {
  constructor(...args: StargateRouterETHMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StargateRouterETHMock";
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StargateRouterETHMock> {
    return super.deploy(
      _router,
      _token,
      overrides || {}
    ) as Promise<StargateRouterETHMock>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, _token, overrides || {});
  }
  override attach(address: string): StargateRouterETHMock {
    return super.attach(address) as StargateRouterETHMock;
  }
  override connect(signer: Signer): StargateRouterETHMock__factory {
    return super.connect(signer) as StargateRouterETHMock__factory;
  }
  static readonly contractName: "StargateRouterETHMock";

  public readonly contractName: "StargateRouterETHMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargateRouterETHMockInterface {
    return new utils.Interface(_abi) as StargateRouterETHMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StargateRouterETHMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StargateRouterETHMock;
  }
}
