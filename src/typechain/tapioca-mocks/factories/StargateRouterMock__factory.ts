/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  StargateRouterMock,
  StargateRouterMockInterface,
} from "../StargateRouterMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dstGasForCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dstNativeAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "dstNativeAddr",
            type: "bytes",
          },
        ],
        internalType: "struct IStargateRouterMock.lzTxObj",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_to",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007457601f6105c438819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161053490816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c9081639fbf10fc1461003a575063fc0c546a1461003557600080fd5b61022d565b6101203660031901126100c25761004f6100c5565b506100586100db565b67ffffffffffffffff9060c4358281116100be5761007a903690600401610199565b5060e4358281116100be57610093903690600401610142565b90610104359283116100be576100b06100bb9336906004016101f4565b505060843590610381565b80f35b8380fd5b80fd5b6004359061ffff821682036100d657565b600080fd5b606435906001600160a01b03821682036100d657565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161011b57604052565b6100f1565b90601f8019910116810190811067ffffffffffffffff82111761011b57604052565b81601f820112156100d65780359067ffffffffffffffff821161011b5760405192610177601f8401601f191660200185610120565b828452602083830101116100d657816000926020809301838601378301015290565b9190916060818403126100d6576040519067ffffffffffffffff90606083018281118482101761011b576040528294813584526020820135602085015260408201359283116100d6576040926101ef9201610142565b910152565b9181601f840112156100d65782359167ffffffffffffffff83116100d657602083818601950101116100d657565b60009103126100d657565b346100d65760003660031901126100d65760206001600160a01b0360005416604051908152f35b1561025b57565b60405162461bcd60e51b815260206004820152601760248201527f53746172676174653a2063616e6e6f74207377617020300000000000000000006044820152606490fd5b156102a757565b60405162461bcd60e51b815260206004820152602660248201527f53746172676174653a205f726566756e64416464726573732063616e6e6f742060448201526506265203078360d41b6064820152608490fd5b908160209103126100d6575180151581036100d65790565b6040513d6000823e3d90fd5b9061037e916000815260c0602082015261034c60c082016040906002815261060f60f31b60208201520190565b916000604083015260006060830152608082015260a08183039101526040906002815261060f60f31b60208201520190565b90565b91601490610390831515610254565b6103a56001600160a01b0380951615156102a0565b0151916000926103cb6103bf85546001600160a01b031690565b6001600160a01b031690565b6040516323b872dd60e01b8152336004820152306024820152604481018590526020918290829060649082908a905af180156104aa576104e1575b5061041b6103bf86546001600160a01b031690565b60405163a9059cbb60e01b81526001600160a01b038416600482015260248101869052908290829060449082908a905af180156104aa576104b3575b50501690813b156104af5782916104849160405194858094819363ab8236f360e01b83526004830161031f565b03925af180156104aa576104955750565b806104a26104a892610107565b80610222565b565b610313565b8280fd5b816104d292903d106104da575b6104ca8183610120565b8101906102fb565b503880610457565b503d6104c0565b6104f790823d84116104da576104ca8183610120565b503861040656fea2646970667358221220da6872868fc548152ff8f8ecd870af55d5fabae6dd4a699e8e2bfbb81b74fe4064736f6c63430008120033";

type StargateRouterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargateRouterMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargateRouterMock__factory extends ContractFactory {
  constructor(...args: StargateRouterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StargateRouterMock";
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StargateRouterMock> {
    return super.deploy(_token, overrides || {}) as Promise<StargateRouterMock>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): StargateRouterMock {
    return super.attach(address) as StargateRouterMock;
  }
  override connect(signer: Signer): StargateRouterMock__factory {
    return super.connect(signer) as StargateRouterMock__factory;
  }
  static readonly contractName: "StargateRouterMock";

  public readonly contractName: "StargateRouterMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargateRouterMockInterface {
    return new utils.Interface(_abi) as StargateRouterMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StargateRouterMock {
    return new Contract(address, _abi, signerOrProvider) as StargateRouterMock;
  }
}
