/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TOFTMock, TOFTMockInterface } from "../TOFTMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20_",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0346100f0576001600160401b0390601f610f8038819003918201601f1916830191848311848410176100da578084926020946040528339810103126100f057516001600160a01b038116908190036100f0574660a05260405160208101907f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692188252466040820152306060820152606081526080810193818510908511176100da578360405251902060805260018060a01b03196004541617600455610e8a90816100f6823960805181610d3c015260a05181610d160152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600090813560e01c908163095ea7b314610b745750806318160ddd14610b5557806323b872dd1461099a5780633644e5151461097657806339f4769314610780578063623556381461058657806370a0823114610550578063785e9e861461052a5780637ecebe00146104f3578063a9059cbb14610419578063d505accf1461012f578063dd62ed3e146100e25763e2eec30b0361001257346100df57806003193601126100df57506001600160a01b0360209254169051908152f35b80fd5b50903461012b578060031936011261012b5780602092610100610be5565b610108610c00565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b509190346104155760e03660031901126104155761014b610be5565b90610154610c00565b9060443590606435946084359460ff8616809603610411576001600160a01b038091169586156103ce578742101561038b5786895260209560028752848a20988954996000198b146103785760018b01905585519084898301937f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c985528b89850152169a8b606084015288608084015260a083015260c082015260c0815260e081019167ffffffffffffffff908284108285111761036557838852825190209061012083019081118482101761036557918c93918a959389526002835261010061190160f01b81840152610246610d13565b928a51945191875b83811061033e5750505083809361027d936060936080989701918a8301528c820152038a810184520182610dda565b8481519101209087519182528482015260a4358782015260c435606082015282805260015afa15610334578590885116036102f35750907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259291848752600183528087208688528352818188205551908152a380f35b83606492519162461bcd60e51b8352820152601860248201527f45524332303a20496e76616c6964205369676e617475726500000000000000006044820152fd5b82513d89823e3d90fd5b90829496985081819496989a9301015182828a01015201918f969492918d9896949261024e565b634e487b7160e01b8d526041875260248dfd5b634e487b7160e01b8c526011865260248cfd5b835162461bcd60e51b8152602081850152600e60248201527f45524332303a20457870697265640000000000000000000000000000000000006044820152606490fd5b835162461bcd60e51b8152602081850152601860248201527f45524332303a204f776e65722063616e6e6f74206265203000000000000000006044820152606490fd5b8780fd5b8280fd5b50903461012b578060031936011261012b576020916001600160a01b0361043e610be5565b836024359384158015906104e8575b610485575b505192835216907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b3381528087528181205461049b86821015610c4b565b84841690868233036104b0575b505050610452565b6104c4916104bf841515610c97565b610ce3565b338352828952838320558152206104dc848254610d06565b905583868080866104a8565b50838316331461044d565b50903461012b57602036600319011261012b57806020926001600160a01b0361051a610be5565b1681526002845220549051908152f35b50346100df57806003193601126100df57506001600160a01b0360209254169051908152f35b50903461012b57602036600319011261012b57806020926001600160a01b03610577610be5565b16815280845220549051908152f35b50919061059236610c16565b9092916003546105a28382610d06565b90811061073d576003556001600160a01b03809416938487526020948786528488206105cf858254610d06565b9055877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef878751878152a3855481169283156106ec57845191868301936323b872dd60e01b855216602483015230604483015260648201526064815260a0810181811067ffffffffffffffff8211176106d957845251869283929083905af1610656610dfc565b816106a9575b50156106685750505080f35b5162461bcd60e51b815291820181905260248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c6564604482015260649150fd5b805180159250849083156106c1575b5050503861065c565b6106d19350820181019101610e3c565b3883816106b8565b634e487b7160e01b885260418752602488fd5b9250505034036106fc5750505080f35b5162461bcd60e51b815291820181905260248201527f544f46544d6f636b3a206661696c656420746f20726563656976656420455448604482015260649150fd5b835162461bcd60e51b8152602081880152600d60248201527f4d696e74206f766572666c6f77000000000000000000000000000000000000006044820152606490fd5b5091903461041557806003193601126104155761079b610be5565b9060243533855260209285845281838720541061093357818692916107c38493600354610ce3565b6003553383528286528483206107da838254610ce3565b90558285518381527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef883392a3865483906001600160a01b03908116156108d85780895416938751918983019463a9059cbb60e01b865216602483015260448201526044815261084981610da8565b51925af1610855610dfc565b816108a8575b50156108675750505080f35b5162461bcd60e51b815291820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604482015260649150fd5b805180159250849083156108c0575b5050503861085b565b6108d09350820181019101610e3c565b3883816108b7565b509182915af16108e6610dfc565b50156108f25750505080f35b5162461bcd60e51b815291820181905260248201527f544f46544d6f636b3a206661696c656420746f207472616e7366657220455448604482015260649150fd5b50505162461bcd60e51b815291820152600d60248201527f4275726e20746f6f206d75636800000000000000000000000000000000000000604482015260649150fd5b50903461012b578160031936011261012b57602090610993610d13565b9051908152f35b50346100df576109a936610c16565b9192826109f4575b5060208095507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9185519384526001600160a01b03809116941692a35160018152f35b6001600160a01b0395868516968783526020908382528784205490610a1b87831015610c4b565b851692838a03610a2f575b505050506109b1565b89855260018352888520338652835288852054906000198203610aab575b50509282602099828a94610a8a8a8e996104bf7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9c9a1515610c97565b9282525283832055815220610aa0858254610d06565b905591388080610a26565b878210610b12575092602099858a94610a8a8a8e9996610aed827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9d9b610ce3565b8686526001855289862033875285528986205596505050945095509981949650610a4d565b895162461bcd60e51b8152908101849052601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f7700000000000000006044820152606490fd5b50903461012b578160031936011261012b576020906003549051908152f35b839150346104155781600319360112610415579160209282610b94610be5565b92602435918291338152600188526001600160a01b038282209616958682528852205581527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b600435906001600160a01b0382168203610bfb57565b600080fd5b602435906001600160a01b0382168203610bfb57565b6060906003190112610bfb576001600160a01b03906004358281168103610bfb57916024359081168103610bfb579060443590565b15610c5257565b60405162461bcd60e51b815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f77000000000000000000006044820152606490fd5b15610c9e57565b60405162461bcd60e51b815260206004820152601660248201527f45524332303a206e6f207a65726f2061646472657373000000000000000000006044820152606490fd5b91908203918211610cf057565b634e487b7160e01b600052601160045260246000fd5b91908201809211610cf057565b467f000000000000000000000000000000000000000000000000000000000000000003610d5e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218825246604082015230606082015260608152610da281610da8565b51902090565b6080810190811067ffffffffffffffff821117610dc457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610dc457604052565b3d15610e37573d9067ffffffffffffffff8211610dc45760405191610e2b601f8201601f191660200184610dda565b82523d6000602084013e565b606090565b90816020910312610bfb57518015158103610bfb579056fea26469706673582212207a4d54959ef6755e1faaa34c147fdd78606e08e21982514b9b822ae1403d910164736f6c63430008120033";

type TOFTMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOFTMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOFTMock__factory extends ContractFactory {
  constructor(...args: TOFTMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TOFTMock";
  }

  override deploy(
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TOFTMock> {
    return super.deploy(_erc20, overrides || {}) as Promise<TOFTMock>;
  }
  override getDeployTransaction(
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_erc20, overrides || {});
  }
  override attach(address: string): TOFTMock {
    return super.attach(address) as TOFTMock;
  }
  override connect(signer: Signer): TOFTMock__factory {
    return super.connect(signer) as TOFTMock__factory;
  }
  static readonly contractName: "TOFTMock";

  public readonly contractName: "TOFTMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOFTMockInterface {
    return new utils.Interface(_abi) as TOFTMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TOFTMock {
    return new Contract(address, _abi, signerOrProvider) as TOFTMock;
  }
}
