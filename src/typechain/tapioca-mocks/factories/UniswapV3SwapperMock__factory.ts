/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UniswapV3SwapperMock,
  UniswapV3SwapperMockInterface,
} from "../UniswapV3SwapperMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct UniswapV3SwapperMock.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct UniswapV3SwapperMock.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct UniswapV3SwapperMock.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct UniswapV3SwapperMock.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct UniswapV3SwapperMock.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct UniswapV3SwapperMock.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c04380380610c0483398101604081905261002f91610035565b50610065565b60006020828403121561004757600080fd5b81516001600160a01b038116811461005e57600080fd5b9392505050565b610b90806100746000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063cf144a4e11610050578063cf144a4e14610134578063e3c711a014610147578063efa84c6d1461015e57600080fd5b80635bf66e481461006c5780637b2a8bd214610096575b600080fd5b61008361007a3660046107fc565b50506080013590565b6040519081526020015b60405180910390f35b6100a96100a4366004610893565b610186565b604080518251805173ffffffffffffffffffffffffffffffffffffffff90811683526020808301518185015282850151909116838501526060918201518284015280850151805160808501528082015160a08501528085015160c08501529091015160e08301529290910151805115156101008301529091015115156101208201526101400161008d565b6100a961014236600461091a565b6101aa565b6100836101553660046107fc565b505060c0013590565b61017161016c36600461098b565b6101cf565b6040805192835260208301919091520161008d565b61018e61075c565b61019f60008089898989898961030c565b979650505050505050565b6101b261075c565b6101c48585600080878760008061030c565b90505b949350505050565b600080600080845111156101f457838060200190518101906101f19190610a8a565b90505b610229333060808a013561020b60208c018c610aae565b73ffffffffffffffffffffffffffffffffffffffff169291906103aa565b806102c45761023e6060880160408901610aae565b6040517f7c928fe90000000000000000000000000000000000000000000000000000000081526080890135600482015273ffffffffffffffffffffffffffffffffffffffff9190911690637c928fe990602401600060405180830381600087803b1580156102ab57600080fd5b505af11580156102bf573d6000803e3d6000fd5b505050505b6102fa3360808901356102dd60608b0160408c01610aae565b73ffffffffffffffffffffffffffffffffffffffff16919061048c565b50505060808401358094509492505050565b61031461075c565b61033f6040518060800160405280600081526020016000815260200160008152602001600081525090565b9485526020808601949094526040805160808101825273ffffffffffffffffffffffffffffffffffffffff9a8b16815298909916888a015287840196909652606087019490945286518088018852901515815292151583820152938352928201929092529182015290565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526104869085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526104e7565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526104e29084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610404565b505050565b6000610549826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166105fb9092919063ffffffff16565b905080516000148061056a57508080602001905181019061056a9190610a8a565b6104e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60606101c78484600085856000808673ffffffffffffffffffffffffffffffffffffffff16858760405161062f9190610aed565b60006040518083038185875af1925050503d806000811461066c576040519150601f19603f3d011682016040523d82523d6000602084013e610671565b606091505b509150915061019f878383876060831561071357825160000361070c5773ffffffffffffffffffffffffffffffffffffffff85163b61070c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105f2565b50816101c7565b6101c783838151156107285781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f29190610b09565b6040805160e081019091526000606082018181526080830182905260a0830182905260c0830191909152819081526020016107b86040518060800160405280600081526020016000815260200160008152602001600081525090565b81526020016107de60405180604001604052806000151581526020016000151581525090565b905290565b600061014082840312156107f657600080fd5b50919050565b6000806000610160848603121561081257600080fd5b61081c85856107e3565b925061014084013567ffffffffffffffff8082111561083a57600080fd5b818601915086601f83011261084e57600080fd5b81358181111561085d57600080fd5b87602082850101111561086f57600080fd5b6020830194508093505050509250925092565b801515811461089057600080fd5b50565b60008060008060008060c087890312156108ac57600080fd5b8635955060208701359450604087013593506060870135925060808701356108d381610882565b915060a08701356108e381610882565b809150509295509295509295565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091557600080fd5b919050565b6000806000806080858703121561093057600080fd5b610939856108f1565b9350610947602086016108f1565b93969395505050506040820135916060013590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806101a085870312156109a257600080fd5b6109ac86866107e3565b935061014085013592506109c361016086016108f1565b915061018085013567ffffffffffffffff808211156109e157600080fd5b818701915087601f8301126109f557600080fd5b813581811115610a0757610a0761095c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610a4d57610a4d61095c565b816040528281528a6020848701011115610a6657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600060208284031215610a9c57600080fd5b8151610aa781610882565b9392505050565b600060208284031215610ac057600080fd5b610aa7826108f1565b60005b83811015610ae4578181015183820152602001610acc565b50506000910152565b60008251610aff818460208701610ac9565b9190910192915050565b6020815260008251806020840152610b28816040850160208701610ac9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea264697066735822122032303ae8566c2b8b7e0ed814839e0f5aba06fc130d244420a358574b930ea70364736f6c63430008160033";

type UniswapV3SwapperMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3SwapperMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3SwapperMock__factory extends ContractFactory {
  constructor(...args: UniswapV3SwapperMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3SwapperMock";
  }

  override deploy(
    arg0: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3SwapperMock> {
    return super.deploy(arg0, overrides || {}) as Promise<UniswapV3SwapperMock>;
  }
  override getDeployTransaction(
    arg0: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(arg0, overrides || {});
  }
  override attach(address: string): UniswapV3SwapperMock {
    return super.attach(address) as UniswapV3SwapperMock;
  }
  override connect(signer: Signer): UniswapV3SwapperMock__factory {
    return super.connect(signer) as UniswapV3SwapperMock__factory;
  }
  static readonly contractName: "UniswapV3SwapperMock";

  public readonly contractName: "UniswapV3SwapperMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3SwapperMockInterface {
    return new utils.Interface(_abi) as UniswapV3SwapperMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3SwapperMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV3SwapperMock;
  }
}
