/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ZeroXSwapperMock,
  ZeroXSwapperMockInterface,
} from "../ZeroXSwapperMock";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "sellToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "buyToken",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "swapTarget",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "swapCallData",
            type: "bytes",
          },
        ],
        internalType: "struct IZeroXSwapper.SZeroXSwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061031b806100206000396000f3fe6080604052600436106100225760003560e01c8063d9c4ff871461002e57600080fd5b3661002957005b600080fd5b61004161003c366004610233565b610053565b60405190815260200160405180910390f35b60006100626020850185610286565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810185905273ffffffffffffffffffffffffffffffffffffffff91909116906323b872dd906064016020604051808303816000875af11580156100dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010191906102c3565b506101126040850160208601610286565b73ffffffffffffffffffffffffffffffffffffffff16637c928fe9836040518263ffffffff1660e01b815260040161014c91815260200190565b600060405180830381600087803b15801561016657600080fd5b505af115801561017a573d6000803e3d6000fd5b50849350610192925050506040850160208601610286565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810184905273ffffffffffffffffffffffffffffffffffffffff919091169063a9059cbb906044016020604051808303816000875af1158015610207573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022b91906102c3565b509392505050565b60008060006060848603121561024857600080fd5b833567ffffffffffffffff81111561025f57600080fd5b84016080818703121561027157600080fd5b95602085013595506040909401359392505050565b60006020828403121561029857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102bc57600080fd5b9392505050565b6000602082840312156102d557600080fd5b815180151581146102bc57600080fdfea2646970667358221220b11f9696b8333c6d43a04a5bcfb40d99a8c3890a7022860b24c6af60670b0bfe64736f6c63430008160033";

type ZeroXSwapperMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZeroXSwapperMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZeroXSwapperMock__factory extends ContractFactory {
  constructor(...args: ZeroXSwapperMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ZeroXSwapperMock";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZeroXSwapperMock> {
    return super.deploy(overrides || {}) as Promise<ZeroXSwapperMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ZeroXSwapperMock {
    return super.attach(address) as ZeroXSwapperMock;
  }
  override connect(signer: Signer): ZeroXSwapperMock__factory {
    return super.connect(signer) as ZeroXSwapperMock__factory;
  }
  static readonly contractName: "ZeroXSwapperMock";

  public readonly contractName: "ZeroXSwapperMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZeroXSwapperMockInterface {
    return new utils.Interface(_abi) as ZeroXSwapperMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZeroXSwapperMock {
    return new Contract(address, _abi, signerOrProvider) as ZeroXSwapperMock;
  }
}
