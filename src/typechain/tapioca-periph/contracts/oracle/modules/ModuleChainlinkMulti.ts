/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface ModuleChainlinkMultiInterface extends utils.Interface {
  functions: {
    "DEFAULT_ADMIN_ROLE()": FunctionFragment;
    "DEFAULT_STALE_PERIOD()": FunctionFragment;
    "GUARDIAN_ROLE_CHAINLINK()": FunctionFragment;
    "acceptDefaultAdminTransfer()": FunctionFragment;
    "beginDefaultAdminTransfer(address)": FunctionFragment;
    "cancelDefaultAdminTransfer()": FunctionFragment;
    "chainlinkDecimals(uint256)": FunctionFragment;
    "changeDefaultAdminDelay(uint48)": FunctionFragment;
    "changeDefaultStalePeriod(uint32)": FunctionFragment;
    "circuitChainIsMultiplied(uint256)": FunctionFragment;
    "circuitChainlink(uint256)": FunctionFragment;
    "defaultAdmin()": FunctionFragment;
    "defaultAdminDelay()": FunctionFragment;
    "defaultAdminDelayIncreaseWait()": FunctionFragment;
    "getRoleAdmin(bytes32)": FunctionFragment;
    "grantRole(bytes32,address)": FunctionFragment;
    "hasRole(bytes32,address)": FunctionFragment;
    "owner()": FunctionFragment;
    "pendingDefaultAdmin()": FunctionFragment;
    "pendingDefaultAdminDelay()": FunctionFragment;
    "renounceRole(bytes32,address)": FunctionFragment;
    "revokeRole(bytes32,address)": FunctionFragment;
    "rollbackDefaultAdminDelay()": FunctionFragment;
    "stalePeriods(address)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "updateStalePeriod(address,uint32)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "DEFAULT_ADMIN_ROLE"
      | "DEFAULT_ADMIN_ROLE()"
      | "DEFAULT_STALE_PERIOD"
      | "DEFAULT_STALE_PERIOD()"
      | "GUARDIAN_ROLE_CHAINLINK"
      | "GUARDIAN_ROLE_CHAINLINK()"
      | "acceptDefaultAdminTransfer"
      | "acceptDefaultAdminTransfer()"
      | "beginDefaultAdminTransfer"
      | "beginDefaultAdminTransfer(address)"
      | "cancelDefaultAdminTransfer"
      | "cancelDefaultAdminTransfer()"
      | "chainlinkDecimals"
      | "chainlinkDecimals(uint256)"
      | "changeDefaultAdminDelay"
      | "changeDefaultAdminDelay(uint48)"
      | "changeDefaultStalePeriod"
      | "changeDefaultStalePeriod(uint32)"
      | "circuitChainIsMultiplied"
      | "circuitChainIsMultiplied(uint256)"
      | "circuitChainlink"
      | "circuitChainlink(uint256)"
      | "defaultAdmin"
      | "defaultAdmin()"
      | "defaultAdminDelay"
      | "defaultAdminDelay()"
      | "defaultAdminDelayIncreaseWait"
      | "defaultAdminDelayIncreaseWait()"
      | "getRoleAdmin"
      | "getRoleAdmin(bytes32)"
      | "grantRole"
      | "grantRole(bytes32,address)"
      | "hasRole"
      | "hasRole(bytes32,address)"
      | "owner"
      | "owner()"
      | "pendingDefaultAdmin"
      | "pendingDefaultAdmin()"
      | "pendingDefaultAdminDelay"
      | "pendingDefaultAdminDelay()"
      | "renounceRole"
      | "renounceRole(bytes32,address)"
      | "revokeRole"
      | "revokeRole(bytes32,address)"
      | "rollbackDefaultAdminDelay"
      | "rollbackDefaultAdminDelay()"
      | "stalePeriods"
      | "stalePeriods(address)"
      | "supportsInterface"
      | "supportsInterface(bytes4)"
      | "updateStalePeriod"
      | "updateStalePeriod(address,uint32)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEFAULT_STALE_PERIOD",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEFAULT_STALE_PERIOD()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "GUARDIAN_ROLE_CHAINLINK",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "GUARDIAN_ROLE_CHAINLINK()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "acceptDefaultAdminTransfer",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "acceptDefaultAdminTransfer()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "beginDefaultAdminTransfer",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "beginDefaultAdminTransfer(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelDefaultAdminTransfer",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "cancelDefaultAdminTransfer()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "chainlinkDecimals",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "chainlinkDecimals(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "changeDefaultAdminDelay",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "changeDefaultAdminDelay(uint48)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "changeDefaultStalePeriod",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "changeDefaultStalePeriod(uint32)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "circuitChainIsMultiplied",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "circuitChainIsMultiplied(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "circuitChainlink",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "circuitChainlink(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "defaultAdmin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "defaultAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "defaultAdminDelay",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "defaultAdminDelay()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "defaultAdminDelayIncreaseWait",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "defaultAdminDelayIncreaseWait()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin(bytes32)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole(bytes32,address)",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole(bytes32,address)",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pendingDefaultAdmin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pendingDefaultAdmin()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pendingDefaultAdminDelay",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pendingDefaultAdminDelay()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole(bytes32,address)",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole(bytes32,address)",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "rollbackDefaultAdminDelay",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "rollbackDefaultAdminDelay()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "stalePeriods",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "stalePeriods(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface(bytes4)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "updateStalePeriod",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "updateStalePeriod(address,uint32)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DEFAULT_STALE_PERIOD",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DEFAULT_STALE_PERIOD()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "GUARDIAN_ROLE_CHAINLINK",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "GUARDIAN_ROLE_CHAINLINK()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "acceptDefaultAdminTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "acceptDefaultAdminTransfer()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "beginDefaultAdminTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "beginDefaultAdminTransfer(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelDefaultAdminTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelDefaultAdminTransfer()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "chainlinkDecimals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "chainlinkDecimals(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeDefaultAdminDelay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeDefaultAdminDelay(uint48)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeDefaultStalePeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeDefaultStalePeriod(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "circuitChainIsMultiplied",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "circuitChainIsMultiplied(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "circuitChainlink",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "circuitChainlink(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "defaultAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "defaultAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "defaultAdminDelay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "defaultAdminDelay()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "defaultAdminDelayIncreaseWait",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "defaultAdminDelayIncreaseWait()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin(bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "grantRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "hasRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pendingDefaultAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pendingDefaultAdmin()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pendingDefaultAdminDelay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pendingDefaultAdminDelay()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "revokeRole(bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rollbackDefaultAdminDelay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rollbackDefaultAdminDelay()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stalePeriods",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stalePeriods(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface(bytes4)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStalePeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStalePeriod(address,uint32)",
    data: BytesLike
  ): Result;

  events: {
    "DefaultAdminDelayChangeCanceled()": EventFragment;
    "DefaultAdminDelayChangeScheduled(uint48,uint48)": EventFragment;
    "DefaultAdminTransferCanceled()": EventFragment;
    "DefaultAdminTransferScheduled(address,uint48)": EventFragment;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": EventFragment;
    "RoleGranted(bytes32,address,address)": EventFragment;
    "RoleRevoked(bytes32,address,address)": EventFragment;
    "StalePeriodUpdated(address,uint32)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "DefaultAdminDelayChangeCanceled"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "DefaultAdminDelayChangeCanceled()"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "DefaultAdminDelayChangeScheduled"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "DefaultAdminDelayChangeScheduled(uint48,uint48)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "DefaultAdminTransferCanceled"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "DefaultAdminTransferCanceled()"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "DefaultAdminTransferScheduled"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "DefaultAdminTransferScheduled(address,uint48)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleAdminChanged"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RoleAdminChanged(bytes32,bytes32,bytes32)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleGranted"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RoleGranted(bytes32,address,address)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleRevoked"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RoleRevoked(bytes32,address,address)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "StalePeriodUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "StalePeriodUpdated(address,uint32)"
  ): EventFragment;
}

export interface DefaultAdminDelayChangeCanceledEventObject {}
export type DefaultAdminDelayChangeCanceledEvent = TypedEvent<
  [],
  DefaultAdminDelayChangeCanceledEventObject
>;

export type DefaultAdminDelayChangeCanceledEventFilter =
  TypedEventFilter<DefaultAdminDelayChangeCanceledEvent>;

export interface DefaultAdminDelayChangeScheduledEventObject {
  newDelay: number;
  effectSchedule: number;
}
export type DefaultAdminDelayChangeScheduledEvent = TypedEvent<
  [number, number],
  DefaultAdminDelayChangeScheduledEventObject
>;

export type DefaultAdminDelayChangeScheduledEventFilter =
  TypedEventFilter<DefaultAdminDelayChangeScheduledEvent>;

export interface DefaultAdminTransferCanceledEventObject {}
export type DefaultAdminTransferCanceledEvent = TypedEvent<
  [],
  DefaultAdminTransferCanceledEventObject
>;

export type DefaultAdminTransferCanceledEventFilter =
  TypedEventFilter<DefaultAdminTransferCanceledEvent>;

export interface DefaultAdminTransferScheduledEventObject {
  newAdmin: string;
  acceptSchedule: number;
}
export type DefaultAdminTransferScheduledEvent = TypedEvent<
  [string, number],
  DefaultAdminTransferScheduledEventObject
>;

export type DefaultAdminTransferScheduledEventFilter =
  TypedEventFilter<DefaultAdminTransferScheduledEvent>;

export interface RoleAdminChangedEventObject {
  role: string;
  previousAdminRole: string;
  newAdminRole: string;
}
export type RoleAdminChangedEvent = TypedEvent<
  [string, string, string],
  RoleAdminChangedEventObject
>;

export type RoleAdminChangedEventFilter =
  TypedEventFilter<RoleAdminChangedEvent>;

export interface RoleGrantedEventObject {
  role: string;
  account: string;
  sender: string;
}
export type RoleGrantedEvent = TypedEvent<
  [string, string, string],
  RoleGrantedEventObject
>;

export type RoleGrantedEventFilter = TypedEventFilter<RoleGrantedEvent>;

export interface RoleRevokedEventObject {
  role: string;
  account: string;
  sender: string;
}
export type RoleRevokedEvent = TypedEvent<
  [string, string, string],
  RoleRevokedEventObject
>;

export type RoleRevokedEventFilter = TypedEventFilter<RoleRevokedEvent>;

export interface StalePeriodUpdatedEventObject {
  feed: string;
  val: number;
}
export type StalePeriodUpdatedEvent = TypedEvent<
  [string, number],
  StalePeriodUpdatedEventObject
>;

export type StalePeriodUpdatedEventFilter =
  TypedEventFilter<StalePeriodUpdatedEvent>;

export interface ModuleChainlinkMulti extends BaseContract {
  contractName: "ModuleChainlinkMulti";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ModuleChainlinkMultiInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    DEFAULT_STALE_PERIOD(overrides?: CallOverrides): Promise<[number]>;

    "DEFAULT_STALE_PERIOD()"(overrides?: CallOverrides): Promise<[number]>;

    GUARDIAN_ROLE_CHAINLINK(overrides?: CallOverrides): Promise<[string]>;

    "GUARDIAN_ROLE_CHAINLINK()"(overrides?: CallOverrides): Promise<[string]>;

    acceptDefaultAdminTransfer(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "acceptDefaultAdminTransfer()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    beginDefaultAdminTransfer(
      newAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "beginDefaultAdminTransfer(address)"(
      newAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    cancelDefaultAdminTransfer(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "cancelDefaultAdminTransfer()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    chainlinkDecimals(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    "chainlinkDecimals(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    changeDefaultAdminDelay(
      newDelay: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "changeDefaultAdminDelay(uint48)"(
      newDelay: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    changeDefaultStalePeriod(
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "changeDefaultStalePeriod(uint32)"(
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    circuitChainIsMultiplied(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    "circuitChainIsMultiplied(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    circuitChainlink(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "circuitChainlink(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    defaultAdmin(overrides?: CallOverrides): Promise<[string]>;

    "defaultAdmin()"(overrides?: CallOverrides): Promise<[string]>;

    defaultAdminDelay(overrides?: CallOverrides): Promise<[number]>;

    "defaultAdminDelay()"(overrides?: CallOverrides): Promise<[number]>;

    defaultAdminDelayIncreaseWait(overrides?: CallOverrides): Promise<[number]>;

    "defaultAdminDelayIncreaseWait()"(
      overrides?: CallOverrides
    ): Promise<[number]>;

    getRoleAdmin(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getRoleAdmin(bytes32)"(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    grantRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "grantRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    hasRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "hasRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    pendingDefaultAdmin(
      overrides?: CallOverrides
    ): Promise<[string, number] & { newAdmin: string; schedule: number }>;

    "pendingDefaultAdmin()"(
      overrides?: CallOverrides
    ): Promise<[string, number] & { newAdmin: string; schedule: number }>;

    pendingDefaultAdminDelay(
      overrides?: CallOverrides
    ): Promise<[number, number] & { newDelay: number; schedule: number }>;

    "pendingDefaultAdminDelay()"(
      overrides?: CallOverrides
    ): Promise<[number, number] & { newDelay: number; schedule: number }>;

    renounceRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "renounceRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    revokeRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "revokeRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    rollbackDefaultAdminDelay(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "rollbackDefaultAdminDelay()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    stalePeriods(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    "stalePeriods(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    updateStalePeriod(
      _feed: PromiseOrValue<string>,
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "updateStalePeriod(address,uint32)"(
      _feed: PromiseOrValue<string>,
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

  "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<string>;

  DEFAULT_STALE_PERIOD(overrides?: CallOverrides): Promise<number>;

  "DEFAULT_STALE_PERIOD()"(overrides?: CallOverrides): Promise<number>;

  GUARDIAN_ROLE_CHAINLINK(overrides?: CallOverrides): Promise<string>;

  "GUARDIAN_ROLE_CHAINLINK()"(overrides?: CallOverrides): Promise<string>;

  acceptDefaultAdminTransfer(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "acceptDefaultAdminTransfer()"(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  beginDefaultAdminTransfer(
    newAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "beginDefaultAdminTransfer(address)"(
    newAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  cancelDefaultAdminTransfer(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "cancelDefaultAdminTransfer()"(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  chainlinkDecimals(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<number>;

  "chainlinkDecimals(uint256)"(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<number>;

  changeDefaultAdminDelay(
    newDelay: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "changeDefaultAdminDelay(uint48)"(
    newDelay: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  changeDefaultStalePeriod(
    _stalePeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "changeDefaultStalePeriod(uint32)"(
    _stalePeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  circuitChainIsMultiplied(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<number>;

  "circuitChainIsMultiplied(uint256)"(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<number>;

  circuitChainlink(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "circuitChainlink(uint256)"(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  defaultAdmin(overrides?: CallOverrides): Promise<string>;

  "defaultAdmin()"(overrides?: CallOverrides): Promise<string>;

  defaultAdminDelay(overrides?: CallOverrides): Promise<number>;

  "defaultAdminDelay()"(overrides?: CallOverrides): Promise<number>;

  defaultAdminDelayIncreaseWait(overrides?: CallOverrides): Promise<number>;

  "defaultAdminDelayIncreaseWait()"(overrides?: CallOverrides): Promise<number>;

  getRoleAdmin(
    role: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getRoleAdmin(bytes32)"(
    role: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  grantRole(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "grantRole(bytes32,address)"(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  hasRole(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "hasRole(bytes32,address)"(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  pendingDefaultAdmin(
    overrides?: CallOverrides
  ): Promise<[string, number] & { newAdmin: string; schedule: number }>;

  "pendingDefaultAdmin()"(
    overrides?: CallOverrides
  ): Promise<[string, number] & { newAdmin: string; schedule: number }>;

  pendingDefaultAdminDelay(
    overrides?: CallOverrides
  ): Promise<[number, number] & { newDelay: number; schedule: number }>;

  "pendingDefaultAdminDelay()"(
    overrides?: CallOverrides
  ): Promise<[number, number] & { newDelay: number; schedule: number }>;

  renounceRole(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "renounceRole(bytes32,address)"(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  revokeRole(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "revokeRole(bytes32,address)"(
    role: PromiseOrValue<BytesLike>,
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  rollbackDefaultAdminDelay(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "rollbackDefaultAdminDelay()"(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  stalePeriods(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<number>;

  "stalePeriods(address)"(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<number>;

  supportsInterface(
    interfaceId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  updateStalePeriod(
    _feed: PromiseOrValue<string>,
    _stalePeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "updateStalePeriod(address,uint32)"(
    _feed: PromiseOrValue<string>,
    _stalePeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<string>;

    DEFAULT_STALE_PERIOD(overrides?: CallOverrides): Promise<number>;

    "DEFAULT_STALE_PERIOD()"(overrides?: CallOverrides): Promise<number>;

    GUARDIAN_ROLE_CHAINLINK(overrides?: CallOverrides): Promise<string>;

    "GUARDIAN_ROLE_CHAINLINK()"(overrides?: CallOverrides): Promise<string>;

    acceptDefaultAdminTransfer(overrides?: CallOverrides): Promise<void>;

    "acceptDefaultAdminTransfer()"(overrides?: CallOverrides): Promise<void>;

    beginDefaultAdminTransfer(
      newAdmin: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "beginDefaultAdminTransfer(address)"(
      newAdmin: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelDefaultAdminTransfer(overrides?: CallOverrides): Promise<void>;

    "cancelDefaultAdminTransfer()"(overrides?: CallOverrides): Promise<void>;

    chainlinkDecimals(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<number>;

    "chainlinkDecimals(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<number>;

    changeDefaultAdminDelay(
      newDelay: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeDefaultAdminDelay(uint48)"(
      newDelay: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    changeDefaultStalePeriod(
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeDefaultStalePeriod(uint32)"(
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    circuitChainIsMultiplied(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<number>;

    "circuitChainIsMultiplied(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<number>;

    circuitChainlink(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "circuitChainlink(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    defaultAdmin(overrides?: CallOverrides): Promise<string>;

    "defaultAdmin()"(overrides?: CallOverrides): Promise<string>;

    defaultAdminDelay(overrides?: CallOverrides): Promise<number>;

    "defaultAdminDelay()"(overrides?: CallOverrides): Promise<number>;

    defaultAdminDelayIncreaseWait(overrides?: CallOverrides): Promise<number>;

    "defaultAdminDelayIncreaseWait()"(
      overrides?: CallOverrides
    ): Promise<number>;

    getRoleAdmin(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getRoleAdmin(bytes32)"(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    grantRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "grantRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    hasRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "hasRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    pendingDefaultAdmin(
      overrides?: CallOverrides
    ): Promise<[string, number] & { newAdmin: string; schedule: number }>;

    "pendingDefaultAdmin()"(
      overrides?: CallOverrides
    ): Promise<[string, number] & { newAdmin: string; schedule: number }>;

    pendingDefaultAdminDelay(
      overrides?: CallOverrides
    ): Promise<[number, number] & { newDelay: number; schedule: number }>;

    "pendingDefaultAdminDelay()"(
      overrides?: CallOverrides
    ): Promise<[number, number] & { newDelay: number; schedule: number }>;

    renounceRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "renounceRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    revokeRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "revokeRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    rollbackDefaultAdminDelay(overrides?: CallOverrides): Promise<void>;

    "rollbackDefaultAdminDelay()"(overrides?: CallOverrides): Promise<void>;

    stalePeriods(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<number>;

    "stalePeriods(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<number>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    updateStalePeriod(
      _feed: PromiseOrValue<string>,
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateStalePeriod(address,uint32)"(
      _feed: PromiseOrValue<string>,
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "DefaultAdminDelayChangeCanceled()"(): DefaultAdminDelayChangeCanceledEventFilter;
    DefaultAdminDelayChangeCanceled(): DefaultAdminDelayChangeCanceledEventFilter;

    "DefaultAdminDelayChangeScheduled(uint48,uint48)"(
      newDelay?: null,
      effectSchedule?: null
    ): DefaultAdminDelayChangeScheduledEventFilter;
    DefaultAdminDelayChangeScheduled(
      newDelay?: null,
      effectSchedule?: null
    ): DefaultAdminDelayChangeScheduledEventFilter;

    "DefaultAdminTransferCanceled()"(): DefaultAdminTransferCanceledEventFilter;
    DefaultAdminTransferCanceled(): DefaultAdminTransferCanceledEventFilter;

    "DefaultAdminTransferScheduled(address,uint48)"(
      newAdmin?: PromiseOrValue<string> | null,
      acceptSchedule?: null
    ): DefaultAdminTransferScheduledEventFilter;
    DefaultAdminTransferScheduled(
      newAdmin?: PromiseOrValue<string> | null,
      acceptSchedule?: null
    ): DefaultAdminTransferScheduledEventFilter;

    "RoleAdminChanged(bytes32,bytes32,bytes32)"(
      role?: PromiseOrValue<BytesLike> | null,
      previousAdminRole?: PromiseOrValue<BytesLike> | null,
      newAdminRole?: PromiseOrValue<BytesLike> | null
    ): RoleAdminChangedEventFilter;
    RoleAdminChanged(
      role?: PromiseOrValue<BytesLike> | null,
      previousAdminRole?: PromiseOrValue<BytesLike> | null,
      newAdminRole?: PromiseOrValue<BytesLike> | null
    ): RoleAdminChangedEventFilter;

    "RoleGranted(bytes32,address,address)"(
      role?: PromiseOrValue<BytesLike> | null,
      account?: PromiseOrValue<string> | null,
      sender?: PromiseOrValue<string> | null
    ): RoleGrantedEventFilter;
    RoleGranted(
      role?: PromiseOrValue<BytesLike> | null,
      account?: PromiseOrValue<string> | null,
      sender?: PromiseOrValue<string> | null
    ): RoleGrantedEventFilter;

    "RoleRevoked(bytes32,address,address)"(
      role?: PromiseOrValue<BytesLike> | null,
      account?: PromiseOrValue<string> | null,
      sender?: PromiseOrValue<string> | null
    ): RoleRevokedEventFilter;
    RoleRevoked(
      role?: PromiseOrValue<BytesLike> | null,
      account?: PromiseOrValue<string> | null,
      sender?: PromiseOrValue<string> | null
    ): RoleRevokedEventFilter;

    "StalePeriodUpdated(address,uint32)"(
      feed?: PromiseOrValue<string> | null,
      val?: PromiseOrValue<BigNumberish> | null
    ): StalePeriodUpdatedEventFilter;
    StalePeriodUpdated(
      feed?: PromiseOrValue<string> | null,
      val?: PromiseOrValue<BigNumberish> | null
    ): StalePeriodUpdatedEventFilter;
  };

  estimateGas: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    DEFAULT_STALE_PERIOD(overrides?: CallOverrides): Promise<BigNumber>;

    "DEFAULT_STALE_PERIOD()"(overrides?: CallOverrides): Promise<BigNumber>;

    GUARDIAN_ROLE_CHAINLINK(overrides?: CallOverrides): Promise<BigNumber>;

    "GUARDIAN_ROLE_CHAINLINK()"(overrides?: CallOverrides): Promise<BigNumber>;

    acceptDefaultAdminTransfer(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "acceptDefaultAdminTransfer()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    beginDefaultAdminTransfer(
      newAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "beginDefaultAdminTransfer(address)"(
      newAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    cancelDefaultAdminTransfer(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "cancelDefaultAdminTransfer()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    chainlinkDecimals(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "chainlinkDecimals(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    changeDefaultAdminDelay(
      newDelay: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "changeDefaultAdminDelay(uint48)"(
      newDelay: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    changeDefaultStalePeriod(
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "changeDefaultStalePeriod(uint32)"(
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    circuitChainIsMultiplied(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "circuitChainIsMultiplied(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    circuitChainlink(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "circuitChainlink(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    defaultAdmin(overrides?: CallOverrides): Promise<BigNumber>;

    "defaultAdmin()"(overrides?: CallOverrides): Promise<BigNumber>;

    defaultAdminDelay(overrides?: CallOverrides): Promise<BigNumber>;

    "defaultAdminDelay()"(overrides?: CallOverrides): Promise<BigNumber>;

    defaultAdminDelayIncreaseWait(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "defaultAdminDelayIncreaseWait()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoleAdmin(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleAdmin(bytes32)"(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grantRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "grantRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    hasRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "hasRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    pendingDefaultAdmin(overrides?: CallOverrides): Promise<BigNumber>;

    "pendingDefaultAdmin()"(overrides?: CallOverrides): Promise<BigNumber>;

    pendingDefaultAdminDelay(overrides?: CallOverrides): Promise<BigNumber>;

    "pendingDefaultAdminDelay()"(overrides?: CallOverrides): Promise<BigNumber>;

    renounceRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "renounceRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    revokeRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "revokeRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    rollbackDefaultAdminDelay(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "rollbackDefaultAdminDelay()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    stalePeriods(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "stalePeriods(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateStalePeriod(
      _feed: PromiseOrValue<string>,
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "updateStalePeriod(address,uint32)"(
      _feed: PromiseOrValue<string>,
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DEFAULT_ADMIN_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "DEFAULT_ADMIN_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    DEFAULT_STALE_PERIOD(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "DEFAULT_STALE_PERIOD()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    GUARDIAN_ROLE_CHAINLINK(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "GUARDIAN_ROLE_CHAINLINK()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    acceptDefaultAdminTransfer(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "acceptDefaultAdminTransfer()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    beginDefaultAdminTransfer(
      newAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "beginDefaultAdminTransfer(address)"(
      newAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    cancelDefaultAdminTransfer(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "cancelDefaultAdminTransfer()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    chainlinkDecimals(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "chainlinkDecimals(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    changeDefaultAdminDelay(
      newDelay: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "changeDefaultAdminDelay(uint48)"(
      newDelay: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    changeDefaultStalePeriod(
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "changeDefaultStalePeriod(uint32)"(
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    circuitChainIsMultiplied(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "circuitChainIsMultiplied(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    circuitChainlink(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "circuitChainlink(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    defaultAdmin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "defaultAdmin()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    defaultAdminDelay(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "defaultAdminDelay()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    defaultAdminDelayIncreaseWait(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "defaultAdminDelayIncreaseWait()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoleAdmin(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoleAdmin(bytes32)"(
      role: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    grantRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "grantRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    hasRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "hasRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pendingDefaultAdmin(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pendingDefaultAdmin()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pendingDefaultAdminDelay(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pendingDefaultAdminDelay()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    renounceRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "renounceRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    revokeRole(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "revokeRole(bytes32,address)"(
      role: PromiseOrValue<BytesLike>,
      account: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    rollbackDefaultAdminDelay(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "rollbackDefaultAdminDelay()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    stalePeriods(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "stalePeriods(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateStalePeriod(
      _feed: PromiseOrValue<string>,
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "updateStalePeriod(address,uint32)"(
      _feed: PromiseOrValue<string>,
      _stalePeriod: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
