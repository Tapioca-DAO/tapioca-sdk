/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TapiocaDeployer,
  TapiocaDeployerInterface,
} from "../../../contracts/utils/TapiocaDeployer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
    ],
    name: "computeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    name: "computeAddress",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "contractName",
        type: "string",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct TapiocaMulticall.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct TapiocaMulticall.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct TapiocaMulticall.CallValue[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "multicallValue",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct TapiocaMulticall.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111348061007e6000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b146101215780638f3b65931461014c578063e8bbf5d71461015f578063f2fde38b1461017257600080fd5b8063481286e6146100805780636e5a9cbb146100ca578063715018a6146100ea5780637806530614610101575b600080fd5b34801561008c57600080fd5b506100a061009b36600461096e565b610192565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100dd6100d83660046109dc565b6101a6565b6040516100c19190610a8c565b3480156100f657600080fd5b506100ff6103af565b005b34801561010d57600080fd5b506100a061011c366004610b4b565b6103c3565b34801561012d57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166100a0565b6100a061015a366004610ca2565b6103ed565b6100dd61016d3660046109dc565b610546565b34801561017e57600080fd5b506100ff61018d366004610d2d565b61073e565b600061019f8383306103c3565b9392505050565b60606101b06107f5565b6000828067ffffffffffffffff8111156101cc576101cc610b80565b60405190808252806020026020018201604052801561021257816020015b6040805180820190915260008152606060208201528152602001906001900390816101ea5790505b50604080516080810182526000808252602082018190529181018290526060808201529194505b8281101561033757600085828151811061025557610255610d48565b6020026020010151905087878381811061027157610271610d48565b90506020028101906102839190610d77565b61028c90610dc5565b92506000836040015190508086019550836000015173ffffffffffffffffffffffffffffffffffffffff168185606001516040516102ca9190610e52565b60006040518083038185875af1925050503d8060008114610307576040519150601f19603f3d011682016040523d82523d6000602084013e61030c565b606091505b506020840152151580835261032d5761032d84600001518360200151610876565b5050600101610239565b508234146103a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4d756c746963616c6c333a2076616c7565206d69736d6174636800000000000060448201526064015b60405180910390fd5b50505092915050565b6103b76107f5565b6103c160006108f9565b565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b60006103f76107f5565b843414610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e6365000000604482015260640161039d565b825160001415826040516020016104779190610e64565b604051602081830303815290604052906104be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039d9190610ecf565b508383516020850187f560405190915073ffffffffffffffffffffffffffffffffffffffff82161515906104f6908490602001610ee2565b6040516020818303038152906040529061053d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039d9190610ecf565b50949350505050565b60606105506107f5565b818067ffffffffffffffff81111561056a5761056a610b80565b6040519080825280602002602001820160405280156105b057816020015b6040805180820190915260008152606060208201528152602001906001900390816105885790505b506040805160608082018352600080835260208301819052928201529193505b828110156103a65760008482815181106105ec576105ec610d48565b6020026020010151905086868381811061060857610608610d48565b905060200281019061061a9190610f4d565b61062390610f81565b805190935073ffffffffffffffffffffffffffffffffffffffff163b6106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d756c746963616c6c3a206e6f20636f6e747261637400000000000000000000604482015260640161039d565b826000015173ffffffffffffffffffffffffffffffffffffffff1683604001516040516106d29190610e52565b6000604051808303816000865af19150503d806000811461070f576040519150601f19603f3d011682016040523d82523d6000602084013e610714565b606091505b50602083015215158082526107355761073583600001518260200151610876565b506001016105d0565b6107466107f5565b73ffffffffffffffffffffffffffffffffffffffff81166107e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161039d565b6107f2816108f9565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039d565b60048101805183906108919084016024908101908501611004565b836040516020016108a49392919061107b565b6040516020818303038152906040528060200190518101906108c69190611004565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039d9190610ecf565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561098157600080fd5b50508035926020909101359150565b60008083601f8401126109a257600080fd5b50813567ffffffffffffffff8111156109ba57600080fd5b6020830191508360208260051b85010111156109d557600080fd5b9250929050565b600080602083850312156109ef57600080fd5b823567ffffffffffffffff811115610a0657600080fd5b610a1285828601610990565b90969095509350505050565b60005b83811015610a39578181015183820152602001610a21565b50506000910152565b60008151808452610a5a816020860160208601610a1e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b83811015610b14578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805115158452870151878401879052610b0187850182610a42565b9588019593505090860190600101610ab5565b509098975050505050505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b4657600080fd5b919050565b600080600060608486031215610b6057600080fd5b8335925060208401359150610b7760408501610b22565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610bf657610bf6610b80565b604052919050565b600067ffffffffffffffff821115610c1857610c18610b80565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000610c57610c5284610bfe565b610baf565b9050828152838383011115610c6b57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610c9357600080fd5b61019f83833560208501610c44565b60008060008060808587031215610cb857600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115610cde57600080fd5b610cea88838901610c82565b93506060870135915080821115610d0057600080fd5b508501601f81018713610d1257600080fd5b610d2187823560208401610c44565b91505092959194509250565b600060208284031215610d3f57600080fd5b61019f82610b22565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81833603018112610dab57600080fd5b9190910192915050565b80358015158114610b4657600080fd5b600060808236031215610dd757600080fd5b6040516080810167ffffffffffffffff8282108183111715610dfb57610dfb610b80565b81604052610e0885610b22565b8352610e1660208601610db5565b6020840152604085013560408401526060850135915080821115610e3957600080fd5b50610e4636828601610c82565b60608301525092915050565b60008251610dab818460208701610a1e565b7f437265617465323a2062797465636f6465206c656e677468206973207a65726f81527f20666f7220636f6e747261637420000000000000000000000000000000000000602082015260008251610ec281602e850160208701610a1e565b91909101602e0192915050565b60208152600061019f6020830184610a42565b7f437265617465323a204661696c6564206f6e206465706c6f7920666f7220636f81527f6e74726163742000000000000000000000000000000000000000000000000000602082015260008251610f40816027850160208701610a1e565b9190910160270192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1833603018112610dab57600080fd5b600060608236031215610f9357600080fd5b6040516060810167ffffffffffffffff8282108183111715610fb757610fb7610b80565b81604052610fc485610b22565b8352610fd260208601610db5565b60208401526040850135915080821115610feb57600080fd5b50610ff836828601610c82565b60408301525092915050565b60006020828403121561101657600080fd5b815167ffffffffffffffff81111561102d57600080fd5b8201601f8101841361103e57600080fd5b805161104c610c5282610bfe565b81815285602083850101111561106157600080fd5b611072826020830160208601610a1e565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff841681526080602082015260006110aa6080830185610a42565b828103806040850152600e82527f2052657475726e20646174613a200000000000000000000000000000000000006020830152604081016060850152506110f46040820185610a42565b969550505050505056fea26469706673582212205e572f814803823ad2ed9e0a20a0e284cdbfa4cf46688704b0747d5ea27dab6964736f6c63430008160033";

type TapiocaDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TapiocaDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TapiocaDeployer__factory extends ContractFactory {
  constructor(...args: TapiocaDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TapiocaDeployer";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TapiocaDeployer> {
    return super.deploy(overrides || {}) as Promise<TapiocaDeployer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TapiocaDeployer {
    return super.attach(address) as TapiocaDeployer;
  }
  override connect(signer: Signer): TapiocaDeployer__factory {
    return super.connect(signer) as TapiocaDeployer__factory;
  }
  static readonly contractName: "TapiocaDeployer";

  public readonly contractName: "TapiocaDeployer";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TapiocaDeployerInterface {
    return new utils.Interface(_abi) as TapiocaDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TapiocaDeployer {
    return new Contract(address, _abi, signerOrProvider) as TapiocaDeployer;
  }
}
