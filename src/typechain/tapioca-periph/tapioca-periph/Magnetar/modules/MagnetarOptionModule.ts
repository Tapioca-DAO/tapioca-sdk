/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export type ICommonExternalContractsStruct = {
  magnetar: PromiseOrValue<string>;
  singularity: PromiseOrValue<string>;
  bigBang: PromiseOrValue<string>;
  marketHelper: PromiseOrValue<string>;
};

export type ICommonExternalContractsStructOutput = [
  string,
  string,
  string,
  string
] & {
  magnetar: string;
  singularity: string;
  bigBang: string;
  marketHelper: string;
};

export type IOptionsExitDataStruct = {
  exit: PromiseOrValue<boolean>;
  target: PromiseOrValue<string>;
  oTAPTokenID: PromiseOrValue<BigNumberish>;
};

export type IOptionsExitDataStructOutput = [boolean, string, BigNumber] & {
  exit: boolean;
  target: string;
  oTAPTokenID: BigNumber;
};

export type IOptionsUnlockDataStruct = {
  unlock: PromiseOrValue<boolean>;
  target: PromiseOrValue<string>;
  tokenId: PromiseOrValue<BigNumberish>;
};

export type IOptionsUnlockDataStructOutput = [boolean, string, BigNumber] & {
  unlock: boolean;
  target: string;
  tokenId: BigNumber;
};

export type MagnetarWithdrawDataStruct = {
  yieldBox: PromiseOrValue<string>;
  assetId: PromiseOrValue<BigNumberish>;
  receiver: PromiseOrValue<string>;
  amount: PromiseOrValue<BigNumberish>;
  unwrap: PromiseOrValue<boolean>;
  withdraw: PromiseOrValue<boolean>;
};

export type MagnetarWithdrawDataStructOutput = [
  string,
  BigNumber,
  string,
  BigNumber,
  boolean,
  boolean
] & {
  yieldBox: string;
  assetId: BigNumber;
  receiver: string;
  amount: BigNumber;
  unwrap: boolean;
  withdraw: boolean;
};

export type IRemoveAndRepayStruct = {
  removeAssetFromSGL: PromiseOrValue<boolean>;
  removeAmount: PromiseOrValue<BigNumberish>;
  repayAssetOnBB: PromiseOrValue<boolean>;
  repayAmount: PromiseOrValue<BigNumberish>;
  removeCollateralFromBB: PromiseOrValue<boolean>;
  collateralAmount: PromiseOrValue<BigNumberish>;
  exitData: IOptionsExitDataStruct;
  unlockData: IOptionsUnlockDataStruct;
  assetWithdrawData: MagnetarWithdrawDataStruct;
  collateralWithdrawData: MagnetarWithdrawDataStruct;
};

export type IRemoveAndRepayStructOutput = [
  boolean,
  BigNumber,
  boolean,
  BigNumber,
  boolean,
  BigNumber,
  IOptionsExitDataStructOutput,
  IOptionsUnlockDataStructOutput,
  MagnetarWithdrawDataStructOutput,
  MagnetarWithdrawDataStructOutput
] & {
  removeAssetFromSGL: boolean;
  removeAmount: BigNumber;
  repayAssetOnBB: boolean;
  repayAmount: BigNumber;
  removeCollateralFromBB: boolean;
  collateralAmount: BigNumber;
  exitData: IOptionsExitDataStructOutput;
  unlockData: IOptionsUnlockDataStructOutput;
  assetWithdrawData: MagnetarWithdrawDataStructOutput;
  collateralWithdrawData: MagnetarWithdrawDataStructOutput;
};

export type ExitPositionAndRemoveCollateralDataStruct = {
  user: PromiseOrValue<string>;
  externalData: ICommonExternalContractsStruct;
  removeAndRepayData: IRemoveAndRepayStruct;
};

export type ExitPositionAndRemoveCollateralDataStructOutput = [
  string,
  ICommonExternalContractsStructOutput,
  IRemoveAndRepayStructOutput
] & {
  user: string;
  externalData: ICommonExternalContractsStructOutput;
  removeAndRepayData: IRemoveAndRepayStructOutput;
};

export type IOptionsLockDataStruct = {
  lock: PromiseOrValue<boolean>;
  target: PromiseOrValue<string>;
  lockDuration: PromiseOrValue<BigNumberish>;
  amount: PromiseOrValue<BigNumberish>;
  fraction: PromiseOrValue<BigNumberish>;
};

export type IOptionsLockDataStructOutput = [
  boolean,
  string,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  lock: boolean;
  target: string;
  lockDuration: BigNumber;
  amount: BigNumber;
  fraction: BigNumber;
};

export type IOptionsParticipateDataStruct = {
  participate: PromiseOrValue<boolean>;
  target: PromiseOrValue<string>;
  tOLPTokenId: PromiseOrValue<BigNumberish>;
};

export type IOptionsParticipateDataStructOutput = [
  boolean,
  string,
  BigNumber
] & { participate: boolean; target: string; tOLPTokenId: BigNumber };

export type LockAndParticipateDataStruct = {
  user: PromiseOrValue<string>;
  singularity: PromiseOrValue<string>;
  magnetar: PromiseOrValue<string>;
  lockData: IOptionsLockDataStruct;
  participateData: IOptionsParticipateDataStruct;
};

export type LockAndParticipateDataStructOutput = [
  string,
  string,
  string,
  IOptionsLockDataStructOutput,
  IOptionsParticipateDataStructOutput
] & {
  user: string;
  singularity: string;
  magnetar: string;
  lockData: IOptionsLockDataStructOutput;
  participateData: IOptionsParticipateDataStructOutput;
};

export interface MagnetarOptionModuleInterface extends utils.Interface {
  functions: {
    "MAGNETAR_ACTION_ASSET_MODULE()": FunctionFragment;
    "MAGNETAR_ACTION_COLLATERAL_MODULE()": FunctionFragment;
    "MAGNETAR_ACTION_MARKET()": FunctionFragment;
    "MAGNETAR_ACTION_MINT_MODULE()": FunctionFragment;
    "MAGNETAR_ACTION_OFT()": FunctionFragment;
    "MAGNETAR_ACTION_OPTION_MODULE()": FunctionFragment;
    "MAGNETAR_ACTION_PERMIT()": FunctionFragment;
    "MAGNETAR_ACTION_TAP_LOCK()": FunctionFragment;
    "MAGNETAR_ACTION_TAP_UNLOCK()": FunctionFragment;
    "MAGNETAR_ACTION_YIELDBOX_MODULE()": FunctionFragment;
    "exitPositionAndRemoveCollateral((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))": FunctionFragment;
    "helper()": FunctionFragment;
    "lockAndParticipate((address,address,address,(bool,address,uint128,uint128,uint256),(bool,address,uint256)))": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
    "owner()": FunctionFragment;
    "pearlmit()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setPearlmit(address)": FunctionFragment;
    "toeHelper()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "MAGNETAR_ACTION_ASSET_MODULE"
      | "MAGNETAR_ACTION_ASSET_MODULE()"
      | "MAGNETAR_ACTION_COLLATERAL_MODULE"
      | "MAGNETAR_ACTION_COLLATERAL_MODULE()"
      | "MAGNETAR_ACTION_MARKET"
      | "MAGNETAR_ACTION_MARKET()"
      | "MAGNETAR_ACTION_MINT_MODULE"
      | "MAGNETAR_ACTION_MINT_MODULE()"
      | "MAGNETAR_ACTION_OFT"
      | "MAGNETAR_ACTION_OFT()"
      | "MAGNETAR_ACTION_OPTION_MODULE"
      | "MAGNETAR_ACTION_OPTION_MODULE()"
      | "MAGNETAR_ACTION_PERMIT"
      | "MAGNETAR_ACTION_PERMIT()"
      | "MAGNETAR_ACTION_TAP_LOCK"
      | "MAGNETAR_ACTION_TAP_LOCK()"
      | "MAGNETAR_ACTION_TAP_UNLOCK"
      | "MAGNETAR_ACTION_TAP_UNLOCK()"
      | "MAGNETAR_ACTION_YIELDBOX_MODULE"
      | "MAGNETAR_ACTION_YIELDBOX_MODULE()"
      | "exitPositionAndRemoveCollateral"
      | "exitPositionAndRemoveCollateral((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"
      | "helper"
      | "helper()"
      | "lockAndParticipate"
      | "lockAndParticipate((address,address,address,(bool,address,uint128,uint128,uint256),(bool,address,uint256)))"
      | "onERC721Received"
      | "onERC721Received(address,address,uint256,bytes)"
      | "owner"
      | "owner()"
      | "pearlmit"
      | "pearlmit()"
      | "renounceOwnership"
      | "renounceOwnership()"
      | "setPearlmit"
      | "setPearlmit(address)"
      | "toeHelper"
      | "toeHelper()"
      | "transferOwnership"
      | "transferOwnership(address)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_ASSET_MODULE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_ASSET_MODULE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_COLLATERAL_MODULE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_COLLATERAL_MODULE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_MARKET",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_MARKET()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_MINT_MODULE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_MINT_MODULE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_OFT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_OFT()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_OPTION_MODULE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_OPTION_MODULE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_PERMIT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_PERMIT()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_TAP_LOCK",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_TAP_LOCK()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_TAP_UNLOCK",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_TAP_UNLOCK()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_YIELDBOX_MODULE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAGNETAR_ACTION_YIELDBOX_MODULE()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "exitPositionAndRemoveCollateral",
    values: [ExitPositionAndRemoveCollateralDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "exitPositionAndRemoveCollateral((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))",
    values: [ExitPositionAndRemoveCollateralDataStruct]
  ): string;
  encodeFunctionData(functionFragment: "helper", values?: undefined): string;
  encodeFunctionData(functionFragment: "helper()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "lockAndParticipate",
    values: [LockAndParticipateDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "lockAndParticipate((address,address,address,(bool,address,uint128,uint128,uint256),(bool,address,uint256)))",
    values: [LockAndParticipateDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received(address,address,uint256,bytes)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner()", values?: undefined): string;
  encodeFunctionData(functionFragment: "pearlmit", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pearlmit()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setPearlmit",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPearlmit(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(functionFragment: "toeHelper", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "toeHelper()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership(address)",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_ASSET_MODULE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_ASSET_MODULE()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_COLLATERAL_MODULE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_COLLATERAL_MODULE()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_MARKET",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_MARKET()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_MINT_MODULE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_MINT_MODULE()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_OFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_OFT()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_OPTION_MODULE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_OPTION_MODULE()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_PERMIT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_PERMIT()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_TAP_LOCK",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_TAP_LOCK()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_TAP_UNLOCK",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_TAP_UNLOCK()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_YIELDBOX_MODULE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAGNETAR_ACTION_YIELDBOX_MODULE()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "exitPositionAndRemoveCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "exitPositionAndRemoveCollateral((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "helper", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "helper()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "lockAndParticipate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lockAndParticipate((address,address,address,(bool,address,uint128,uint128,uint256),(bool,address,uint256)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received(address,address,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pearlmit", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pearlmit()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPearlmit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPearlmit(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "toeHelper", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "toeHelper()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership(address)",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
    "PearlmitUpdated(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "OwnershipTransferred(address,address)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PearlmitUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "PearlmitUpdated(address,address)"
  ): EventFragment;
}

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface PearlmitUpdatedEventObject {
  oldPearlmit: string;
  newPearlmit: string;
}
export type PearlmitUpdatedEvent = TypedEvent<
  [string, string],
  PearlmitUpdatedEventObject
>;

export type PearlmitUpdatedEventFilter = TypedEventFilter<PearlmitUpdatedEvent>;

export interface MagnetarOptionModule extends BaseContract {
  contractName: "MagnetarOptionModule";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MagnetarOptionModuleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    MAGNETAR_ACTION_ASSET_MODULE(overrides?: CallOverrides): Promise<[number]>;

    "MAGNETAR_ACTION_ASSET_MODULE()"(
      overrides?: CallOverrides
    ): Promise<[number]>;

    MAGNETAR_ACTION_COLLATERAL_MODULE(
      overrides?: CallOverrides
    ): Promise<[number]>;

    "MAGNETAR_ACTION_COLLATERAL_MODULE()"(
      overrides?: CallOverrides
    ): Promise<[number]>;

    MAGNETAR_ACTION_MARKET(overrides?: CallOverrides): Promise<[number]>;

    "MAGNETAR_ACTION_MARKET()"(overrides?: CallOverrides): Promise<[number]>;

    MAGNETAR_ACTION_MINT_MODULE(overrides?: CallOverrides): Promise<[number]>;

    "MAGNETAR_ACTION_MINT_MODULE()"(
      overrides?: CallOverrides
    ): Promise<[number]>;

    MAGNETAR_ACTION_OFT(overrides?: CallOverrides): Promise<[number]>;

    "MAGNETAR_ACTION_OFT()"(overrides?: CallOverrides): Promise<[number]>;

    MAGNETAR_ACTION_OPTION_MODULE(overrides?: CallOverrides): Promise<[number]>;

    "MAGNETAR_ACTION_OPTION_MODULE()"(
      overrides?: CallOverrides
    ): Promise<[number]>;

    MAGNETAR_ACTION_PERMIT(overrides?: CallOverrides): Promise<[number]>;

    "MAGNETAR_ACTION_PERMIT()"(overrides?: CallOverrides): Promise<[number]>;

    MAGNETAR_ACTION_TAP_LOCK(overrides?: CallOverrides): Promise<[number]>;

    "MAGNETAR_ACTION_TAP_LOCK()"(overrides?: CallOverrides): Promise<[number]>;

    MAGNETAR_ACTION_TAP_UNLOCK(overrides?: CallOverrides): Promise<[number]>;

    "MAGNETAR_ACTION_TAP_UNLOCK()"(
      overrides?: CallOverrides
    ): Promise<[number]>;

    MAGNETAR_ACTION_YIELDBOX_MODULE(
      overrides?: CallOverrides
    ): Promise<[number]>;

    "MAGNETAR_ACTION_YIELDBOX_MODULE()"(
      overrides?: CallOverrides
    ): Promise<[number]>;

    exitPositionAndRemoveCollateral(
      data: ExitPositionAndRemoveCollateralDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "exitPositionAndRemoveCollateral((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"(
      data: ExitPositionAndRemoveCollateralDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    helper(overrides?: CallOverrides): Promise<[string]>;

    "helper()"(overrides?: CallOverrides): Promise<[string]>;

    lockAndParticipate(
      data: LockAndParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "lockAndParticipate((address,address,address,(bool,address,uint128,uint128,uint256),(bool,address,uint256)))"(
      data: LockAndParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    pearlmit(overrides?: CallOverrides): Promise<[string]>;

    "pearlmit()"(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPearlmit(
      _pearlmit: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setPearlmit(address)"(
      _pearlmit: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    toeHelper(overrides?: CallOverrides): Promise<[string]>;

    "toeHelper()"(overrides?: CallOverrides): Promise<[string]>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  MAGNETAR_ACTION_ASSET_MODULE(overrides?: CallOverrides): Promise<number>;

  "MAGNETAR_ACTION_ASSET_MODULE()"(overrides?: CallOverrides): Promise<number>;

  MAGNETAR_ACTION_COLLATERAL_MODULE(overrides?: CallOverrides): Promise<number>;

  "MAGNETAR_ACTION_COLLATERAL_MODULE()"(
    overrides?: CallOverrides
  ): Promise<number>;

  MAGNETAR_ACTION_MARKET(overrides?: CallOverrides): Promise<number>;

  "MAGNETAR_ACTION_MARKET()"(overrides?: CallOverrides): Promise<number>;

  MAGNETAR_ACTION_MINT_MODULE(overrides?: CallOverrides): Promise<number>;

  "MAGNETAR_ACTION_MINT_MODULE()"(overrides?: CallOverrides): Promise<number>;

  MAGNETAR_ACTION_OFT(overrides?: CallOverrides): Promise<number>;

  "MAGNETAR_ACTION_OFT()"(overrides?: CallOverrides): Promise<number>;

  MAGNETAR_ACTION_OPTION_MODULE(overrides?: CallOverrides): Promise<number>;

  "MAGNETAR_ACTION_OPTION_MODULE()"(overrides?: CallOverrides): Promise<number>;

  MAGNETAR_ACTION_PERMIT(overrides?: CallOverrides): Promise<number>;

  "MAGNETAR_ACTION_PERMIT()"(overrides?: CallOverrides): Promise<number>;

  MAGNETAR_ACTION_TAP_LOCK(overrides?: CallOverrides): Promise<number>;

  "MAGNETAR_ACTION_TAP_LOCK()"(overrides?: CallOverrides): Promise<number>;

  MAGNETAR_ACTION_TAP_UNLOCK(overrides?: CallOverrides): Promise<number>;

  "MAGNETAR_ACTION_TAP_UNLOCK()"(overrides?: CallOverrides): Promise<number>;

  MAGNETAR_ACTION_YIELDBOX_MODULE(overrides?: CallOverrides): Promise<number>;

  "MAGNETAR_ACTION_YIELDBOX_MODULE()"(
    overrides?: CallOverrides
  ): Promise<number>;

  exitPositionAndRemoveCollateral(
    data: ExitPositionAndRemoveCollateralDataStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "exitPositionAndRemoveCollateral((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"(
    data: ExitPositionAndRemoveCollateralDataStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  helper(overrides?: CallOverrides): Promise<string>;

  "helper()"(overrides?: CallOverrides): Promise<string>;

  lockAndParticipate(
    data: LockAndParticipateDataStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "lockAndParticipate((address,address,address,(bool,address,uint128,uint128,uint256),(bool,address,uint256)))"(
    data: LockAndParticipateDataStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  onERC721Received(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    arg2: PromiseOrValue<BigNumberish>,
    arg3: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "onERC721Received(address,address,uint256,bytes)"(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    arg2: PromiseOrValue<BigNumberish>,
    arg3: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  pearlmit(overrides?: CallOverrides): Promise<string>;

  "pearlmit()"(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "renounceOwnership()"(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPearlmit(
    _pearlmit: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setPearlmit(address)"(
    _pearlmit: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  toeHelper(overrides?: CallOverrides): Promise<string>;

  "toeHelper()"(overrides?: CallOverrides): Promise<string>;

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    MAGNETAR_ACTION_ASSET_MODULE(overrides?: CallOverrides): Promise<number>;

    "MAGNETAR_ACTION_ASSET_MODULE()"(
      overrides?: CallOverrides
    ): Promise<number>;

    MAGNETAR_ACTION_COLLATERAL_MODULE(
      overrides?: CallOverrides
    ): Promise<number>;

    "MAGNETAR_ACTION_COLLATERAL_MODULE()"(
      overrides?: CallOverrides
    ): Promise<number>;

    MAGNETAR_ACTION_MARKET(overrides?: CallOverrides): Promise<number>;

    "MAGNETAR_ACTION_MARKET()"(overrides?: CallOverrides): Promise<number>;

    MAGNETAR_ACTION_MINT_MODULE(overrides?: CallOverrides): Promise<number>;

    "MAGNETAR_ACTION_MINT_MODULE()"(overrides?: CallOverrides): Promise<number>;

    MAGNETAR_ACTION_OFT(overrides?: CallOverrides): Promise<number>;

    "MAGNETAR_ACTION_OFT()"(overrides?: CallOverrides): Promise<number>;

    MAGNETAR_ACTION_OPTION_MODULE(overrides?: CallOverrides): Promise<number>;

    "MAGNETAR_ACTION_OPTION_MODULE()"(
      overrides?: CallOverrides
    ): Promise<number>;

    MAGNETAR_ACTION_PERMIT(overrides?: CallOverrides): Promise<number>;

    "MAGNETAR_ACTION_PERMIT()"(overrides?: CallOverrides): Promise<number>;

    MAGNETAR_ACTION_TAP_LOCK(overrides?: CallOverrides): Promise<number>;

    "MAGNETAR_ACTION_TAP_LOCK()"(overrides?: CallOverrides): Promise<number>;

    MAGNETAR_ACTION_TAP_UNLOCK(overrides?: CallOverrides): Promise<number>;

    "MAGNETAR_ACTION_TAP_UNLOCK()"(overrides?: CallOverrides): Promise<number>;

    MAGNETAR_ACTION_YIELDBOX_MODULE(overrides?: CallOverrides): Promise<number>;

    "MAGNETAR_ACTION_YIELDBOX_MODULE()"(
      overrides?: CallOverrides
    ): Promise<number>;

    exitPositionAndRemoveCollateral(
      data: ExitPositionAndRemoveCollateralDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "exitPositionAndRemoveCollateral((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"(
      data: ExitPositionAndRemoveCollateralDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    helper(overrides?: CallOverrides): Promise<string>;

    "helper()"(overrides?: CallOverrides): Promise<string>;

    lockAndParticipate(
      data: LockAndParticipateDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "lockAndParticipate((address,address,address,(bool,address,uint128,uint128,uint256),(bool,address,uint256)))"(
      data: LockAndParticipateDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    pearlmit(overrides?: CallOverrides): Promise<string>;

    "pearlmit()"(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    setPearlmit(
      _pearlmit: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPearlmit(address)"(
      _pearlmit: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    toeHelper(overrides?: CallOverrides): Promise<string>;

    "toeHelper()"(overrides?: CallOverrides): Promise<string>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;

    "PearlmitUpdated(address,address)"(
      oldPearlmit?: null,
      newPearlmit?: null
    ): PearlmitUpdatedEventFilter;
    PearlmitUpdated(
      oldPearlmit?: null,
      newPearlmit?: null
    ): PearlmitUpdatedEventFilter;
  };

  estimateGas: {
    MAGNETAR_ACTION_ASSET_MODULE(overrides?: CallOverrides): Promise<BigNumber>;

    "MAGNETAR_ACTION_ASSET_MODULE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    MAGNETAR_ACTION_COLLATERAL_MODULE(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "MAGNETAR_ACTION_COLLATERAL_MODULE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    MAGNETAR_ACTION_MARKET(overrides?: CallOverrides): Promise<BigNumber>;

    "MAGNETAR_ACTION_MARKET()"(overrides?: CallOverrides): Promise<BigNumber>;

    MAGNETAR_ACTION_MINT_MODULE(overrides?: CallOverrides): Promise<BigNumber>;

    "MAGNETAR_ACTION_MINT_MODULE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    MAGNETAR_ACTION_OFT(overrides?: CallOverrides): Promise<BigNumber>;

    "MAGNETAR_ACTION_OFT()"(overrides?: CallOverrides): Promise<BigNumber>;

    MAGNETAR_ACTION_OPTION_MODULE(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "MAGNETAR_ACTION_OPTION_MODULE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    MAGNETAR_ACTION_PERMIT(overrides?: CallOverrides): Promise<BigNumber>;

    "MAGNETAR_ACTION_PERMIT()"(overrides?: CallOverrides): Promise<BigNumber>;

    MAGNETAR_ACTION_TAP_LOCK(overrides?: CallOverrides): Promise<BigNumber>;

    "MAGNETAR_ACTION_TAP_LOCK()"(overrides?: CallOverrides): Promise<BigNumber>;

    MAGNETAR_ACTION_TAP_UNLOCK(overrides?: CallOverrides): Promise<BigNumber>;

    "MAGNETAR_ACTION_TAP_UNLOCK()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    MAGNETAR_ACTION_YIELDBOX_MODULE(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "MAGNETAR_ACTION_YIELDBOX_MODULE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    exitPositionAndRemoveCollateral(
      data: ExitPositionAndRemoveCollateralDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "exitPositionAndRemoveCollateral((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"(
      data: ExitPositionAndRemoveCollateralDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    helper(overrides?: CallOverrides): Promise<BigNumber>;

    "helper()"(overrides?: CallOverrides): Promise<BigNumber>;

    lockAndParticipate(
      data: LockAndParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "lockAndParticipate((address,address,address,(bool,address,uint128,uint128,uint256),(bool,address,uint256)))"(
      data: LockAndParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    pearlmit(overrides?: CallOverrides): Promise<BigNumber>;

    "pearlmit()"(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPearlmit(
      _pearlmit: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setPearlmit(address)"(
      _pearlmit: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    toeHelper(overrides?: CallOverrides): Promise<BigNumber>;

    "toeHelper()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    MAGNETAR_ACTION_ASSET_MODULE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MAGNETAR_ACTION_ASSET_MODULE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MAGNETAR_ACTION_COLLATERAL_MODULE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MAGNETAR_ACTION_COLLATERAL_MODULE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MAGNETAR_ACTION_MARKET(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MAGNETAR_ACTION_MARKET()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MAGNETAR_ACTION_MINT_MODULE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MAGNETAR_ACTION_MINT_MODULE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MAGNETAR_ACTION_OFT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MAGNETAR_ACTION_OFT()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MAGNETAR_ACTION_OPTION_MODULE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MAGNETAR_ACTION_OPTION_MODULE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MAGNETAR_ACTION_PERMIT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MAGNETAR_ACTION_PERMIT()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MAGNETAR_ACTION_TAP_LOCK(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MAGNETAR_ACTION_TAP_LOCK()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MAGNETAR_ACTION_TAP_UNLOCK(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MAGNETAR_ACTION_TAP_UNLOCK()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MAGNETAR_ACTION_YIELDBOX_MODULE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MAGNETAR_ACTION_YIELDBOX_MODULE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    exitPositionAndRemoveCollateral(
      data: ExitPositionAndRemoveCollateralDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "exitPositionAndRemoveCollateral((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"(
      data: ExitPositionAndRemoveCollateralDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    helper(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "helper()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    lockAndParticipate(
      data: LockAndParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "lockAndParticipate((address,address,address,(bool,address,uint128,uint128,uint256),(bool,address,uint256)))"(
      data: LockAndParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pearlmit(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "pearlmit()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPearlmit(
      _pearlmit: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setPearlmit(address)"(
      _pearlmit: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    toeHelper(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "toeHelper()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
