/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export declare namespace StargateLbpHelper {
  export type StargateDataStruct = {
    srcToken: PromiseOrValue<string>;
    targetToken: PromiseOrValue<string>;
    dstChainId: PromiseOrValue<BigNumberish>;
    peer: PromiseOrValue<string>;
    receiver: PromiseOrValue<string>;
    amount: PromiseOrValue<BigNumberish>;
    slippage: PromiseOrValue<BigNumberish>;
    srcPoolId: PromiseOrValue<BigNumberish>;
    dstPoolId: PromiseOrValue<BigNumberish>;
    getDust: PromiseOrValue<boolean>;
    dstAirdropAmount: PromiseOrValue<BigNumberish>;
    dstGasLimit: PromiseOrValue<BigNumberish>;
  };

  export type StargateDataStructOutput = [
    string,
    string,
    number,
    string,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    boolean,
    BigNumber,
    BigNumber
  ] & {
    srcToken: string;
    targetToken: string;
    dstChainId: number;
    peer: string;
    receiver: string;
    amount: BigNumber;
    slippage: BigNumber;
    srcPoolId: BigNumber;
    dstPoolId: BigNumber;
    getDust: boolean;
    dstAirdropAmount: BigNumber;
    dstGasLimit: BigNumber;
  };

  export type ParticipateDataStruct = {
    assetIn: PromiseOrValue<string>;
    assetOut: PromiseOrValue<string>;
    deadline: PromiseOrValue<BigNumberish>;
    minAmountOut: PromiseOrValue<BigNumberish>;
  };

  export type ParticipateDataStructOutput = [
    string,
    string,
    BigNumber,
    BigNumber
  ] & {
    assetIn: string;
    assetOut: string;
    deadline: BigNumber;
    minAmountOut: BigNumber;
  };

  export type QuoteLayerZeroFeeDataStruct = {
    dstChainId: PromiseOrValue<BigNumberish>;
    functionType: PromiseOrValue<BigNumberish>;
    toAddress: PromiseOrValue<BytesLike>;
    _empty: PromiseOrValue<BytesLike>;
    lzTxParams: IStargateRouterBase.LzTxObjStruct;
  };

  export type QuoteLayerZeroFeeDataStructOutput = [
    number,
    number,
    string,
    string,
    IStargateRouterBase.LzTxObjStructOutput
  ] & {
    dstChainId: number;
    functionType: number;
    toAddress: string;
    _empty: string;
    lzTxParams: IStargateRouterBase.LzTxObjStructOutput;
  };
}

export declare namespace IStargateRouterBase {
  export type LzTxObjStruct = {
    dstGasForCall: PromiseOrValue<BigNumberish>;
    dstNativeAmount: PromiseOrValue<BigNumberish>;
    dstNativeAddr: PromiseOrValue<BytesLike>;
  };

  export type LzTxObjStructOutput = [BigNumber, BigNumber, string] & {
    dstGasForCall: BigNumber;
    dstNativeAmount: BigNumber;
    dstNativeAddr: string;
  };
}

export interface StargateLbpHelperInterface extends utils.Interface {
  functions: {
    "_sgReceive(address,uint256,bytes)": FunctionFragment;
    "lbpPool()": FunctionFragment;
    "lbpVault()": FunctionFragment;
    "owner()": FunctionFragment;
    "participate((address,address,uint16,address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256),(address,address,uint256,uint256))": FunctionFragment;
    "quoteLayerZeroFee((uint16,uint8,bytes,bytes,(uint256,uint256,bytes)))": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "router()": FunctionFragment;
    "sgReceive(uint16,bytes,uint256,address,uint256,bytes)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "_sgReceive"
      | "_sgReceive(address,uint256,bytes)"
      | "lbpPool"
      | "lbpPool()"
      | "lbpVault"
      | "lbpVault()"
      | "owner"
      | "owner()"
      | "participate"
      | "participate((address,address,uint16,address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256),(address,address,uint256,uint256))"
      | "quoteLayerZeroFee"
      | "quoteLayerZeroFee((uint16,uint8,bytes,bytes,(uint256,uint256,bytes)))"
      | "renounceOwnership"
      | "renounceOwnership()"
      | "router"
      | "router()"
      | "sgReceive"
      | "sgReceive(uint16,bytes,uint256,address,uint256,bytes)"
      | "transferOwnership"
      | "transferOwnership(address)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "_sgReceive",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "_sgReceive(address,uint256,bytes)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(functionFragment: "lbpPool", values?: undefined): string;
  encodeFunctionData(functionFragment: "lbpPool()", values?: undefined): string;
  encodeFunctionData(functionFragment: "lbpVault", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "lbpVault()",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "participate",
    values: [
      StargateLbpHelper.StargateDataStruct,
      StargateLbpHelper.ParticipateDataStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "participate((address,address,uint16,address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256),(address,address,uint256,uint256))",
    values: [
      StargateLbpHelper.StargateDataStruct,
      StargateLbpHelper.ParticipateDataStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "quoteLayerZeroFee",
    values: [StargateLbpHelper.QuoteLayerZeroFeeDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "quoteLayerZeroFee((uint16,uint8,bytes,bytes,(uint256,uint256,bytes)))",
    values: [StargateLbpHelper.QuoteLayerZeroFeeDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership()",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "router", values?: undefined): string;
  encodeFunctionData(functionFragment: "router()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "sgReceive",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "sgReceive(uint16,bytes,uint256,address,uint256,bytes)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership(address)",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(functionFragment: "_sgReceive", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_sgReceive(address,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "lbpPool", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "lbpPool()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "lbpVault", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "lbpVault()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "participate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "participate((address,address,uint16,address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256),(address,address,uint256,uint256))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "quoteLayerZeroFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "quoteLayerZeroFee((uint16,uint8,bytes,bytes,(uint256,uint256,bytes)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "router", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "router()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sgReceive", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "sgReceive(uint16,bytes,uint256,address,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership(address)",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
    "ReceiveFailed(uint16,address,uint256,uint256,bytes)": EventFragment;
    "ReceiveSuccess(uint16,address,uint256,uint256,bytes)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "OwnershipTransferred(address,address)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReceiveFailed"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ReceiveFailed(uint16,address,uint256,uint256,bytes)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReceiveSuccess"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ReceiveSuccess(uint16,address,uint256,uint256,bytes)"
  ): EventFragment;
}

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface ReceiveFailedEventObject {
  srcChainId: number;
  token: string;
  nonce: BigNumber;
  amountLD: BigNumber;
  payload: string;
}
export type ReceiveFailedEvent = TypedEvent<
  [number, string, BigNumber, BigNumber, string],
  ReceiveFailedEventObject
>;

export type ReceiveFailedEventFilter = TypedEventFilter<ReceiveFailedEvent>;

export interface ReceiveSuccessEventObject {
  srcChainId: number;
  token: string;
  nonce: BigNumber;
  amountLD: BigNumber;
  payload: string;
}
export type ReceiveSuccessEvent = TypedEvent<
  [number, string, BigNumber, BigNumber, string],
  ReceiveSuccessEventObject
>;

export type ReceiveSuccessEventFilter = TypedEventFilter<ReceiveSuccessEvent>;

export interface StargateLbpHelper extends BaseContract {
  contractName: "StargateLbpHelper";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: StargateLbpHelperInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    _sgReceive(
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "_sgReceive(address,uint256,bytes)"(
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    lbpPool(overrides?: CallOverrides): Promise<[string]>;

    "lbpPool()"(overrides?: CallOverrides): Promise<[string]>;

    lbpVault(overrides?: CallOverrides): Promise<[string]>;

    "lbpVault()"(overrides?: CallOverrides): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    participate(
      stargateData: StargateLbpHelper.StargateDataStruct,
      lbpData: StargateLbpHelper.ParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "participate((address,address,uint16,address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256),(address,address,uint256,uint256))"(
      stargateData: StargateLbpHelper.StargateDataStruct,
      lbpData: StargateLbpHelper.ParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    quoteLayerZeroFee(
      _data: StargateLbpHelper.QuoteLayerZeroFeeDataStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    "quoteLayerZeroFee((uint16,uint8,bytes,bytes,(uint256,uint256,bytes)))"(
      _data: StargateLbpHelper.QuoteLayerZeroFeeDataStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    router(overrides?: CallOverrides): Promise<[string]>;

    "router()"(overrides?: CallOverrides): Promise<[string]>;

    sgReceive(
      srcChainId: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BytesLike>,
      nonce: PromiseOrValue<BigNumberish>,
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "sgReceive(uint16,bytes,uint256,address,uint256,bytes)"(
      srcChainId: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BytesLike>,
      nonce: PromiseOrValue<BigNumberish>,
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  _sgReceive(
    token: PromiseOrValue<string>,
    amountLD: PromiseOrValue<BigNumberish>,
    payload: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "_sgReceive(address,uint256,bytes)"(
    token: PromiseOrValue<string>,
    amountLD: PromiseOrValue<BigNumberish>,
    payload: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  lbpPool(overrides?: CallOverrides): Promise<string>;

  "lbpPool()"(overrides?: CallOverrides): Promise<string>;

  lbpVault(overrides?: CallOverrides): Promise<string>;

  "lbpVault()"(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  participate(
    stargateData: StargateLbpHelper.StargateDataStruct,
    lbpData: StargateLbpHelper.ParticipateDataStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "participate((address,address,uint16,address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256),(address,address,uint256,uint256))"(
    stargateData: StargateLbpHelper.StargateDataStruct,
    lbpData: StargateLbpHelper.ParticipateDataStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  quoteLayerZeroFee(
    _data: StargateLbpHelper.QuoteLayerZeroFeeDataStruct,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  "quoteLayerZeroFee((uint16,uint8,bytes,bytes,(uint256,uint256,bytes)))"(
    _data: StargateLbpHelper.QuoteLayerZeroFeeDataStruct,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "renounceOwnership()"(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  router(overrides?: CallOverrides): Promise<string>;

  "router()"(overrides?: CallOverrides): Promise<string>;

  sgReceive(
    srcChainId: PromiseOrValue<BigNumberish>,
    arg1: PromiseOrValue<BytesLike>,
    nonce: PromiseOrValue<BigNumberish>,
    token: PromiseOrValue<string>,
    amountLD: PromiseOrValue<BigNumberish>,
    payload: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "sgReceive(uint16,bytes,uint256,address,uint256,bytes)"(
    srcChainId: PromiseOrValue<BigNumberish>,
    arg1: PromiseOrValue<BytesLike>,
    nonce: PromiseOrValue<BigNumberish>,
    token: PromiseOrValue<string>,
    amountLD: PromiseOrValue<BigNumberish>,
    payload: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    _sgReceive(
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    "_sgReceive(address,uint256,bytes)"(
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    lbpPool(overrides?: CallOverrides): Promise<string>;

    "lbpPool()"(overrides?: CallOverrides): Promise<string>;

    lbpVault(overrides?: CallOverrides): Promise<string>;

    "lbpVault()"(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    participate(
      stargateData: StargateLbpHelper.StargateDataStruct,
      lbpData: StargateLbpHelper.ParticipateDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "participate((address,address,uint16,address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256),(address,address,uint256,uint256))"(
      stargateData: StargateLbpHelper.StargateDataStruct,
      lbpData: StargateLbpHelper.ParticipateDataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    quoteLayerZeroFee(
      _data: StargateLbpHelper.QuoteLayerZeroFeeDataStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    "quoteLayerZeroFee((uint16,uint8,bytes,bytes,(uint256,uint256,bytes)))"(
      _data: StargateLbpHelper.QuoteLayerZeroFeeDataStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    router(overrides?: CallOverrides): Promise<string>;

    "router()"(overrides?: CallOverrides): Promise<string>;

    sgReceive(
      srcChainId: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BytesLike>,
      nonce: PromiseOrValue<BigNumberish>,
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    "sgReceive(uint16,bytes,uint256,address,uint256,bytes)"(
      srcChainId: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BytesLike>,
      nonce: PromiseOrValue<BigNumberish>,
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;

    "ReceiveFailed(uint16,address,uint256,uint256,bytes)"(
      srcChainId?: PromiseOrValue<BigNumberish> | null,
      token?: PromiseOrValue<string> | null,
      nonce?: PromiseOrValue<BigNumberish> | null,
      amountLD?: null,
      payload?: null
    ): ReceiveFailedEventFilter;
    ReceiveFailed(
      srcChainId?: PromiseOrValue<BigNumberish> | null,
      token?: PromiseOrValue<string> | null,
      nonce?: PromiseOrValue<BigNumberish> | null,
      amountLD?: null,
      payload?: null
    ): ReceiveFailedEventFilter;

    "ReceiveSuccess(uint16,address,uint256,uint256,bytes)"(
      srcChainId?: PromiseOrValue<BigNumberish> | null,
      token?: PromiseOrValue<string> | null,
      nonce?: PromiseOrValue<BigNumberish> | null,
      amountLD?: null,
      payload?: null
    ): ReceiveSuccessEventFilter;
    ReceiveSuccess(
      srcChainId?: PromiseOrValue<BigNumberish> | null,
      token?: PromiseOrValue<string> | null,
      nonce?: PromiseOrValue<BigNumberish> | null,
      amountLD?: null,
      payload?: null
    ): ReceiveSuccessEventFilter;
  };

  estimateGas: {
    _sgReceive(
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "_sgReceive(address,uint256,bytes)"(
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    lbpPool(overrides?: CallOverrides): Promise<BigNumber>;

    "lbpPool()"(overrides?: CallOverrides): Promise<BigNumber>;

    lbpVault(overrides?: CallOverrides): Promise<BigNumber>;

    "lbpVault()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    participate(
      stargateData: StargateLbpHelper.StargateDataStruct,
      lbpData: StargateLbpHelper.ParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "participate((address,address,uint16,address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256),(address,address,uint256,uint256))"(
      stargateData: StargateLbpHelper.StargateDataStruct,
      lbpData: StargateLbpHelper.ParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    quoteLayerZeroFee(
      _data: StargateLbpHelper.QuoteLayerZeroFeeDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "quoteLayerZeroFee((uint16,uint8,bytes,bytes,(uint256,uint256,bytes)))"(
      _data: StargateLbpHelper.QuoteLayerZeroFeeDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    router(overrides?: CallOverrides): Promise<BigNumber>;

    "router()"(overrides?: CallOverrides): Promise<BigNumber>;

    sgReceive(
      srcChainId: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BytesLike>,
      nonce: PromiseOrValue<BigNumberish>,
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "sgReceive(uint16,bytes,uint256,address,uint256,bytes)"(
      srcChainId: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BytesLike>,
      nonce: PromiseOrValue<BigNumberish>,
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _sgReceive(
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "_sgReceive(address,uint256,bytes)"(
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    lbpPool(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "lbpPool()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    lbpVault(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "lbpVault()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    participate(
      stargateData: StargateLbpHelper.StargateDataStruct,
      lbpData: StargateLbpHelper.ParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "participate((address,address,uint16,address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256),(address,address,uint256,uint256))"(
      stargateData: StargateLbpHelper.StargateDataStruct,
      lbpData: StargateLbpHelper.ParticipateDataStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    quoteLayerZeroFee(
      _data: StargateLbpHelper.QuoteLayerZeroFeeDataStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "quoteLayerZeroFee((uint16,uint8,bytes,bytes,(uint256,uint256,bytes)))"(
      _data: StargateLbpHelper.QuoteLayerZeroFeeDataStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    router(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "router()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    sgReceive(
      srcChainId: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BytesLike>,
      nonce: PromiseOrValue<BigNumberish>,
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "sgReceive(uint16,bytes,uint256,address,uint256,bytes)"(
      srcChainId: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BytesLike>,
      nonce: PromiseOrValue<BigNumberish>,
      token: PromiseOrValue<string>,
      amountLD: PromiseOrValue<BigNumberish>,
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
