/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Cluster,
  ClusterInterface,
} from "../../../contracts/Cluster/Cluster";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_lzChainId",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "_lzChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_oldStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_newStatus",
        type: "bool",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_editor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_oldStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_newStatus",
        type: "bool",
      },
    ],
    name: "EditorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_oldChain",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newChain",
        type: "uint256",
      },
    ],
    name: "LzChainUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "editor",
        type: "address",
      },
    ],
    name: "isEditor",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_lzChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lzChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_lzChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "updateContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_editor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "updateEditor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_lzChainId",
        type: "uint16",
      },
    ],
    name: "updateLzChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100b357601f61067638819003918201601f19168301916001600160401b038311848410176100b8578084926020946040528339810103126100b3575161ffff811681036100b357600054604051913360018060a01b0383167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160b01b03199091163361ffff60a01b19161760a09190911b61ffff60a01b16176000556105a790816100cf8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe604060808152600436101561001357600080fd5b600090813560e01c80636cb37a8314610411578063715018a6146103c95780638da5cb5b146103a2578063917c41561461037f578063a074815414610342578063d6dc7ab4146101fb578063e8c1362c146101ab578063f2fde38b146100fd5763fdf872be1461008257600080fd5b346100f95760203660031901126100f95761009b6104e8565b6100a36104f9565b7f151a97d786320cda18adb054f64fa5333bf7f260aa3b29a84795f2f9004bb3d1835492805161ffff808660a01c16825284166020820152a161ffff60a01b1990911660a09190911b61ffff60a01b1617815580f35b5080fd5b50346100f95760203660031901126100f9576101176104b7565b61011f6104f9565b6001600160a01b03908116918215610159575082546001600160a01b0319811683178455166000805160206105528339815191528380a380f35b5162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b50346100f957806003193601126100f95760ff816020936101ca6104e8565b61ffff6101d56104d2565b91168252600286528282206001600160a01b039091168252855220549151911615158152f35b50903461033f57606036600319011261033f576102166104e8565b9161021f6104d2565b9060443591821515830361033b57843385526020906001825260ff84872054168015610328575b156102ea576102da959661ffff809216156102dd575b16808752600282528387206001600160a01b039390931680885292825283872054845160ff909116151581528515156020820152819084907fdb19a6dfa22ca3d5fba3a5812f120bae96c506eab4af966422cf8cfee69280de90604090a38652600281528286209186525283209060ff801983541691151516179055565b80f35b5080875460a01c1661025c565b835162461bcd60e51b815260048101839052601760248201527610db1d5cdd195c8e881b9bdd08185d5d1a1bdc9a5e9959604a1b6044820152606490fd5b5085546001600160a01b03163314610246565b8380fd5b80fd5b50346100f95760203660031901126100f95760209160ff9082906001600160a01b0361036c6104b7565b1681526001855220541690519015158152f35b50346100f957816003193601126100f95761ffff6020925460a01c169051908152f35b50346100f957816003193601126100f957905490516001600160a01b039091168152602090f35b823461033f578060031936011261033f576103e26104f9565b80546001600160a01b03198116825581906001600160a01b03166000805160206105528339815191528280a380f35b50346100f957806003193601126100f95761042a6104b7565b9060243590811515820361033b576102da926104446104f9565b60018060a01b03168085526001602052807fdf1df62f3c31dd6f0a6dcedf036e75fb8b63b09cbe74cb9909e21aa11df6e3a38460ff858920541661049a8651928392839015158152901515602082015260400190565b0390a28452600160205283209060ff801983541691151516179055565b600435906001600160a01b03821682036104cd57565b600080fd5b602435906001600160a01b03821682036104cd57565b6004359061ffff821682036104cd57565b6000546001600160a01b0316330361050d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122071d7bf1155a2f979450fb558a072e01f7e8749d7878a011792fa80d839aa93ff64736f6c63430008120033";

type ClusterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClusterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cluster__factory extends ContractFactory {
  constructor(...args: ClusterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Cluster";
  }

  override deploy(
    _lzChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cluster> {
    return super.deploy(_lzChainId, overrides || {}) as Promise<Cluster>;
  }
  override getDeployTransaction(
    _lzChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_lzChainId, overrides || {});
  }
  override attach(address: string): Cluster {
    return super.attach(address) as Cluster;
  }
  override connect(signer: Signer): Cluster__factory {
    return super.connect(signer) as Cluster__factory;
  }
  static readonly contractName: "Cluster";

  public readonly contractName: "Cluster";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClusterInterface {
    return new utils.Interface(_abi) as ClusterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Cluster {
    return new Contract(address, _abi, signerOrProvider) as Cluster;
  }
}
