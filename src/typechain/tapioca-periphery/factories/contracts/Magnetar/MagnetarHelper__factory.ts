/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MagnetarHelper,
  MagnetarHelperInterface,
} from "../../../contracts/Magnetar/MagnetarHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "contract IBigBang[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "bigBangMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "collateral",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "oracleData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "totalCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "userCollateralShare",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "elastic",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "base",
                    type: "uint128",
                  },
                ],
                internalType: "struct Rebase",
                name: "totalBorrow",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "userBorrowPart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spotExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrowCap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalYieldBoxCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalYieldBoxCollateralAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalYieldBoxAssetShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalYieldBoxAssetAmount",
                type: "uint256",
              },
              {
                internalType: "enum TokenType",
                name: "yieldBoxCollateralTokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "yieldBoxCollateralContractAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "yieldBoxCollateralStrategyAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "yieldBoxCollateralTokenId",
                type: "uint256",
              },
              {
                internalType: "enum TokenType",
                name: "yieldBoxAssetTokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "yieldBoxAssetContractAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "yieldBoxAssetStrategyAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "yieldBoxAssetTokenId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralizationRate",
                type: "uint256",
              },
            ],
            internalType: "struct MagnetarHelper.MarketInfo",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "debtRate",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "lastAccrued",
                type: "uint64",
              },
            ],
            internalType: "struct IBigBang.AccrueInfo",
            name: "accrueInfo",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minDebtRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDebtRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "debtRateAgainstEthMarket",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "mainBBMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "mainBBDebtRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentDebtRate",
            type: "uint256",
          },
        ],
        internalType: "struct MagnetarHelper.BigBangInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fraction",
        type: "uint256",
      },
    ],
    name: "getAmountForAssetFraction",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowPart",
        type: "uint256",
      },
    ],
    name: "getAmountForBorrowPart",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getBorrowPartForAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "part",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    name: "getCollateralAmountForShare",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowPart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralizationRatePrecision",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRatePrecision",
        type: "uint256",
      },
    ],
    name: "getCollateralSharesForBorrowPart",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralShares",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getFractionForAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "fraction",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "contract ISingularity[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "singularityMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "collateral",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "oracleData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "totalCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "userCollateralShare",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "elastic",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "base",
                    type: "uint128",
                  },
                ],
                internalType: "struct Rebase",
                name: "totalBorrow",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "userBorrowPart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spotExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrowCap",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalYieldBoxCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalYieldBoxCollateralAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalYieldBoxAssetShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalYieldBoxAssetAmount",
                type: "uint256",
              },
              {
                internalType: "enum TokenType",
                name: "yieldBoxCollateralTokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "yieldBoxCollateralContractAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "yieldBoxCollateralStrategyAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "yieldBoxCollateralTokenId",
                type: "uint256",
              },
              {
                internalType: "enum TokenType",
                name: "yieldBoxAssetTokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "yieldBoxAssetContractAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "yieldBoxAssetStrategyAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "yieldBoxAssetTokenId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralizationRate",
                type: "uint256",
              },
            ],
            internalType: "struct MagnetarHelper.MarketInfo",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "elastic",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "base",
                type: "uint128",
              },
            ],
            internalType: "struct Rebase",
            name: "totalAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userAssetFraction",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "interestPerSecond",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "lastAccrued",
                type: "uint64",
              },
              {
                internalType: "uint128",
                name: "feesEarnedFraction",
                type: "uint128",
              },
            ],
            internalType: "struct ISingularity.AccrueInfo",
            name: "accrueInfo",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "utilization",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumTargetUtilization",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumTargetUtilization",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumInterestPerSecond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumInterestPerSecond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestElasticity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingInterestPerSecond",
            type: "uint256",
          },
        ],
        internalType: "struct MagnetarHelper.SingularityInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200012757601f62002ac038819003918201601f19168301916001600160401b038311848410176200012c578084926020946040528339810103126200012757516001600160a01b03808216908183036200012757620000623362000142565b33906000541603620000e357156200008f576200007f9062000142565b60405161293690816200018a8239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604081815260048036101561001557600080fd5b60009260e08435811c9182630e8fd73b146116d35750816314ecf5a81461143e5781632ed48e481461135d578163443c73a7146110a25781636dd55c0b14610ada578163715018a614610a925781638da5cb5b14610a69578163a306dfd5146109ad578163e4e802e8146102bf57508063ea881c18146101515763f2fde38b1461009e57600080fd5b3461014d57602036600319011261014d576100b761195a565b906100c0611bb8565b6001600160a01b039182169283156100fb57505082546001600160a01b0319811683178455166000805160206128e18339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b509190346102bb57806003193601126102bb576001600160a01b03928361017661195a565b169082519063de40657760e01b825260209586838381875afa928315610282578790879461028c575b5085516377607a1760e11b815293948490849082905afa9283156102825790879392918793610249575b50906064918651958694859363442c159960e01b85528401526024356024840152886044840152165afa92831561023e578093610209575b505051908152f35b909192508382813d8311610237575b6102228183611c5c565b81010312610234575051903880610201565b80fd5b503d610218565b8251903d90823e3d90fd5b809293508491943d831161027b575b6102628183611c5c565b810103126102775751869290919060646101c9565b8580fd5b503d610258565b85513d88823e3d90fd5b8394506102ae90823d84116102b4575b6102a68183611c5c565b810190611c96565b9361019f565b503d61029c565b5080fd5b849291503461014d576102d136611975565b9190936102dd83611c7f565b946102ea88519687611c5c565b8386526020938487019060051b8201913683116109a95797959497905b8282106109825750505084519161031d83611c7f565b9561032a89519788611c5c565b838752601f1961033985611c7f565b01865b8181106108cd57505085888a5161035281611c10565b8281520152855b8481106104675750505050508451938085019181865284518093528686019082888560051b890101960194975b8489106103935787870388f35b9091929394958480600192603f198b82030187528951906101a06103c083516101c0808552840190611a5b565b926103d18582015186850190611a1d565b878101516060908185015281015190878060401b039182815116926080938487015287820151169060a091828701528a8a8060801b03910151169260c093848701528201518b86015281015191610100928386015281015161012090818601528a820151926101409384870152820151610160860152810151610180850152015191015298019401980197919094939294610386565b959794956001600160a01b038061047e8385611e69565b51169061048b8286611f7e565b610495848c611e69565b51528b5163f9557ccb60e01b81528c818881865afa908115610866578c908d9261089d575b508d51916104c783611c10565b6001600160801b0391821683521689820152886104e4858d611e69565b5101528b516370a0823160e01b8152908516868201528781602481855afa908115610722578b91610870575b508b61051c848c611e69565b5101528a51630bbfc09d60e31b8152608080828881865afa91821561086657848c8e9283956107e0575b5060609161055391611e69565b510152610560848c611e69565b5101528a516001620fd9cd60e11b0319815287818781855afa908115610722578b916107b3575b5060a0610594848c611e69565b5101528a5163f42760b760e01b815287818781855afa908115610722578b91610786575b5060c06105c5848c611e69565b5101528a51632a8a011960e11b815287818781855afa908115610722578b91610759575b50886105f5848c611e69565b5101528a51631570aae560e21b815287818781855afa908115610722578b9161072c575b50610100610627848c611e69565b5101528a5163104244dd60e31b815287818781855afa908115610722579188918b8895948e926106e5575b506106608561012092611e69565b5101528c516352f353eb60e01b815293849182905afa80156106db578a906106a6575b61069d9250610140610695838c611e69565b510152611d36565b97959497610359565b50908681813d83116106d4575b6106bd8183611c5c565b810103126106d0579061069d9151610683565b8980fd5b503d6106b3565b8b513d8c823e3d90fd5b9392949550505081813d831161071b575b6107008183611c5c565b81010312610717575185929188918b610660610652565b8a80fd5b503d6106f6565b8c513d8d823e3d90fd5b90508781813d8311610752575b6107438183611c5c565b8101031261071757518c610619565b503d610739565b90508781813d831161077f575b6107708183611c5c565b8101031261071757518c6105e9565b503d610766565b90508781813d83116107ac575b61079d8183611c5c565b8101031261071757518c6105b8565b503d610793565b90508781813d83116107d9575b6107ca8183611c5c565b8101031261071757518c610587565b503d6107c0565b93945050505080823d841161085f575b6107fa8183611c5c565b8101039082821261085b57606080921261085b5760606105538f8e95948d94828a93519661082788611c41565b61083083611e93565b885261083d818401611e93565b9088015261084c818301611cb5565b90870152015195915091610546565b8c80fd5b503d6107f0565b8d513d8e823e3d90fd5b90508781813d8311610896575b6108878183611c5c565b8101031261071757518c610510565b503d61087d565b90506108bf91508d803d106108c6575b6108b78183611c5c565b810190611cc9565b908e6104ba565b503d6108ad565b8a519799969761016081016001600160401b0381118282101761096f578c528791906108f7611d80565b81528c5161090481611c10565b8c81528c84820152838201528b8d8201528c8c81519161092383611c41565b818352818684015282015260608201528b60808201528b60a08201528b60c08201528b8a8201528b6101008201528b6101208201528b61014082015282828c010152019896959861033c565b634e487b7160e01b8c526041875260248cfd5b9597949581356001600160a01b03811681036106d057815294979594908801908801610307565b8880fd5b50503461014d578160031936011261014d57816109c861195a565b84602083516109d681611c10565b8281520152815163020a17bd60e61b815292839182906001600160a01b03165afa908115610a5d579083610a36926020959192610a3d575b50835191610a1b83611c10565b6001600160801b039182168352168482015260243590611d45565b9051908152f35b9050610a569150833d85116108c6576108b78183611c5c565b9038610a0e565b505051903d90823e3d90fd5b505050346102bb57816003193601126102bb57905490516001600160a01b039091168152602090f35b8434610234578060031936011261023457610aab611bb8565b80546001600160a01b03198116825581906001600160a01b03166000805160206128e18339815191528280a380f35b8483853461014d57610aeb36611975565b919093610af783611c7f565b94610b0485519687611c5c565b8386526020938487019060051b8201913683116109a95797959497905b82821061107b57505050845191610b3783611c7f565b95610b4485519788611c5c565b838752601f19610b5385611c7f565b01865b81811061100657505085888651610b6c81611c10565b8281520152855b848110610c465750505050508051938085019181865284518093528086019082818560051b890101960194975b848910610bad5787870388f35b9091929394958480600192603f198b820301875289519061010086610bdb8451610120808652850190611a5b565b938581015186898060401b039182815116828801520151168a85015289810151606090818601528101516080908186015281015160a09081860152888060a01b03908201511660c0908186015281015182850152015191015298019401980197919094939294610ba0565b959794956001600160a01b0380610c5d8385611e69565b5116610c698186611f7e565b610c73848c611e69565b51528851632c9f039d60e21b815289818881855afa908115610eb5578c908d92610fc3575b508a5191610ca583611c10565b6001600160401b039182168352168982015288610cc2858d611e69565b510152885163f791395d60e01b815288818881855afa908115610eb5578c91610f96575b5089610cf2858d611e69565b510152885163358cd68b60e11b815288818881855afa908115610eb5578c91610f69575b506060610d23858d611e69565b510152885163bde39c5d60e01b815288818881855afa908115610eb5578c91610f3c575b506080610d54858d611e69565b510152885163c1ad5c8d60e01b815288818881855afa908115610eb5579189918e868f8f90968c9794610f01575b5090610d8d91611e69565b5101528a51636c3d8b8f60e01b815292839182905afa908115610ef7579082918c91610ebf575b508951631848f2bf60e31b815291169188828881865afa918215610eb55791879493918c8b948f93610e68575b50610dee8660a092611e69565b51019116905289519384809263e6abad4960e01b82525afa8015610e5e578a90610e2d575b610e24925060c0610695838c611e69565b97959497610b73565b50908681813d8311610e57575b610e448183611c5c565b810103126106d05790610e249151610e13565b503d610e3a565b88513d8c823e3d90fd5b939596505092905081813d8311610eae575b610e848183611c5c565b81010312610eaa57918a899260a0610dee87610ea18c9998611ea7565b94925050610de1565b8b80fd5b503d610e7a565b8a513d8e823e3d90fd5b809250898092503d8311610ef0575b610ed88183611c5c565b8101031261071757610eea8291611ea7565b8d610db4565b503d610ece565b89513d8d823e3d90fd5b959496505050505081813d8311610f35575b610f1d8183611c5c565b81010312610eaa5751869189918e868e610d8d610d82565b503d610f13565b90508881813d8311610f62575b610f538183611c5c565b81010312610eaa57518d610d47565b503d610f49565b90508881813d8311610f8f575b610f808183611c5c565b81010312610eaa57518d610d16565b503d610f76565b90508881813d8311610fbc575b610fad8183611c5c565b81010312610eaa57518d610ce6565b503d610fa3565b8092508b8092503d8311610fff575b610fdc8183611c5c565b81010312610eaa57610ff889610ff183611e93565b9201611e93565b908e610c98565b503d610fd2565b86519799969761010081016001600160401b0381118282101761096f578952879190611030611d80565b8152895161103d81611c10565b8c81528c84820152838201528b8a8201528b60608201528b60808201528b60a08201528b60c08201528b8d82015282828c0101520198969598610b56565b9597949581356001600160a01b03811681036106d057815294979594908801908801610b21565b828585346102bb5760803660031901126102bb576110be61195a565b928151936110cb85611c10565b8385526020948501849052825163020a17bd60e61b81526001600160a01b0391821692909184838381875afa928315610282578690879461133b575b5085519361111485611c10565b6001600160801b0391821685521687840152845163de40657760e01b81529287848481885afa938415611299578794611318575b506111629061115d6044359160243590611d45565b611ced565b8551633ba0b9a960e01b815288818581895afa9081156112df5788916112e9575b5061118d91611ced565b855163bb4cfe3b60e01b815288818581895afa9081156112df579189918594938a916112a3575b50906111c66111cc9260643590611ced565b90611d16565b958751948580926377607a1760e11b82525afa9283156112995790889392918893611261575b50606492939487519687958694638eb22cdd60e01b86528501526024840152886044840152165afa92831561023e57809361122f57505051908152f35b909192508382813d831161125a575b6112488183611c5c565b81010312610234575051908380610201565b503d61123e565b848193959294503d8311611292575b61127a8183611c5c565b8101031261128e57518792909160646111f2565b8680fd5b503d611270565b86513d89823e3d90fd5b9280929495508391503d83116112d8575b6112be8183611c5c565b810103126112d4575183929189916111c66111b4565b8780fd5b503d6112b4565b87513d8a823e3d90fd5b90508881813d8311611311575b6113008183611c5c565b810103126112d4575161118d611183565b503d6112f6565b61116291945061133490893d8b116102b4576102a68183611c5c565b9390611148565b9050611355919350853d87116108c6576108b78183611c5c565b929088611107565b50503461014d578160031936011261014d5761137761195a565b908260243592856020835161138b81611c10565b8281520152815163020a17bd60e61b815292839182906001600160a01b03165afa9081156114315784602095918193611410575b508451926113cc84611c10565b6001600160801b0392831680855290831687850181905291506113f457505050905b51908152f35b6114019061140a94611ced565b91511690611d16565b906113ee565b90925061142a9150843d86116108c6576108b78183611c5c565b91386113bf565b50505051903d90823e3d90fd5b828585346102bb57806003193601126102bb576001600160a01b03928361146361195a565b1682519163f9557ccb60e01b835283838281855afa80156116c957859386916116a6575b50845163020a17bd60e61b815285818481875afa908115611299578791611688575b50855163de40657760e01b81526020989089818681895afa90811561167e578991611661575b50169486519063226f120560e11b918281528a8187818a5afa90811561162a578a91611634575b508851638eb22cdd60e01b8152868101919091526001600160801b039384166024820152600160448201528a816064818b5afa90811561162a5790848c928c926115f6575b50611547929316611d73565b918589518098819382525afa9485156112df579089959493929189956115bc575b50916115859161157d60649594602435611ced565b911690611d16565b948651958694859363442c159960e01b855284015260248301528760448301525afa92831561023e57809361122f57505051908152f35b8092939495508691963d83116115ef575b6115d78183611c5c565b810103126112d4575188949093929190611585611568565b503d6115cd565b928092508391503d8311611623575b61160f8183611c5c565b810103126106d057518a908461154761153b565b503d611605565b89513d8c823e3d90fd5b90508a81813d831161165a575b61164b8183611c5c565b810103126106d057518b6114f6565b503d611641565b61167891508a3d8c116102b4576102a68183611c5c565b8a6114cf565b88513d8b823e3d90fd5b61169f9150863d88116108c6576108b78183611c5c565b50886114a9565b90506116c0919350843d86116108c6576108b78183611c5c565b92909287611487565b84513d87823e3d90fd5b848487346102345782600319360112610234576001600160a01b03806116f761195a565b63f9557ccb60e01b8752169484818581895afa9081156119505783908492611930575b50855163020a17bd60e61b815292868487818b5afa93841561186d578594611910575b5086519063226f120560e11b825260209889838981845afa9283156118d45788918b9189956118de575b508a5163de40657760e01b815292839182905afa9081156118d45787916118b7575b501695875196638eb22cdd60e01b9081895283838a015260243560248a01528760448a01528a89606481845afa9889156118ad57908b939291899a611877575b508a51918252918101939093526001600160801b03958616602484015260016044840152829060649082905afa90811561186d5784908692611837575b506118119216611d73565b925082611822575050509051908152f35b926118329161140a941690611ced565b611d16565b809250898092503d8311611866575b6118508183611c5c565b81010312611862575183611811611806565b8480fd5b503d611846565b87513d87823e3d90fd5b8481939495929b503d83116118a6575b6118918183611c5c565b810103126112d45751978a92919060646117c9565b503d611887565b8a513d8a823e3d90fd5b6118ce91508a3d8c116102b4576102a68183611c5c565b8a611789565b89513d89823e3d90fd5b9250935081813d8311611909575b6118f68183611c5c565b8101031261128e5789889151938c611767565b503d6118ec565b611928919450873d89116108c6576108b78183611c5c565b50928861173d565b90506119499150853d87116108c6576108b78183611c5c565b908761171a565b85513d85823e3d90fd5b600435906001600160a01b038216820361197057565b600080fd5b6040600319820112611970576004356001600160a01b038116810361197057916001600160401b03916024359083821161197057806023830112156119705781600401359384116119705760248460051b83010111611970576024019190565b60005b8381106119e85750506000910152565b81810151838201526020016119d8565b90602091611a11815180928185528580860191016119d5565b601f01601f1916010190565b80516001600160801b03908116835260209182015116910152565b906005821015611a455752565b634e487b7160e01b600052602160045260246000fd5b9061036060018060a01b03928381511683526020810151602084015283604082015116604084015260608101516060840152836080820151166080840152611ab260a08201516103808060a08701528501906119f8565b9360c082015160c085015260e082015160e0850152611ada6101008084015190860190611a1d565b8080806101208501516101409081890152850151610160908189015285015161018090818901528501516101a090818901528501516101c090818901528501516101e09081890152850151610200908189015285015161022090818901528501516102409081890152850151611b5661026091828a0190611a38565b850151166102809081880152840151166102a090818701528301516102c09081870152830151611b8c6102e09182880190611a38565b830151166103009081860152820151166103209081850152810151906103409182850152015191015290565b6000546001600160a01b03163303611bcc57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b604081019081106001600160401b03821117611c2b57604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b03821117611c2b57604052565b601f909101601f19168101906001600160401b03821190821017611c2b57604052565b6001600160401b038111611c2b5760051b60200190565b9081602091031261197057516001600160a01b03811681036119705790565b51906001600160801b038216820361197057565b919082604091031261197057611cea6020611ce384611cb5565b9301611cb5565b90565b81810292918115918404141715611d0057565b634e487b7160e01b600052601160045260246000fd5b8115611d20570490565b634e487b7160e01b600052601260045260246000fd5b6000198114611d005760010190565b60208101805190916001600160801b03918216611d625750505090565b611cea938261140192511690611ced565b91908201809211611d0057565b6040519061036082016001600160401b03811183821017611c2b5760405281610340600091828152826020820152826040820152826060820152826080820152606060a08201528260c08201528260e0820152604051611ddf81611c10565b83815283602082015261010082015282610120820152826101408201528261016082015282610180820152826101a0820152826101c0820152826101e08201528261020082015282610220820152826102408201528261026082015282610280820152826102a0820152826102c0820152826102e082015282610300820152826103208201520152565b8051821015611e7d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b51906001600160401b038216820361197057565b51906001600160a01b038216820361197057565b6020818303126119705780516001600160401b039182821161197057019082601f83011215611970578151908111611c2b5760405192611f05601f8301601f191660200185611c5c565b8184526020828401011161197057611cea91602080850191016119d5565b9190826040910312611970576020825192015190565b919082608091031261197057815160058110156119705791611f5d60208201611ea7565b916060611f6c60408401611ea7565b92015190565b6005821015611a455752565b919091611f89611d80565b50604090815193611f9985611c10565b60009485815285602080920152611fae611d80565b845163d8dfeb4560e01b815290946001600160a01b0393841694909160049190848184818a5afa90811561289e579086918b916128a8575b5016875282516338d52e0f60e01b8152848184818a5afa90811561289e579086918b91612866575b5016838801528251936307dc0d1d60e41b808652818685818b5afa9586156125d3578b9661282f575b508660809616868a015284516374645ff360e01b908181528c8187818d5afa9081156126ca578d91612815575b5060a08b0152855163473e3ce760e01b8152838187818d5afa9081156126ca578d916127e8575b5060c08b01528551631c9e379b60e01b81529388168585018190526024948d90858188818f5afa9182156126f157916127b7575b5060e08c0152865163020a17bd60e61b81528d888289818f5afa9182156127ab57819261278b575b508851916120f483611c10565b6001600160801b03918216835216858201526101008c015286516324720b1f60e11b815286810191909152838186818d5afa9081156126ca578d9161275e575b506101208b01528551633ba0b9a960e01b8152838187818d5afa9081156126ca578d91612731575b506101408b015285518281528c90848188818e5afa90811561250f5782916126fc575b508751838152828189818f5afa9283156126f157916121c69391838b94936126d4575b5050868c8a85519687958694859363eeb8a8d360e01b85528401528c8301906119f8565b0392165afa9081156126ca578d91612691575b506101808b01528551918252828286818c5afa9182156124e6578c9261265a575b5085519081528b8186818c5afa908c82156124ac5792849261224192858c9692612637575b50508851948580948193630d39bbef60e41b8352878c8401528a8301906119f8565b0392165afa9081156125d3578b9161260a575b5061016089015283516340626d8b60e01b8152818185818b5afa9081156125d3578b916125dd575b506101a0890152835163226f120560e11b815290808285818b5afa9182156125d3578b926125a4575b506060890191825284516377607a1760e11b81529781898681845afa9889156124e6578c99612575575b50898201988952855163bb4cfe3b60e01b815282818781855afa908d821561256a5791879391859391612536575b506103408d0152875163de40657760e01b815292839182905afa9182156124e657908892918d92612519575b5050169680518b84878b81519283809263092ada2b60e31b978883528c8301525afa90811561250f5782916124f0575b506101e08c01526101c08b01528251865191825285820152858185818c5afa80156124e6578c918d916124b7575b506102208b01526102008a015251908451630cf35bdd60e41b9283825285820152868185818c5afa908c82156124ac5791896123f1928d858c9a99989796948193829161247e575b506102809185916102a085015216910152166102608d01526102408c01611f72565b51978551988994859384528301525afa908115612475575095611cea94959681948293839261243c575b50506103208701528216610300860152166102e08401526102c08301611f72565b915091508394506124629250803d1061246e575b61245a8183611c5c565b810190611f39565b9092949192913861241b565b503d612450565b513d88823e3d90fd5b9050849550610280935061249f91508b3d8d1161246e5761245a8183611c5c565b92965090939091906123cf565b8751903d90823e3d90fd5b90506124d99150863d88116124df575b6124d18183611c5c565b810190611f23565b38612387565b503d6124c7565b86513d8e823e3d90fd5b90506125099150873d89116124df576124d18183611c5c565b38612359565b88513d84823e3d90fd5b61252f9250803d106102b4576102a68183611c5c565b3880612329565b92809294508391503d8311612563575b6125508183611c5c565b8101031261085b578591839151386122fd565b503d612546565b8851903d90823e3d90fd5b9098508181813d831161259d575b61258d8183611c5c565b81010312610eaa575197386122cf565b503d612583565b9080925081813d83116125cc575b6125bc8183611c5c565b81010312610717575190386122a5565b503d6125b2565b85513d8d823e3d90fd5b90508181813d8311612603575b6125f48183611c5c565b8101031261071757513861227c565b503d6125ea565b90508181813d8311612630575b6126218183611c5c565b81010312610717575138612254565b503d612617565b61265392503d8091833e61264b8183611c5c565b810190611ebb565b388f61221f565b9091508281813d831161268a575b6126728183611c5c565b81010312610eaa5761268390611ea7565b90386121fa565b503d612668565b90508681813d83116126c3575b6126a88183611c5c565b8101031261085b5780518015150361085b57830151386121d9565b503d61269e565b87513d8f823e3d90fd5b6126e99293503d8091833e61264b8183611c5c565b908f806121a2565b8951903d90823e3d90fd5b90508481813d831161272a575b6127138183611c5c565b810103126102bb5761272490611ea7565b3861217f565b503d612709565b90508381813d8311612757575b6127488183611c5c565b8101031261085b57513861215c565b503d61273e565b90508381813d8311612784575b6127758183611c5c565b8101031261085b575138612134565b503d61276b565b90506127a49150883d8a116108c6576108b78183611c5c565b90386120e7565b508851903d90823e3d90fd5b90508481813d83116127e1575b6127ce8183611c5c565b810103126127dd5751386120bf565b8d80fd5b503d6127c4565b90508381813d831161280e575b6127ff8183611c5c565b8101031261085b57513861208b565b503d6127f5565b61282991503d808f833e61264b8183611c5c565b38612064565b9095508181813d831161285f575b6128478183611c5c565b810103126107175761285890611ea7565b9438612037565b503d61283d565b809250868092503d8311612897575b61287f8183611c5c565b810103126106d0576128918691611ea7565b3861200e565b503d612875565b84513d8c823e3d90fd5b809250868092503d83116128d9575b6128c18183611c5c565b810103126106d0576128d38691611ea7565b38611fe6565b503d6128b756fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212208b725fd66399e6668db993c62b71cbe1e6f0ed711d303f7a125c9ef0ac68e9a764736f6c63430008120033";

type MagnetarHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarHelper__factory extends ContractFactory {
  constructor(...args: MagnetarHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarHelper";
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarHelper> {
    return super.deploy(_owner, overrides || {}) as Promise<MagnetarHelper>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): MagnetarHelper {
    return super.attach(address) as MagnetarHelper;
  }
  override connect(signer: Signer): MagnetarHelper__factory {
    return super.connect(signer) as MagnetarHelper__factory;
  }
  static readonly contractName: "MagnetarHelper";

  public readonly contractName: "MagnetarHelper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarHelperInterface {
    return new utils.Interface(_abi) as MagnetarHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarHelper {
    return new Contract(address, _abi, signerOrProvider) as MagnetarHelper;
  }
}
