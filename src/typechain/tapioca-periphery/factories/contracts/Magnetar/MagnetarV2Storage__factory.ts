/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MagnetarV2Storage,
  MagnetarV2StorageInterface,
} from "../../../contracts/Magnetar/MagnetarV2Storage";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum MagnetarV2Storage.Module",
        name: "module",
        type: "uint8",
      },
    ],
    name: "ModuleNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedCaller",
        type: "address",
      },
    ],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "TargetNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownReason",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ICluster",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract ICluster",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    inputs: [],
    name: "MAGNETAR_ACTION_MARKET",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGNETAR_ACTION_MARKET_MODULE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGNETAR_ACTION_PERMIT",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGNETAR_ACTION_TAP_TOKEN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGNETAR_ACTION_TOFT",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGNETAR_ACTION_YIELDBOX_MODULE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum MagnetarV2Storage.Module",
        name: "moduleId",
        type: "uint8",
      },
    ],
    name: "modules",
    outputs: [
      {
        internalType: "address",
        name: "moduleAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103f5806100206000396000f3fe60806040526004361061009a5760003560e01c80637942a57711610069578063c602d2391161004e578063c602d239146101ee578063dbd01de114610203578063e22755211461023057600080fd5b80637942a57714610171578063c2aeb7bd1461018657600080fd5b8063137cf3de146100a6578063150b7a02146100d25780631557bb461461014757806362675f8e1461015c57600080fd5b366100a157005b600080fd5b3480156100b257600080fd5b506100bb600181565b60405160ff90911681526020015b60405180910390f35b3480156100de57600080fd5b506101166100ed36600461029d565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100c9565b34801561015357600080fd5b506100bb600581565b34801561016857600080fd5b506100bb600281565b34801561017d57600080fd5b506100bb600081565b34801561019257600080fd5b506101c96101a1366004610397565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100c9565b3480156101fa57600080fd5b506100bb600381565b34801561020f57600080fd5b506000546101c99073ffffffffffffffffffffffffffffffffffffffff1681565b34801561023c57600080fd5b506100bb600481565b803573ffffffffffffffffffffffffffffffffffffffff8116811461026957600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156102b357600080fd5b6102bc85610245565b93506102ca60208601610245565b925060408501359150606085013567ffffffffffffffff808211156102ee57600080fd5b818701915087601f83011261030257600080fd5b8135818111156103145761031461026e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561035a5761035a61026e565b816040528281528a602084870101111561037357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000602082840312156103a957600080fd5b8135600381106103b857600080fd5b939250505056fea264697066735822122000295204774f8ab3c10164d9d885160d7414b0c5bc6daa2352d46aa89f34035b64736f6c63430008160033";

type MagnetarV2StorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2StorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2Storage__factory extends ContractFactory {
  constructor(...args: MagnetarV2StorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2Storage";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2Storage> {
    return super.deploy(overrides || {}) as Promise<MagnetarV2Storage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MagnetarV2Storage {
    return super.attach(address) as MagnetarV2Storage;
  }
  override connect(signer: Signer): MagnetarV2Storage__factory {
    return super.connect(signer) as MagnetarV2Storage__factory;
  }
  static readonly contractName: "MagnetarV2Storage";

  public readonly contractName: "MagnetarV2Storage";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2StorageInterface {
    return new utils.Interface(_abi) as MagnetarV2StorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2Storage {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2Storage;
  }
}
