/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MagnetarV2,
  MagnetarV2Interface,
} from "../../../contracts/Magnetar/MagnetarV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_marketModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newHelper",
        type: "address",
      },
    ],
    name: "HelperUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "burst",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "helper",
    outputs: [
      {
        internalType: "contract IMagnetarHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketModule",
    outputs: [
      {
        internalType: "contract MagnetarMarketModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_helper",
        type: "address",
      },
    ],
    name: "setHelper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346200016357601f6200427738819003918201601f19168301916001600160401b03831184841017620001685780849260609460405283398101031262000163576200004d816200017e565b60406200005d602084016200017e565b9201516001600160a01b0380821693918490036200016357620000803362000193565b8060018060a01b03199316836001541617600155338160005416036200011f57811615620000cb57620000b39062000193565b600254161760025560405161409c9081620001db8239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016357565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063013546e11461010b5780630f164bf414610106578063150b7a021461010157806363b0e66a146100fc578063715018a6146100f7578063832bfe30146100f25780638da5cb5b146100ed5780639391dd6d146100e8578063986ccc7f146100e3578063b25ea8fb146100de578063cfd8b3d8146100d9578063dbd01de1146100d4578063de576147146100cf578063e5546fac146100ca5763f2fde38b0361000e57611c16565b611ade565b6119fa565b6119ba565b611991565b61190c565b61189f565b611727565b6116b6565b6115f3565b6115a7565b61157e565b61150d565b611229565b6101cf565b60005b8381106101235750506000910152565b8181015183820152602001610113565b9060209161014c81518092818552858086019101610110565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b8401019601946000925b85841061018d575050505050505090565b9091929394959685806101be600193603f1986820301885286838d5180511515845201519181858201520190610133565b99019401940192959493919061017c565b602080600319360112610414576001600160401b03600480358281116104145736602382011215610414578082013592831161041457602493848201918536918660051b0101116104145792849160009461022983611d3a565b9486935b8085106102535761024f876102438a3414613a0e565b60405191829182610158565b0390f35b909192939496610264868387611ddb565b956060968781019261027c61027885611e02565b1590565b611178575b604087610292828501358094611ee6565b9a8d6001806102aa6102a389611ef3565b61ffff1690565b036102f9575050508392506102e29150946102da6102cf6102ed976102e896016122f0565b936080810190611e0c565b929091611e02565b92613dbd565b611db1565b9392919096949661022d565b8a61ffff6002816103098b611ef3565b16036103375750505050508392506103319150946102da6102cf6102ed976102e896016122f0565b92613c9c565b9091929394959796995061012c8161034e89611ef3565b160361041957505050505061039e61039e6103a39261038561037d6103766080880188611e0c565b8091611efd565b8101906137fa565b9461039861039387516111b8565b613fe4565b016122f0565b6111b8565b826103b0898401516111b8565b92015191813b15610414576103dc9560009451809781958294630c46aac760e31b8452338d8501613853565b03925af191821561040f576102ed926103f6575b50611db1565b806104036104099261130a565b80611566565b896103f0565b612565565b600080fd5b61012d8161042a89989c9799611ef3565b16036104a0575050505061039892509061039e9161047561039e61045f6104576103766080870187611e0c565b810190613915565b9893600180929e9499939b9260a01b0316613fe4565b92833b15610414576103dc8a9160009751998a978896879563695ef6bf60e01b8752339087016139b6565b6064816104ac88611ef3565b16036105f45750915050849392915060006104f361039e61039e8a6080966103986103936104ea6104e26103768c860186611e0c565b8101906138d6565b9e8f01516111b8565b92610554895191610506888c01516111b8565b968b01519a01518751634d4d7cbd60e11b81529485019283523360208401526001600160a01b0390961660408301526060820199909952608081019490945290968793849291839160a00190565b03925af1801561040f576102ed9360009081926105bc575b5091518781019283526020830191909152906105969082906040015b03601f1981018352826113e0565b61059e611403565b6001815290868201526105b1828a613707565b526103f08189613707565b610596925061058891506105e590843d86116105ed575b6105dd81836113e0565b81019061383d565b92509061056c565b503d6105d3565b60c881610603889c9798611ef3565b16036106ce57505050505050608061064361039e61039e8a61063561062d610376878c018c611e0c565b810190613875565b986103986103938b516111b8565b90610650898701516111b8565b9061065d85880151151590565b9387015196015193823b1561041457516374d2492960e11b815233818a019081526001600160a01b03909216602083015292151560408201526060810195909552608085019290925292600091849182908490829060a00103925af191821561040f576102ed926103f65750611db1565b60c9816106df8c9996979899611ef3565b160361079d5750505050508291509361070e61039e61039e61073d9761038561037d6103766080880188611e0c565b8261071b8a8401516111b8565b92015191600084518098819582946314890dcb60e21b84528d33908501613853565b03925af1801561040f576102ed936000908192610775575b509151878101928352602083019190915290610596908290604001610588565b6105969250610588915061079590843d86116105ed576105dd81836113e0565b925090610755565b6066816107ad8c9798999c611ef3565b160361081e5750505050916105886102ed96610819936107e36107db6103768860806103f09b9a0190611e0c565b81019061371b565b9d5163de57614760e01b9c81019c909c529a9c8d9b9098909791969295939493926001600160a01b039081169216908c01613798565b613e8e565b60cb8161082e8798969c97611ef3565b16036108fc57505050505061085e61039e61039e846103856108566103766080880188611e0c565b810190613686565b61086a838301516111b8565b9561087785840151151590565b9201519560008961089d8751998a9687958694630cb0f5b760e31b8652339086016136dd565b03925af192831561040f576102ed9361058892610596926000926108cd575b505188810191825292839160200190565b6108ee919250893d8b116108f5575b6108e681836113e0565b810190612c9b565b908d6108bc565b503d6108dc565b60cc8161090888611ef3565b160361096f57505050505061093061039e61039e846103856108566103766080880188611e0c565b61093c838301516111b8565b9561094985840151151590565b9201519560008961089d8751998a968795869463cd0211eb60e01b8652339086016136dd565b61012f8161097f889c9798611ef3565b16036109fe575050505050906109d061039e9261039e946109b16109a961037660808b018b611e0c565b810190613557565b95979699939b929c919a90949e61039860018060a01b03809c16613fe4565b96873b15610414576000998e996103dc95519d8e9b8c9a8b99630cdc41b960e11b8b52169033908a016135f6565b61013081610a0b8c611ef3565b1603610a8d5750505050509084610a5c9261039e610a3d610a35610376608061039e9b0186611e0c565b810190613398565b959c969b9397929e919a90949961039860018060a01b03809e16613fe4565b96873b15610414578d9b60009a8a986103dc96519e8f9c8d9b8c9a623f241960e81b8c521693169033908a01613438565b61013181610a9d8c999799611ef3565b1603610b24575050505050608094610acf61039e61039e8b610385610ac76103768c880188611e0c565b810190613232565b91610adc8a8301516111b8565b9160a0610af587830151968301519983015161ffff1690565b91015195843b15610414576000968b926103dc92519a8b9889978896630fb6ba5960e01b8852339088016132bd565b61013281610b368c989996979c611ef3565b1603610bb157505050505061039e9461039e9282610b68610b606103766080610b84970184611e0c565b810190613187565b989399929c919497909561039860018060a01b03809a16613fe4565b94853b15610414578b6103dc92600099519b8c998a98899763076cf20360e11b89521693339088016131c7565b60cd81610bc2889a9996979a611ef3565b1603610c395750505050946105886103f09493610819936102ed98610bfa610bf261037660809485810190611e0c565b810190612ff5565b91610c0583516111b8565b91868401518585015191850151928501519360c060a087015196015196519a8b996339551beb60e21b908b01528901613110565b60ce81610c4c8897949596999a98611ef3565b1603610cb35750505050946105886103f0949361081993610c82610c7a6103768b60806102ed9d0190611e0c565b810190612ea4565b9b516323ca9c7d60e01b9a81019a909a52989a8b999096909592946001600160a01b03908116931691508901612ef3565b60cf81610cc1879697611ef3565b1603610d26575050506103f094610d0594610819946102ed9994610cfa610cf2610376876080610588990190611e0c565b810190612e1c565b9391999092546111b8565b945198899763278edea160e11b9089015260018060a01b0316908701612e5e565b909192935060d081610d3786611ef3565b1603610d9f57505050946105886103f0949361081993610d6c610d646103768b60806102ed9d0190611e0c565b810190612d6b565b9b516316e55a1d60e01b9a81019a909a52989a8b999096909591949293926001600160a01b039081169216908a01612dcf565b9092935060d181610db286979497611ef3565b1603610e57575050509161039e91600084610e21610df989610de9610de1610376608061039e9e9c0187611e0c565b810190612cdc565b96939c929f9194959098016122f0565b9751630f74e47960e11b81529b8c998a9889976001600160a01b039081169516908801612d31565b03925af191821561040f576102ed92610e3a5750611db1565b610e5090863d88116108f5576108e681836113e0565b50896103f0565b60d281610e6386611ef3565b1603610ed0575050509161039e91600084610e21610ea861039e610e99610e9161037660808e9c0187611e0c565b810190612c4a565b959394929b919e9097016122f0565b9651632c6dcd7f60e11b81529a8b98899788966001600160a01b039081169416908701612caa565b83975080929450610ee46101909294611ef3565b1603610f4f5750610f1761039e61039e8a610f10610f0861037660808c018c611e0c565b810190612aa4565b98016122f0565b90855190898701519385880151970151833b15610414576103dc8a9160009751998a97889687956318e7fa1960e01b87528601612b88565b60d381610f5e88969598611ef3565b1603610fea57506080610f9261039e61039e8b610f8b610f83610376878b018b611e0c565b8101906128c1565b97016122f0565b91610f9d85516111b8565b918a860151948087015198870151918701519660a08101519060e060c082015191015191873b15610414576000998e956103dc95519d8e9b8c9a8b9963bf2271ab60e01b8b528a01612995565b60d481610ff686611ef3565b16036110755750608061102361039e61039e8b610f8b61101b610376878b018b611e0c565b8101906126c2565b9161102e85516111b8565b918a860151948087015198870151918701519660c060a082015191015190863b15610414576000988d946103dc94519c8d9a8b998a98630b18b9f760e31b8a528901612863565b610133915061108384611ef3565b160361112b576080906110b761039e61039e8a6110b06110a8610376888a018a611e0c565b810190612212565b96016122f0565b906110c284516111b8565b906110cf8a8601516111b8565b936110ea6110e18388015161ffff1690565b988701516111b8565b908601519160a08701519660e060c082015191015190863b156104145760009889958e956103dc95519d8e9b8c9a8b9963254d7d3760e21b8b528a016124f3565b5162461bcd60e51b81526020818701818152601c918101919091527b135859db995d185c958c8e881858dd1a5bdb881b9bdd081d985b1a5960221b604082015281906060010390fd5b0390fd5b6111b36111886080840184611e0c565b604051808b018781529192506111ab916111a6908290602001610588565b611e3e565b901515611eba565b610281565b6001600160a01b031690565b6001600160a01b0381160361041457565b35906111e0826111c4565b565b8015150361041457565b35906111e0826111e2565b60a090604319011261041457604490565b60a0906101431901126104145761014490565b908160a09103126104145790565b60e036600319011261041457600435611241816111c4565b6024359061124e826111c4565b60a43561125a816111e2565b60c435926001600160401b038411610414576112df6108199261128461001996369060040161121b565b906040519586946316e55a1d60e01b602087015260018060a01b0380921660248701521660448501526044356064850152606435608485015260843560a4850152151560c484015261010060e4840152610124830190613a78565b3461010483015203601f1981018352826113e0565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161131d57604052565b6112f4565b604081019081106001600160401b0382111761131d57604052565b606081019081106001600160401b0382111761131d57604052565b60a081019081106001600160401b0382111761131d57604052565b608081019081106001600160401b0382111761131d57604052565b60c081019081106001600160401b0382111761131d57604052565b60e081019081106001600160401b0382111761131d57604052565b6102e081019081106001600160401b0382111761131d57604052565b601f909101601f19168101906001600160401b0382119082101761131d57604052565b604051906111e082611322565b6040519061014082016001600160401b0381118382101761131d57604052565b6040519061016082016001600160401b0381118382101761131d57604052565b6040519061010082016001600160401b0381118382101761131d57604052565b604051906111e0826113a9565b6040519061012082016001600160401b0381118382101761131d57604052565b6001600160401b03811161131d57601f01601f191660200190565b9291926114c48261149d565b916114d260405193846113e0565b829481845281830111610414578281602093846000960137010152565b9080601f830112156104145781602061150a933591016114b8565b90565b34610414576080366003190112610414576115296004356111c4565b6115346024356111c4565b6064356001600160401b038111610414576115539036906004016114ef565b50604051630a85bd0160e11b8152602090f35b600091031261041457565b6001600160a01b03169052565b34610414576000366003190112610414576003546040516001600160a01b039091168152602090f35b34610414576000806003193601126115f0576115c1611ccb565b80546001600160a01b03198116825581906001600160a01b03166000805160206140478339815191528280a380f35b80fd5b60e03660031901126104145760043561160b816111c4565b60243590611618826111c4565b60843591611625836111e2565b60a43590611632826111e2565b60c4356001600160401b03811161041457610019946108199361165c6112df93369060040161121b565b916040519687956323ca9c7d60e01b602088015260018060a01b03809216602488015216604486015260443560648601526064356084860152151560a4850152151560c484015261010060e4840152610124830190613a78565b34610414576000366003190112610414576000546040516001600160a01b039091168152602090f35b606090602319011261041457602490565b60609060e31901126104145760e490565b6060906101e3190112610414576101e490565b6060906102431901126104145761024490565b60031960a0368201126104145760043590611741826111c4565b61174a366116df565b608435929091906001600160401b0384116104145783600401916101c0809186360301126104145761058861188e6100199661187b6108199660018060a01b03966118738860015416976117bc6040519c8d9b8c9563278edea160e11b60208801521660248601526044850190613b66565b60e060a48401526117da61010484016117d4866111ec565b15159052565b6118616101246024880135818601526118026117f860448a016111ec565b1515610144870152565b606488013561016486015261185961181c60848a016111ec565b9161182e610184938489019015159052565b6102246101a49760a48c0135898201526118508c60c46101c484019101613b30565b01908a01613b30565b870185613ba9565b906102848b01526102c48a0190613a78565b930190613ba9565b85820361010319016102a4870152613a78565b913460c485015260e4840190611571565b34610414576020366003190112610414576004356118bc816111c4565b6118c4611ccb565b6003546001600160a01b0391821691829082167f8ec9146610f1f9324ffc354c9f4db61b885844583cba310f2b9488f967d74e2f600080a36001600160a01b03191617600355005b3461041457604036600319011261041457602435611929816111c4565b611931611ccb565b60008080808094600435905af1611946613bbd565b501561194f5780f35b60405162461bcd60e51b815260206004820152601a60248201527926b0b3b732ba30b91d103a3930b739b332b9103330b4b632b21760311b6044820152606490fd5b34610414576000366003190112610414576002546040516001600160a01b039091168152602090f35b34610414576000366003190112610414576001546040516001600160a01b039091168152602090f35b61ffff81160361041457565b35906111e0826119e3565b6101208060031936011261041457600435611a14816111c4565b602435611a20816111c4565b60643591611a2d836119e3565b60c435916001600160401b0383116104145761001994611abf611a576108199536906004016114ef565b60e43592611a64846111c4565b61ffff60405198899763de57614760e01b60208a015260018060a01b03978880921660248b0152166044890152604435606489015216608487015260843560a487015260a43560c487015260e4860152610144850190610133565b916101049116818401523561012483015203601f1981018352826113e0565b6102a036600319011261041457610019600435611afa816111c4565b611c08611b06366111f7565b91611bfd611b13366116f0565b916080611b1f36611208565b611b2836611701565b92611b95611b3536611714565b96611b8a6040519a6339551beb60e21b60208d015260018060a01b0380951660248d015260243560448d01528035611b6c816111e2565b151560648d0152602081013560848d0152604060a48d019101613b01565b6101048a0190613b01565b8135611ba0816111e2565b15156101648901526020820135611bb6816111c4565b16610184880152600180831b0380611bd060408401612f7b565b166101a4890152611be360608301612f7b565b166101c488015201356101e4860152610204850190613b30565b610264830190613b66565b6102a48152610819816113c4565b3461041457602036600319011261041457600435611c33816111c4565b611c3b611ccb565b6001600160a01b039081168015611c7757600080546001600160a01b03198116831782559092166000805160206140478339815191528380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6000546001600160a01b03163303611cdf57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b03811161131d5760051b60200190565b90611d4482611d23565b6040611d52815192836113e0565b8382528193611d63601f1991611d23565b0191600091825b848110611d78575050505050565b6020908251611d8681611322565b85815282606081830152828601015201611d6a565b634e487b7160e01b600052601160045260246000fd5b6000198114611dc05760010190565b611d9b565b634e487b7160e01b600052603260045260246000fd5b9190811015611dfd5760051b81013590609e1981360301821215610414570190565b611dc5565b3561150a816111e2565b903590601e198136030182121561041457018035906001600160401b0382116104145760200191813603831361041457565b906111e0604e60405180947f4d61676e6574617256323a204d697373696e672063616c6c20666f722061637460208301526d0d2dedc40eed2e8d040d2dcc8caf60931b6040830152611e998151809260208686019101610110565b810103602e8101855201836113e0565b90602061150a928181520190610133565b15611ec25750565b60405162461bcd60e51b815260206004820152908190611174906024830190610133565b91908201809211611dc057565b3561150a816119e3565b909291928360041161041457831161041457600401916003190190565b919082606091031261041457604051611f328161133d565b60408082948035611f42816111c4565b84526020810135611f52816111c4565b6020850152013591611f63836111c4565b0152565b919082606091031261041457604051611f7f8161133d565b60408082948035611f8f816111e2565b84526020810135611f9f816111c4565b60208501520135910152565b919060a0838203126104145760405190611fc482611358565b81938035611fd1816111e2565b8352602081013560208401526040810135611feb816111e2565b60408401526060810135611ffe816119e3565b60608401526080810135916001600160401b0383116104145760809261202492016114ef565b910152565b91906101c0838203126104145761203e611410565b92612048816111ec565b845260208101356020850152612060604082016111ec565b60408501526060810135606085015261207b608082016111ec565b608085015260a081013560a08501526120978260c08301611f67565b60c0850152610120916120ac81848401611f67565b60e08601526001600160401b0361018083013581811161041457826120d2918501611fab565b6101008701526101a0830135908111610414576120ef9201611fab565b90830152565b359060ff8216820361041457565b81601f820112156104145780359061211a82611d23565b9260409061212a825195866113e0565b838552602091828601918361016080970286010194818611610414578401925b85841061215b575050505050505090565b86848303126104145784879161216f611430565b612178876111ec565b81526121858388016111ec565b838201526121948688016111d5565b8682015260606121a58189016111ec565b9082015260806121b68189016111d5565b9082015260a06121c78189016111d5565b9082015260c0808801359082015260e080880135908201526101006121ed8189016120f5565b908201526101208088013590820152610140808801359082015281520193019261214a565b90602082820312610414576001600160401b03918035908382116104145701906101408282031261041457612245611450565b9261224f836111d5565b845261225d602084016111d5565b602085015261226e604084016119ef565b604085015261227f606084016111d5565b60608501526080830135818111610414578261229c9185016114ef565b60808501526122ae8260a08501611f1a565b60a085015261010083013581811161041457826122cc918501612029565b60c0850152610120830135908111610414576122e89201612103565b60e082015290565b3561150a816111c4565b80516001600160a01b03908116835260208083015182169084015260409182015116910152565b8051151582526020808201516001600160a01b031690830152604090810151910152565b9060a0608061150a938051151584526020810151602085015260408101511515604085015261ffff60608201511660608501520151918160808201520190610133565b80511515825261150a91602082015160208201526123af6040830151604083019015159052565b606082015160608201526123cc6080830151608083019015159052565b60a082015160a08201526123e860c083015160c0830190612321565b60e08201516123fd6101209182840190612321565b6124186101008401516101c080610180860152840190612345565b920151906101a0818403910152612345565b90815180825260208080930193019160005b82811061244a575050505090565b9091929382610160600192875161246382825115159052565b8084015115158285015261247f60408083015190840190611571565b60608181015115159083015261249d60808083015190840190611571565b6124af60a08083015190840190611571565b60c0818101519083015260e080820151908301526101008082015160ff1690830152610120818101519083015261014090810151908201520195019392910161243c565b9692948761150a99979561ffff6125569861253d956125489760018060a01b03958680931690521660208d01521660408b01521660608901526101408060808a0152880190610133565b9260a08701906122fa565b848203610100860152612388565b9161012081840391015261242a565b6040513d6000823e3d90fd5b9190606083820312610414576040519061258a8261133d565b81938035612597816111c4565b8352602081810135908401526040810135916001600160401b0383116104145760409261202492016114ef565b91909160e081840312610414576125d9611470565b92813584526125ea602083016119ef565b60208501526125fb604083016119ef565b604085015261260c606083016111d5565b60608501526001600160401b0391608081013583811161041457826126329183016114ef565b608086015260a08101359283116104145761265460c09261265f9483016114ef565b60a0860152016111d5565b60c0830152565b91908260809103126104145760405161267e81611373565b6060808294803561268e816111c4565b8452602081013561269e816111c4565b602085015260408101356126b1816111c4565b6040850152013591611f63836111c4565b90602082820312610414576001600160401b039180359083821161041457019061014082820312610414576126f5611470565b926126ff836111d5565b84526020830135602085015260408301358181116104145782612723918501612571565b6040850152606083013581811161041457826127409185016125c4565b60608501526127528260808501612666565b608085015261010083013581811161041457826127709185016114ef565b60a08501526101208301359081116104145761278c9201612103565b60c082015290565b906060604061150a9360018060a01b038151168452602081015160208501520151918160408201520190610133565b908151815261ffff806020840151166020830152604083015116604082015260c060018060a01b0380606085015116606084015281612826612814608087015160e0608088015260e0870190610133565b60a087015186820360a0880152610133565b9401511691015290565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b95916125569461289a61150a9997956128a8936128b39560018060a01b03168b5260208b01526101408060408c01528a0190612794565b9088820360608a01526127c3565b926080870190612830565b848203610100860152610133565b90602082820312610414576001600160401b039180359083821161041457019061016082820312610414576128f4611450565b926128fe836111d5565b845260208301356020850152604083013560408501526060830135818111610414578261292c918501612571565b6060850152608083013581811161041457826129499185016125c4565b608085015261295b8260a08501612666565b60a085015261012083013581811161041457826129799185016114ef565b60c0850152610140830135908111610414576122e89201612103565b9692946129d261150a9997956129f9976129eb956129e09560018060a01b03168c5260208c015260408b01526101608060608c01528a0190612794565b9088820360808a01526127c3565b9260a0870190612830565b848203610120860152610133565b9161014081840391015261242a565b919082606091031261041457604051612a208161133d565b60408082948035611f8f816119e3565b91908260c091031261041457604051612a488161138e565b60a08082948035612a58816111e2565b84526020810135612a68816111c4565b60208501526040810135612a7b816119e3565b6040850152606081013560608501526080810135612a98816111c4565b60808501520135910152565b90602082820312610414576001600160401b03918035908382116104145701908181039261020084126104145760c060405194612ae086611373565b1261041457604051612af18161138e565b8335612afc816111c4565b81526020840135612b0c816111c4565b602082015260408401356040820152606084013560608201526080840135612b33816111c4565b608082015260a084013560a08201528452612b518260c08501612a08565b6020850152612b64826101208501612a30565b60408501526101e083013590811161041457612b809201612103565b606082015290565b81516001600160a01b039081168252602080840151821681840152604084810151818501526060808601518186015260808087015185168187015260a09687015187870152875161ffff90811660c088015284890151861660e088015297830151610100870152885115156101208701529288015184166101408601529087015190951661016084015293850151610180830152928401519092166101a0830152909101516101c082015261150a919061020090816101e0820152019061242a565b91909160a081840312610414578035612c62816111c4565b926020820135926040830135926060810135612c7d816111c4565b9260808201356001600160401b0381116104145761150a92016114ef565b90816020910312610414575190565b919360a09361150a9695600180871b038094168552602085015260408401521660608201528160808201520190610133565b9160c083830312610414578235612cf2816111c4565b926020810135926040820135926060830135926080810135612d13816111c4565b9260a08201356001600160401b0381116104145761150a92016114ef565b929360c09461150a9796929360018060a01b0380951686526020860152604085015260608401521660808201528160a08201520190610133565b9060e082820312610414578135612d81816111c4565b926020830135612d90816111c4565b9260408101359260608201359260808301359260a0810135612db1816111e2565b9260c08201356001600160401b0381116104145761150a9201611fab565b98979693909260e09693612e17969360018060a01b038092168c521660208b015260408a015260608901526080880152151560a08701526101008060c0880152860190612345565b930152565b9160a083830312610414578235612e32816111c4565b92612e408360208301611f1a565b9260808201356001600160401b0381116104145761150a9201612029565b6001600160a01b03918216815293959460c09391929091612e9891612e879060208801906122fa565b60e0608087015260e0860190612388565b9560a085015216910152565b9060e082820312610414578135612eba816111c4565b926020830135612ec9816111c4565b926040810135926060820135926080830135612ee4816111e2565b9260a0810135612db1816111e2565b97969592612e17949160e0969360018060a01b038092168b521660208a01526040890152606088015260006080880152151560a08701526101008060c0880152860190612345565b919082606091031261041457604051612f538161133d565b60408082948035612f63816111e2565b845260208101356020850152013591611f63836111e2565b35906001600160801b038216820361041457565b91908260a091031261041457604051612fa781611358565b60808082948035612fb7816111e2565b84526020810135612fc7816111c4565b6020850152612fd860408201612f7b565b6040850152612fe960608201612f7b565b60608501520135910152565b808203916102a083126104145760a060405193613011856113a9565b833561301c816111c4565b855260208401356020860152603f1901126104145761024061278c926040516130448161133d565b6040820135613052816111e2565b81526060820135602082015261306b8460808401612f3b565b604082015260408601526130828360e08301612f3b565b6060860152613095836101408301612f8f565b60808601526130a8836101e08301611f67565b60a086015201611f1a565b604080918051151584526020810151602085015201511515910152565b6080809180511515845260018060a01b036020820151166020850152600180831b0380604083015116604086015260608201511660608501520151910152565b926111e0969198979561316a61024096613160604061317595613180986102a08b019f60018060a01b03168b5260208b015280511515828b0152602081015160608b0152015160808901906130b3565b60e08701906130b3565b6101408501906130d0565b6101e0830190612321565b01906122fa565b9160c08383031261041457823561319d816111c4565b9260208101359260408201359260608301356131b8816119e3565b926080810135612d13816111c4565b9260c09461ffff9161150a9897939460018060a01b038096168752602087015260408601521660608401521660808201528160a08201520190610133565b91908260409103126104145760405161321d81611322565b602080829480358452013591611f63836111c4565b9060e0828203126104145761329d9060a0604051936132508561138e565b803561325b816111c4565b8552602081013561326b816111c4565b602086015260408101356040860152606081013560608601526080810135613292816119e3565b608086015201613205565b60a082015290565b805182526020908101516001600160a01b0316910152565b6001600160a01b039182168152911660208201526040810191909152606081019190915261ffff909116608082015260e0810192916111e09160a001906132a5565b91906101e083820312610414576133909061018061331b61147d565b94613325816111ec565b86526020810135602087015260408101356040870152613347606082016111d5565b6060870152613358608082016111d5565b608087015261336960a082016111ec565b60a087015260c081013560c08701526133858360e08301612f8f565b60e087015201611f67565b610100830152565b91906102c083820312610414576133ae836111d5565b926133bb602082016111d5565b926133c8604083016119ef565b926133d5606084016111d5565b926133e382608083016132ff565b926001600160401b03916102608101358381116104145784613406918301612103565b936102808201358481116104145781613420918401611fab565b936102a08301359081116104145761150a92016114ef565b9693948761350f9661ffff613500966134ee9561150a9d9b9760018060a01b03958680931690521660208d01521660408b0152166060890152805115156080890152602081015160a0890152604081015160c08901526134a0606082015160e08a0190611571565b6080810151906134b661010092838b0190611571565b60a081015115156101208a015260c08101516101408a01526134e160e08201516101608b01906130d0565b0151610200880190612321565b6102c08061026088015286019061242a565b90848203610280860152612345565b916102a0818403910152610133565b91908260809103126104145760405161353681611373565b6060808294803584526020810135602085015260408101356126b1816111c4565b90610180828203126104145761356c826111d5565b92613579602084016111d5565b92613586604082016119ef565b926001600160401b03606083013581811161041457826135a79185016114ef565b936135b5836080860161351e565b9361010081013583811161041457846135cf918301611fab565b936135de816101208401613205565b936101608301359081116104145761150a9201612103565b949160606136386136789661ffff61366c9761150a9d9b9660018060a01b0396878092168d521660208c01521660408a015261018080848b0152890190610133565b9380516080890152602081015160a08901528260408201511660c089015201511660e0860152848203610100860152612345565b936101208301906132a5565b61016081840391015261242a565b90816080910312610414576060604051916136a083611373565b80356136ab816111c4565b835260208101356136bb816111c4565b602084015260408101356136ce816111e2565b60408401520135606082015290565b6001600160a01b039182168152911660208201529015156040820152606081019190915260800190565b8051821015611dfd5760209160051b010190565b909161012082840312610414578135613733816111c4565b926020830135613742816111c4565b926040810135926060820135613757816119e3565b9260808301359260a08101359260c08201359260e08301356001600160401b038111610414576101009161378c9185016114ef565b92013561150a816111c4565b9692610120989461ffff916137ee97939d9c9b9d98949860018060a01b03998a8092168c521660208b015260408a0152166060880152608087015260a086015260c08501526101408060e0860152840190610133565b95166101008201520152565b908160609103126104145760408051916138138361133d565b803561381e816111c4565b8352602081013561382e816111c4565b60208401520135604082015290565b9190826040910312610414576020825192015190565b6001600160a01b03918216815291166020820152604081019190915260600190565b908160a09103126104145760806040519161388f83611358565b803561389a816111c4565b835260208101356138aa816111c4565b602084015260408101356138bd816111e2565b6040840152606081013560608401520135608082015290565b908160a0910312610414576080604051916138f083611358565b803583526020810135613902816111c4565b602084015260408101356138bd816111c4565b91909160a08184031261041457803561392d816111c4565b92602082013561393c816119e3565b926040830135926060810135926001600160401b039160808101359083821161041457019060608282031261041457604051926139788461133d565b8235613983816111c4565b84526020830135613993816111c4565b60208501526040830135908111610414576139ae92016114ef565b604082015290565b939061150a95916101009461ffff60409560018060a01b03809516895216602088015284870152606086015260a060808601528082511660a086015260208201511660c0850152015191606060e08201520190610133565b15613a1557565b60405162461bcd60e51b815260206004820152601a60248201527909ac2cedccae8c2e4ac647440ecc2d8eaca40dad2e6dac2e8c6d60331b6044820152606490fd5b908060209392818452848401376000828201840152601f01601f1916010190565b8035613a83816111e2565b15158252602081013560208301526040810135613a9f816111e2565b1515604083015261ffff6060820135613ab7816119e3565b1660608301526080810135601e198236030181121561041457016020810190356001600160401b0381116104145780360382136104145760a08381608061150a9601520191613a57565b604080918035613b10816111e2565b15158452602081013560208501520135613b29816111e2565b1515910152565b604080918035613b3f816111e2565b151584526020810135613b51816111c4565b6001600160a01b031660208501520135910152565b60409081813591613b76836111c4565b6001600160a01b039283168552826020820135613b92816111c4565b1660208601520135613ba3816111c4565b16910152565b9035609e1982360301811215610414570190565b3d15613be8573d90613bce8261149d565b91613bdc60405193846113e0565b82523d6000602084013e565b606090565b15613bf457565b60405162461bcd60e51b815260206004820152602860248201527f4d61676e6574617256323a207065726d6974416c6c2073656c6563746f72206e6044820152671bdd08199bdd5b9960c21b6064820152608490fd5b15613c5157565b60405162461bcd60e51b8152602060048201526015602482015274135859db995d185c8e881b9bc818dbdb9d1c9858dd605a1b6044820152606490fd5b908092918237016000815290565b60e092613cd26001600160e01b03196020613cb83685886114b8565b01511663d505accf861b8114908115613dad575b50613bed565b613cdd818085611efd565b9080959181010312610414576000809493613d668295604051613cff816113a9565b60c080833593613d0e856111c4565b8484526020810135613d1f816111c4565b60208501526040810135604085015260608101356060850152613d44608082016120f5565b608085015260a0818101359085015201359101526001600160a01b0316613fe4565b613d72843b1515613c4a565b613d8160405180948193613c8e565b03925af190613d8e613bbd565b91159081613da4575b50613d9f5750565b613f0a565b90501538613d97565b905063aba07847861b1438613ccc565b60c092613df36001600160e01b03196020613dd93685886114b8565b0151166318b9611f60e11b8114908115613e7d5750613bed565b613dfe818085611efd565b9080959181010312610414576000809493613d668295604051613e208161138e565b60a080833593613e2f856111c4565b8484526020810135613e40816111c4565b602085015260408101356040850152613e5b606082016120f5565b60608501526080818101359085015201359101526001600160a01b0316613fe4565b63aba0784760e01b14905038613ccc565b6002546001600160a01b03168015613ec657816000929160208493519201905af490613eb8613bbd565b9115613ec057565b50613f0a565b60405162461bcd60e51b815260206004820152601c60248201527b135859db995d185c958c8e881b5bd91d5b19481b9bdd08199bdd5b9960221b6044820152606490fd5b6044815110613fa257600481015181019060208160248401930312610414576024810151906001600160401b0382116104145701908060438301121561041457602482015191613f598361149d565b91613f6760405193846113e0565b838352604484830101116104145761117492613f8a916044602085019101610110565b60405162461bcd60e51b815291829160048301611ea9565b60405162461bcd60e51b815260206004820152601a60248201527926b0b3b732ba30b92b191d102932b0b9b7b7103ab735b737bbb760311b6044820152606490fd5b336001600160a01b0390911603613ff757565b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a206f70657261746f72206e6f7420617070726f76656044820152601960fa1b6064820152608490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220bc133a292758105e58bc9ab8ac09e2674a0e012fb5e012452ae8a0c4c0c0e59e64736f6c63430008120033";

type MagnetarV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2__factory extends ContractFactory {
  constructor(...args: MagnetarV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2";
  }

  override deploy(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2> {
    return super.deploy(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    ) as Promise<MagnetarV2>;
  }
  override getDeployTransaction(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    );
  }
  override attach(address: string): MagnetarV2 {
    return super.attach(address) as MagnetarV2;
  }
  override connect(signer: Signer): MagnetarV2__factory {
    return super.connect(signer) as MagnetarV2__factory;
  }
  static readonly contractName: "MagnetarV2";

  public readonly contractName: "MagnetarV2";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2Interface {
    return new utils.Interface(_abi) as MagnetarV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2 {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2;
  }
}
