/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MagnetarV2,
  MagnetarV2Interface,
} from "../../../contracts/Magnetar/MagnetarV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_marketModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newHelper",
        type: "address",
      },
    ],
    name: "HelperUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "burst",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "helper",
    outputs: [
      {
        internalType: "contract IMagnetarHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketModule",
    outputs: [
      {
        internalType: "contract MagnetarMarketModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_helper",
        type: "address",
      },
    ],
    name: "setHelper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unwrap",
        type: "bool",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346200016357601f620040b438819003918201601f19168301916001600160401b03831184841017620001685780849260609460405283398101031262000163576200004d816200017e565b60406200005d602084016200017e565b9201516001600160a01b0380821693918490036200016357620000803362000193565b8060018060a01b03199316836001541617600155338160005416036200011f57811615620000cb57620000b39062000193565b6002541617600255604051613ed99081620001db8239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016357565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063013546e11461011b578063150b7a021461011657806340b1d65714610111578063437be6221461010c578063460297fd1461010757806363b0e66a14610102578063715018a6146100fd5780637a7ccd91146100f85780638da5cb5b146100f3578063986ccc7f146100ee578063b25ea8fb146100e9578063c3594347146100e4578063cfd8b3d8146100df578063dbd01de1146100da578063e5546fac146100d55763f2fde38b0361000e57611d19565b611bbc565b611b6f565b611b46565b6119c5565b6118f8565b61188b565b611862565b611796565b61174a565b611721565b611635565b6115aa565b6114ab565b611426565b6101df565b60005b8381106101335750506000910152565b8181015183820152602001610123565b9060209161015c81518092818552858086019101610120565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b8401019601946000925b85841061019d575050505050505090565b9091929394959685806101ce600193603f1986820301885286838d5180511515845201519181858201520190610143565b99019401940192959493919061018c565b6020366003190112610432576004356001600160401b03808211610432573660238301121561043257816004013511610432576005903660248260040135841b83010111610432576000906102378160040135611e3d565b92825b826004013581106102645761026085610254863414613776565b60405191829182610168565b0390f35b61027681846004013560248601611ede565b906060948583019061028e61028a83611f05565b1590565b6111cb575b6102a260408501358092611fe9565b966001806102b96102b288611ff6565b61ffff1690565b036102fe57505050826102ee6102f4926102e66102db60206102f99801612441565b936080810190611f0f565b929091611f05565b92613afa565b611eb4565b61023a565b61ffff60028161030d89611ff6565b16036103375750505050826103316102f4926102e66102db60206102f99801612441565b92613a60565b60038161034389611ff6565b160361036d5750505050826103676102f4926102e66102db60206102f99801612441565b9261396b565b909192935060048161037e88611ff6565b160361043757505050506103c46103b86103b860206103bd6103b86103b06103a960808a018a611f0f565b8091612000565b810190613761565b61120b565b9501612441565b803b156104325760405163a22cb46560e01b81526001600160a01b03939093166004840152600060248401819052908390604490829084905af191821561042d576102f992610414575b50611eb4565b806104216104279261124b565b80611709565b3861040e565b6126ee565b600080fd5b868161044288611ff6565b16036104d457505050508161047c6103b86103b861047361046b6103a960806020990187611f0f565b810190613742565b96909401612441565b92833b156104325760405163b8489fb560e01b81526001600160a01b039092166004830152602482015260006044820181905290928390818381606481015b03925af191821561042d576102f9926104145750611eb4565b61012c816104e188611ff6565b1603610568575050506105296103b86103b860206105106105086103a960808a018a611f0f565b81019061352e565b9661052361051e895161120b565b613d9b565b01612441565b6040610538602086015161120b565b94015190803b1561043257604051630c46aac760e31b8152946000938693849283916104bb913360048501613587565b61012d8161057888969598611ff6565b16036105f35750506103b89350906020916105236105c76103b86105ad6105a56103a96080880188611f0f565b810190613649565b9b92999098919692939092906001600160a01b0316613d9b565b91823b15610432576000946104bb6040519889968795869463695ef6bf60e01b865233600487016136ea565b6064816105ff86611ff6565b1603610736575050506040906080936106436103b86103b8602061063361062b6103a98b890189611f0f565b81019061360a565b9561052361051e8389015161120b565b9060008351966106558686015161120b565b928501519401518551634d4d7cbd60e11b815260048101989098523360248901526001600160a01b03909216604488015260648701939093526084860152849160a4918391905af1801561042d576102f9926000908192610702575b506040805160208101929092528101919091526106db81606081015b03601f198101835282611306565b6106e3611329565b600181529060208201526106f7828861343b565b5261040e818761343b565b6106db9250610729915060403d60401161072f575b6107218183611306565b810190613571565b916106b1565b503d610717565b60c88161074286611ff6565b160361080a575050506080906107816103b86103b8602061077361076b6103a988880188611f0f565b8101906135a9565b9461052361051e875161120b565b61078e602083015161120b565b9261079c6040840151151590565b9583015192015194813b15610432576040516374d2492960e11b81523360048201526001600160a01b03949094166024850152151560448401526064830191909152608482019390935291600090839060a490829084905af191821561042d576102f9926104145750611eb4565b60c98161081986989596611ff6565b16036108d357505050506040826108476103b86103b860206107736105086103a960806108779b0188611f0f565b82610855602084015161120b565b92015191600084518097819582946314890dcb60e21b84523360048501613587565b03925af1801561042d576102f99260009081926108af575b506040805160208101929092528101919091526106db81606081016106cd565b6106db92506108cd915060403d60401161072f576107218183611306565b9161088f565b6066816108df88611ff6565b1603610953575050506106cd61094e61040e926109116109096103a98860806102f99a0190611f0f565b81019061344f565b6001600160a01b039b9899979096919592949291908c1661093181613d9b565b6040516340b1d65760e01b60208201529c8d9b1660248c016134cc565b613c45565b60cb8161096288969596611ff6565b1603610a3757505050602090836109976103b86103b88561077361098f6103a960806109d69c0188611f0f565b8101906133ba565b9060006109a68583015161120b565b936109b46040840151151590565b920151604051630cb0f5b760e31b815297889586948593913360048601613411565b03925af1801561042d576106db6106cd916102f994600091610a08575b50604051928391602083019190602083019252565b610a2a915060203d602011610a30575b610a228183611306565b81019061298d565b386109f3565b503d610a18565b60cc81610a4388611ff6565b1603610aaf5750505060209083610a706103b86103b88561077361098f6103a960806109d69c0188611f0f565b906000610a7f8583015161120b565b93610a8d6040840151151590565b92015160405163cd0211eb60e01b815297889586948593913360048601613411565b61012f81610abf88969596611ff6565b1603610b3c57505050610b0e836103b8602093610af0610ae86103a960806103b89a0186611f0f565b81019061328b565b949a939d92959698919b909961052360018060a01b03809b16613d9b565b95863b15610432576000986104bb936040519c8d9a8b998a986338d91a1b60e21b8a52163360048a0161332a565b61013081610b4988611ff6565b1603610bc9575050506103b8836103b8602093610b7a610b726103a96080610b979a0186611f0f565b8101906130bb565b949d93969a9298919b909961052360018060a01b03809d16613d9b565b95863b156104325760009888966104bb946040519d8e9b8c9a8b9963af2a29c360e01b8b521692163360048a0161315b565b61013181610bd688611ff6565b1603610c6b575050608090610c146103b86103b86020610c06610bfe6103a9888c018c611f0f565b810190612f55565b9861052361051e8b5161120b565b90610c22602087015161120b565b9360a0610c3c6040890151938901519589015161ffff1690565b97015194833b15610432576104bb600096604051998a9788968795630fb6ba5960e01b87523360048801612fe0565b61013281610c7d889698959495611ff6565b1603610cf9575050506103b86103b882602095610cae610ca66103a96080610cca980185611f0f565b810190612eaa565b9993979298919b90949661052360018060a01b03809916613d9b565b93843b15610432576000966104bb916040519a8b988997889663076cf20360e11b885216923360048801612eea565b60cd81610d098698949598611ff6565b1603610d9b5750509061094e6102f9946106cd61040e94610d3d610d356103a960809788810190611f0f565b810190612d29565b92610d4b61051e855161120b565b610d55845161120b565b936020810151966040820151938201519082015190610d7e60c060a0850151940151945461120b565b94604051998a986325e0e33160e01b60208b015260248a01612e23565b60ce81610daa86959496611ff6565b1603610e175750506102f9935061094e61040e92610ddd610dd56103a98560806106cd970190611f0f565b810190612b96565b6001600160a01b03999697959094919392508916610dfa81613d9b565b604051630939eb3960e41b6020820152998a981660248901612be5565b60cf81610e2385611ff6565b1603610e9657505061094e6102f9946106cd61040e94610e58610e506103a9876080610e79990190611f0f565b810190612b0e565b90966001600160a01b039092169490929190610e7386613d9b565b5461120b565b9160405196879563650f5d7760e11b602088015260248701612b50565b9091945060d081610ea687611ff6565b1603610f115750506106cd61094e61040e92610ed7610ecf6103a98860806102f99a0190611f0f565b810190612a5d565b6001600160a01b03999697959094919391908a16610ef481613d9b565b604051632465b7a760e01b60208201529a8b991660248a01612ac1565b60d181610f1d87611ff6565b1603610fc6575050506020610f8e83610f49610f416103a960806000980184611f0f565b8101906129ce565b90929993969195610f6e6103b86103b88b60018060a01b03809a169461052386613d9b565b966040519b8c998a988997630f74e47960e11b8952169360048801612a23565b03925af191821561042d576102f992610fa75750611eb4565b610fbf9060203d602011610a3057610a228183611306565b503861040e565b60d281610fd287611ff6565b1603611042575050506020610f8e83610ffe610ff66103a960806000980184611f0f565b81019061293c565b6110226103b86103b88a600180979e989b969760a01b03809916996105238b613d9b565b956040519a8b9889978896632c6dcd7f60e11b885216926004870161299c565b6101908161105287949597611ff6565b16036110c257506110866103b86103b8602061107f6110776103a96080880188611f0f565b810190612796565b9401612441565b815192602083015190604084015193015195823b15610432576000946104bb604051988996879586946309f6dd4160e41b86526004860161287a565b819294506110d261013392611ff6565b16036111835760809261110e6103b86103b860206111006110f86103a98a890189611f0f565b810190612363565b9561052361051e885161120b565b611118835161120b565b611125602085015161120b565b90611141611138604087015161ffff1690565b9486015161120b565b968501519060a08601519160e060c0880151970151853b156104325760009788946104bb936040519c8d9a8b998a98634620a6d160e01b8a5260048a0161267c565b60405162461bcd60e51b815260206004820152601c60248201527b135859db995d185c958c8e881858dd1a5bdb881b9bdd081d985b1a5960221b6044820152606490fd5b0390fd5b6112066111db6080860186611f0f565b90506111fe6040516111f9816106cd89602083019190602083019252565b611f41565b901515611fbd565b610293565b6001600160a01b031690565b6001600160a01b0381160361043257565b359061123382611217565b565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161125e57604052565b611235565b604081019081106001600160401b0382111761125e57604052565b606081019081106001600160401b0382111761125e57604052565b60c081019081106001600160401b0382111761125e57604052565b608081019081106001600160401b0382111761125e57604052565b60a081019081106001600160401b0382111761125e57604052565b61030081019081106001600160401b0382111761125e57604052565b601f909101601f19168101906001600160401b0382119082101761125e57604052565b6040519061123382611263565b6040519061014082016001600160401b0381118382101761125e57604052565b604051906101c082016001600160401b0381118382101761125e57604052565b6040519061010082016001600160401b0381118382101761125e57604052565b6040519061012082016001600160401b0381118382101761125e57604052565b6001600160401b03811161125e57601f01601f191660200190565b9291926113dd826113b6565b916113eb6040519384611306565b829481845281830111610432578281602093846000960137010152565b9080601f8301121561043257816020611423933591016113d1565b90565b3461043257608036600319011261043257611442600435611217565b61144d602435611217565b6064356001600160401b0381116104325761146c903690600401611408565b50604051630a85bd0160e11b8152602090f35b61ffff81160361043257565b35906112338261147f565b8015150361043257565b359061123382611496565b61014080600319360112610432576004356114c581611217565b6024356114d181611217565b606435906114de8261147f565b60c435936001600160401b038511610432576106cd61094e9360249261150b610019983690600401611408565b61158f60e4359161151b83611217565b6101249361ffff85359661152e88611496565b6115378b613d9b565b6040519c8d9b8c60206340b1d65760e01b9101528c60018060a01b039c8d8094169101521660448c015260443560648c01521660848a015260843560a48a015260a43560c48a015260e4890152610164880190610143565b94610104911681870152359085015261014484019015159052565b34610432576020366003190112610432576004356115c781611217565b6001600160a01b031680156115ec57600180546001600160a01b031916919091179055005b60405162461bcd60e51b8152602060048201526013602482015272135859db995d185c8e881b9bdd081d985b1a59606a1b6044820152606490fd5b908160c09103126104325790565b60e03660031901126104325760043561164d81611217565b6024359061165a82611217565b60a43561166681611496565b60c435926001600160401b038411610432576116f461094e92611690610019963690600401611627565b9061169a84613d9b565b604051958694632465b7a760e01b602087015260018060a01b0380921660248701521660448501526044356064850152606435608485015260843560a4850152151560c484015261010060e48401526101248301906137e0565b3461010483015203601f198101835282611306565b600091031261043257565b6001600160a01b03169052565b34610432576000366003190112610432576003546040516001600160a01b039091168152602090f35b346104325760008060031936011261179357611764611dce565b80546001600160a01b03198116825581906001600160a01b0316600080516020613e848339815191528280a380f35b80fd5b60e0366003190112610432576004356117ae81611217565b602435906117bb82611217565b608435916117c883611496565b60a435906117d582611496565b60c4356001600160401b038111610432576100199461094e936117ff6116f4933690600401611627565b9161180985613d9b565b604051968795630939eb3960e41b602088015260018060a01b03809216602488015216604486015260443560648601526064356084860152151560a4850152151560c484015261010060e48401526101248301906137e0565b34610432576000366003190112610432576000546040516001600160a01b039091168152602090f35b34610432576020366003190112610432576004356118a881611217565b6118b0611dce565b6003546001600160a01b0391821691829082167f8ec9146610f1f9324ffc354c9f4db61b885844583cba310f2b9488f967d74e2f600080a36001600160a01b03191617600355005b346104325760403660031901126104325760243561191581611217565b61191d611dce565b60008080808094600435905af161193261393b565b501561193b5780f35b60405162461bcd60e51b815260206004820152601a60248201527926b0b3b732ba30b91d103a3930b739b332b9103330b4b632b21760311b6044820152606490fd5b606090602319011261043257602490565b60609060e31901126104325760e490565b6060906101e3190112610432576101e490565b6060906102431901126104325761024490565b60031960a03682011261043257600435906119df82611217565b6119e83661197d565b608435929091906001600160401b0384116104325783600401916101c080918636030112610432576106cd611b3561001996611b2261094e96611a2a87613d9b565b60018060a01b0396611b1a886001541697611a636040519c8d9b8c9563650f5d7760e11b602088015216602486015260448501906138e4565b60e060a4840152611a816101048401611a7b866114a0565b15159052565b611b08610124602488013581860152611aa9611a9f60448a016114a0565b1515610144870152565b6064880135610164860152611b00611ac360848a016114a0565b91611ad5610184938489019015159052565b6102246101a49760a48c013589820152611af78c60c46101c4840191016138ae565b01908a016138ae565b870185613927565b906102848b01526102c48a01906137e0565b930190613927565b85820361010319016102a48701526137e0565b913460c485015260e4840190611714565b34610432576000366003190112610432576002546040516001600160a01b039091168152602090f35b34610432576000366003190112610432576001546040516001600160a01b039091168152602090f35b60a090604319011261043257604490565b60a0906101431901126104325761014490565b6102a036600319011261043257600435611bd581611217565b611bde36611b98565b611be73661198e565b611bf036611ba9565b611bf93661199f565b90611c03366119b2565b92611c0d86613d9b565b600160a01b600190039081600154169582604051986325e0e33160e01b60208b015216602489015260243560448901528035611c4881611496565b1515606489015260208101356084890152611c6a9060a4890190604001613886565b6101048701611c7891613886565b8135611c8381611496565b15156101648701526020820135611c9981611217565b166101848601526001600160801b0380611cb560408401612caf565b166101a4870152611cc860608301612caf565b166101c4860152608001356101e48501526102048401611ce7916138ae565b6102648301611cf5916138e4565b6102c490818301611d0591611714565b8152611d10816112ea565b61001990613c45565b3461043257602036600319011261043257600435611d3681611217565b611d3e611dce565b6001600160a01b039081168015611d7a57600080546001600160a01b0319811683178255909216600080516020613e848339815191528380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6000546001600160a01b03163303611de257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b03811161125e5760051b60200190565b90611e4782611e26565b6040611e5581519283611306565b8382528193611e66601f1991611e26565b0191600091825b848110611e7b575050505050565b6020908251611e8981611263565b85815282606081830152828601015201611e6d565b634e487b7160e01b600052601160045260246000fd5b6000198114611ec35760010190565b611e9e565b634e487b7160e01b600052603260045260246000fd5b9190811015611f005760051b81013590609e1981360301821215610432570190565b611ec8565b3561142381611496565b903590601e198136030182121561043257018035906001600160401b0382116104325760200191813603831361043257565b90611233604e60405180947f4d61676e6574617256323a204d697373696e672063616c6c20666f722061637460208301526d0d2dedc40eed2e8d040d2dcc8caf60931b6040830152611f9c8151809260208686019101610120565b810103602e810185520183611306565b906020611423928181520190610143565b15611fc55750565b60405162461bcd60e51b8152602060048201529081906111c7906024830190610143565b91908201809211611ec357565b356114238161147f565b909291928360041161043257831161043257600401916003190190565b9190826060910312610432576040516120358161127e565b6040808294803561204581611217565b8452602081013561205581611217565b602085015201359161206683611217565b0152565b9190826060910312610432576040516120828161127e565b6040808294803561209281611496565b845260208101356120a281611217565b60208501520135910152565b91909160c08184031261043257604051906120c882611299565b819381356120d581611496565b83526020820135602084015260408201356120ef81611496565b604084015260608201356121028161147f565b60608401526080820135916001600160401b0383116104325761212b60a0939284938301611408565b608085015201359161206683611496565b91906101c08382031261043257612151611336565b9261215b816114a0565b845260208101356020850152612173604082016114a0565b60408501526060810135606085015261218e608082016114a0565b608085015260a081013560a08501526121aa8260c0830161206a565b60c0850152610120916121bf8184840161206a565b60e08601526001600160401b0361018083013581811161043257826121e59185016120ae565b6101008701526101a08301359081116104325761220292016120ae565b90830152565b60ff81160361043257565b359061123382612208565b81601f820112156104325780359061223582611e26565b9260409061224582519586611306565b83855260209182860191836101c080970286010194818611610432578401925b858410612276575050505050505090565b86848303126104325784879161228a611356565b612293876114a0565b81526122a08388016114a0565b838201526122af8688016114a0565b8682015260606122c08189016114a0565b9082015260806122d181890161148b565b9082015260a06122e2818901611228565b9082015260c06122f38189016114a0565b9082015260e0612304818901611228565b90820152610100612316818901611228565b908201526101208088013590820152610140808801359082015261016061233e818901612213565b9082015261018080880135908201526101a08088013590820152815201930192612265565b90602082820312610432576001600160401b03918035908382116104325701906101408282031261043257612396611376565b926123a083611228565b84526123ae60208401611228565b60208501526123bf6040840161148b565b60408501526123d060608401611228565b6060850152608083013581811161043257826123ed918501611408565b60808501526123ff8260a0850161201d565b60a0850152610100830135818111610432578261241d91850161213c565b60c085015261012083013590811161043257612439920161221e565b60e082015290565b3561142381611217565b80516001600160a01b03908116835260208083015182169084015260409182015116910152565b8051151582526020808201516001600160a01b031690830152604090810151910152565b908151151581526020820151602082015260408201511515604082015261ffff606083015116606082015260a0806124dd608085015160c0608086015260c0850190610143565b930151151591015290565b805115158252611423916020820151602082015261250f6040830151604083019015159052565b6060820151606082015261252c6080830151608083019015159052565b60a082015160a082015261254860c083015160c0830190612472565b60e082015161255d6101209182840190612472565b6125786101008401516101c080610180860152840190612496565b920151906101a0818403910152612496565b90815180825260208080930193019160005b8281106125aa575050505090565b90919293826101c060019287516125c382825115159052565b8084015115158285015260408181015115159083015260608181015115159083015260808181015161ffff169083015261260560a08083015190840190611714565b60c08181015115159083015261262360e08083015190840190611714565b6126366101008083015190840190611714565b610120818101519083015261014080820151908301526101608082015160ff169083015261018081810151908301526101a090810151908201520195019392910161259c565b9692948761142399979561ffff6126df986126c6956126d19760018060a01b03958680931690521660208d01521660408b01521660608901526101408060808a0152880190610143565b9260a087019061244b565b8482036101008601526124e8565b9161012081840391015261258a565b6040513d6000823e3d90fd5b9190826060910312610432576040516127128161127e565b604080829480356120928161147f565b91908260c09103126104325760405161273a81611299565b60a0808294803561274a81611496565b8452602081013561275a81611217565b6020850152604081013561276d8161147f565b604085015260608101356060850152608081013561278a81611217565b60808501520135910152565b90602082820312610432576001600160401b03918035908382116104325701908181039261020084126104325760c0604051946127d2866112b4565b12610432576040516127e381611299565b83356127ee81611217565b815260208401356127fe81611217565b60208201526040840135604082015260608401356060820152608084013561282581611217565b608082015260a084013560a082015284526128438260c085016126fa565b6020850152612856826101208501612722565b60408501526101e083013590811161043257612872920161221e565b606082015290565b81516001600160a01b039081168252602080840151821681840152604084810151818501526060808601518186015260808087015185168187015260a09687015187870152875161ffff90811660c088015284890151861660e088015297830151610100870152885115156101208701529288015184166101408601529087015190951661016084015293850151610180830152928401519092166101a0830152909101516101c0820152611423919061020090816101e0820152019061258a565b91909160a08184031261043257803561295481611217565b92602082013592604083013592606081013561296f81611217565b9260808201356001600160401b038111610432576114239201611408565b90816020910312610432575190565b919360a0936114239695600180871b038094168552602085015260408401521660608201528160808201520190610143565b9160c0838303126104325782356129e481611217565b926020810135926040820135926060830135926080810135612a0581611217565b9260a08201356001600160401b038111610432576114239201611408565b929360c0946114239796929360018060a01b0380951686526020860152604085015260608401521660808201528160a08201520190610143565b9060e082820312610432578135612a7381611217565b926020830135612a8281611217565b9260408101359260608201359260808301359260a0810135612aa381611496565b9260c08201356001600160401b0381116104325761142392016120ae565b98979693909260e09693612b09969360018060a01b038092168c521660208b015260408a015260608901526080880152151560a08701526101008060c0880152860190612496565b930152565b9160a083830312610432578235612b2481611217565b92612b32836020830161201d565b9260808201356001600160401b03811161043257611423920161213c565b6001600160a01b03918216815293959460c09391929091612b8a91612b7990602088019061244b565b60e0608087015260e08601906124e8565b9560a085015216910152565b9060e082820312610432578135612bac81611217565b926020830135612bbb81611217565b926040810135926060820135926080830135612bd681611496565b9260a0810135612aa381611496565b97969592612b09949160e0969360018060a01b038092168b521660208a01526040890152606088015260006080880152151560a08701526101008060c0880152860190612496565b919082606091031261043257604051612c458161127e565b60408082948035612c5581611496565b84526020810135602085015201359161206683611496565b919060a083820312610432576040612caa815192612c8a8461127e565b8284968035612c9881611496565b86526020810135602087015201612c2d565b910152565b35906001600160801b038216820361043257565b91908260a091031261043257604051612cdb816112cf565b60808082948035612ceb81611496565b84526020810135612cfb81611217565b6020850152612d0c60408201612caf565b6040850152612d1d60608201612caf565b60608501520135910152565b6102a081830312610432576040519160e083016001600160401b0381118482101761125e57612dbe9261024091604052612d6281611228565b855260208101356020860152612d7b8360408301612c6d565b6040860152612d8d8360e08301612c2d565b6060860152612da0836101408301612cc3565b6080860152612db3836101e0830161206a565b60a08601520161201d565b60c082015290565b604080918051151584526020810151602085015201511515910152565b6080809180511515845260018060a01b036020820151166020850152600180831b0380604083015116604086015260608201511660608501520151910152565b969390959298979491986102c0880199600160a01b6001900380981689526020890152805115156040890152602081015160608901526040015160808801612e6a91612dc6565b60e08701612e7791612dc6565b6101408601612e8591612de3565b6101e08501612e9391612472565b6102408401612ea19161244b565b16906102a00152565b9160c083830312610432578235612ec081611217565b926020810135926040820135926060830135612edb8161147f565b926080810135612a0581611217565b9260c09461ffff916114239897939460018060a01b038096168752602087015260408601521660608401521660808201528160a08201520190610143565b919082604091031261043257604051612f4081611263565b60208082948035845201359161206683611217565b9060e08282031261043257612fc09060a060405193612f7385611299565b8035612f7e81611217565b85526020810135612f8e81611217565b602086015260408101356040860152606081013560608601526080810135612fb58161147f565b608086015201612f28565b60a082015290565b805182526020908101516001600160a01b0316910152565b6001600160a01b039182168152911660208201526040810191909152606081019190915261ffff909116608082015260e0810192916112339160a00190612fc8565b91906101e083820312610432576130b39061018061303e611396565b94613048816114a0565b8652602081013560208701526040810135604087015261306a60608201611228565b606087015261307b60808201611228565b608087015261308c60a082016114a0565b60a087015260c081013560c08701526130a88360e08301612cc3565b60e08701520161206a565b610100830152565b91906102c083820312610432576130d183611228565b926130de60208201611228565b926130eb6040830161148b565b926130f860608401611228565b926131068260808301613022565b926001600160401b0391610260810135838111610432578461312991830161221e565b9361028082013584811161043257816131439184016120ae565b936102a0830135908111610432576114239201611408565b969394876132329661ffff61322396613211956114239d9b9760018060a01b03958680931690521660208d01521660408b0152166060890152805115156080890152602081015160a0890152604081015160c08901526131c3606082015160e08a0190611714565b6080810151906131d961010092838b0190611714565b60a081015115156101208a015260c08101516101408a015261320460e08201516101608b0190612de3565b0151610200880190612472565b6102c08061026088015286019061258a565b90848203610280860152612496565b916102a0818403910152610143565b919082608091031261043257604051613259816112b4565b60608082948035845260208101356020850152604081013561327a81611217565b604085015201359161206683611217565b9061018082820312610432576132a082611228565b926132ad60208401611228565b926132ba6040820161148b565b926001600160401b03606083013581811161043257826132db918501611408565b936132e98360808601613241565b9361010081013583811161043257846133039183016120ae565b93613312816101208401612f28565b9361016083013590811161043257611423920161221e565b9491606061336c6133ac9661ffff6133a0976114239d9b9660018060a01b0396878092168d521660208c01521660408a015261018080848b0152890190610143565b9380516080890152602081015160a08901528260408201511660c089015201511660e0860152848203610100860152612496565b93610120830190612fc8565b61016081840391015261258a565b90816080910312610432576060604051916133d4836112b4565b80356133df81611217565b835260208101356133ef81611217565b6020840152604081013561340281611496565b60408401520135606082015290565b6001600160a01b039182168152911660208201529015156040820152606081019190915260800190565b8051821015611f005760209160051b010190565b90916101208284031261043257813561346781611217565b92602083013561347681611217565b92604081013592606082013561348b8161147f565b9260808301359260a08101359260c08201359260e08301356001600160401b03811161043257610100916134c0918501611408565b92013561142381611217565b9692610120989461ffff9161352297939d9c9b9d98949860018060a01b03998a8092168c521660208b015260408a0152166060880152608087015260a086015260c08501526101408060e0860152840190610143565b95166101008201520152565b908160609103126104325760408051916135478361127e565b803561355281611217565b8352602081013561356281611217565b60208401520135604082015290565b9190826040910312610432576020825192015190565b6001600160a01b03918216815291166020820152604081019190915260600190565b908160a0910312610432576080604051916135c3836112cf565b80356135ce81611217565b835260208101356135de81611217565b602084015260408101356135f181611496565b6040840152606081013560608401520135608082015290565b908160a091031261043257608060405191613624836112cf565b80358352602081013561363681611217565b602084015260408101356135f181611217565b91909160a08184031261043257803561366181611217565b9260208201356136708161147f565b926040830135926060810135926001600160401b039160808101359083821161043257019060608282031261043257604051926136ac8461127e565b82356136b781611217565b845260208301356136c781611217565b60208501526040830135908111610432576136e29201611408565b604082015290565b939061142395916101009461ffff60409560018060a01b03809516895216602088015284870152606086015260a060808601528082511660a086015260208201511660c0850152015191606060e08201520190610143565b9190826040910312610432576020823561375b81611217565b92013590565b90816020910312610432573561142381611217565b1561377d57565b60405162461bcd60e51b815260206004820152601a60248201527909ac2cedccae8c2e4ac647440ecc2d8eaca40dad2e6dac2e8c6d60331b6044820152606490fd5b908060209392818452848401376000828201840152601f01601f1916010190565b9081356137ec81611496565b1515815260208201356020820152604082013561380881611496565b1515604082015261ffff60608301356138208161147f565b1660608201526080820135601e1983360301811215610432578201803591906020016001600160401b0383116104325782360381136104325761387f60a061387881936114239660c0608088015260c08701916137bf565b95016114a0565b1515910152565b60408091803561389581611496565b1515845260208101356020850152013561387f81611496565b6040809180356138bd81611496565b1515845260208101356138cf81611217565b6001600160a01b031660208501520135910152565b604090818135916138f483611217565b6001600160a01b03928316855282602082013561391081611217565b166020860152013561392181611217565b16910152565b903560be1982360301811215610432570190565b3d15613966573d9061394c826113b6565b9161395a6040519384611306565b82523d6000602084013e565b606090565b803b15613a235761399c631221baf960e31b6001600160e01b031960206139933688886113d1565b01511614613b57565b8260041161043257826000836139e86139cf6139bf849885980160048501613ba2565b5060208082518301019101613bd8565b50506001600160a01b039094169450613d9b9350505050565b6139f760405180948193613c37565b03925af190613a0461393b565b91159081613a1a575b50613a155750565b613cc1565b90501538613a0d565b60405162461bcd60e51b8152602060048201526015602482015274135859db995d185c8e881b9bc818dbdb9d1c9858dd605a1b6044820152606490fd5b803b15613a235760e092613a8b63d505accf60e01b6001600160e01b031960206139933686896113d1565b613a96818085612000565b9080959181010312610432576000809493613adf85613ad1608085983592613abd84611217565b613aca6020820135611217565b0135612208565b6001600160a01b0316613d9b565b826040519384928337810182815203925af190613a0461393b565b803b15613a235760c092613b2563aba0784760e01b6001600160e01b031960206139933686896113d1565b613b30818085612000565b90809591810103126104325760008094936139e885613ad1606085983592613abd84611217565b15613b5e57565b606460405162461bcd60e51b815260206004820152602060248201527f4d61676e6574617256323a207065726d697420736967206e6f742076616c69646044820152fd5b91906040838203126104325782356001600160401b03811161043257602091613bcc918501611408565b9201356114238161147f565b919082610100910312610432578151613bf081611496565b916020810151613bff81611217565b916040820151613c0e81611217565b9160608101519160808201519160a0810151613c2981612208565b9160e060c083015192015190565b908092918237016000815290565b6002546001600160a01b03168015613c7d57816000929160208493519201905af490613c6f61393b565b9115613c7757565b50613cc1565b60405162461bcd60e51b815260206004820152601c60248201527b135859db995d185c958c8e881b5bd91d5b19481b9bdd08199bdd5b9960221b6044820152606490fd5b6044815110613d5957600481015181019060208160248401930312610432576024810151906001600160401b0382116104325701908060438301121561043257602482015191613d10836113b6565b91613d1e6040519384611306565b83835260448483010111610432576111c792613d41916044602085019101610120565b60405162461bcd60e51b815291829160048301611fac565b60405162461bcd60e51b815260206004820152601a60248201527926b0b3b732ba30b92b191d102932b0b9b7b7103ab735b737bbb760311b6044820152606490fd5b6001600160a01b039081163314908115613e07575b5015613db857565b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a206f70657261746f72206e6f7420617070726f76656044820152601960fa1b6064820152608490fd5b600154604051633a304d8b60e21b815260006004820152336024820152925060209183916044918391165afa90811561042d57600091613e49575b5038613db0565b906020823d8211613e7b575b81613e6260209383611306565b81010312611793575051613e7581611496565b38613e42565b3d9150613e5556fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220423a86d6347613875640f4450f932298209cb1f83f33d2cc9543f9b6f9c9971d64736f6c63430008120033";

type MagnetarV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2__factory extends ContractFactory {
  constructor(...args: MagnetarV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2";
  }

  override deploy(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2> {
    return super.deploy(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    ) as Promise<MagnetarV2>;
  }
  override getDeployTransaction(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    );
  }
  override attach(address: string): MagnetarV2 {
    return super.attach(address) as MagnetarV2;
  }
  override connect(signer: Signer): MagnetarV2__factory {
    return super.connect(signer) as MagnetarV2__factory;
  }
  static readonly contractName: "MagnetarV2";

  public readonly contractName: "MagnetarV2";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2Interface {
    return new utils.Interface(_abi) as MagnetarV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2 {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2;
  }
}
