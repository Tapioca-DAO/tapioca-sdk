/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MagnetarV2,
  MagnetarV2Interface,
} from "../../../contracts/Magnetar/MagnetarV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_marketModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ActionNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "Failed",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownReason",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ICluster",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract ICluster",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newHelper",
        type: "address",
      },
    ],
    name: "HelperUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "burst",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "zroPaymentAddress",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "zroPaymentAddress",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
              {
                internalType: "address payable",
                name: "refundAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "zroPaymentAddress",
                type: "address",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
              {
                internalType: "address payable",
                name: "refundAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "zroPaymentAddress",
                type: "address",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "helper",
    outputs: [
      {
        internalType: "contract IMagnetarHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketModule",
    outputs: [
      {
        internalType: "contract MagnetarMarketModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_helper",
        type: "address",
      },
    ],
    name: "setHelper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unwrap",
        type: "bool",
      },
      {
        internalType: "address",
        name: "zroPaymentAddress",
        type: "address",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346200016357601f62003e7a38819003918201601f19168301916001600160401b03831184841017620001685780849260609460405283398101031262000163576200004d816200017e565b60406200005d602084016200017e565b9201516001600160a01b0380821693918490036200016357620000803362000193565b8060018060a01b03199316836001541617600155338160005416036200011f57811615620000cb57620000b39062000193565b6002541617600255604051613c9f9081620001db8239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016357565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063013546e11461011b578063150b7a0214610116578063180ce00e1461011157806319f123eb1461010c578063357b97b014610107578063437be622146101025780635f5e9448146100fd57806363b0e66a146100f8578063715018a6146100f35780638da5cb5b146100ee578063986ccc7f146100e9578063b25ea8fb146100e4578063cfd8b3d8146100df578063dbd01de1146100da578063e5546fac146100d55763f2fde38b0361000e57611c8a565b611b2d565b611ae0565b611ab7565b611a62565b6119f5565b6119cc565b611980565b611957565b6117be565b6116f1565b611632565b611576565b61147e565b611401565b6101df565b60005b8381106101335750506000910152565b8181015183820152602001610123565b9060209161015c81518092818552858086019101610120565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b8401019601946000925b85841061019d575050505050505090565b9091929394959685806101ce600193603f1986820301885286838d5180511515845201519181858201520190610143565b99019401940192959493919061018c565b6020366003190112610444576001600160401b036004358181116104445736602382011215610444578060040135918211610444576024808201918136918560051b0101116104445760009161023484611dae565b93835b81811061026c578585340361025a576102569060405191829182610168565b0390f35b60405163dd8e4af760e01b8152600490fd5b610277818385611e4f565b906060956102a28784019161029261028e84611e76565b1590565b6111c1575b604085013590611f5e565b96866001806102ba6102b388611f6b565b61ffff1690565b036102ff57505050826102ef6102f5926102e76102dc60206102fa98016123ec565b936080810190611e80565b929091611e76565b926139ae565b611e25565b610237565b61ffff60028161030e89611f6b565b16036103385750505050826103326102f5926102e76102dc60206102fa98016123ec565b9261392a565b60038161034489611f6b565b160361036e5750505050826103686102f5926102e76102dc60206102fa98016123ec565b92613877565b909192935060048161037f88611f6b565b160361045b57505050506103b36103ae6103a661039f6080860186611e80565b8091611f75565b81019061366f565b611201565b91336001600160a01b03841603610449576103ae6103ae60206103d693016123ec565b803b156104445760405163a22cb46560e01b81526001600160a01b03939093166004840152600060248401819052908390604490829084905af191821561043f576102fa92610426575b50611e25565b8061043361043992611241565b8061193f565b38610420565b6126ce565b600080fd5b60405163ea8e4eb560e01b8152600490fd5b60058161046788611f6b565b1603610508575050505061048c61048461039f6080850185611e80565b810190613650565b926001600160a01b0390911690338203610449576103ae6103ae60206104b293016123ec565b92833b156104445760405163b8489fb560e01b81526001600160a01b03929092166004830152602482015260006044820181905290928390606490829084905af191821561043f576102fa926104265750611e25565b61012c8161051588611f6b565b16036105c6575050505061053a61053261039f6080850185611e80565b81019061343c565b9161054d6105488451611201565b613bbc565b61055f6103ae6103ae602084016123ec565b9261056a8151611201565b91604061057a6020840151611201565b92015191853b15610444576105aa956040600095815198899687958693630c46aac760e31b855260048501613495565b03930135905af191821561043f576102fa926104265750611e25565b61012d816105d388611f6b565b160361065157505050506105f86105f061039f6080850185611e80565b810190613557565b90956001600160a01b039094169391929061061285613bbc565b6106246103ae6103ae602086016123ec565b90813b15610444576000956105aa60409283519a8b988997889563695ef6bf60e01b8752600487016135f8565b60648161065d88611f6b565b16036107b75750505060409060809361068661067e61039f87840184611e80565b810190613518565b9460006106ab6103ae6103ae6020808b01966106a56105488951611201565b016123ec565b9261071a6106bb89519251611201565b936106c8888b0151611201565b968a01519901518751634d4d7cbd60e11b815260048101939093526001600160a01b039485166024840152939095166044820152606481019790975260848701919091528592839190829060a4820190565b03925af1801561043f576102fa926000908192610783575b5060408051602081019290925281019190915261075c81606081015b03601f1981018352826112e1565b610764611304565b600181529060208201526107788289613327565b526104208188613327565b61075c92506107aa915060403d6040116107b0575b6107a281836112e1565b81019061347f565b91610732565b503d610798565b60c8816107c388611f6b565b1603610897575050506080906108026103ae6103ae60206107f46107ec61039f888b018b611e80565b8101906134b7565b976106a56105488a51611201565b61080c8551611201565b9261081a6020870151611201565b906108286040880151151590565b93870151960151823b15610444576040516374d2492960e11b81526001600160a01b03958616600482015294909116602485015291151560448401526064830194909452608482015291600090839081838160a4810103925af191821561043f576102fa926104265750611e25565b60c9816108a5889698611f6b565b16036109795750505061091d9250806108e26103ae6103ae60206108d461053261039f60806040990188611e80565b946106a56105488751611201565b6108ec8251611201565b916000846108fd6020840151611201565b92015185516314890dcb60e21b8152978895869485939160048501613495565b03925af1801561043f576102fa926000908192610955575b5060408051602081019290925281019190915261075c816060810161074e565b61075c9250610973915060403d6040116107b0576107a281836112e1565b91610935565b60668161098586611f6b565b1603610a27575050909192506080820161099f9083611e80565b806109a992611f75565b81016109b49161333b565b6001600160a01b039b909a99909891979096929593949392918c166109d881613bbc565b604080516319f123eb60e01b60208201529d8e9d610a029d9082169c909201359916908d016133cf565b03601f1981018252610a1490826112e1565b610a1d90613ab3565b506102fa90611e25565b60cb81610a3386611f6b565b1603610b105750505080610a646103ae6103ae60206108d4610a5c61039f608084990188611e80565b8101906132a6565b610a6e8251611201565b946000610a7d85850151611201565b91610a8b6040860151151590565b94015196610aaf60405198899687958694630cb0f5b760e31b8652600486016132fd565b03925af1801561043f5761075c61074e916102fa94600091610ae1575b50604051928391602083019190602083019252565b610b03915060203d602011610b09575b610afb81836112e1565b810190612984565b38610acc565b503d610af1565b60cc81610b1c86611f6b565b1603610b905750505080610b456103ae6103ae60206108d4610a5c61039f608084990188611e80565b610b4f8251611201565b946000610b5e85850151611201565b91610b6c6040860151151590565b94015196610aaf6040519889968795869463cd0211eb60e01b8652600486016132fd565b61012f81610b9f869896611f6b565b1603610c3e5750505050610bc4610bbc61039f6080850185611e80565b81019061312e565b9160018060a09c9899969a979c1b0380961693610be085613bbc565b610bf26103ae6103ae60208b016123ec565b998a3b15610444576040516209b9f160e91b81529c8d9a8b998a99610c1d9991169060048b016131ea565b0391604001355a94600095f191821561043f576102fa926104265750611e25565b61013081610c4b88611f6b565b1603610cce5750505050610c70610c6861039f6080850185611e80565b810190612f08565b9160018060a09c989c9a9997969a1b0380981693610c8d85613bbc565b610c9f6103ae6103ae60208b016123ec565b998a3b156104445789976040519d8e9b8c9a8b9a63dfefd99d60e01b8c5216921660048a0198610c1d99612fc3565b60cd81610cda88611f6b565b1603610d6e5750610420929161074e6102fa96610d6993610d0e610d0661039f60809485810190611e80565b810190612cee565b610d1b6105488251611201565b610d258151611201565b966020820151936040830151918301519083015191610d4e60c060a08601519501519554611201565b956040519a8b996325e0e33160e01b60208c01528a01612de8565b613ab3565b9092915060ce81610d7e87611f6b565b1603610ded575050506104206040610d698461074e89610db2610daa61039f60806102fa9b0186611e80565b810190612b5b565b959690949293926001600160a01b039081169250610dcf83613bbc565b8b51638cb1e16560e01b60208201529b8c9a01359716908901612baa565b60cf81610df987611f6b565b1603610e6c5750506040610d698461074e610420948a610e4f610e30610e2861039f60806102fa9d0188611e80565b810190612ad3565b6001600160a01b039092169491929091610e4986613bbc565b54611201565b93885198899763fb8129c360e01b60208a01520135938701612b15565b90915060d081610e7b86611f6b565b1603610ee95750506104206040610d698461074e89610eae610ea661039f60806102fa9b0186611e80565b810190612a22565b959690949193916001600160a01b039081169190610ecb83613bbc565b8c51632a59396b60e21b60208201529c8d9b01359816908a01612a86565b60d181610ef586611f6b565b1603610f9d57505060206103ae83826000610f44610f27610f1f61039f60806103ae9b0187611e80565b8101906129b7565b9a90976001600160a01b039093169691959092916106a588613bbc565b92610f6560405198899687958694636a7229a760e11b8652600486016129f7565b03925af191821561043f576102fa92610f7e5750611e25565b610f969060203d602011610b0957610afb81836112e1565b5038610420565b60d281610fa986611f6b565b160361101557505060206103ae83826000610ff76103ae610fde610fd661039f6080610f659c0188611e80565b81019061294a565b976001600160a01b03909216969095906106a588613bbc565b92604051978895869485936301cfadbd60e71b855260048501612993565b6101908161102286611f6b565b16036110df5750506110b361104861104061039f6080860186611e80565b810190612786565b9399959496916110a56110676103ae6103ae60208b9d96989d016123ec565b604051600160f11b60208201526022810197909752604287019590955260609190911b6001600160601b031916606286015292939283906076820190565b03601f1981018452836112e1565b823b15610444576105aa60409260009884519b8c998a988996638088b90960e01b88526004880161285b565b610133906110ee859395611f6b565b16036111af5760809261111161110961039f86850185611e80565b8101906122f1565b9161111f6105488451611201565b6111316103ae6103ae602084016123ec565b61113b8451611201565b906111496020860151611201565b9161116561115c604088015161ffff1690565b95870151611201565b978601519060a08701519160c08801519761010060e082015191015190853b15610444576000996040956105aa9487519e8f9c8d9b8c9963424a214b60e11b8b5260048b01612649565b604051630395e47f60e41b8152600490fd5b6111fc6111d16080870187611e80565b90506111f46040516111ef8161074e8a602083019190602083019252565b611eb2565b901515611f2e565b610297565b6001600160a01b031690565b6001600160a01b0381160361044457565b35906112298261120d565b565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161125457604052565b61122b565b604081019081106001600160401b0382111761125457604052565b606081019081106001600160401b0382111761125457604052565b60a081019081106001600160401b0382111761125457604052565b608081019081106001600160401b0382111761125457604052565b61030081019081106001600160401b0382111761125457604052565b601f909101601f19168101906001600160401b0382119082101761125457604052565b6040519061122982611259565b6040519061010082016001600160401b0381118382101761125457604052565b6040519061014082016001600160401b0381118382101761125457604052565b604051906101c082016001600160401b0381118382101761125457604052565b6040519061012082016001600160401b0381118382101761125457604052565b6001600160401b03811161125457601f01601f191660200190565b9291926113b882611391565b916113c660405193846112e1565b829481845281830111610444578281602093846000960137010152565b9080601f83011215610444578160206113fe933591016113ac565b90565b346104445760803660031901126104445761141d60043561120d565b61142860243561120d565b6064356001600160401b038111610444576114479036906004016113e3565b50604051630a85bd0160e11b8152602090f35b8015150361044457565b35906112298261145a565b90816101009103126104445790565b60e0366003190112610444576004356114968161120d565b602435906114a38261120d565b608435916114b08361145a565b60a435906114bd8261145a565b60c4356001600160401b0381116104445761001994610d69936114e761154a93369060040161146f565b916114f185613bbc565b604051968795638cb1e16560e01b602088015260018060a01b03809216602488015216604486015260443560648601526064356084860152151560a4850152151560c484015261010060e48401526101248301906136d7565b3461010483015203601f1981018352826112e1565b61ffff81160361044457565b35906112298261155f565b6101603660031901126104445760043561158f8161120d565b6024359061159c8261120d565b6064356115a88161155f565b60c435926001600160401b0384116104445761074e610d69926115d26100199636906004016113e3565b9060e435906115e08261120d565b61012435916115ee8361145a565b61014435936115fc8561120d565b61160587613bbc565b6040516319f123eb60e01b6020820152988997610104359460a43592608435926044359160248d016133cf565b60e03660031901126104445760043561164a8161120d565b602435906116578261120d565b60a4356116638161145a565b60c435926001600160401b0384116104445761154a610d699261168d61001996369060040161146f565b9061169784613bbc565b604051958694632a59396b60e21b602087015260018060a01b0380921660248701521660448501526044356064850152606435608485015260843560a4850152151560c484015261010060e48401526101248301906136d7565b346104445760203660031901126104445760043561170e8161120d565b611716611d3f565b6001600160a01b0390811690811561176457816001549182167f03bebf5becbadd9703358ffd62f5a65bddfcc9c20038edae65aebe5542598bf2600080a36001600160a01b03191617600155005b60405163f1640ae160e01b8152600490fd5b606090602319011261044457602490565b60609060e31901126104445760e490565b6060906101e3190112610444576101e490565b6060906102431901126104445761024490565b60031960a03682011261044457600435906117d88261120d565b6117e136611776565b608435929091906001600160401b0384116104445783600401916101c0809186360301126104445761074e61192e6100199661191b610d699661182387613bbc565b60018060a01b039661191388600154169761185c6040519c8d9b8c9563fb8129c360e01b602088015216602486015260448501906137f0565b60e060a484015261187a610104840161187486611464565b15159052565b6119016101246024880135818601526118a261189860448a01611464565b1515610144870152565b60648801356101648601526118f96118bc60848a01611464565b916118ce610184938489019015159052565b6102246101a49760a48c0135898201526118f08c60c46101c4840191016137ba565b01908a016137ba565b870185613833565b906102848b01526102c48a01906136d7565b930190613833565b85820361010319016102a48701526136d7565b913460c485015260e484019061194a565b600091031261044457565b6001600160a01b03169052565b34610444576000366003190112610444576003546040516001600160a01b039091168152602090f35b34610444576000806003193601126119c95761199a611d3f565b80546001600160a01b03198116825581906001600160a01b0316600080516020613c4a8339815191528280a380f35b80fd5b34610444576000366003190112610444576000546040516001600160a01b039091168152602090f35b3461044457602036600319011261044457600435611a128161120d565b611a1a611d3f565b6003546001600160a01b0391821691829082167f8ec9146610f1f9324ffc354c9f4db61b885844583cba310f2b9488f967d74e2f600080a36001600160a01b03191617600355005b3461044457604036600319011261044457602435611a7f8161120d565b611a87611d3f565b60008080808094600435905af1611a9c613847565b5015611aa55780f35b60405163312d207360e11b8152600490fd5b34610444576000366003190112610444576002546040516001600160a01b039091168152602090f35b34610444576000366003190112610444576001546040516001600160a01b039091168152602090f35b60a090604319011261044457604490565b60a0906101431901126104445761014490565b6102a036600319011261044457600435611b468161120d565b611b4f36611b09565b611b5836611787565b611b6136611b1a565b611b6a36611798565b90611b74366117ab565b92611b7e86613bbc565b600160a01b600190039081600154169582604051986325e0e33160e01b60208b015216602489015260243560448901528035611bb98161145a565b1515606489015260208101356084890152611bdb9060a489019060400161378b565b6101048701611be99161378b565b8135611bf48161145a565b15156101648701526020820135611c0a8161120d565b166101848601526001600160801b0380611c2660408401612c74565b166101a4870152611c3960608301612c74565b166101c4860152608001356101e48501526102048401611c58916137ba565b6102648301611c66916137f0565b6102c490818301611c769161194a565b8152611c81816112c5565b61001990613ab3565b3461044457602036600319011261044457600435611ca78161120d565b611caf611d3f565b6001600160a01b039081168015611ceb57600080546001600160a01b0319811683178255909216600080516020613c4a8339815191528380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6000546001600160a01b03163303611d5357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b0381116112545760051b60200190565b90611db882611d97565b6040611dc6815192836112e1565b8382528193611dd7601f1991611d97565b0191600091825b848110611dec575050505050565b6020908251611dfa81611259565b85815282606081830152828601015201611dde565b634e487b7160e01b600052601160045260246000fd5b6000198114611e345760010190565b611e0f565b634e487b7160e01b600052603260045260246000fd5b9190811015611e715760051b81013590609e1981360301821215610444570190565b611e39565b356113fe8161145a565b903590601e198136030182121561044457018035906001600160401b0382116104445760200191813603831361044457565b90611229604e60405180947f4d61676e6574617256323a204d697373696e672063616c6c20666f722061637460208301526d0d2dedc40eed2e8d040d2dcc8caf60931b6040830152611f0d8151809260208686019101610120565b810103602e8101855201836112e1565b9060206113fe928181520190610143565b15611f365750565b60405162461bcd60e51b815260206004820152908190611f5a906024830190610143565b0390fd5b91908201809211611e3457565b356113fe8161155f565b909291928360041161044457831161044457600401916003190190565b919082606091031261044457604051611faa81611274565b60408082948035611fba8161120d565b84526020810135611fca8161120d565b6020850152013591611fdb8361120d565b0152565b919082606091031261044457604051611ff781611274565b604080829480356120078161145a565b845260208101356120178161120d565b60208501520135910152565b9190916101008184031261044457612039611311565b9261204382611464565b84526020820135602085015261205b60408301611464565b604085015261206c6060830161156b565b60608501526080820135916001600160401b0383116104445761209660e0926120c39483016113e3565b60808601526120a760a08201611464565b60a08601526120b860c0820161121e565b60c08601520161121e565b60e0830152565b91906101c083820312610444576120df611331565b926120e981611464565b84526020810135602085015261210160408201611464565b60408501526060810135606085015261211c60808201611464565b608085015260a081013560a08501526121388260c08301611fdf565b60c08501526101209161214d81848401611fdf565b60e08601526001600160401b036101808301358181116104445782612173918501612023565b6101008701526101a0830135908111610444576121909201612023565b90830152565b60ff81160361044457565b359061122982612196565b81601f82011215610444578035906121c382611d97565b926040906121d3825195866112e1565b83855260209182860191836101c080970286010194818611610444578401925b858410612204575050505050505090565b868483031261044457848791612218611351565b61222187611464565b815261222e838801611464565b8382015261223d868801611464565b86820152606061224e818901611464565b90820152608061225f81890161156b565b9082015260a061227081890161121e565b9082015260c0612281818901611464565b9082015260e061229281890161121e565b908201526101006122a481890161121e565b90820152610120808801359082015261014080880135908201526101606122cc8189016121a1565b9082015261018080880135908201526101a080880135908201528152019301926121f3565b602081830312610444576001600160401b039080359082821161044457016101608184031261044457612322611371565b9261232c8261121e565b845261233a6020830161121e565b602085015261234b6040830161156b565b604085015261235c6060830161121e565b6060850152608082013583811161044457816123799184016113e3565b608085015261238b8160a08401611f92565b60a0850152610100928383013581811161044457826123ab9185016120ca565b60c086015261012083013581811161044457826123c99185016121ac565b60e0860152610140830135908111610444576123e592016121ac565b9082015290565b356113fe8161120d565b80516001600160a01b03908116835260208083015182169084015260409182015116910152565b8051151582526020808201516001600160a01b031690830152604090810151910152565b906113fe908251151581526020830151602082015260408301511515604082015261ffff606084015116606082015260e08061248c6080860151610100806080870152850190610143565b60a080870151151590850152946124ab60c082015160c086019061194a565b015191019061194a565b8051151582526113fe91602082015160208201526124dc6040830151604083019015159052565b606082015160608201526124f96080830151608083019015159052565b60a082015160a082015261251560c083015160c083019061241d565b60e082015161252a610120918284019061241d565b6125456101008401516101c080610180860152840190612441565b920151906101a0818403910152612441565b90815180825260208080930193019160005b828110612577575050505090565b90919293826101c0600192875161259082825115159052565b8084015115158285015260408181015115159083015260608181015115159083015260808181015161ffff16908301526125d260a0808301519084019061194a565b60c0818101511515908301526125f060e0808301519084019061194a565b612603610100808301519084019061194a565b610120818101519083015261014080820151908301526101608082015160ff169083015261018081810151908301526101a0908101519082015201950193929101612569565b9794612697906113fe9a98936126b09661ffff6126bf9a978d60206126a29860018060a01b0396878092168452169101521660408d01521660608b01526101608060808c01528a0190610143565b9260a08901906123f6565b8682036101008801526124b5565b90848203610120860152612557565b91610140818403910152612557565b6040513d6000823e3d90fd5b9190826060910312610444576040516126f281611274565b604080829480356120078161155f565b91908260c09103126104445760405160c081016001600160401b038111828210176112545760405260a0808294803561273a8161145a565b8452602081013561274a8161120d565b6020850152604081013561275d8161155f565b604085015260608101356060850152608081013561277a8161120d565b60808501520135910152565b909181830361026081126104445760a013610444576040516127a78161128f565b82356127b28161120d565b815260208301356127c28161120d565b6020820152604083013560408201526060830135606082015260808301356080820152926127f38160a085016126da565b92612802826101008301612702565b926001600160401b036101c083013581811161044457846128249185016121ac565b936101e08401359182116104445761283d9184016121ac565b9161284b610200820161121e565b9161024061022083013592013590565b81516001600160a01b039081168252602080840151821681840152604080850151818501526060808601519085015260809485015194840194909452845161ffff1660a08401528401511660c082015291015160e08201526113fe949093909261293b9261292c919061291a908051151561010089015260208101516001600160a01b039081166101208a0152604082015161ffff166101408a015260608201516101608a015260808201511661018089015260a001516101a0880152565b610220806101c0880152860190612557565b908482036101e0860152612557565b91610200818403910152610143565b916060838303126104445782356129608161120d565b9260208101359260408201356001600160401b038111610444576113fe92016113e3565b90816020910312610444575190565b6113fe939260609260018060a01b0316825260208201528160408201520190610143565b906080828203126104445781356129cd8161120d565b9260208301359260408101359260608201356001600160401b038111610444576113fe92016113e3565b90926080926113fe959460018060a01b03168352602083015260408201528160608201520190610143565b9060e082820312610444578135612a388161120d565b926020830135612a478161120d565b9260408101359260608201359260808301359260a0810135612a688161145a565b9260c08201356001600160401b038111610444576113fe9201612023565b98979693909260e09693612ace969360018060a01b038092168c521660208b015260408a015260608901526080880152151560a08701526101008060c0880152860190612441565b930152565b9160a083830312610444578235612ae98161120d565b92612af78360208301611f92565b9260808201356001600160401b038111610444576113fe92016120ca565b6001600160a01b03918216815293959460c09391929091612b4f91612b3e9060208801906123f6565b60e0608087015260e08601906124b5565b9560a085015216910152565b9060e082820312610444578135612b718161120d565b926020830135612b808161120d565b926040810135926060820135926080830135612b9b8161145a565b9260a0810135612a688161145a565b97969592612ace949160e0969360018060a01b038092168b521660208a01526040890152606088015260006080880152151560a08701526101008060c0880152860190612441565b919082606091031261044457604051612c0a81611274565b60408082948035612c1a8161145a565b845260208101356020850152013591611fdb8361145a565b919060a083820312610444576040612c6f815192612c4f84611274565b8284968035612c5d8161145a565b86526020810135602087015201612bf2565b910152565b35906001600160801b038216820361044457565b91908260a091031261044457604051612ca08161128f565b60808082948035612cb08161145a565b84526020810135612cc08161120d565b6020850152612cd160408201612c74565b6040850152612ce260608201612c74565b60608501520135910152565b6102a081830312610444576040519160e083016001600160401b0381118482101761125457612d839261024091604052612d278161121e565b855260208101356020860152612d408360408301612c32565b6040860152612d528360e08301612bf2565b6060860152612d65836101408301612c88565b6080860152612d78836101e08301611fdf565b60a086015201611f92565b60c082015290565b604080918051151584526020810151602085015201511515910152565b6080809180511515845260018060a01b036020820151166020850152600180831b0380604083015116604086015260608201511660608501520151910152565b969390959298979491986102c0880199600160a01b6001900380981689526020890152805115156040890152602081015160608901526040015160808801612e2f91612d8b565b60e08701612e3c91612d8b565b6101408601612e4a91612da8565b6101e08501612e589161241d565b6102408401612e66916123f6565b16906102a00152565b91906101e08382031261044457612f0090610180612e8b611371565b94612e9581611464565b86526020810135602087015260408101356040870152612eb76060820161121e565b6060870152612ec86080820161121e565b6080870152612ed960a08201611464565b60a087015260c081013560c0870152612ef58360e08301612c88565b60e087015201611fdf565b610100830152565b9190916102e08184031261044457612f1f8161121e565b92612f2c6020830161121e565b92612f396040840161156b565b92612f466060820161121e565b92612f548160808401612e6f565b926001600160401b03906102608401358281116104445783612f779186016121ac565b936102808101358381116104445784612f919183016121ac565b936102a08201358481116104445781612fab918401612023565b936102c0830135908111610444576113fe92016113e3565b97946130789061308a936130a89893613099978c60406113fe9f9d9961ffff9060018060a01b038097818098168652166020850152169101521660608c01528151151560808c0152602082015160a08c0152604082015160c08c015260608201511660e08b015260808101519061304061010092838d019061194a565b60a081015115156101208c015260c08101516101408c015261306b60e08201516101608d0190612da8565b01516102008a019061241d565b6102e0806102608a0152880190612557565b90868203610280880152612557565b908482036102a0860152612441565b916102c0818403910152610143565b9190826080910312610444576040516130cf816112aa565b6060808294803584526020810135602085015260408101356130f08161120d565b6040850152013591611fdb8361120d565b91908260409103126104445760405161311981611259565b602080829480358452013591611fdb8361120d565b9190916101a081840312610444576131458161121e565b926131526020830161121e565b9261315f6040840161156b565b926001600160401b0392606082013584811161044457816131819184016113e3565b9361318f82608085016130b7565b9361010084013582811161044457836131a9918601612023565b936131b8846101208301613101565b9361016082013584811161044457816131d29184016121ac565b93610180830135908111610444576113fe92016121ac565b97939561326a926060613236613297998c60406113fe9f9d9b976132899a61ffff9160018060a01b039889809216865216602085015216910152828d6101a091829101528d0190610143565b93805160808d0152602081015160a08d01528260408201511660c08d015201511660e08a01528882036101008a0152612441565b83516101208801526020909301516001600160a01b0316610140870152565b848203610160860152612557565b91610180818403910152612557565b90816080910312610444576060604051916132c0836112aa565b80356132cb8161120d565b835260208101356132db8161120d565b602084015260408101356132ee8161145a565b60408401520135606082015290565b6001600160a01b039182168152911660208201529015156040820152606081019190915260800190565b8051821015611e715760209160051b010190565b9190610140838203126104445782356133538161120d565b9260208101356133628161120d565b9260408201359260608301356133778161155f565b9260808101359260a08201359260c0830135906001600160401b038211610444576133a39184016113e3565b9160e08101356133b28161120d565b916113fe6101206101008401356133c88161145a565b930161121e565b999590939461ffff6101409a96613421959a9e9d99949a60408e60018060a01b03809e81809c16835216602082015201521660608c015260808b015260a08a01526101608060c08b0152890190610143565b981660e0870152610100860152151561012085015216910152565b9081606091031261044457604080519161345583611274565b80356134608161120d565b835260208101356134708161120d565b60208401520135604082015290565b9190826040910312610444576020825192015190565b6001600160a01b03918216815291166020820152604081019190915260600190565b908160a0910312610444576080604051916134d18361128f565b80356134dc8161120d565b835260208101356134ec8161120d565b602084015260408101356134ff8161145a565b6040840152606081013560608401520135608082015290565b908160a0910312610444576080604051916135328361128f565b8035835260208101356135448161120d565b602084015260408101356134ff8161120d565b91909160a08184031261044457803561356f8161120d565b92602082013561357e8161155f565b926040830135926060810135926001600160401b039160808101359083821161044457019060608282031261044457604051926135ba84611274565b82356135c58161120d565b845260208301356135d58161120d565b60208501526040830135908111610444576135f092016113e3565b604082015290565b93906113fe95916101009461ffff60409560018060a01b03809516895216602088015284870152606086015260a060808601528082511660a086015260208201511660c0850152015191606060e08201520190610143565b919082604091031261044457602082356136698161120d565b92013590565b9081602091031261044457356113fe8161120d565b9035601e1982360301811215610444570160208101919035906001600160401b03821161044457813603831361044457565b908060209392818452848401376000828201840152601f01601f1916010190565b906113fe9082356136e78161145a565b151581526020830135602082015260408301356137038161145a565b151560408201526137246137196060850161156b565b61ffff166060830152565b60e06137838161374b61373a6080880188613684565b6101008060808901528701916136b6565b9561376461375b60a08301611464565b151560a0870152565b61377d61377360c0830161121e565b60c087019061194a565b0161121e565b91019061194a565b60408091803561379a8161145a565b151584526020810135602085015201356137b38161145a565b1515910152565b6040809180356137c98161145a565b1515845260208101356137db8161120d565b6001600160a01b031660208501520135910152565b604090818135916138008361120d565b6001600160a01b03928316855282602082013561381c8161120d565b166020860152013561382d8161120d565b16910152565b903560fe1982360301811215610444570190565b3d15613872573d9061385882611391565b9161386660405193846112e1565b82523d6000602084013e565b606090565b803b1561176457631221baf960e31b6001600160e01b0319602061389c3687876113ac565b0151160361176457826000836138ef6138d66138c66138be86869a879a611f75565b810190613a10565b5060208082518301019101613a46565b50506001600160a01b039094169450613bbc9350505050565b6138fe60405180948193613aa5565b03925af19061390b613847565b91159081613921575b5061391c5750565b613afd565b90501538613914565b803b156117645763d505accf60e01b6001600160e01b0319602061394f3687876113ac565b0151160361176457826139658160e09585611f75565b90809591810103126104445760008094936138ef856139a060808598359261398c8461120d565b613999602082013561120d565b0135612196565b6001600160a01b0316613bbc565b803b156117645763aba0784760e01b6001600160e01b031960206139d33687876113ac565b0151160361176457826139e98160c09585611f75565b90809591810103126104445760008094936138ef856139a060608598359261398c8461120d565b91906040838203126104445782356001600160401b03811161044457602091613a3a9185016113e3565b9201356113fe8161155f565b919082610100910312610444578151613a5e8161145a565b916020810151613a6d8161120d565b916040820151613a7c8161120d565b9160608101519160808201519160a0810151613a9781612196565b9160e060c083015192015190565b908092918237016000815290565b6002546001600160a01b03168015613aeb57816000929160208493519201905af490613add613847565b9115613ae557565b50613afd565b604051631c94b02360e21b8152600490fd5b6044815110613b9557600481015181019060208160248401930312610444576024810151906001600160401b0382116104445701908060438301121561044457602482015191613b4c83611391565b91613b5a60405193846112e1565b8383526044848301011161044457611f5a92613b7d916044602085019101610120565b60405162461bcd60e51b815291829160048301611f1d565b604051633922dd2d60e21b8152600490fd5b9081602091031261044457516113fe8161145a565b6001600160a01b039081163314159081613bd8575b5061044957565b600154604051633a304d8b60e21b815260006004820152336024820152925060209183916044918391165afa90811561043f57600091613c1b575b501538613bd1565b613c3c915060203d8111613c42575b613c3481836112e1565b810190613ba7565b38613c13565b503d613c2a56fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220d67e720dcdd3ae3deb2f8b874a54f8a0e9c1a631b982419653da86d7f86b103f64736f6c63430008130033";

type MagnetarV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2__factory extends ContractFactory {
  constructor(...args: MagnetarV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2";
  }

  override deploy(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2> {
    return super.deploy(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    ) as Promise<MagnetarV2>;
  }
  override getDeployTransaction(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    );
  }
  override attach(address: string): MagnetarV2 {
    return super.attach(address) as MagnetarV2;
  }
  override connect(signer: Signer): MagnetarV2__factory {
    return super.connect(signer) as MagnetarV2__factory;
  }
  static readonly contractName: "MagnetarV2";

  public readonly contractName: "MagnetarV2";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2Interface {
    return new utils.Interface(_abi) as MagnetarV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2 {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2;
  }
}
