/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MagnetarV2,
  MagnetarV2Interface,
} from "../../../contracts/Magnetar/MagnetarV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_marketModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ActionNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "Failed",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownReason",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ICluster",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract ICluster",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newHelper",
        type: "address",
      },
    ],
    name: "HelperUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "burst",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "zroPaymentAddress",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "zroPaymentAddress",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
              {
                internalType: "address payable",
                name: "refundAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "zroPaymentAddress",
                type: "address",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
              {
                internalType: "address payable",
                name: "refundAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "zroPaymentAddress",
                type: "address",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "helper",
    outputs: [
      {
        internalType: "contract IMagnetarHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketModule",
    outputs: [
      {
        internalType: "contract MagnetarMarketModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_helper",
        type: "address",
      },
    ],
    name: "setHelper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unwrap",
        type: "bool",
      },
      {
        internalType: "address",
        name: "zroPaymentAddress",
        type: "address",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346200016357601f62003e4038819003918201601f19168301916001600160401b03831184841017620001685780849260609460405283398101031262000163576200004d816200017e565b60406200005d602084016200017e565b9201516001600160a01b0380821693918490036200016357620000803362000193565b8060018060a01b03199316836001541617600155338160005416036200011f57811615620000cb57620000b39062000193565b6002541617600255604051613c659081620001db8239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016357565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063013546e11461011b578063150b7a0214610116578063180ce00e1461011157806319f123eb1461010c578063357b97b014610107578063437be622146101025780635f5e9448146100fd57806363b0e66a146100f8578063715018a6146100f35780638da5cb5b146100ee578063986ccc7f146100e9578063b25ea8fb146100e4578063cfd8b3d8146100df578063dbd01de1146100da578063e5546fac146100d55763f2fde38b0361000e57611c4a565b611aed565b611aa0565b611a77565b611a22565b6119b5565b61198c565b611940565b611917565b61177e565b6116b1565b6115f2565b611536565b61143e565b6113c1565b6101df565b60005b8381106101335750506000910152565b8181015183820152602001610123565b9060209161015c81518092818552858086019101610120565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b8401019601946000925b85841061019d575050505050505090565b9091929394959685806101ce600193603f1986820301885286838d5180511515845201519181858201520190610143565b99019401940192959493919061018c565b602036600319011261044a576004356001600160401b0380821161044a573660238301121561044a5781600401351161044a57366024826004013560051b8301011161044a576000906102358160040135611d6e565b91805b82600401358110610271578382340361025f5761025b9060405191829182610168565b0390f35b60405163dd8e4af760e01b8152600490fd5b61028381846004013560248601611e0f565b906060926102ae8484019161029e61029a84611e36565b1590565b611174575b604085013590611f1e565b936001806102c56102be87611f2b565b61ffff1690565b03610309575050826102f96102ff926102f16102e6602061030498016123ac565b936080810190611e40565b929091611e36565b92613974565b611de5565b610238565b61ffff60028161031888611f2b565b1603610341575050508261033b6102ff926102f16102e6602061030498016123ac565b926138f0565b60038161034d88611f2b565b160361037657505050826103706102ff926102f16102e6602061030498016123ac565b9261383d565b9091925060048161038687611f2b565b1603610461575050506103b96103b46103ac6103a56080860186611e40565b8091611f35565b810190613635565b6111b4565b91336001600160a01b0384160361044f576103b46103b460206103dc93016123ac565b803b1561044a5760405163a22cb46560e01b81526001600160a01b03939093166004840152600060248401819052908390604490829084905af1918215610445576103049261042c575b50611de5565b8061043961043f926111f4565b806118ff565b38610426565b61268e565b600080fd5b60405163ea8e4eb560e01b8152600490fd5b60058161046d87611f2b565b160361050d575050506104916104896103a56080850185611e40565b810190613616565b926001600160a01b039091169033820361044f576103b46103b460206104b793016123ac565b92833b1561044a5760405163b8489fb560e01b81526001600160a01b03929092166004830152602482015260006044820181905290928390606490829084905af1918215610445576103049261042c5750611de5565b61012c8161051a87611f2b565b16036105ca5750505061053e6105366103a56080850185611e40565b810190613402565b9161055161054c84516111b4565b613b82565b6105636103b46103b4602084016123ac565b9261056e81516111b4565b91604061057e60208401516111b4565b92015191853b1561044a576105ae956040600095815198899687958693630c46aac760e31b85526004850161345b565b03930135905af1918215610445576103049261042c5750611de5565b61012d816105d787611f2b565b1603610654575050506105fb6105f36103a56080850185611e40565b81019061351d565b90956001600160a01b039094169391929061061585613b82565b6106276103b46103b4602086016123ac565b90813b1561044a576000956105ae60409283519a8b988997889563695ef6bf60e01b8752600487016135be565b60648161066087611f2b565b16036107b95750506040906080936106886106806103a587840184611e40565b8101906134de565b9460006106ad6103b46103b46020808b01966106a761054c89516111b4565b016123ac565b9261071c6106bd895192516111b4565b936106ca888b01516111b4565b968a01519901518751634d4d7cbd60e11b815260048101939093526001600160a01b039485166024840152939095166044820152606481019790975260848701919091528592839190829060a4820190565b03925af1801561044557610304926000908192610785575b5060408051602081019290925281019190915261075e81606081015b03601f198101835282611294565b6107666112b7565b6001815290602082015261077a82876132ed565b5261042681866132ed565b61075e92506107ac915060403d6040116107b2575b6107a48183611294565b810190613445565b91610734565b503d61079a565b60c8816107c587611f2b565b16036108985750506080906108036103b46103b460206107f56107ed6103a5888b018b611e40565b81019061347d565b976106a761054c8a516111b4565b61080d85516111b4565b9261081b60208701516111b4565b906108296040880151151590565b93870151960151823b1561044a576040516374d2492960e11b81526001600160a01b03958616600482015294909116602485015291151560448401526064830194909452608482015291600090839081838160a4810103925af1918215610445576103049261042c5750611de5565b60c9816108a6879597611f2b565b160361097957505061091d9250806108e26103b46103b460206108d46105366103a560806040990188611e40565b946106a761054c87516111b4565b6108ec82516111b4565b916000846108fd60208401516111b4565b92015185516314890dcb60e21b815297889586948593916004850161345b565b03925af1801561044557610304926000908192610955575b5060408051602081019290925281019190915261075e8160608101610750565b61075e9250610973915060403d6040116107b2576107a48183611294565b91610935565b60668161098585611f2b565b1603610a255750509091506080810161099e9082611e40565b806109a892611f35565b81016109b391613301565b6001600160a01b039a9099988b1698909791969095929492916109d58a613b82565b604080516319f123eb60e01b60208201529c8d9c610a009c9082169b90920135981660248d01613395565b03601f1981018252610a129082611294565b610a1b90613a79565b5061030490611de5565b60cb81610a3185611f2b565b1603610b0d57505080610a616103b46103b460206108d4610a596103a5608084990188611e40565b81019061326c565b610a6b82516111b4565b946000610a7a858501516111b4565b91610a886040860151151590565b94015196610aac60405198899687958694630cb0f5b760e31b8652600486016132c3565b03925af180156104455761075e6107509161030494600091610ade575b50604051928391602083019190602083019252565b610b00915060203d602011610b06575b610af88183611294565b81019061294a565b38610ac9565b503d610aee565b60cc81610b1985611f2b565b1603610b8c57505080610b416103b46103b460206108d4610a596103a5608084990188611e40565b610b4b82516111b4565b946000610b5a858501516111b4565b91610b686040860151151590565b94015196610aac6040519889968795869463cd0211eb60e01b8652600486016132c3565b61012f81610b9c85979495611f2b565b1603610c3a57505050610bc0610bb86103a56080850185611e40565b8101906130f4565b9160018060a09c9899969a979c1b0380961693610bdc85613b82565b610bee6103b46103b460208b016123ac565b998a3b1561044a576040516209b9f160e91b81529c8d9a8b998a99610c199991169060048b016131b0565b0391604001355a94600095f1918215610445576103049261042c5750611de5565b61013081610c4787611f2b565b1603610cc957505050610c6b610c636103a56080850185611e40565b810190612ece565b9160018060a09c989c9a9997969a1b0380981693610c8885613b82565b610c9a6103b46103b460208b016123ac565b998a3b1561044a5789976040519d8e9b8c9a8b9a63dfefd99d60e01b8c5216921660048a0198610c1999612f89565b60cd81610cd587611f2b565b1603610d6b575092610d666104269261075061030496610d08610d006103a560809788810190611e40565b810190612cb4565b92610d1661054c85516111b4565b610d2084516111b4565b936020810151966040820151938201519082015190610d4960c060a085015194015194546111b4565b94604051998a986325e0e33160e01b60208b015260248a01612dae565b613a79565b60ce81610d7787611f2b565b1603610de3575050506104266040610d6684610750610daa610da26103a560806103049a0185611e40565b810190612b21565b94909391506001600160a01b0390811690610dc482613b82565b8a51638cb1e16560e01b60208201529a8b990135961660248901612b70565b60cf81610def87611f2b565b1603610e645750506040610d6684610750610e4561042695610e25610e1d6103a560806103049c0187611e40565b810190612a99565b90936001600160a01b0390921692909190610e3f84613b82565b546111b4565b92875197889663fb8129c360e01b602089015201359260248701612adb565b90915060d081610e7386611f2b565b1603610ee05750506104266040610d6684610750610ea5610e9d6103a560806103049a0185611e40565b8101906129e8565b949093919291906001600160a01b0390811690610ec182613b82565b8b51632a59396b60e21b60208201529b8c9a0135971660248a01612a4c565b60d181610eec86611f2b565b1603610f9457505060206103b483826000610f3b610f1e610f166103a560806103b49b0187611e40565b81019061297d565b9a90976001600160a01b039093169691959092916106a788613b82565b92610f5c60405198899687958694636a7229a760e11b8652600486016129bd565b03925af19182156104455761030492610f755750611de5565b610f8d9060203d602011610b0657610af88183611294565b5038610426565b60d281610fa086611f2b565b160361100c57505060206103b483826000610fee6103b4610fd5610fcd6103a56080610f5c9c0188611e40565b810190612910565b976001600160a01b03909216969095906106a788613b82565b92604051978895869485936301cfadbd60e71b855260048501612959565b6101908161101986611f2b565b1603611092575060809061103d6110356103a584870187611e40565b81019061279e565b936110506103b46103b4602084016123ac565b92855193602087015191604088015194880151970151813b1561044a576000956105ae60409283519a8b9889978895633a25f98b60e11b875260048701612840565b610133906110a1859395611f2b565b1603611162576080926110c46110bc6103a586850185611e40565b8101906122b1565b916110d261054c84516111b4565b6110e46103b46103b4602084016123ac565b6110ee84516111b4565b906110fc60208601516111b4565b9161111861110f604088015161ffff1690565b958701516111b4565b978601519060a08701519160c08801519761010060e082015191015190853b1561044a576000996040956105ae9487519e8f9c8d9b8c9963424a214b60e11b8b5260048b01612609565b604051630395e47f60e41b8152600490fd5b6111af6111846080870187611e40565b90506111a76040516111a2816107508a602083019190602083019252565b611e72565b901515611eee565b6102a3565b6001600160a01b031690565b6001600160a01b0381160361044a57565b35906111dc826111c0565b565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161120757604052565b6111de565b604081019081106001600160401b0382111761120757604052565b606081019081106001600160401b0382111761120757604052565b60a081019081106001600160401b0382111761120757604052565b608081019081106001600160401b0382111761120757604052565b61030081019081106001600160401b0382111761120757604052565b601f909101601f19168101906001600160401b0382119082101761120757604052565b604051906111dc8261120c565b6040519061010082016001600160401b0381118382101761120757604052565b6040519061014082016001600160401b0381118382101761120757604052565b604051906101c082016001600160401b0381118382101761120757604052565b6040519061012082016001600160401b0381118382101761120757604052565b604051906111dc82611242565b6001600160401b03811161120757601f01601f191660200190565b92919261137882611351565b916113866040519384611294565b82948184528183011161044a578281602093846000960137010152565b9080601f8301121561044a578160206113be9335910161136c565b90565b3461044a57608036600319011261044a576113dd6004356111c0565b6113e86024356111c0565b6064356001600160401b03811161044a576114079036906004016113a3565b50604051630a85bd0160e11b8152602090f35b8015150361044a57565b35906111dc8261141a565b908161010091031261044a5790565b60e036600319011261044a57600435611456816111c0565b60243590611463826111c0565b608435916114708361141a565b60a4359061147d8261141a565b60c4356001600160401b03811161044a5761001994610d66936114a761150a93369060040161142f565b916114b185613b82565b604051968795638cb1e16560e01b602088015260018060a01b03809216602488015216604486015260443560648601526064356084860152151560a4850152151560c484015261010060e484015261012483019061369d565b3461010483015203601f198101835282611294565b61ffff81160361044a57565b35906111dc8261151f565b61016036600319011261044a5760043561154f816111c0565b6024359061155c826111c0565b6064356115688161151f565b60c435926001600160401b03841161044a57610750610d66926115926100199636906004016113a3565b9060e435906115a0826111c0565b61012435916115ae8361141a565b61014435936115bc856111c0565b6115c587613b82565b6040516319f123eb60e01b6020820152988997610104359460a43592608435926044359160248d01613395565b60e036600319011261044a5760043561160a816111c0565b60243590611617826111c0565b60a4356116238161141a565b60c435926001600160401b03841161044a5761150a610d669261164d61001996369060040161142f565b9061165784613b82565b604051958694632a59396b60e21b602087015260018060a01b0380921660248701521660448501526044356064850152606435608485015260843560a4850152151560c484015261010060e484015261012483019061369d565b3461044a57602036600319011261044a576004356116ce816111c0565b6116d6611cff565b6001600160a01b0390811690811561172457816001549182167f03bebf5becbadd9703358ffd62f5a65bddfcc9c20038edae65aebe5542598bf2600080a36001600160a01b03191617600155005b60405163f1640ae160e01b8152600490fd5b606090602319011261044a57602490565b60609060e319011261044a5760e490565b6060906101e319011261044a576101e490565b60609061024319011261044a5761024490565b60031960a03682011261044a5760043590611798826111c0565b6117a136611736565b608435929091906001600160401b03841161044a5783600401916101c08091863603011261044a576107506118ee610019966118db610d66966117e387613b82565b60018060a01b03966118d388600154169761181c6040519c8d9b8c9563fb8129c360e01b602088015216602486015260448501906137b6565b60e060a484015261183a610104840161183486611424565b15159052565b6118c161012460248801358186015261186261185860448a01611424565b1515610144870152565b60648801356101648601526118b961187c60848a01611424565b9161188e610184938489019015159052565b6102246101a49760a48c0135898201526118b08c60c46101c484019101613780565b01908a01613780565b8701856137f9565b906102848b01526102c48a019061369d565b9301906137f9565b85820361010319016102a487015261369d565b913460c485015260e484019061190a565b600091031261044a57565b6001600160a01b03169052565b3461044a57600036600319011261044a576003546040516001600160a01b039091168152602090f35b3461044a576000806003193601126119895761195a611cff565b80546001600160a01b03198116825581906001600160a01b0316600080516020613c108339815191528280a380f35b80fd5b3461044a57600036600319011261044a576000546040516001600160a01b039091168152602090f35b3461044a57602036600319011261044a576004356119d2816111c0565b6119da611cff565b6003546001600160a01b0391821691829082167f8ec9146610f1f9324ffc354c9f4db61b885844583cba310f2b9488f967d74e2f600080a36001600160a01b03191617600355005b3461044a57604036600319011261044a57602435611a3f816111c0565b611a47611cff565b60008080808094600435905af1611a5c61380d565b5015611a655780f35b60405163312d207360e11b8152600490fd5b3461044a57600036600319011261044a576002546040516001600160a01b039091168152602090f35b3461044a57600036600319011261044a576001546040516001600160a01b039091168152602090f35b60a090604319011261044a57604490565b60a09061014319011261044a5761014490565b6102a036600319011261044a57600435611b06816111c0565b611b0f36611ac9565b611b1836611747565b611b2136611ada565b611b2a36611758565b90611b343661176b565b92611b3e86613b82565b600160a01b600190039081600154169582604051986325e0e33160e01b60208b015216602489015260243560448901528035611b798161141a565b1515606489015260208101356084890152611b9b9060a4890190604001613751565b6101048701611ba991613751565b8135611bb48161141a565b15156101648701526020820135611bca816111c0565b166101848601526001600160801b0380611be660408401612c3a565b166101a4870152611bf960608301612c3a565b166101c4860152608001356101e48501526102048401611c1891613780565b6102648301611c26916137b6565b6102c490818301611c369161190a565b8152611c4181611278565b61001990613a79565b3461044a57602036600319011261044a57600435611c67816111c0565b611c6f611cff565b6001600160a01b039081168015611cab57600080546001600160a01b0319811683178255909216600080516020613c108339815191528380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6000546001600160a01b03163303611d1357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b0381116112075760051b60200190565b90611d7882611d57565b6040611d8681519283611294565b8382528193611d97601f1991611d57565b0191600091825b848110611dac575050505050565b6020908251611dba8161120c565b85815282606081830152828601015201611d9e565b634e487b7160e01b600052601160045260246000fd5b6000198114611df45760010190565b611dcf565b634e487b7160e01b600052603260045260246000fd5b9190811015611e315760051b81013590609e198136030182121561044a570190565b611df9565b356113be8161141a565b903590601e198136030182121561044a57018035906001600160401b03821161044a5760200191813603831361044a57565b906111dc604e60405180947f4d61676e6574617256323a204d697373696e672063616c6c20666f722061637460208301526d0d2dedc40eed2e8d040d2dcc8caf60931b6040830152611ecd8151809260208686019101610120565b810103602e810185520183611294565b9060206113be928181520190610143565b15611ef65750565b60405162461bcd60e51b815260206004820152908190611f1a906024830190610143565b0390fd5b91908201809211611df457565b356113be8161151f565b909291928360041161044a57831161044a57600401916003190190565b919082606091031261044a57604051611f6a81611227565b60408082948035611f7a816111c0565b84526020810135611f8a816111c0565b6020850152013591611f9b836111c0565b0152565b919082606091031261044a57604051611fb781611227565b60408082948035611fc78161141a565b84526020810135611fd7816111c0565b60208501520135910152565b9190916101008184031261044a57611ff96112c4565b9261200382611424565b84526020820135602085015261201b60408301611424565b604085015261202c6060830161152b565b60608501526080820135916001600160401b03831161044a5761205660e0926120839483016113a3565b608086015261206760a08201611424565b60a086015261207860c082016111d1565b60c0860152016111d1565b60e0830152565b91906101c08382031261044a5761209f6112e4565b926120a981611424565b8452602081013560208501526120c160408201611424565b6040850152606081013560608501526120dc60808201611424565b608085015260a081013560a08501526120f88260c08301611f9f565b60c08501526101209161210d81848401611f9f565b60e08601526001600160401b0361018083013581811161044a5782612133918501611fe3565b6101008701526101a083013590811161044a576121509201611fe3565b90830152565b60ff81160361044a57565b35906111dc82612156565b81601f8201121561044a5780359061218382611d57565b9260409061219382519586611294565b83855260209182860191836101c08097028601019481861161044a578401925b8584106121c4575050505050505090565b868483031261044a578487916121d8611304565b6121e187611424565b81526121ee838801611424565b838201526121fd868801611424565b86820152606061220e818901611424565b90820152608061221f81890161152b565b9082015260a06122308189016111d1565b9082015260c0612241818901611424565b9082015260e06122528189016111d1565b908201526101006122648189016111d1565b908201526101208088013590820152610140808801359082015261016061228c818901612161565b9082015261018080880135908201526101a080880135908201528152019301926121b3565b60208183031261044a576001600160401b039080359082821161044a57016101608184031261044a576122e2611324565b926122ec826111d1565b84526122fa602083016111d1565b602085015261230b6040830161152b565b604085015261231c606083016111d1565b6060850152608082013583811161044a57816123399184016113a3565b608085015261234b8160a08401611f52565b60a0850152610100928383013581811161044a578261236b91850161208a565b60c086015261012083013581811161044a578261238991850161216c565b60e086015261014083013590811161044a576123a5920161216c565b9082015290565b356113be816111c0565b80516001600160a01b03908116835260208083015182169084015260409182015116910152565b8051151582526020808201516001600160a01b031690830152604090810151910152565b906113be908251151581526020830151602082015260408301511515604082015261ffff606084015116606082015260e08061244c6080860151610100806080870152850190610143565b60a0808701511515908501529461246b60c082015160c086019061190a565b015191019061190a565b8051151582526113be916020820151602082015261249c6040830151604083019015159052565b606082015160608201526124b96080830151608083019015159052565b60a082015160a08201526124d560c083015160c08301906123dd565b60e08201516124ea61012091828401906123dd565b6125056101008401516101c080610180860152840190612401565b920151906101a0818403910152612401565b90815180825260208080930193019160005b828110612537575050505090565b90919293826101c0600192875161255082825115159052565b8084015115158285015260408181015115159083015260608181015115159083015260808181015161ffff169083015261259260a0808301519084019061190a565b60c0818101511515908301526125b060e0808301519084019061190a565b6125c3610100808301519084019061190a565b610120818101519083015261014080820151908301526101608082015160ff169083015261018081810151908301526101a0908101519082015201950193929101612529565b9794612657906113be9a98936126709661ffff61267f9a978d60206126629860018060a01b0396878092168452169101521660408d01521660608b01526101608060808c01528a0190610143565b9260a08901906123b6565b868203610100880152612475565b90848203610120860152612517565b91610140818403910152612517565b6040513d6000823e3d90fd5b91908260a091031261044a576040516126b281611242565b608080829480356126c2816111c0565b845260208101356126d2816111c0565b602085015260408101356040850152606081013560608501520135910152565b919082606091031261044a5760405161270a81611227565b60408082948035611fc78161151f565b91908260c091031261044a5760405160c081016001600160401b038111828210176112075760405260a080829480356127528161141a565b84526020810135612762816111c0565b602085015260408101356127758161151f565b6040850152606081013560608501526080810135612792816111c0565b60808501520135910152565b9060208282031261044a576001600160401b039180359083821161044a5701906102008282031261044a576127d1611344565b926127dc828461269a565b84526127eb8260a085016126f2565b60208501526127fe82610100850161271a565b60408501526101c083013581811161044a578261281c91850161216c565b60608501526101e083013590811161044a57612838920161216c565b608082015290565b93906113be95936040612901946128ef93608060018060a01b0391828151168b528260208201511660208c015284810151858c0152606081015160608c0152015160808a015261ffff82511660a08a015260208201511660c0890152015160e087015261010086019060a08091805115158452600180831b0380602083015116602086015261ffff60408301511660408601526060820151606086015260808201511660808501520151910152565b610200806101c0860152840190612517565b916101e0818403910152612517565b9160608383031261044a578235612926816111c0565b9260208101359260408201356001600160401b03811161044a576113be92016113a3565b9081602091031261044a575190565b6113be939260609260018060a01b0316825260208201528160408201520190610143565b9060808282031261044a578135612993816111c0565b9260208301359260408101359260608201356001600160401b03811161044a576113be92016113a3565b90926080926113be959460018060a01b03168352602083015260408201528160608201520190610143565b9060e08282031261044a5781356129fe816111c0565b926020830135612a0d816111c0565b9260408101359260608201359260808301359260a0810135612a2e8161141a565b9260c08201356001600160401b03811161044a576113be9201611fe3565b98979693909260e09693612a94969360018060a01b038092168c521660208b015260408a015260608901526080880152151560a08701526101008060c0880152860190612401565b930152565b9160a08383031261044a578235612aaf816111c0565b92612abd8360208301611f52565b9260808201356001600160401b03811161044a576113be920161208a565b6001600160a01b03918216815293959460c09391929091612b1591612b049060208801906123b6565b60e0608087015260e0860190612475565b9560a085015216910152565b9060e08282031261044a578135612b37816111c0565b926020830135612b46816111c0565b926040810135926060820135926080830135612b618161141a565b9260a0810135612a2e8161141a565b97969592612a94949160e0969360018060a01b038092168b521660208a01526040890152606088015260006080880152151560a08701526101008060c0880152860190612401565b919082606091031261044a57604051612bd081611227565b60408082948035612be08161141a565b845260208101356020850152013591611f9b8361141a565b919060a08382031261044a576040612c35815192612c1584611227565b8284968035612c238161141a565b86526020810135602087015201612bb8565b910152565b35906001600160801b038216820361044a57565b91908260a091031261044a57604051612c6681611242565b60808082948035612c768161141a565b84526020810135612c86816111c0565b6020850152612c9760408201612c3a565b6040850152612ca860608201612c3a565b60608501520135910152565b6102a08183031261044a576040519160e083016001600160401b0381118482101761120757612d499261024091604052612ced816111d1565b855260208101356020860152612d068360408301612bf8565b6040860152612d188360e08301612bb8565b6060860152612d2b836101408301612c4e565b6080860152612d3e836101e08301611f9f565b60a086015201611f52565b60c082015290565b604080918051151584526020810151602085015201511515910152565b6080809180511515845260018060a01b036020820151166020850152600180831b0380604083015116604086015260608201511660608501520151910152565b969390959298979491986102c0880199600160a01b6001900380981689526020890152805115156040890152602081015160608901526040015160808801612df591612d51565b60e08701612e0291612d51565b6101408601612e1091612d6e565b6101e08501612e1e916123dd565b6102408401612e2c916123b6565b16906102a00152565b91906101e08382031261044a57612ec690610180612e51611324565b94612e5b81611424565b86526020810135602087015260408101356040870152612e7d606082016111d1565b6060870152612e8e608082016111d1565b6080870152612e9f60a08201611424565b60a087015260c081013560c0870152612ebb8360e08301612c4e565b60e087015201611f9f565b610100830152565b9190916102e08184031261044a57612ee5816111d1565b92612ef2602083016111d1565b92612eff6040840161152b565b92612f0c606082016111d1565b92612f1a8160808401612e35565b926001600160401b039061026084013582811161044a5783612f3d91860161216c565b9361028081013583811161044a5784612f5791830161216c565b936102a082013584811161044a5781612f71918401611fe3565b936102c083013590811161044a576113be92016113a3565b979461303e906130509361306e989361305f978c60406113be9f9d9961ffff9060018060a01b038097818098168652166020850152169101521660608c01528151151560808c0152602082015160a08c0152604082015160c08c015260608201511660e08b015260808101519061300661010092838d019061190a565b60a081015115156101208c015260c08101516101408c015261303160e08201516101608d0190612d6e565b01516102008a01906123dd565b6102e0806102608a0152880190612517565b90868203610280880152612517565b908482036102a0860152612401565b916102c0818403910152610143565b919082608091031261044a576040516130958161125d565b6060808294803584526020810135602085015260408101356130b6816111c0565b6040850152013591611f9b836111c0565b919082604091031261044a576040516130df8161120c565b602080829480358452013591611f9b836111c0565b9190916101a08184031261044a5761310b816111d1565b92613118602083016111d1565b926131256040840161152b565b926001600160401b0392606082013584811161044a57816131479184016113a3565b93613155826080850161307d565b9361010084013582811161044a578361316f918601611fe3565b9361317e8461012083016130c7565b9361016082013584811161044a578161319891840161216c565b9361018083013590811161044a576113be920161216c565b9793956132309260606131fc61325d998c60406113be9f9d9b9761324f9a61ffff9160018060a01b039889809216865216602085015216910152828d6101a091829101528d0190610143565b93805160808d0152602081015160a08d01528260408201511660c08d015201511660e08a01528882036101008a0152612401565b83516101208801526020909301516001600160a01b0316610140870152565b848203610160860152612517565b91610180818403910152612517565b9081608091031261044a576060604051916132868361125d565b8035613291816111c0565b835260208101356132a1816111c0565b602084015260408101356132b48161141a565b60408401520135606082015290565b6001600160a01b039182168152911660208201529015156040820152606081019190915260800190565b8051821015611e315760209160051b010190565b91906101408382031261044a578235613319816111c0565b926020810135613328816111c0565b92604082013592606083013561333d8161151f565b9260808101359260a08201359260c0830135906001600160401b03821161044a576133699184016113a3565b9160e0810135613378816111c0565b916113be61012061010084013561338e8161141a565b93016111d1565b999590939461ffff6101409a966133e7959a9e9d99949a60408e60018060a01b03809e81809c16835216602082015201521660608c015260808b015260a08a01526101608060c08b0152890190610143565b981660e0870152610100860152151561012085015216910152565b9081606091031261044a57604080519161341b83611227565b8035613426816111c0565b83526020810135613436816111c0565b60208401520135604082015290565b919082604091031261044a576020825192015190565b6001600160a01b03918216815291166020820152604081019190915260600190565b908160a091031261044a5760806040519161349783611242565b80356134a2816111c0565b835260208101356134b2816111c0565b602084015260408101356134c58161141a565b6040840152606081013560608401520135608082015290565b908160a091031261044a576080604051916134f883611242565b80358352602081013561350a816111c0565b602084015260408101356134c5816111c0565b91909160a08184031261044a578035613535816111c0565b9260208201356135448161151f565b926040830135926060810135926001600160401b039160808101359083821161044a57019060608282031261044a576040519261358084611227565b823561358b816111c0565b8452602083013561359b816111c0565b6020850152604083013590811161044a576135b692016113a3565b604082015290565b93906113be95916101009461ffff60409560018060a01b03809516895216602088015284870152606086015260a060808601528082511660a086015260208201511660c0850152015191606060e08201520190610143565b919082604091031261044a576020823561362f816111c0565b92013590565b9081602091031261044a57356113be816111c0565b9035601e198236030181121561044a570160208101919035906001600160401b03821161044a57813603831361044a57565b908060209392818452848401376000828201840152601f01601f1916010190565b906113be9082356136ad8161141a565b151581526020830135602082015260408301356136c98161141a565b151560408201526136ea6136df6060850161152b565b61ffff166060830152565b60e061374981613711613700608088018861364a565b61010080608089015287019161367c565b9561372a61372160a08301611424565b151560a0870152565b61374361373960c083016111d1565b60c087019061190a565b016111d1565b91019061190a565b6040809180356137608161141a565b151584526020810135602085015201356137798161141a565b1515910152565b60408091803561378f8161141a565b1515845260208101356137a1816111c0565b6001600160a01b031660208501520135910152565b604090818135916137c6836111c0565b6001600160a01b0392831685528260208201356137e2816111c0565b16602086015201356137f3816111c0565b16910152565b903560fe198236030181121561044a570190565b3d15613838573d9061381e82611351565b9161382c6040519384611294565b82523d6000602084013e565b606090565b803b1561172457631221baf960e31b6001600160e01b0319602061386236878761136c565b0151160361172457826000836138b561389c61388c61388486869a879a611f35565b8101906139d6565b5060208082518301019101613a0c565b50506001600160a01b039094169450613b829350505050565b6138c460405180948193613a6b565b03925af1906138d161380d565b911590816138e7575b506138e25750565b613ac3565b905015386138da565b803b156117245763d505accf60e01b6001600160e01b0319602061391536878761136c565b01511603611724578261392b8160e09585611f35565b908095918101031261044a5760008094936138b585613966608085983592613952846111c0565b61395f60208201356111c0565b0135612156565b6001600160a01b0316613b82565b803b156117245763aba0784760e01b6001600160e01b0319602061399936878761136c565b0151160361172457826139af8160c09585611f35565b908095918101031261044a5760008094936138b585613966606085983592613952846111c0565b919060408382031261044a5782356001600160401b03811161044a57602091613a009185016113a3565b9201356113be8161151f565b91908261010091031261044a578151613a248161141a565b916020810151613a33816111c0565b916040820151613a42816111c0565b9160608101519160808201519160a0810151613a5d81612156565b9160e060c083015192015190565b908092918237016000815290565b6002546001600160a01b03168015613ab157816000929160208493519201905af490613aa361380d565b9115613aab57565b50613ac3565b604051631c94b02360e21b8152600490fd5b6044815110613b5b5760048101518101906020816024840193031261044a576024810151906001600160401b03821161044a5701908060438301121561044a57602482015191613b1283611351565b91613b206040519384611294565b8383526044848301011161044a57611f1a92613b43916044602085019101610120565b60405162461bcd60e51b815291829160048301611edd565b604051633922dd2d60e21b8152600490fd5b9081602091031261044a57516113be8161141a565b6001600160a01b039081163314159081613b9e575b5061044f57565b600154604051633a304d8b60e21b815260006004820152336024820152925060209183916044918391165afa90811561044557600091613be1575b501538613b97565b613c02915060203d8111613c08575b613bfa8183611294565b810190613b6d565b38613bd9565b503d613bf056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220462c32e2944a67daca64f170162628294e1da21c941dc8cd24f12a0421c7385764736f6c63430008130033";

type MagnetarV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2__factory extends ContractFactory {
  constructor(...args: MagnetarV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2";
  }

  override deploy(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2> {
    return super.deploy(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    ) as Promise<MagnetarV2>;
  }
  override getDeployTransaction(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    );
  }
  override attach(address: string): MagnetarV2 {
    return super.attach(address) as MagnetarV2;
  }
  override connect(signer: Signer): MagnetarV2__factory {
    return super.connect(signer) as MagnetarV2__factory;
  }
  static readonly contractName: "MagnetarV2";

  public readonly contractName: "MagnetarV2";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2Interface {
    return new utils.Interface(_abi) as MagnetarV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2 {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2;
  }
}
