/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MagnetarV2,
  MagnetarV2Interface,
} from "../../../contracts/Magnetar/MagnetarV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_marketModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newHelper",
        type: "address",
      },
    ],
    name: "HelperUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "burst",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "helper",
    outputs: [
      {
        internalType: "contract IMagnetarHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketModule",
    outputs: [
      {
        internalType: "contract MagnetarMarketModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_helper",
        type: "address",
      },
    ],
    name: "setHelper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unwrap",
        type: "bool",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346200016357601f6200419e38819003918201601f19168301916001600160401b03831184841017620001685780849260609460405283398101031262000163576200004d816200017e565b60406200005d602084016200017e565b9201516001600160a01b0380821693918490036200016357620000803362000193565b8060018060a01b03199316836001541617600155338160005416036200011f57811615620000cb57620000b39062000193565b6002541617600255604051613fc39081620001db8239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016357565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063013546e11461011b578063150b7a021461011657806340b1d65714610111578063437be6221461010c578063460297fd1461010757806363b0e66a14610102578063715018a6146100fd5780637a7ccd91146100f85780638da5cb5b146100f3578063986ccc7f146100ee578063b25ea8fb146100e9578063c3594347146100e4578063cfd8b3d8146100df578063dbd01de1146100da578063e5546fac146100d55763f2fde38b0361000e57611d2a565b611bcd565b611b80565b611b57565b6119d6565b611909565b61189c565b611873565b6117a7565b61175b565b611732565b611646565b6115bb565b6114bc565b611437565b6101df565b60005b8381106101335750506000910152565b8181015183820152602001610123565b9060209161015c81518092818552858086019101610120565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b8401019601946000925b85841061019d575050505050505090565b9091929394959685806101ce600193603f1986820301885286838d5180511515845201519181858201520190610143565b99019401940192959493919061018c565b602036600319011261043e576004356001600160401b0380821161043e573660238301121561043e57816004013590811161043e57602480830160059382369185871b01011161043e5792919060009361023883611e4e565b9385935b8085106102625761025e86610252893414613860565b60405191829182610168565b0390f35b9091929395610272878386611eef565b966060978881019261028a61028685611f16565b1590565b6111ef575b6040906102a0828401358092611ffa565b9a896001806102b86102b188612007565b61ffff1690565b03610303575050505050806102ef6102fa946102e76102dc60206102f5960161246f565b936080810190611f20565b929091611f16565b92613be4565b611ec5565b9392919061023c565b61ffff60028161031289612007565b160361033e57505050505050806103386102fa946102e76102dc60206102f5960161246f565b92613b4a565b60038161034a89612007565b160361037657505050505050806103706102fa946102e76102dc60206102f5960161246f565b92613a55565b9091929394975060048161038988612007565b16036104435750505050506103d06103c46103c460206103c96103c46103bc6103b56080890189611f20565b8091612011565b81019061384b565b61122f565b940161246f565b92833b1561043e575163a22cb46560e01b81526001600160a01b0391909116600482015260006024820181905290928390604490829084905af1918215610439576102fa92610420575b50611ec5565b8061042d6104339261126f565b8061171a565b3861041a565b61272f565b600080fd5b8981610450889a98612007565b16036104df575050505050602061048a6103c46103c46104816104796103b560808a018a611f20565b81019061382c565b9490970161246f565b803b1561043e57915163b8489fb560e01b81526001600160a01b0390941660048501526024840152600060448401819052908390818381606481015b03925af1918215610439576102fa926104205750611ec5565b61012c816104ee8a979a612007565b160361057257505050506105376103c46103c4602061051e6105166103b56080880188611f20565b810190613618565b9461053161052c875161122f565b613e85565b0161246f565b82610545602084015161122f565b92015191813b1561043e576104c69560009451809781958294630c46aac760e31b84523360048501613671565b61012d8161057f87612007565b16036105f55750505050806105316103c4956105cb6103c46105b46105ac6103b560806020990188611f20565b810190613733565b9c90999298919790936001600160a01b0316613e85565b92833b1561043e576104c6600096519889968795869463695ef6bf60e01b865233600487016137d4565b606481610605879a95969a612007565b160361073d575050505081906080946106496103c46103c460206106396106316103b58c890189611f20565b8101906136f4565b9561053161052c8389015161122f565b90600083519761065b8686015161122f565b928501519401518551634d4d7cbd60e11b815260048101999099523360248a01526001600160a01b03909216604489015260648801939093526084870152859160a4918391905af18015610439576102fa936000908192610705575b509151602081019290925260408201526106de81606081015b03601f19810183528261132a565b6106e661134d565b600181529060208201526106fa8289613525565b5261041a8188613525565b6106de92506106d0915061072e90843d8611610736575b610726818361132a565b81019061365b565b9250906106b7565b503d61071c565b60c88161074c879a989a612007565b1603610813575050505060809161078c6103c46103c4602061077e6107766103b589890189611f20565b810190613693565b9561053161052c885161122f565b9061079a602084015161122f565b936107a787850151151590565b9184015193015195823b1561043e57516374d2492960e11b81523360048201526001600160a01b03949094166024850152151560448401526064830191909152608482019390935291600090839060a490829084905af1918215610439576102fa926104205750611ec5565b60c981610824879a98959697612007565b16036108df57505050505080836108526103c46103c4602061051e6105166103b560806108829c0188611f20565b82610860602084015161122f565b92015191600084518098819582946314890dcb60e21b84523360048501613671565b03925af18015610439576102fa9360009081926108b7575b509151602081019290925260408201526106de81606081016106d0565b6106de92506106d091506108d790843d861161073657610726818361132a565b92509061089a565b6066816108ee8a989798612007565b16036109635750505061041a92916106d061095e9261092261091a6103b58a60806102fa9c0190611f20565b810190613539565b6001600160a01b039d989b909891979296939593928e16919061094483613e85565b516340b1d65760e01b60208201529d8e9c16908c016135b6565b613d2f565b60cb816109738a98959798612007565b1603610a495750505050602090846109a96103c46103c48561051e6109a16103b560806109e69d0188611f20565b8101906134a4565b9060006109b88583015161122f565b936109c587840151151590565b9201518651630cb0f5b760e31b8152988995869485939133600486016134fb565b03925af1928315610439576102fa936106d0926106de92600092610a18575b5051928391602083019190602083019252565b610a3b91925060203d602011610a42575b610a33818361132a565b810190612a18565b9038610a05565b503d610a29565b60cc81610a558a612007565b1603610ac0575050505060209084610a836103c46103c48561051e6109a16103b560806109e69d0188611f20565b906000610a928583015161122f565b93610a9f87840151151590565b920151865163cd0211eb60e01b8152988995869485939133600486016134fb565b61012f81610ad18a98979698612007565b1603610b505750505050926103c4610b246103c493602096610b04610afc6103b56080880188611f20565b81019061333f565b9698979a939d929b91949f90959c61053160018060a01b03809d16613e85565b97883b1561043e5760009a6104c695519d8e9b8c9a8b9963afa61ff960e01b8b52163360048b016133fb565b61013081610b608a989798612007565b1603610be257505050506103c46103c492610bb2926020610b92610b8a6103b560808b018b611f20565b810190613146565b969a979c939d929b91949890959f61053160018060a01b039e8f16613e85565b97883b1561043e5760009a8a986104c696519e8f9c8d9b8c9a630ff5c49b60e11b8c521692163360048b01613201565b61013181610bf28a979697612007565b1603610c8557505050608091610c316103c46103c46020610c23610c1b6103b5898d018d611f20565b810190612fe0565b9961053161052c8c5161122f565b91610c3f602088015161122f565b60a0610c57878a0151948a0151968a015161ffff1690565b98015195843b1561043e576000966104c69151998a9788968795630fb6ba5960e01b8752336004880161306b565b61013281610c978a9794959697612007565b1603610d1457505050506103c491610ce76103c49286610cca610cc26103b5608060209b0184611f20565b810190612f35565b989497939a9299919c909561053160018060a01b03809a16613e85565b94853b1561043e576000976104c692519a8b988997889663076cf20360e11b885216923360048801612f75565b60cd81610d268a989794959698612007565b1603610db5575050926106d06102fa969361095e9361041a96610d5c610d546103b56080998a810190611f20565b810190612db4565b90610d6a61052c835161122f565b610d74825161122f565b9760208301519185840151908401519184015192610d9c60c060a0870151960151965461122f565b96516325e0e33160e01b60208201529a8b998a01612eae565b60ce81610dc58a9594969a612007565b1603610e335750506102fa9550916106d061095e92610dfa610df26103b587608061041a9a990190611f20565b810190612c21565b6001600160a01b039b9699909691959394938c169250610e1983613e85565b51630939eb3960e41b60208201529a8b9916908901612c70565b60cf81610e3f85612007565b1603610eae575050926106d06102fa969361095e93610e95610e76610e6e6103b58a608061041a9c0190611f20565b810190612b99565b6001600160a01b039092169891929091610e8f8a613e85565b5461122f565b935163650f5d7760e11b60208201529788968701612bdb565b9091965060d081610ebe89612007565b1603610f2a57505061041a92916106d061095e92610ef1610ee96103b58a60806102fa9c0190611f20565b810190612ae8565b6001600160a01b039b9699909691959294928c169190610f1083613e85565b51632465b7a760e01b60208201529b8c9a16908a01612b4c565b9092935060d181610f3a88612007565b1603610fe55750505082602091610fad610f67610f5f6103b560806000990186611f20565b810190612a59565b91610f8f6103c46103c48c969e98999660018060a09e979a9e1b03809b169561053187613e85565b9751630f74e47960e11b81529b8c998a988997169360048801612aae565b03925af1918215610439576102fa92610fc65750611ec5565b610fde9060203d602011610a4257610a33818361132a565b503861041a565b60d281610ff188612007565b1603611060575050506000602091610fad61101d6110156103b56080890189611f20565b8101906129c7565b909296939491996110426103c46103c48b60018060a01b03809a169461053186613e85565b9651632c6dcd7f60e11b81529a8b9889978896169260048701612a27565b6101908161106d88612007565b16036110e0575060806110a26103c46103c4602061109b6110936103b5878d018d611f20565b810190612836565b990161246f565b918651602088015192868901519589015198015195843b1561043e576000966104c69151998a978896879563ae9289ff60e01b8752600487016128d8565b61013391506110f0869496612007565b16036111a85760809361112c6103c46103c4602061111e6111166103b58b8a018a611f20565b810190612374565b9661053161052c895161122f565b90611137845161122f565b90611145602086015161122f565b916111606111578388015161ffff1690565b9587015161122f565b978601519160a08701519660c08101519061010060e082015191015191873b1561043e576000998a966104c695519d8e9b8c9a8b99635f7ce77160e11b8b5260048b016126aa565b835162461bcd60e51b815260206004820152601c60248201527b135859db995d185c958c8e881858dd1a5bdb881b9bdd081d985b1a5960221b6044820152606490fd5b0390fd5b61122a6111ff6080840184611f20565b905061122260405161121d816106d089602083019190602083019252565b611f52565b901515611fce565b61028f565b6001600160a01b031690565b6001600160a01b0381160361043e57565b35906112578261123b565b565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161128257604052565b611259565b604081019081106001600160401b0382111761128257604052565b606081019081106001600160401b0382111761128257604052565b60c081019081106001600160401b0382111761128257604052565b60a081019081106001600160401b0382111761128257604052565b608081019081106001600160401b0382111761128257604052565b61030081019081106001600160401b0382111761128257604052565b601f909101601f19168101906001600160401b0382119082101761128257604052565b6040519061125782611287565b6040519061014082016001600160401b0381118382101761128257604052565b604051906101c082016001600160401b0381118382101761128257604052565b6040519061012082016001600160401b0381118382101761128257604052565b60405190611257826112d8565b6001600160401b03811161128257601f01601f191660200190565b9291926113ee826113c7565b916113fc604051938461132a565b82948184528183011161043e578281602093846000960137010152565b9080601f8301121561043e57816020611434933591016113e2565b90565b3461043e57608036600319011261043e5761145360043561123b565b61145e60243561123b565b6064356001600160401b03811161043e5761147d903690600401611419565b50604051630a85bd0160e11b8152602090f35b61ffff81160361043e57565b359061125782611490565b8015150361043e57565b3590611257826114a7565b6101408060031936011261043e576004356114d68161123b565b6024356114e28161123b565b606435906114ef82611490565b60c435936001600160401b03851161043e576106d061095e9360249261151c610019983690600401611419565b6115a060e4359161152c8361123b565b6101249361ffff85359661153f886114a7565b6115488b613e85565b6040519c8d9b8c60206340b1d65760e01b9101528c60018060a01b039c8d8094169101521660448c015260443560648c01521660848a015260843560a48a015260a43560c48a015260e4890152610164880190610143565b94610104911681870152359085015261014484019015159052565b3461043e57602036600319011261043e576004356115d88161123b565b6001600160a01b031680156115fd57600180546001600160a01b031916919091179055005b60405162461bcd60e51b8152602060048201526013602482015272135859db995d185c8e881b9bdd081d985b1a59606a1b6044820152606490fd5b908160c091031261043e5790565b60e036600319011261043e5760043561165e8161123b565b6024359061166b8261123b565b60a435611677816114a7565b60c435926001600160401b03841161043e5761170561095e926116a1610019963690600401611638565b906116ab84613e85565b604051958694632465b7a760e01b602087015260018060a01b0380921660248701521660448501526044356064850152606435608485015260843560a4850152151560c484015261010060e48401526101248301906138ca565b3461010483015203601f19810183528261132a565b600091031261043e57565b6001600160a01b03169052565b3461043e57600036600319011261043e576003546040516001600160a01b039091168152602090f35b3461043e576000806003193601126117a457611775611ddf565b80546001600160a01b03198116825581906001600160a01b0316600080516020613f6e8339815191528280a380f35b80fd5b60e036600319011261043e576004356117bf8161123b565b602435906117cc8261123b565b608435916117d9836114a7565b60a435906117e6826114a7565b60c4356001600160401b03811161043e576100199461095e93611810611705933690600401611638565b9161181a85613e85565b604051968795630939eb3960e41b602088015260018060a01b03809216602488015216604486015260443560648601526064356084860152151560a4850152151560c484015261010060e48401526101248301906138ca565b3461043e57600036600319011261043e576000546040516001600160a01b039091168152602090f35b3461043e57602036600319011261043e576004356118b98161123b565b6118c1611ddf565b6003546001600160a01b0391821691829082167f8ec9146610f1f9324ffc354c9f4db61b885844583cba310f2b9488f967d74e2f600080a36001600160a01b03191617600355005b3461043e57604036600319011261043e576024356119268161123b565b61192e611ddf565b60008080808094600435905af1611943613a25565b501561194c5780f35b60405162461bcd60e51b815260206004820152601a60248201527926b0b3b732ba30b91d103a3930b739b332b9103330b4b632b21760311b6044820152606490fd5b606090602319011261043e57602490565b60609060e319011261043e5760e490565b6060906101e319011261043e576101e490565b60609061024319011261043e5761024490565b60031960a03682011261043e57600435906119f08261123b565b6119f93661198e565b608435929091906001600160401b03841161043e5783600401916101c08091863603011261043e576106d0611b4661001996611b3361095e96611a3b87613e85565b60018060a01b0396611b2b886001541697611a746040519c8d9b8c9563650f5d7760e11b602088015216602486015260448501906139ce565b60e060a4840152611a926101048401611a8c866114b1565b15159052565b611b19610124602488013581860152611aba611ab060448a016114b1565b1515610144870152565b6064880135610164860152611b11611ad460848a016114b1565b91611ae6610184938489019015159052565b6102246101a49760a48c013589820152611b088c60c46101c484019101613998565b01908a01613998565b870185613a11565b906102848b01526102c48a01906138ca565b930190613a11565b85820361010319016102a48701526138ca565b913460c485015260e4840190611725565b3461043e57600036600319011261043e576002546040516001600160a01b039091168152602090f35b3461043e57600036600319011261043e576001546040516001600160a01b039091168152602090f35b60a090604319011261043e57604490565b60a09061014319011261043e5761014490565b6102a036600319011261043e57600435611be68161123b565b611bef36611ba9565b611bf83661199f565b611c0136611bba565b611c0a366119b0565b90611c14366119c3565b92611c1e86613e85565b600160a01b600190039081600154169582604051986325e0e33160e01b60208b015216602489015260243560448901528035611c59816114a7565b1515606489015260208101356084890152611c7b9060a4890190604001613970565b6101048701611c8991613970565b8135611c94816114a7565b15156101648701526020820135611caa8161123b565b166101848601526001600160801b0380611cc660408401612d3a565b166101a4870152611cd960608301612d3a565b166101c4860152608001356101e48501526102048401611cf891613998565b6102648301611d06916139ce565b6102c490818301611d1691611725565b8152611d218161130e565b61001990613d2f565b3461043e57602036600319011261043e57600435611d478161123b565b611d4f611ddf565b6001600160a01b039081168015611d8b57600080546001600160a01b0319811683178255909216600080516020613f6e8339815191528380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6000546001600160a01b03163303611df357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b0381116112825760051b60200190565b90611e5882611e37565b6040611e668151928361132a565b8382528193611e77601f1991611e37565b0191600091825b848110611e8c575050505050565b6020908251611e9a81611287565b85815282606081830152828601015201611e7e565b634e487b7160e01b600052601160045260246000fd5b6000198114611ed45760010190565b611eaf565b634e487b7160e01b600052603260045260246000fd5b9190811015611f115760051b81013590609e198136030182121561043e570190565b611ed9565b35611434816114a7565b903590601e198136030182121561043e57018035906001600160401b03821161043e5760200191813603831361043e57565b90611257604e60405180947f4d61676e6574617256323a204d697373696e672063616c6c20666f722061637460208301526d0d2dedc40eed2e8d040d2dcc8caf60931b6040830152611fad8151809260208686019101610120565b810103602e81018552018361132a565b906020611434928181520190610143565b15611fd65750565b60405162461bcd60e51b8152602060048201529081906111eb906024830190610143565b91908201809211611ed457565b3561143481611490565b909291928360041161043e57831161043e57600401916003190190565b919082606091031261043e57604051612046816112a2565b604080829480356120568161123b565b845260208101356120668161123b565b60208501520135916120778361123b565b0152565b919082606091031261043e57604051612093816112a2565b604080829480356120a3816114a7565b845260208101356120b38161123b565b60208501520135910152565b91909160c08184031261043e57604051906120d9826112bd565b819381356120e6816114a7565b8352602082013560208401526040820135612100816114a7565b6040840152606082013561211381611490565b60608401526080820135916001600160401b03831161043e5761213c60a0939284938301611419565b6080850152013591612077836114a7565b91906101c08382031261043e5761216261135a565b9261216c816114b1565b845260208101356020850152612184604082016114b1565b60408501526060810135606085015261219f608082016114b1565b608085015260a081013560a08501526121bb8260c0830161207b565b60c0850152610120916121d08184840161207b565b60e08601526001600160401b0361018083013581811161043e57826121f69185016120bf565b6101008701526101a083013590811161043e5761221392016120bf565b90830152565b60ff81160361043e57565b359061125782612219565b81601f8201121561043e5780359061224682611e37565b926040906122568251958661132a565b83855260209182860191836101c08097028601019481861161043e578401925b858410612287575050505050505090565b868483031261043e5784879161229b61137a565b6122a4876114b1565b81526122b18388016114b1565b838201526122c08688016114b1565b8682015260606122d18189016114b1565b9082015260806122e281890161149c565b9082015260a06122f381890161124c565b9082015260c06123048189016114b1565b9082015260e061231581890161124c565b9082015261010061232781890161124c565b908201526101208088013590820152610140808801359082015261016061234f818901612224565b9082015261018080880135908201526101a08088013590820152815201930192612276565b60208183031261043e576001600160401b039080359082821161043e57016101608184031261043e576123a561139a565b926123af8261124c565b84526123bd6020830161124c565b60208501526123ce6040830161149c565b60408501526123df6060830161124c565b6060850152608082013583811161043e57816123fc918401611419565b608085015261240e8160a0840161202e565b60a0850152610100928383013581811161043e578261242e91850161214d565b60c086015261012083013581811161043e578261244c91850161222f565b60e086015261014083013590811161043e57612468920161222f565b9082015290565b356114348161123b565b80516001600160a01b03908116835260208083015182169084015260409182015116910152565b8051151582526020808201516001600160a01b031690830152604090810151910152565b908151151581526020820151602082015260408201511515604082015261ffff606083015116606082015260a08061250b608085015160c0608086015260c0850190610143565b930151151591015290565b805115158252611434916020820151602082015261253d6040830151604083019015159052565b6060820151606082015261255a6080830151608083019015159052565b60a082015160a082015261257660c083015160c08301906124a0565b60e082015161258b61012091828401906124a0565b6125a66101008401516101c0806101808601528401906124c4565b920151906101a08184039101526124c4565b90815180825260208080930193019160005b8281106125d8575050505090565b90919293826101c060019287516125f182825115159052565b8084015115158285015260408181015115159083015260608181015115159083015260808181015161ffff169083015261263360a08083015190840190611725565b60c08181015115159083015261265160e08083015190840190611725565b6126646101008083015190840190611725565b610120818101519083015261014080820151908301526101608082015160ff169083015261018081810151908301526101a09081015190820152019501939291016125ca565b97946126f8906114349a98936127119661ffff6127209a978d60206127039860018060a01b0396878092168452169101521660408d01521660608b01526101608060808c01528a0190610143565b9260a0890190612479565b868203610100880152612516565b908482036101208601526125b8565b916101408184039101526125b8565b6040513d6000823e3d90fd5b91908260c091031261043e57604051612753816112bd565b60a080829480356127638161123b565b845260208101356127738161123b565b60208501526040810135604085015260608101356060850152608081013561279a8161123b565b60808501520135910152565b919082606091031261043e576040516127be816112a2565b604080829480356120a381611490565b91908260c091031261043e576040516127e6816112bd565b60a080829480356127f6816114a7565b845260208101356128068161123b565b6020850152604081013561281981611490565b604085015260608101356060850152608081013561279a8161123b565b9060208282031261043e576001600160401b039180359083821161043e5701906102208282031261043e576128696113ba565b92612874828461273b565b84526128838260c085016127a6565b60208501526128968261012085016127ce565b60408501526101e083013581811161043e57826128b491850161222f565b606085015261020083013590811161043e576128d0920161222f565b608082015290565b939061143495936129546129b89460a06129a694600180831b03808251168b528060208301511660208c0152604082015160408c0152606082015160608c015260808201511660808b0152015160a089015260c08801906040809161ffff815116845260018060a01b0360208201511660208501520151910152565b8051151561012087015260208101516001600160a01b03908116610140880152604082015161ffff1661016088015260608201516101808801526080820151166101a087015260a001516101c0860152565b610220806101e08601528401906125b8565b916102008184039101526125b8565b91909160a08184031261043e5780356129df8161123b565b9260208201359260408301359260608101356129fa8161123b565b9260808201356001600160401b03811161043e576114349201611419565b9081602091031261043e575190565b919360a0936114349695600180871b038094168552602085015260408401521660608201528160808201520190610143565b9160c08383031261043e578235612a6f8161123b565b926020810135926040820135926060830135926080810135612a908161123b565b9260a08201356001600160401b03811161043e576114349201611419565b929360c0946114349796929360018060a01b0380951686526020860152604085015260608401521660808201528160a08201520190610143565b9060e08282031261043e578135612afe8161123b565b926020830135612b0d8161123b565b9260408101359260608201359260808301359260a0810135612b2e816114a7565b9260c08201356001600160401b03811161043e5761143492016120bf565b98979693909260e09693612b94969360018060a01b038092168c521660208b015260408a015260608901526080880152151560a08701526101008060c08801528601906124c4565b930152565b9160a08383031261043e578235612baf8161123b565b92612bbd836020830161202e565b9260808201356001600160401b03811161043e57611434920161214d565b6001600160a01b03918216815293959460c09391929091612c1591612c04906020880190612479565b60e0608087015260e0860190612516565b9560a085015216910152565b9060e08282031261043e578135612c378161123b565b926020830135612c468161123b565b926040810135926060820135926080830135612c61816114a7565b9260a0810135612b2e816114a7565b97969592612b94949160e0969360018060a01b038092168b521660208a01526040890152606088015260006080880152151560a08701526101008060c08801528601906124c4565b919082606091031261043e57604051612cd0816112a2565b60408082948035612ce0816114a7565b845260208101356020850152013591612077836114a7565b919060a08382031261043e576040612d35815192612d15846112a2565b8284968035612d23816114a7565b86526020810135602087015201612cb8565b910152565b35906001600160801b038216820361043e57565b91908260a091031261043e57604051612d66816112d8565b60808082948035612d76816114a7565b84526020810135612d868161123b565b6020850152612d9760408201612d3a565b6040850152612da860608201612d3a565b60608501520135910152565b6102a08183031261043e576040519160e083016001600160401b0381118482101761128257612e499261024091604052612ded8161124c565b855260208101356020860152612e068360408301612cf8565b6040860152612e188360e08301612cb8565b6060860152612e2b836101408301612d4e565b6080860152612e3e836101e0830161207b565b60a08601520161202e565b60c082015290565b604080918051151584526020810151602085015201511515910152565b6080809180511515845260018060a01b036020820151166020850152600180831b0380604083015116604086015260608201511660608501520151910152565b969390959298979491986102c0880199600160a01b6001900380981689526020890152805115156040890152602081015160608901526040015160808801612ef591612e51565b60e08701612f0291612e51565b6101408601612f1091612e6e565b6101e08501612f1e916124a0565b6102408401612f2c91612479565b16906102a00152565b9160c08383031261043e578235612f4b8161123b565b926020810135926040820135926060830135612f6681611490565b926080810135612a908161123b565b9260c09461ffff916114349897939460018060a01b038096168752602087015260408601521660608401521660808201528160a08201520190610143565b919082604091031261043e57604051612fcb81611287565b6020808294803584520135916120778361123b565b9060e08282031261043e5761304b9060a060405193612ffe856112bd565b80356130098161123b565b855260208101356130198161123b565b60208601526040810135604086015260608101356060860152608081013561304081611490565b608086015201612fb3565b60a082015290565b805182526020908101516001600160a01b0316910152565b6001600160a01b039182168152911660208201526040810191909152606081019190915261ffff909116608082015260e0810192916112579160a00190613053565b91906101e08382031261043e5761313e906101806130c961139a565b946130d3816114b1565b865260208101356020870152604081013560408701526130f56060820161124c565b60608701526131066080820161124c565b608087015261311760a082016114b1565b60a087015260c081013560c08701526131338360e08301612d4e565b60e08701520161207b565b610100830152565b9190916102e08184031261043e5761315d8161124c565b9261316a6020830161124c565b926131776040840161149c565b926131846060820161124c565b9261319281608084016130ad565b926001600160401b039061026084013582811161043e57836131b591860161222f565b9361028081013583811161043e57846131cf91830161222f565b936102a082013584811161043e57816131e99184016120bf565b936102c083013590811161043e576114349201611419565b97946132b6906132c8936132e698936132d7978c60406114349f9d9961ffff9060018060a01b038097818098168652166020850152169101521660608c01528151151560808c0152602082015160a08c0152604082015160c08c015260608201511660e08b015260808101519061327e61010092838d0190611725565b60a081015115156101208c015260c08101516101408c01526132a960e08201516101608d0190612e6e565b01516102008a01906124a0565b6102e0806102608a01528801906125b8565b908682036102808801526125b8565b908482036102a08601526124c4565b916102c0818403910152610143565b919082608091031261043e5760405161330d816112f3565b60608082948035845260208101356020850152604081013561332e8161123b565b60408501520135916120778361123b565b9190916101a08184031261043e576133568161124c565b926133636020830161124c565b926133706040840161149c565b926001600160401b0392606082013584811161043e5781613392918401611419565b936133a082608085016132f5565b9361010084013582811161043e57836133ba9186016120bf565b936133c9846101208301612fb3565b9361016082013584811161043e57816133e391840161222f565b9361018083013590811161043e57611434920161222f565b97939561347b926060613447613495998c60406114349f9d9b976134879a61ffff9160018060a01b039889809216865216602085015216910152828d6101a091829101528d0190610143565b93805160808d0152602081015160a08d01528260408201511660c08d015201511660e08a01528882036101008a01526124c4565b92610120870190613053565b8482036101608601526125b8565b916101808184039101526125b8565b9081608091031261043e576060604051916134be836112f3565b80356134c98161123b565b835260208101356134d98161123b565b602084015260408101356134ec816114a7565b60408401520135606082015290565b6001600160a01b039182168152911660208201529015156040820152606081019190915260800190565b8051821015611f115760209160051b010190565b90916101208284031261043e5781356135518161123b565b9260208301356135608161123b565b92604081013592606082013561357581611490565b9260808301359260a08101359260c08201359260e08301356001600160401b03811161043e57610100916135aa918501611419565b9201356114348161123b565b9692610120989461ffff9161360c97939d9c9b9d98949860018060a01b03998a8092168c521660208b015260408a0152166060880152608087015260a086015260c08501526101408060e0860152840190610143565b95166101008201520152565b9081606091031261043e576040805191613631836112a2565b803561363c8161123b565b8352602081013561364c8161123b565b60208401520135604082015290565b919082604091031261043e576020825192015190565b6001600160a01b03918216815291166020820152604081019190915260600190565b908160a091031261043e576080604051916136ad836112d8565b80356136b88161123b565b835260208101356136c88161123b565b602084015260408101356136db816114a7565b6040840152606081013560608401520135608082015290565b908160a091031261043e5760806040519161370e836112d8565b8035835260208101356137208161123b565b602084015260408101356136db8161123b565b91909160a08184031261043e57803561374b8161123b565b92602082013561375a81611490565b926040830135926060810135926001600160401b039160808101359083821161043e57019060608282031261043e5760405192613796846112a2565b82356137a18161123b565b845260208301356137b18161123b565b6020850152604083013590811161043e576137cc9201611419565b604082015290565b939061143495916101009461ffff60409560018060a01b03809516895216602088015284870152606086015260a060808601528082511660a086015260208201511660c0850152015191606060e08201520190610143565b919082604091031261043e57602082356138458161123b565b92013590565b9081602091031261043e57356114348161123b565b1561386757565b60405162461bcd60e51b815260206004820152601a60248201527909ac2cedccae8c2e4ac647440ecc2d8eaca40dad2e6dac2e8c6d60331b6044820152606490fd5b908060209392818452848401376000828201840152601f01601f1916010190565b9081356138d6816114a7565b151581526020820135602082015260408201356138f2816114a7565b1515604082015261ffff606083013561390a81611490565b1660608201526080820135601e198336030181121561043e578201803591906020016001600160401b03831161043e57823603811361043e5761396960a061396281936114349660c0608088015260c08701916138a9565b95016114b1565b1515910152565b60408091803561397f816114a7565b15158452602081013560208501520135613969816114a7565b6040809180356139a7816114a7565b1515845260208101356139b98161123b565b6001600160a01b031660208501520135910152565b604090818135916139de8361123b565b6001600160a01b0392831685528260208201356139fa8161123b565b1660208601520135613a0b8161123b565b16910152565b903560be198236030181121561043e570190565b3d15613a50573d90613a36826113c7565b91613a44604051938461132a565b82523d6000602084013e565b606090565b803b15613b0d57613a86631221baf960e31b6001600160e01b03196020613a7d3688886113e2565b01511614613c41565b8260041161043e5782600083613ad2613ab9613aa9849885980160048501613c8c565b5060208082518301019101613cc2565b50506001600160a01b039094169450613e859350505050565b613ae160405180948193613d21565b03925af190613aee613a25565b91159081613b04575b50613aff5750565b613dab565b90501538613af7565b60405162461bcd60e51b8152602060048201526015602482015274135859db995d185c8e881b9bc818dbdb9d1c9858dd605a1b6044820152606490fd5b803b15613b0d5760e092613b7563d505accf60e01b6001600160e01b03196020613a7d3686896113e2565b613b80818085612011565b908095918101031261043e576000809493613bc985613bbb608085983592613ba78461123b565b613bb4602082013561123b565b0135612219565b6001600160a01b0316613e85565b826040519384928337810182815203925af190613aee613a25565b803b15613b0d5760c092613c0f63aba0784760e01b6001600160e01b03196020613a7d3686896113e2565b613c1a818085612011565b908095918101031261043e576000809493613ad285613bbb606085983592613ba78461123b565b15613c4857565b606460405162461bcd60e51b815260206004820152602060248201527f4d61676e6574617256323a207065726d697420736967206e6f742076616c69646044820152fd5b919060408382031261043e5782356001600160401b03811161043e57602091613cb6918501611419565b92013561143481611490565b91908261010091031261043e578151613cda816114a7565b916020810151613ce98161123b565b916040820151613cf88161123b565b9160608101519160808201519160a0810151613d1381612219565b9160e060c083015192015190565b908092918237016000815290565b6002546001600160a01b03168015613d6757816000929160208493519201905af490613d59613a25565b9115613d6157565b50613dab565b60405162461bcd60e51b815260206004820152601c60248201527b135859db995d185c958c8e881b5bd91d5b19481b9bdd08199bdd5b9960221b6044820152606490fd5b6044815110613e435760048101518101906020816024840193031261043e576024810151906001600160401b03821161043e5701908060438301121561043e57602482015191613dfa836113c7565b91613e08604051938461132a565b8383526044848301011161043e576111eb92613e2b916044602085019101610120565b60405162461bcd60e51b815291829160048301611fbd565b60405162461bcd60e51b815260206004820152601a60248201527926b0b3b732ba30b92b191d102932b0b9b7b7103ab735b737bbb760311b6044820152606490fd5b6001600160a01b039081163314908115613ef1575b5015613ea257565b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a206f70657261746f72206e6f7420617070726f76656044820152601960fa1b6064820152608490fd5b600154604051633a304d8b60e21b815260006004820152336024820152925060209183916044918391165afa90811561043957600091613f33575b5038613e9a565b906020823d8211613f65575b81613f4c6020938361132a565b810103126117a4575051613f5f816114a7565b38613f2c565b3d9150613f3f56fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220495bcba9fc5d93c7d42ea6a4a736ab08ac04ce10356d986d5760ad465a2e43f964736f6c63430008120033";

type MagnetarV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2__factory extends ContractFactory {
  constructor(...args: MagnetarV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2";
  }

  override deploy(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2> {
    return super.deploy(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    ) as Promise<MagnetarV2>;
  }
  override getDeployTransaction(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    );
  }
  override attach(address: string): MagnetarV2 {
    return super.attach(address) as MagnetarV2;
  }
  override connect(signer: Signer): MagnetarV2__factory {
    return super.connect(signer) as MagnetarV2__factory;
  }
  static readonly contractName: "MagnetarV2";

  public readonly contractName: "MagnetarV2";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2Interface {
    return new utils.Interface(_abi) as MagnetarV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2 {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2;
  }
}
