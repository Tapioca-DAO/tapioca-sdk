/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MagnetarV2,
  MagnetarV2Interface,
} from "../../../contracts/Magnetar/MagnetarV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_marketModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ActionNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "Failed",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownReason",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ICluster",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract ICluster",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newHelper",
        type: "address",
      },
    ],
    name: "HelperUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "burst",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "zroPaymentAddress",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "zroPaymentAddress",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
              {
                internalType: "address payable",
                name: "refundAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "zroPaymentAddress",
                type: "address",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
              {
                internalType: "address payable",
                name: "refundAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "zroPaymentAddress",
                type: "address",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "helper",
    outputs: [
      {
        internalType: "contract IMagnetarHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketModule",
    outputs: [
      {
        internalType: "contract MagnetarMarketModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_helper",
        type: "address",
      },
    ],
    name: "setHelper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unwrap",
        type: "bool",
      },
      {
        internalType: "address",
        name: "zroPaymentAddress",
        type: "address",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346200016357601f62003e7138819003918201601f19168301916001600160401b03831184841017620001685780849260609460405283398101031262000163576200004d816200017e565b60406200005d602084016200017e565b9201516001600160a01b0380821693918490036200016357620000803362000193565b8060018060a01b03199316836001541617600155338160005416036200011f57811615620000cb57620000b39062000193565b6002541617600255604051613c969081620001db8239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016357565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063013546e11461011b578063150b7a0214610116578063180ce00e1461011157806319f123eb1461010c578063357b97b014610107578063437be622146101025780635f5e9448146100fd57806363b0e66a146100f8578063715018a6146100f35780638da5cb5b146100ee578063986ccc7f146100e9578063b25ea8fb146100e4578063cfd8b3d8146100df578063dbd01de1146100da578063e5546fac146100d55763f2fde38b0361000e57611c65565b611b08565b611abb565b611a92565b611a3d565b6119d0565b6119a7565b61195b565b611932565b611799565b6116cc565b61160d565b611551565b611459565b6113dc565b6101df565b60005b8381106101335750506000910152565b8181015183820152602001610123565b9060209161015c81518092818552858086019101610120565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b8401019601946000925b85841061019d575050505050505090565b9091929394959685806101ce600193603f1986820301885286838d5180511515845201519181858201520190610143565b99019401940192959493919061018c565b602036600319011261044a576004356001600160401b0380821161044a573660238301121561044a5781600401351161044a57366024826004013560051b8301011161044a576000906102358160040135611d89565b91805b82600401358110610271578382340361025f5761025b9060405191829182610168565b0390f35b60405163dd8e4af760e01b8152600490fd5b61028381846004013560248601611e2a565b906060926102ae8484019161029e61029a84611e51565b1590565b611174575b604085013590611f39565b936001806102c56102be87611f46565b61ffff1690565b03610309575050826102f96102ff926102f16102e6602061030498016123c7565b936080810190611e5b565b929091611e51565b926139a5565b611e00565b610238565b61ffff60028161031888611f46565b1603610341575050508261033b6102ff926102f16102e6602061030498016123c7565b92613921565b60038161034d88611f46565b160361037657505050826103706102ff926102f16102e6602061030498016123c7565b9261386e565b9091925060048161038687611f46565b1603610461575050506103b96103b46103ac6103a56080860186611e5b565b8091611f50565b810190613666565b6111b4565b91336001600160a01b0384160361044f576103b46103b460206103dc93016123c7565b803b1561044a5760405163a22cb46560e01b81526001600160a01b03939093166004840152600060248401819052908390604490829084905af1918215610445576103049261042c575b50611e00565b8061043961043f926111f4565b8061191a565b38610426565b6126a9565b600080fd5b60405163ea8e4eb560e01b8152600490fd5b60058161046d87611f46565b160361050d575050506104916104896103a56080850185611e5b565b810190613647565b926001600160a01b039091169033820361044f576103b46103b460206104b793016123c7565b92833b1561044a5760405163b8489fb560e01b81526001600160a01b03929092166004830152602482015260006044820181905290928390606490829084905af1918215610445576103049261042c5750611e00565b61012c8161051a87611f46565b16036105ca5750505061053e6105366103a56080850185611e5b565b810190613433565b9161055161054c84516111b4565b613bb3565b6105636103b46103b4602084016123c7565b9261056e81516111b4565b91604061057e60208401516111b4565b92015191853b1561044a576105ae956040600095815198899687958693630c46aac760e31b85526004850161348c565b03930135905af1918215610445576103049261042c5750611e00565b61012d816105d787611f46565b1603610654575050506105fb6105f36103a56080850185611e5b565b81019061354e565b90956001600160a01b039094169391929061061585613bb3565b6106276103b46103b4602086016123c7565b90813b1561044a576000956105ae60409283519a8b988997889563695ef6bf60e01b8752600487016135ef565b60648161066087611f46565b16036107b95750506040906080936106886106806103a587840184611e5b565b81019061350f565b9460006106ad6103b46103b46020808b01966106a761054c89516111b4565b016123c7565b9261071c6106bd895192516111b4565b936106ca888b01516111b4565b968a01519901518751634d4d7cbd60e11b815260048101939093526001600160a01b039485166024840152939095166044820152606481019790975260848701919091528592839190829060a4820190565b03925af1801561044557610304926000908192610785575b5060408051602081019290925281019190915261075e81606081015b03601f1981018352826112af565b6107666112d2565b6001815290602082015261077a828761331e565b52610426818661331e565b61075e92506107ac915060403d6040116107b2575b6107a481836112af565b810190613476565b91610734565b503d61079a565b60c8816107c587611f46565b16036108985750506080906108036103b46103b460206107f56107ed6103a5888b018b611e5b565b8101906134ae565b976106a761054c8a516111b4565b61080d85516111b4565b9261081b60208701516111b4565b906108296040880151151590565b93870151960151823b1561044a576040516374d2492960e11b81526001600160a01b03958616600482015294909116602485015291151560448401526064830194909452608482015291600090839081838160a4810103925af1918215610445576103049261042c5750611e00565b60c9816108a6879597611f46565b160361097957505061091d9250806108e26103b46103b460206108d46105366103a560806040990188611e5b565b946106a761054c87516111b4565b6108ec82516111b4565b916000846108fd60208401516111b4565b92015185516314890dcb60e21b815297889586948593916004850161348c565b03925af1801561044557610304926000908192610955575b5060408051602081019290925281019190915261075e8160608101610750565b61075e9250610973915060403d6040116107b2576107a481836112af565b91610935565b60668161098585611f46565b1603610a255750509091506080810161099e9082611e5b565b806109a892611f50565b81016109b391613332565b6001600160a01b039a9099988b1698909791969095929492916109d58a613bb3565b604080516319f123eb60e01b60208201529c8d9c610a009c9082169b90920135981660248d016133c6565b03601f1981018252610a1290826112af565b610a1b90613aaa565b5061030490611e00565b60cb81610a3185611f46565b1603610b0d57505080610a616103b46103b460206108d4610a596103a5608084990188611e5b565b81019061329d565b610a6b82516111b4565b946000610a7a858501516111b4565b91610a886040860151151590565b94015196610aac60405198899687958694630cb0f5b760e31b8652600486016132f4565b03925af180156104455761075e6107509161030494600091610ade575b50604051928391602083019190602083019252565b610b00915060203d602011610b06575b610af881836112af565b81019061297b565b38610ac9565b503d610aee565b60cc81610b1985611f46565b1603610b8c57505080610b416103b46103b460206108d4610a596103a5608084990188611e5b565b610b4b82516111b4565b946000610b5a858501516111b4565b91610b686040860151151590565b94015196610aac6040519889968795869463cd0211eb60e01b8652600486016132f4565b61012f81610b9c85979495611f46565b1603610c3a57505050610bc0610bb86103a56080850185611e5b565b810190613125565b9160018060a09c9899969a979c1b0380961693610bdc85613bb3565b610bee6103b46103b460208b016123c7565b998a3b1561044a576040516209b9f160e91b81529c8d9a8b998a99610c199991169060048b016131e1565b0391604001355a94600095f1918215610445576103049261042c5750611e00565b61013081610c4787611f46565b1603610cc957505050610c6b610c636103a56080850185611e5b565b810190612eff565b9160018060a09c989c9a9997969a1b0380981693610c8885613bb3565b610c9a6103b46103b460208b016123c7565b998a3b1561044a5789976040519d8e9b8c9a8b9a63dfefd99d60e01b8c5216921660048a0198610c1999612fba565b60cd81610cd587611f46565b1603610d6b575092610d666104269261075061030496610d08610d006103a560809788810190611e5b565b810190612ce5565b92610d1661054c85516111b4565b610d2084516111b4565b936020810151966040820151938201519082015190610d4960c060a085015194015194546111b4565b94604051998a986325e0e33160e01b60208b015260248a01612ddf565b613aaa565b60ce81610d7787611f46565b1603610de3575050506104266040610d6684610750610daa610da26103a560806103049a0185611e5b565b810190612b52565b94909391506001600160a01b0390811690610dc482613bb3565b8a51638cb1e16560e01b60208201529a8b990135961660248901612ba1565b60cf81610def87611f46565b1603610e645750506040610d6684610750610e4561042695610e25610e1d6103a560806103049c0187611e5b565b810190612aca565b90936001600160a01b0390921692909190610e3f84613bb3565b546111b4565b92875197889663fb8129c360e01b602089015201359260248701612b0c565b90915060d081610e7386611f46565b1603610ee05750506104266040610d6684610750610ea5610e9d6103a560806103049a0185611e5b565b810190612a19565b949093919291906001600160a01b0390811690610ec182613bb3565b8b51632a59396b60e21b60208201529b8c9a0135971660248a01612a7d565b60d181610eec86611f46565b1603610f9457505060206103b483826000610f3b610f1e610f166103a560806103b49b0187611e5b565b8101906129ae565b9a90976001600160a01b039093169691959092916106a788613bb3565b92610f5c60405198899687958694636a7229a760e11b8652600486016129ee565b03925af19182156104455761030492610f755750611e00565b610f8d9060203d602011610b0657610af881836112af565b5038610426565b60d281610fa086611f46565b160361100c57505060206103b483826000610fee6103b4610fd5610fcd6103a56080610f5c9c0188611e5b565b810190612941565b976001600160a01b03909216969095906106a788613bb3565b92604051978895869485936301cfadbd60e71b85526004850161298a565b6101908161101986611f46565b1603611092575060809061103d6110356103a584870187611e5b565b8101906127b0565b936110506103b46103b4602084016123c7565b92855193602087015191604088015194880151970151813b1561044a576000956105ae60409283519a8b988997889563ae9289ff60e01b875260048701612852565b610133906110a1859395611f46565b1603611162576080926110c46110bc6103a586850185611e5b565b8101906122cc565b916110d261054c84516111b4565b6110e46103b46103b4602084016123c7565b6110ee84516111b4565b906110fc60208601516111b4565b9161111861110f604088015161ffff1690565b958701516111b4565b978601519060a08701519160c08801519761010060e082015191015190853b1561044a576000996040956105ae9487519e8f9c8d9b8c9963424a214b60e11b8b5260048b01612624565b604051630395e47f60e41b8152600490fd5b6111af6111846080870187611e5b565b90506111a76040516111a2816107508a602083019190602083019252565b611e8d565b901515611f09565b6102a3565b6001600160a01b031690565b6001600160a01b0381160361044a57565b35906111dc826111c0565b565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161120757604052565b6111de565b604081019081106001600160401b0382111761120757604052565b606081019081106001600160401b0382111761120757604052565b60c081019081106001600160401b0382111761120757604052565b60a081019081106001600160401b0382111761120757604052565b608081019081106001600160401b0382111761120757604052565b61030081019081106001600160401b0382111761120757604052565b601f909101601f19168101906001600160401b0382119082101761120757604052565b604051906111dc8261120c565b6040519061010082016001600160401b0381118382101761120757604052565b6040519061014082016001600160401b0381118382101761120757604052565b604051906101c082016001600160401b0381118382101761120757604052565b6040519061012082016001600160401b0381118382101761120757604052565b604051906111dc8261125d565b6001600160401b03811161120757601f01601f191660200190565b9291926113938261136c565b916113a160405193846112af565b82948184528183011161044a578281602093846000960137010152565b9080601f8301121561044a578160206113d993359101611387565b90565b3461044a57608036600319011261044a576113f86004356111c0565b6114036024356111c0565b6064356001600160401b03811161044a576114229036906004016113be565b50604051630a85bd0160e11b8152602090f35b8015150361044a57565b35906111dc82611435565b908161010091031261044a5790565b60e036600319011261044a57600435611471816111c0565b6024359061147e826111c0565b6084359161148b83611435565b60a4359061149882611435565b60c4356001600160401b03811161044a5761001994610d66936114c261152593369060040161144a565b916114cc85613bb3565b604051968795638cb1e16560e01b602088015260018060a01b03809216602488015216604486015260443560648601526064356084860152151560a4850152151560c484015261010060e48401526101248301906136ce565b3461010483015203601f1981018352826112af565b61ffff81160361044a57565b35906111dc8261153a565b61016036600319011261044a5760043561156a816111c0565b60243590611577826111c0565b6064356115838161153a565b60c435926001600160401b03841161044a57610750610d66926115ad6100199636906004016113be565b9060e435906115bb826111c0565b61012435916115c983611435565b61014435936115d7856111c0565b6115e087613bb3565b6040516319f123eb60e01b6020820152988997610104359460a43592608435926044359160248d016133c6565b60e036600319011261044a57600435611625816111c0565b60243590611632826111c0565b60a43561163e81611435565b60c435926001600160401b03841161044a57611525610d669261166861001996369060040161144a565b9061167284613bb3565b604051958694632a59396b60e21b602087015260018060a01b0380921660248701521660448501526044356064850152606435608485015260843560a4850152151560c484015261010060e48401526101248301906136ce565b3461044a57602036600319011261044a576004356116e9816111c0565b6116f1611d1a565b6001600160a01b0390811690811561173f57816001549182167f03bebf5becbadd9703358ffd62f5a65bddfcc9c20038edae65aebe5542598bf2600080a36001600160a01b03191617600155005b60405163f1640ae160e01b8152600490fd5b606090602319011261044a57602490565b60609060e319011261044a5760e490565b6060906101e319011261044a576101e490565b60609061024319011261044a5761024490565b60031960a03682011261044a57600435906117b3826111c0565b6117bc36611751565b608435929091906001600160401b03841161044a5783600401916101c08091863603011261044a57610750611909610019966118f6610d66966117fe87613bb3565b60018060a01b03966118ee8860015416976118376040519c8d9b8c9563fb8129c360e01b602088015216602486015260448501906137e7565b60e060a4840152611855610104840161184f8661143f565b15159052565b6118dc61012460248801358186015261187d61187360448a0161143f565b1515610144870152565b60648801356101648601526118d461189760848a0161143f565b916118a9610184938489019015159052565b6102246101a49760a48c0135898201526118cb8c60c46101c4840191016137b1565b01908a016137b1565b87018561382a565b906102848b01526102c48a01906136ce565b93019061382a565b85820361010319016102a48701526136ce565b913460c485015260e4840190611925565b600091031261044a57565b6001600160a01b03169052565b3461044a57600036600319011261044a576003546040516001600160a01b039091168152602090f35b3461044a576000806003193601126119a457611975611d1a565b80546001600160a01b03198116825581906001600160a01b0316600080516020613c418339815191528280a380f35b80fd5b3461044a57600036600319011261044a576000546040516001600160a01b039091168152602090f35b3461044a57602036600319011261044a576004356119ed816111c0565b6119f5611d1a565b6003546001600160a01b0391821691829082167f8ec9146610f1f9324ffc354c9f4db61b885844583cba310f2b9488f967d74e2f600080a36001600160a01b03191617600355005b3461044a57604036600319011261044a57602435611a5a816111c0565b611a62611d1a565b60008080808094600435905af1611a7761383e565b5015611a805780f35b60405163312d207360e11b8152600490fd5b3461044a57600036600319011261044a576002546040516001600160a01b039091168152602090f35b3461044a57600036600319011261044a576001546040516001600160a01b039091168152602090f35b60a090604319011261044a57604490565b60a09061014319011261044a5761014490565b6102a036600319011261044a57600435611b21816111c0565b611b2a36611ae4565b611b3336611762565b611b3c36611af5565b611b4536611773565b90611b4f36611786565b92611b5986613bb3565b600160a01b600190039081600154169582604051986325e0e33160e01b60208b015216602489015260243560448901528035611b9481611435565b1515606489015260208101356084890152611bb69060a4890190604001613782565b6101048701611bc491613782565b8135611bcf81611435565b15156101648701526020820135611be5816111c0565b166101848601526001600160801b0380611c0160408401612c6b565b166101a4870152611c1460608301612c6b565b166101c4860152608001356101e48501526102048401611c33916137b1565b6102648301611c41916137e7565b6102c490818301611c5191611925565b8152611c5c81611293565b61001990613aaa565b3461044a57602036600319011261044a57600435611c82816111c0565b611c8a611d1a565b6001600160a01b039081168015611cc657600080546001600160a01b0319811683178255909216600080516020613c418339815191528380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6000546001600160a01b03163303611d2e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b0381116112075760051b60200190565b90611d9382611d72565b6040611da1815192836112af565b8382528193611db2601f1991611d72565b0191600091825b848110611dc7575050505050565b6020908251611dd58161120c565b85815282606081830152828601015201611db9565b634e487b7160e01b600052601160045260246000fd5b6000198114611e0f5760010190565b611dea565b634e487b7160e01b600052603260045260246000fd5b9190811015611e4c5760051b81013590609e198136030182121561044a570190565b611e14565b356113d981611435565b903590601e198136030182121561044a57018035906001600160401b03821161044a5760200191813603831361044a57565b906111dc604e60405180947f4d61676e6574617256323a204d697373696e672063616c6c20666f722061637460208301526d0d2dedc40eed2e8d040d2dcc8caf60931b6040830152611ee88151809260208686019101610120565b810103602e8101855201836112af565b9060206113d9928181520190610143565b15611f115750565b60405162461bcd60e51b815260206004820152908190611f35906024830190610143565b0390fd5b91908201809211611e0f57565b356113d98161153a565b909291928360041161044a57831161044a57600401916003190190565b919082606091031261044a57604051611f8581611227565b60408082948035611f95816111c0565b84526020810135611fa5816111c0565b6020850152013591611fb6836111c0565b0152565b919082606091031261044a57604051611fd281611227565b60408082948035611fe281611435565b84526020810135611ff2816111c0565b60208501520135910152565b9190916101008184031261044a576120146112df565b9261201e8261143f565b8452602082013560208501526120366040830161143f565b604085015261204760608301611546565b60608501526080820135916001600160401b03831161044a5761207160e09261209e9483016113be565b608086015261208260a0820161143f565b60a086015261209360c082016111d1565b60c0860152016111d1565b60e0830152565b91906101c08382031261044a576120ba6112ff565b926120c48161143f565b8452602081013560208501526120dc6040820161143f565b6040850152606081013560608501526120f76080820161143f565b608085015260a081013560a08501526121138260c08301611fba565b60c08501526101209161212881848401611fba565b60e08601526001600160401b0361018083013581811161044a578261214e918501611ffe565b6101008701526101a083013590811161044a5761216b9201611ffe565b90830152565b60ff81160361044a57565b35906111dc82612171565b81601f8201121561044a5780359061219e82611d72565b926040906121ae825195866112af565b83855260209182860191836101c08097028601019481861161044a578401925b8584106121df575050505050505090565b868483031261044a578487916121f361131f565b6121fc8761143f565b815261220983880161143f565b8382015261221886880161143f565b86820152606061222981890161143f565b90820152608061223a818901611546565b9082015260a061224b8189016111d1565b9082015260c061225c81890161143f565b9082015260e061226d8189016111d1565b9082015261010061227f8189016111d1565b90820152610120808801359082015261014080880135908201526101606122a781890161217c565b9082015261018080880135908201526101a080880135908201528152019301926121ce565b60208183031261044a576001600160401b039080359082821161044a57016101608184031261044a576122fd61133f565b92612307826111d1565b8452612315602083016111d1565b602085015261232660408301611546565b6040850152612337606083016111d1565b6060850152608082013583811161044a57816123549184016113be565b60808501526123668160a08401611f6d565b60a0850152610100928383013581811161044a57826123869185016120a5565b60c086015261012083013581811161044a57826123a4918501612187565b60e086015261014083013590811161044a576123c09201612187565b9082015290565b356113d9816111c0565b80516001600160a01b03908116835260208083015182169084015260409182015116910152565b8051151582526020808201516001600160a01b031690830152604090810151910152565b906113d9908251151581526020830151602082015260408301511515604082015261ffff606084015116606082015260e0806124676080860151610100806080870152850190610143565b60a0808701511515908501529461248660c082015160c0860190611925565b0151910190611925565b8051151582526113d991602082015160208201526124b76040830151604083019015159052565b606082015160608201526124d46080830151608083019015159052565b60a082015160a08201526124f060c083015160c08301906123f8565b60e082015161250561012091828401906123f8565b6125206101008401516101c08061018086015284019061241c565b920151906101a081840391015261241c565b90815180825260208080930193019160005b828110612552575050505090565b90919293826101c0600192875161256b82825115159052565b8084015115158285015260408181015115159083015260608181015115159083015260808181015161ffff16908301526125ad60a08083015190840190611925565b60c0818101511515908301526125cb60e08083015190840190611925565b6125de6101008083015190840190611925565b610120818101519083015261014080820151908301526101608082015160ff169083015261018081810151908301526101a0908101519082015201950193929101612544565b9794612672906113d99a989361268b9661ffff61269a9a978d602061267d9860018060a01b0396878092168452169101521660408d01521660608b01526101608060808c01528a0190610143565b9260a08901906123d1565b868203610100880152612490565b90848203610120860152612532565b91610140818403910152612532565b6040513d6000823e3d90fd5b91908260c091031261044a576040516126cd81611242565b60a080829480356126dd816111c0565b845260208101356126ed816111c0565b602085015260408101356040850152606081013560608501526080810135612714816111c0565b60808501520135910152565b919082606091031261044a5760405161273881611227565b60408082948035611fe28161153a565b91908260c091031261044a5760405161276081611242565b60a0808294803561277081611435565b84526020810135612780816111c0565b602085015260408101356127938161153a565b6040850152606081013560608501526080810135612714816111c0565b9060208282031261044a576001600160401b039180359083821161044a5701906102208282031261044a576127e361135f565b926127ee82846126b5565b84526127fd8260c08501612720565b6020850152612810826101208501612748565b60408501526101e083013581811161044a578261282e918501612187565b606085015261020083013590811161044a5761284a9201612187565b608082015290565b93906113d995936128ce6129329460a061292094600180831b03808251168b528060208301511660208c0152604082015160408c0152606082015160608c015260808201511660808b0152015160a089015260c08801906040809161ffff815116845260018060a01b0360208201511660208501520151910152565b8051151561012087015260208101516001600160a01b03908116610140880152604082015161ffff1661016088015260608201516101808801526080820151166101a087015260a001516101c0860152565b610220806101e0860152840190612532565b91610200818403910152612532565b9160608383031261044a578235612957816111c0565b9260208101359260408201356001600160401b03811161044a576113d992016113be565b9081602091031261044a575190565b6113d9939260609260018060a01b0316825260208201528160408201520190610143565b9060808282031261044a5781356129c4816111c0565b9260208301359260408101359260608201356001600160401b03811161044a576113d992016113be565b90926080926113d9959460018060a01b03168352602083015260408201528160608201520190610143565b9060e08282031261044a578135612a2f816111c0565b926020830135612a3e816111c0565b9260408101359260608201359260808301359260a0810135612a5f81611435565b9260c08201356001600160401b03811161044a576113d99201611ffe565b98979693909260e09693612ac5969360018060a01b038092168c521660208b015260408a015260608901526080880152151560a08701526101008060c088015286019061241c565b930152565b9160a08383031261044a578235612ae0816111c0565b92612aee8360208301611f6d565b9260808201356001600160401b03811161044a576113d992016120a5565b6001600160a01b03918216815293959460c09391929091612b4691612b359060208801906123d1565b60e0608087015260e0860190612490565b9560a085015216910152565b9060e08282031261044a578135612b68816111c0565b926020830135612b77816111c0565b926040810135926060820135926080830135612b9281611435565b9260a0810135612a5f81611435565b97969592612ac5949160e0969360018060a01b038092168b521660208a01526040890152606088015260006080880152151560a08701526101008060c088015286019061241c565b919082606091031261044a57604051612c0181611227565b60408082948035612c1181611435565b845260208101356020850152013591611fb683611435565b919060a08382031261044a576040612c66815192612c4684611227565b8284968035612c5481611435565b86526020810135602087015201612be9565b910152565b35906001600160801b038216820361044a57565b91908260a091031261044a57604051612c978161125d565b60808082948035612ca781611435565b84526020810135612cb7816111c0565b6020850152612cc860408201612c6b565b6040850152612cd960608201612c6b565b60608501520135910152565b6102a08183031261044a576040519160e083016001600160401b0381118482101761120757612d7a9261024091604052612d1e816111d1565b855260208101356020860152612d378360408301612c29565b6040860152612d498360e08301612be9565b6060860152612d5c836101408301612c7f565b6080860152612d6f836101e08301611fba565b60a086015201611f6d565b60c082015290565b604080918051151584526020810151602085015201511515910152565b6080809180511515845260018060a01b036020820151166020850152600180831b0380604083015116604086015260608201511660608501520151910152565b969390959298979491986102c0880199600160a01b6001900380981689526020890152805115156040890152602081015160608901526040015160808801612e2691612d82565b60e08701612e3391612d82565b6101408601612e4191612d9f565b6101e08501612e4f916123f8565b6102408401612e5d916123d1565b16906102a00152565b91906101e08382031261044a57612ef790610180612e8261133f565b94612e8c8161143f565b86526020810135602087015260408101356040870152612eae606082016111d1565b6060870152612ebf608082016111d1565b6080870152612ed060a0820161143f565b60a087015260c081013560c0870152612eec8360e08301612c7f565b60e087015201611fba565b610100830152565b9190916102e08184031261044a57612f16816111d1565b92612f23602083016111d1565b92612f3060408401611546565b92612f3d606082016111d1565b92612f4b8160808401612e66565b926001600160401b039061026084013582811161044a5783612f6e918601612187565b9361028081013583811161044a5784612f88918301612187565b936102a082013584811161044a5781612fa2918401611ffe565b936102c083013590811161044a576113d992016113be565b979461306f906130819361309f9893613090978c60406113d99f9d9961ffff9060018060a01b038097818098168652166020850152169101521660608c01528151151560808c0152602082015160a08c0152604082015160c08c015260608201511660e08b015260808101519061303761010092838d0190611925565b60a081015115156101208c015260c08101516101408c015261306260e08201516101608d0190612d9f565b01516102008a01906123f8565b6102e0806102608a0152880190612532565b90868203610280880152612532565b908482036102a086015261241c565b916102c0818403910152610143565b919082608091031261044a576040516130c681611278565b6060808294803584526020810135602085015260408101356130e7816111c0565b6040850152013591611fb6836111c0565b919082604091031261044a576040516131108161120c565b602080829480358452013591611fb6836111c0565b9190916101a08184031261044a5761313c816111d1565b92613149602083016111d1565b9261315660408401611546565b926001600160401b0392606082013584811161044a57816131789184016113be565b9361318682608085016130ae565b9361010084013582811161044a57836131a0918601611ffe565b936131af8461012083016130f8565b9361016082013584811161044a57816131c9918401612187565b9361018083013590811161044a576113d99201612187565b97939561326192606061322d61328e998c60406113d99f9d9b976132809a61ffff9160018060a01b039889809216865216602085015216910152828d6101a091829101528d0190610143565b93805160808d0152602081015160a08d01528260408201511660c08d015201511660e08a01528882036101008a015261241c565b83516101208801526020909301516001600160a01b0316610140870152565b848203610160860152612532565b91610180818403910152612532565b9081608091031261044a576060604051916132b783611278565b80356132c2816111c0565b835260208101356132d2816111c0565b602084015260408101356132e581611435565b60408401520135606082015290565b6001600160a01b039182168152911660208201529015156040820152606081019190915260800190565b8051821015611e4c5760209160051b010190565b91906101408382031261044a57823561334a816111c0565b926020810135613359816111c0565b92604082013592606083013561336e8161153a565b9260808101359260a08201359260c0830135906001600160401b03821161044a5761339a9184016113be565b9160e08101356133a9816111c0565b916113d96101206101008401356133bf81611435565b93016111d1565b999590939461ffff6101409a96613418959a9e9d99949a60408e60018060a01b03809e81809c16835216602082015201521660608c015260808b015260a08a01526101608060c08b0152890190610143565b981660e0870152610100860152151561012085015216910152565b9081606091031261044a57604080519161344c83611227565b8035613457816111c0565b83526020810135613467816111c0565b60208401520135604082015290565b919082604091031261044a576020825192015190565b6001600160a01b03918216815291166020820152604081019190915260600190565b908160a091031261044a576080604051916134c88361125d565b80356134d3816111c0565b835260208101356134e3816111c0565b602084015260408101356134f681611435565b6040840152606081013560608401520135608082015290565b908160a091031261044a576080604051916135298361125d565b80358352602081013561353b816111c0565b602084015260408101356134f6816111c0565b91909160a08184031261044a578035613566816111c0565b9260208201356135758161153a565b926040830135926060810135926001600160401b039160808101359083821161044a57019060608282031261044a57604051926135b184611227565b82356135bc816111c0565b845260208301356135cc816111c0565b6020850152604083013590811161044a576135e792016113be565b604082015290565b93906113d995916101009461ffff60409560018060a01b03809516895216602088015284870152606086015260a060808601528082511660a086015260208201511660c0850152015191606060e08201520190610143565b919082604091031261044a5760208235613660816111c0565b92013590565b9081602091031261044a57356113d9816111c0565b9035601e198236030181121561044a570160208101919035906001600160401b03821161044a57813603831361044a57565b908060209392818452848401376000828201840152601f01601f1916010190565b906113d99082356136de81611435565b151581526020830135602082015260408301356136fa81611435565b1515604082015261371b61371060608501611546565b61ffff166060830152565b60e061377a81613742613731608088018861367b565b6101008060808901528701916136ad565b9561375b61375260a0830161143f565b151560a0870152565b61377461376a60c083016111d1565b60c0870190611925565b016111d1565b910190611925565b60408091803561379181611435565b151584526020810135602085015201356137aa81611435565b1515910152565b6040809180356137c081611435565b1515845260208101356137d2816111c0565b6001600160a01b031660208501520135910152565b604090818135916137f7836111c0565b6001600160a01b039283168552826020820135613813816111c0565b1660208601520135613824816111c0565b16910152565b903560fe198236030181121561044a570190565b3d15613869573d9061384f8261136c565b9161385d60405193846112af565b82523d6000602084013e565b606090565b803b1561173f57631221baf960e31b6001600160e01b03196020613893368787611387565b0151160361173f57826000836138e66138cd6138bd6138b586869a879a611f50565b810190613a07565b5060208082518301019101613a3d565b50506001600160a01b039094169450613bb39350505050565b6138f560405180948193613a9c565b03925af19061390261383e565b91159081613918575b506139135750565b613af4565b9050153861390b565b803b1561173f5763d505accf60e01b6001600160e01b03196020613946368787611387565b0151160361173f578261395c8160e09585611f50565b908095918101031261044a5760008094936138e685613997608085983592613983846111c0565b61399060208201356111c0565b0135612171565b6001600160a01b0316613bb3565b803b1561173f5763aba0784760e01b6001600160e01b031960206139ca368787611387565b0151160361173f57826139e08160c09585611f50565b908095918101031261044a5760008094936138e685613997606085983592613983846111c0565b919060408382031261044a5782356001600160401b03811161044a57602091613a319185016113be565b9201356113d98161153a565b91908261010091031261044a578151613a5581611435565b916020810151613a64816111c0565b916040820151613a73816111c0565b9160608101519160808201519160a0810151613a8e81612171565b9160e060c083015192015190565b908092918237016000815290565b6002546001600160a01b03168015613ae257816000929160208493519201905af490613ad461383e565b9115613adc57565b50613af4565b604051631c94b02360e21b8152600490fd5b6044815110613b8c5760048101518101906020816024840193031261044a576024810151906001600160401b03821161044a5701908060438301121561044a57602482015191613b438361136c565b91613b5160405193846112af565b8383526044848301011161044a57611f3592613b74916044602085019101610120565b60405162461bcd60e51b815291829160048301611ef8565b604051633922dd2d60e21b8152600490fd5b9081602091031261044a57516113d981611435565b6001600160a01b039081163314159081613bcf575b5061044f57565b600154604051633a304d8b60e21b815260006004820152336024820152925060209183916044918391165afa90811561044557600091613c12575b501538613bc8565b613c33915060203d8111613c39575b613c2b81836112af565b810190613b9e565b38613c0a565b503d613c2156fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122033a9fcb105b704499bc62930f2b606b0d3d1fb8abafa5a026ede1bef4ec3eff464736f6c63430008130033";

type MagnetarV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2__factory extends ContractFactory {
  constructor(...args: MagnetarV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2";
  }

  override deploy(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2> {
    return super.deploy(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    ) as Promise<MagnetarV2>;
  }
  override getDeployTransaction(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    );
  }
  override attach(address: string): MagnetarV2 {
    return super.attach(address) as MagnetarV2;
  }
  override connect(signer: Signer): MagnetarV2__factory {
    return super.connect(signer) as MagnetarV2__factory;
  }
  static readonly contractName: "MagnetarV2";

  public readonly contractName: "MagnetarV2";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2Interface {
    return new utils.Interface(_abi) as MagnetarV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2 {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2;
  }
}
