/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MagnetarV2,
  MagnetarV2Interface,
} from "../../../contracts/Magnetar/MagnetarV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_marketModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Failed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newHelper",
        type: "address",
      },
    ],
    name: "HelperUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "burst",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "helper",
    outputs: [
      {
        internalType: "contract IMagnetarHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketModule",
    outputs: [
      {
        internalType: "contract MagnetarMarketModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_helper",
        type: "address",
      },
    ],
    name: "setHelper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unwrap",
        type: "bool",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346200016357601f6200407c38819003918201601f19168301916001600160401b03831184841017620001685780849260609460405283398101031262000163576200004d816200017e565b60406200005d602084016200017e565b9201516001600160a01b0380821693918490036200016357620000803362000193565b8060018060a01b03199316836001541617600155338160005416036200011f57811615620000cb57620000b39062000193565b6002541617600255604051613ea19081620001db8239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016357565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063013546e11461011b578063150b7a021461011657806340b1d65714610111578063437be6221461010c578063460297fd1461010757806363b0e66a14610102578063715018a6146100fd5780637a7ccd91146100f85780638da5cb5b146100f3578063986ccc7f146100ee578063b25ea8fb146100e9578063c3594347146100e4578063cfd8b3d8146100df578063dbd01de1146100da578063e5546fac146100d55763f2fde38b0361000e57611d23565b611bc6565b611b79565b611b50565b6119cf565b611932565b6118c5565b61189c565b6117d0565b611784565b61175b565b61166f565b61160d565b61150e565b611489565b6101df565b60005b8381106101335750506000910152565b8181015183820152602001610123565b9060209161015c81518092818552858086019101610120565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b8401019601946000925b85841061019d575050505050505090565b9091929394959685806101ce600193603f1986820301885286838d5180511515845201519181858201520190610143565b99019401940192959493919061018c565b6020366003190112610439576004356001600160401b0380821161043957366023830112156104395781600401351161043957366024826004013560051b83010111610439576000906102358160040135611e47565b91805b82600401358110610271578382340361025f5761025b9060405191829182610168565b0390f35b60405163dd8e4af760e01b8152600490fd5b61028381846004013560248601611ee8565b906060926102ae8484019161029e61029a84611f0f565b1590565b611241575b604085013590611ff3565b936001806102c56102be87612000565b61ffff1690565b03610309575050826102f96102ff926102f16102e660206103049801612468565b936080810190611f19565b929091611f0f565b92613b3c565b611ebe565b610238565b61ffff60028161031888612000565b1603610341575050508261033b6102ff926102f16102e660206103049801612468565b92613ab8565b60038161034d88612000565b160361037657505050826103706102ff926102f16102e660206103049801612468565b92613a05565b9091925060048161038687612000565b160361043e575050506103cb6103bf6103bf60206103c46103bf6103b76103b060808a018a611f19565b809161200a565b810190613844565b611281565b9501612468565b803b156104395760405163a22cb46560e01b81526001600160a01b03939093166004840152600060248401819052908390604490829084905af1918215610434576103049261041b575b50611ebe565b8061042861042e926112c1565b80611743565b38610415565b612728565b600080fd5b60058161044a87612000565b16036104d957505050816104836103bf6103bf61047a6104726103b060806020990187611f19565b810190613825565b96909401612468565b92833b156104395760405163b8489fb560e01b81526001600160a01b03929092166004830152602482015260006044820181905290928390606490829084905af1918215610434576103049261041b5750611ebe565b61012c816104e687612000565b160361058b5750505061050a6105026103b06080850185611f19565b810190613611565b9161051d6105188451611281565b613dac565b61052f6103bf6103bf60208401612468565b90604061053f6020860151611281565b94015190823b156104395761056f9460009360408051809881968295630c46aac760e31b8452336004850161366a565b03930135905af1918215610434576103049261041b5750611ebe565b61012d8161059887612000565b1603610610575050506105d26105bf6105b76103b06080860186611f19565b81019061372c565b96929490936001600160a01b0316613dac565b6105e46103bf6103bf60208501612468565b803b1561043957604060009561056f8251998a978896879463695ef6bf60e01b865233600487016137cd565b60648161061e879597612000565b160361075a5750506040906080936106676103bf6103bf60206106516106496103b08b890189611f19565b8101906136ed565b9561066161051883890151611281565b01612468565b90600083519661067986860151611281565b928501519401518551634d4d7cbd60e11b815260048101989098523360248901526001600160a01b03909216604488015260648701939093526084860152849160a4918391905af1801561043457610304926000908192610726575b506040805160208101929092528101919091526106ff81606081015b03601f19810183528261137c565b61070761139f565b6001815290602082015261071b828761351e565b52610415818661351e565b6106ff925061074d915060403d604011610753575b610745818361137c565b810190613654565b916106d5565b503d61073b565b60c88161076685612000565b160361082d5750506080906107a46103bf6103bf602061079661078e6103b088880188611f19565b81019061368c565b946106616105188751611281565b6107b16020830151611281565b926107bf6040840151151590565b9583015192015194813b15610439576040516374d2492960e11b81523360048201526001600160a01b03949094166024850152151560448401526064830191909152608482019390935291600090839060a490829084905af1918215610434576103049261041b5750611ebe565b60c98161083b859795612000565b16036108f4575050506040826108686103bf6103bf60206107966105026103b060806108989b0188611f19565b826108766020840151611281565b92015191600084518097819582946314890dcb60e21b8452336004850161366a565b03925af18015610434576103049260009081926108d0575b506040805160208101929092528101919091526106ff81606081016106f1565b6106ff92506108ee915060403d60401161075357610745818361137c565b916108b0565b60668161090087612000565b1603610976575050506104156040610971846106f161093361092b6103b060806103049a0185611f19565b810190613532565b969095919492939291906001600160a01b039081169061095282613dac565b8d516340b1d65760e01b60208201529d8e9c0135991660248c016135af565b613c41565b60cb8161098287612000565b1603610a56575050602090836109b66103bf6103bf856107966109ae6103b060806109f59c0188611f19565b81019061349d565b9060006109c585830151611281565b936109d36040840151151590565b920151604051630cb0f5b760e31b8152978895869485939133600486016134f4565b03925af18015610434576106ff6106f19161030494600091610a27575b50604051928391602083019190602083019252565b610a49915060203d602011610a4f575b610a41818361137c565b810190612a11565b38610a12565b503d610a37565b60cc81610a6287612000565b1603610acd57505060209083610a8e6103bf6103bf856107966109ae6103b060806109f59c0188611f19565b906000610a9d85830151611281565b93610aab6040840151151590565b92015160405163cd0211eb60e01b8152978895869485939133600486016134f4565b61012f81610add87959495612000565b1603610b6357505050610b01610af96103b06080850185611f19565b810190613338565b94999197959691956001600160a01b039591949190610b21908716613dac565b610b336103bf6103bf60208a01612468565b94853b156104395760009960409561056f9487519e8f9c8d9b8c9963afa61ff960e01b8b52163360048b016133f4565b61013081610b7087612000565b1603610c1857505050610b94610b8c6103b06080850185611f19565b81019061313f565b969992976001600160a01b03979396949594939290610bb4908916613dac565b610bc66103bf6103bf60208a01612468565b98893b1561043957604051630ff5c49b60e11b81529b8c998a988998610bf798919390831692163360048b016131fa565b0391604001355a94600095f1918215610434576103049261041b5750611ebe565b61013181610c2587612000565b1603610cc2575090506080610c4a610c426103b083870187611f19565b810190612fd9565b93610c586105188651611281565b610c6a6103bf6103bf60208401612468565b92610c786020870151611281565b9360a0610c926040890151938901519589015161ffff1690565b970151813b156104395760009561056f60409283519a8b9889978895630fb6ba5960e01b87523360048801613064565b61013281610ccf87612000565b1603610d5157505050610cf3610ceb6103b06080850185611f19565b810190612f2e565b919693949293926001600160a01b039290610d0f908416613dac565b610d216103bf6103bf60208701612468565b91823b156104395761056f60409260009884519b8c998a98899663076cf20360e11b885216923360048801612f6e565b60cd81610d5d87612000565b1603610dee575092610971610415926106f161030496610d90610d886103b060809788810190611f19565b810190612dad565b92610d9e6105188551611281565b610da88451611281565b936020810151966040820151938201519082015190610dd160c060a08501519401519454611281565b94604051998a986325e0e33160e01b60208b015260248a01612ea7565b60ce81610dfa87612000565b1603610e66575050506104156040610971846106f1610e2d610e256103b060806103049a0185611f19565b810190612c1a565b94909391506001600160a01b0390811690610e4782613dac565b8a51630939eb3960e41b60208201529a8b990135961660248901612c69565b60cf81610e7287612000565b1603610ee75750506040610971846106f1610ec861041595610ea8610ea06103b060806103049c0187611f19565b810190612b92565b90936001600160a01b0390921692909190610ec284613dac565b54611281565b92875197889663650f5d7760e11b602089015201359260248701612bd4565b90915060d081610ef686612000565b1603610f635750506104156040610971846106f1610f28610f206103b060806103049a0185611f19565b810190612ae1565b949093919291906001600160a01b0390811690610f4482613dac565b8b51632465b7a760e01b60208201529b8c9a0135971660248a01612b45565b60d181610f6f86612000565b16036110175750506020610fdf83610f9a610f926103b060806000980184611f19565b810190612a52565b90929993969195610fbf6103bf6103bf8b60018060a01b03809a169461066186613dac565b966040519b8c998a988997630f74e47960e11b8952169360048801612aa7565b03925af19182156104345761030492610ff85750611ebe565b6110109060203d602011610a4f57610a41818361137c565b5038610415565b60d28161102386612000565b16036110925750506020610fdf8361104e6110466103b060806000980184611f19565b8101906129c0565b6110726103bf6103bf8a600180979e989b969760a01b03809916996106618b613dac565b956040519a8b9889978896632c6dcd7f60e11b8852169260048701612a20565b6101908161109f86612000565b160361111857506080906110c36110bb6103b084870187611f19565b81019061282f565b936110d66103bf6103bf60208401612468565b92855193602087015191604088015194880151970151813b156104395760009561056f60409283519a8b988997889563ae9289ff60e01b8752600487016128d1565b61013390611127859395612000565b16036111f9576080926111636103bf6103bf602061115561114d6103b08a890189611f19565b81019061236d565b956106616105188851611281565b61116d8351611281565b61117a6020850151611281565b9061119661118d604087015161ffff1690565b94860151611281565b968501519060a08601519160c08701519661010060e082015191015190863b156104395760009889956111e0946040519d8e9b8c9a8b99635f7ce77160e11b8b5260048b016126a3565b03925af1918215610434576103049261041b5750611ebe565b60405162461bcd60e51b815260206004820152601c60248201527b135859db995d185c958c8e881858dd1a5bdb881b9bdd081d985b1a5960221b6044820152606490fd5b0390fd5b61127c6112516080870187611f19565b905061127460405161126f816106f18a602083019190602083019252565b611f4b565b901515611fc7565b6102a3565b6001600160a01b031690565b6001600160a01b0381160361043957565b35906112a98261128d565b565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116112d457604052565b6112ab565b604081019081106001600160401b038211176112d457604052565b606081019081106001600160401b038211176112d457604052565b60c081019081106001600160401b038211176112d457604052565b60a081019081106001600160401b038211176112d457604052565b608081019081106001600160401b038211176112d457604052565b61030081019081106001600160401b038211176112d457604052565b601f909101601f19168101906001600160401b038211908210176112d457604052565b604051906112a9826112d9565b6040519061014082016001600160401b038111838210176112d457604052565b604051906101c082016001600160401b038111838210176112d457604052565b6040519061012082016001600160401b038111838210176112d457604052565b604051906112a98261132a565b6001600160401b0381116112d457601f01601f191660200190565b92919261144082611419565b9161144e604051938461137c565b829481845281830111610439578281602093846000960137010152565b9080601f830112156104395781602061148693359101611434565b90565b34610439576080366003190112610439576114a560043561128d565b6114b060243561128d565b6064356001600160401b038111610439576114cf90369060040161146b565b50604051630a85bd0160e11b8152602090f35b61ffff81160361043957565b35906112a9826114e2565b8015150361043957565b35906112a9826114f9565b61014080600319360112610439576004356115288161128d565b6024356115348161128d565b60643590611541826114e2565b60c435936001600160401b038511610439576106f16109719360249261156e61001998369060040161146b565b6115f260e4359161157e8361128d565b6101249361ffff853596611591886114f9565b61159a8b613dac565b6040519c8d9b8c60206340b1d65760e01b9101528c60018060a01b039c8d8094169101521660448c015260443560648c01521660848a015260843560a48a015260a43560c48a015260e4890152610164880190610143565b94610104911681870152359085015261014484019015159052565b346104395760203660031901126104395760043561162a8161128d565b6001600160a01b0316801561164f57600180546001600160a01b031916919091179055005b60405163f1640ae160e01b8152600490fd5b908160c09103126104395790565b60e0366003190112610439576004356116878161128d565b602435906116948261128d565b60a4356116a0816114f9565b60c435926001600160401b0384116104395761172e610971926116ca610019963690600401611661565b906116d484613dac565b604051958694632465b7a760e01b602087015260018060a01b0380921660248701521660448501526044356064850152606435608485015260843560a4850152151560c484015261010060e484015261012483019061387a565b3461010483015203601f19810183528261137c565b600091031261043957565b6001600160a01b03169052565b34610439576000366003190112610439576003546040516001600160a01b039091168152602090f35b34610439576000806003193601126117cd5761179e611dd8565b80546001600160a01b03198116825581906001600160a01b0316600080516020613e4c8339815191528280a380f35b80fd5b60e0366003190112610439576004356117e88161128d565b602435906117f58261128d565b60843591611802836114f9565b60a4359061180f826114f9565b60c4356001600160401b03811161043957610019946109719361183961172e933690600401611661565b9161184385613dac565b604051968795630939eb3960e41b602088015260018060a01b03809216602488015216604486015260443560648601526064356084860152151560a4850152151560c484015261010060e484015261012483019061387a565b34610439576000366003190112610439576000546040516001600160a01b039091168152602090f35b34610439576020366003190112610439576004356118e28161128d565b6118ea611dd8565b6003546001600160a01b0391821691829082167f8ec9146610f1f9324ffc354c9f4db61b885844583cba310f2b9488f967d74e2f600080a36001600160a01b03191617600355005b346104395760403660031901126104395760243561194f8161128d565b611957611dd8565b60008080808094600435905af161196c6139d5565b50156119755780f35b60405163312d207360e11b8152600490fd5b606090602319011261043957602490565b60609060e31901126104395760e490565b6060906101e3190112610439576101e490565b6060906102431901126104395761024490565b60031960a03682011261043957600435906119e98261128d565b6119f236611987565b608435929091906001600160401b0384116104395783600401916101c080918636030112610439576106f1611b3f61001996611b2c61097196611a3487613dac565b60018060a01b0396611b24886001541697611a6d6040519c8d9b8c9563650f5d7760e11b6020880152166024860152604485019061397e565b60e060a4840152611a8b6101048401611a8586611503565b15159052565b611b12610124602488013581860152611ab3611aa960448a01611503565b1515610144870152565b6064880135610164860152611b0a611acd60848a01611503565b91611adf610184938489019015159052565b6102246101a49760a48c013589820152611b018c60c46101c484019101613948565b01908a01613948565b8701856139c1565b906102848b01526102c48a019061387a565b9301906139c1565b85820361010319016102a487015261387a565b913460c485015260e484019061174e565b34610439576000366003190112610439576002546040516001600160a01b039091168152602090f35b34610439576000366003190112610439576001546040516001600160a01b039091168152602090f35b60a090604319011261043957604490565b60a0906101431901126104395761014490565b6102a036600319011261043957600435611bdf8161128d565b611be836611ba2565b611bf136611998565b611bfa36611bb3565b611c03366119a9565b90611c0d366119bc565b92611c1786613dac565b600160a01b600190039081600154169582604051986325e0e33160e01b60208b015216602489015260243560448901528035611c52816114f9565b1515606489015260208101356084890152611c749060a4890190604001613920565b6101048701611c8291613920565b8135611c8d816114f9565b15156101648701526020820135611ca38161128d565b166101848601526001600160801b0380611cbf60408401612d33565b166101a4870152611cd260608301612d33565b166101c4860152608001356101e48501526102048401611cf191613948565b6102648301611cff9161397e565b6102c490818301611d0f9161174e565b8152611d1a81611360565b61001990613c41565b3461043957602036600319011261043957600435611d408161128d565b611d48611dd8565b6001600160a01b039081168015611d8457600080546001600160a01b0319811683178255909216600080516020613e4c8339815191528380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6000546001600160a01b03163303611dec57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b0381116112d45760051b60200190565b90611e5182611e30565b6040611e5f8151928361137c565b8382528193611e70601f1991611e30565b0191600091825b848110611e85575050505050565b6020908251611e93816112d9565b85815282606081830152828601015201611e77565b634e487b7160e01b600052601160045260246000fd5b6000198114611ecd5760010190565b611ea8565b634e487b7160e01b600052603260045260246000fd5b9190811015611f0a5760051b81013590609e1981360301821215610439570190565b611ed2565b35611486816114f9565b903590601e198136030182121561043957018035906001600160401b0382116104395760200191813603831361043957565b906112a9604e60405180947f4d61676e6574617256323a204d697373696e672063616c6c20666f722061637460208301526d0d2dedc40eed2e8d040d2dcc8caf60931b6040830152611fa68151809260208686019101610120565b810103602e81018552018361137c565b906020611486928181520190610143565b15611fcf5750565b60405162461bcd60e51b81526020600482015290819061123d906024830190610143565b91908201809211611ecd57565b35611486816114e2565b909291928360041161043957831161043957600401916003190190565b91908260609103126104395760405161203f816112f4565b6040808294803561204f8161128d565b8452602081013561205f8161128d565b60208501520135916120708361128d565b0152565b91908260609103126104395760405161208c816112f4565b6040808294803561209c816114f9565b845260208101356120ac8161128d565b60208501520135910152565b91909160c08184031261043957604051906120d28261130f565b819381356120df816114f9565b83526020820135602084015260408201356120f9816114f9565b6040840152606082013561210c816114e2565b60608401526080820135916001600160401b0383116104395761213560a093928493830161146b565b6080850152013591612070836114f9565b91906101c0838203126104395761215b6113ac565b9261216581611503565b84526020810135602085015261217d60408201611503565b60408501526060810135606085015261219860808201611503565b608085015260a081013560a08501526121b48260c08301612074565b60c0850152610120916121c981848401612074565b60e08601526001600160401b0361018083013581811161043957826121ef9185016120b8565b6101008701526101a08301359081116104395761220c92016120b8565b90830152565b60ff81160361043957565b35906112a982612212565b81601f820112156104395780359061223f82611e30565b9260409061224f8251958661137c565b83855260209182860191836101c080970286010194818611610439578401925b858410612280575050505050505090565b8684830312610439578487916122946113cc565b61229d87611503565b81526122aa838801611503565b838201526122b9868801611503565b8682015260606122ca818901611503565b9082015260806122db8189016114ee565b9082015260a06122ec81890161129e565b9082015260c06122fd818901611503565b9082015260e061230e81890161129e565b9082015261010061232081890161129e565b908201526101208088013590820152610140808801359082015261016061234881890161221d565b9082015261018080880135908201526101a0808801359082015281520193019261226f565b602081830312610439576001600160401b03908035908282116104395701610160818403126104395761239e6113ec565b926123a88261129e565b84526123b66020830161129e565b60208501526123c7604083016114ee565b60408501526123d86060830161129e565b6060850152608082013583811161043957816123f591840161146b565b60808501526124078160a08401612027565b60a085015261010092838301358181116104395782612427918501612146565b60c08601526101208301358181116104395782612445918501612228565b60e0860152610140830135908111610439576124619201612228565b9082015290565b356114868161128d565b80516001600160a01b03908116835260208083015182169084015260409182015116910152565b8051151582526020808201516001600160a01b031690830152604090810151910152565b908151151581526020820151602082015260408201511515604082015261ffff606083015116606082015260a080612504608085015160c0608086015260c0850190610143565b930151151591015290565b80511515825261148691602082015160208201526125366040830151604083019015159052565b606082015160608201526125536080830151608083019015159052565b60a082015160a082015261256f60c083015160c0830190612499565b60e08201516125846101209182840190612499565b61259f6101008401516101c0806101808601528401906124bd565b920151906101a08184039101526124bd565b90815180825260208080930193019160005b8281106125d1575050505090565b90919293826101c060019287516125ea82825115159052565b8084015115158285015260408181015115159083015260608181015115159083015260808181015161ffff169083015261262c60a0808301519084019061174e565b60c08181015115159083015261264a60e0808301519084019061174e565b61265d610100808301519084019061174e565b610120818101519083015261014080820151908301526101608082015160ff169083015261018081810151908301526101a09081015190820152019501939291016125c3565b97946126f1906114869a989361270a9661ffff6127199a978d60206126fc9860018060a01b0396878092168452169101521660408d01521660608b01526101608060808c01528a0190610143565b9260a0890190612472565b86820361010088015261250f565b908482036101208601526125b1565b916101408184039101526125b1565b6040513d6000823e3d90fd5b91908260c09103126104395760405161274c8161130f565b60a0808294803561275c8161128d565b8452602081013561276c8161128d565b6020850152604081013560408501526060810135606085015260808101356127938161128d565b60808501520135910152565b9190826060910312610439576040516127b7816112f4565b6040808294803561209c816114e2565b91908260c0910312610439576040516127df8161130f565b60a080829480356127ef816114f9565b845260208101356127ff8161128d565b60208501526040810135612812816114e2565b60408501526060810135606085015260808101356127938161128d565b90602082820312610439576001600160401b0391803590838211610439570190610220828203126104395761286261140c565b9261286d8284612734565b845261287c8260c0850161279f565b602085015261288f8261012085016127c7565b60408501526101e083013581811161043957826128ad918501612228565b6060850152610200830135908111610439576128c99201612228565b608082015290565b9390611486959361294d6129b19460a061299f94600180831b03808251168b528060208301511660208c0152604082015160408c0152606082015160608c015260808201511660808b0152015160a089015260c08801906040809161ffff815116845260018060a01b0360208201511660208501520151910152565b8051151561012087015260208101516001600160a01b03908116610140880152604082015161ffff1661016088015260608201516101808801526080820151166101a087015260a001516101c0860152565b610220806101e08601528401906125b1565b916102008184039101526125b1565b91909160a0818403126104395780356129d88161128d565b9260208201359260408301359260608101356129f38161128d565b9260808201356001600160401b03811161043957611486920161146b565b90816020910312610439575190565b919360a0936114869695600180871b038094168552602085015260408401521660608201528160808201520190610143565b9160c083830312610439578235612a688161128d565b926020810135926040820135926060830135926080810135612a898161128d565b9260a08201356001600160401b03811161043957611486920161146b565b929360c0946114869796929360018060a01b0380951686526020860152604085015260608401521660808201528160a08201520190610143565b9060e082820312610439578135612af78161128d565b926020830135612b068161128d565b9260408101359260608201359260808301359260a0810135612b27816114f9565b9260c08201356001600160401b0381116104395761148692016120b8565b98979693909260e09693612b8d969360018060a01b038092168c521660208b015260408a015260608901526080880152151560a08701526101008060c08801528601906124bd565b930152565b9160a083830312610439578235612ba88161128d565b92612bb68360208301612027565b9260808201356001600160401b038111610439576114869201612146565b6001600160a01b03918216815293959460c09391929091612c0e91612bfd906020880190612472565b60e0608087015260e086019061250f565b9560a085015216910152565b9060e082820312610439578135612c308161128d565b926020830135612c3f8161128d565b926040810135926060820135926080830135612c5a816114f9565b9260a0810135612b27816114f9565b97969592612b8d949160e0969360018060a01b038092168b521660208a01526040890152606088015260006080880152151560a08701526101008060c08801528601906124bd565b919082606091031261043957604051612cc9816112f4565b60408082948035612cd9816114f9565b845260208101356020850152013591612070836114f9565b919060a083820312610439576040612d2e815192612d0e846112f4565b8284968035612d1c816114f9565b86526020810135602087015201612cb1565b910152565b35906001600160801b038216820361043957565b91908260a091031261043957604051612d5f8161132a565b60808082948035612d6f816114f9565b84526020810135612d7f8161128d565b6020850152612d9060408201612d33565b6040850152612da160608201612d33565b60608501520135910152565b6102a081830312610439576040519160e083016001600160401b038111848210176112d457612e429261024091604052612de68161129e565b855260208101356020860152612dff8360408301612cf1565b6040860152612e118360e08301612cb1565b6060860152612e24836101408301612d47565b6080860152612e37836101e08301612074565b60a086015201612027565b60c082015290565b604080918051151584526020810151602085015201511515910152565b6080809180511515845260018060a01b036020820151166020850152600180831b0380604083015116604086015260608201511660608501520151910152565b969390959298979491986102c0880199600160a01b6001900380981689526020890152805115156040890152602081015160608901526040015160808801612eee91612e4a565b60e08701612efb91612e4a565b6101408601612f0991612e67565b6101e08501612f1791612499565b6102408401612f2591612472565b16906102a00152565b9160c083830312610439578235612f448161128d565b926020810135926040820135926060830135612f5f816114e2565b926080810135612a898161128d565b9260c09461ffff916114869897939460018060a01b038096168752602087015260408601521660608401521660808201528160a08201520190610143565b919082604091031261043957604051612fc4816112d9565b6020808294803584520135916120708361128d565b9060e082820312610439576130449060a060405193612ff78561130f565b80356130028161128d565b855260208101356130128161128d565b602086015260408101356040860152606081013560608601526080810135613039816114e2565b608086015201612fac565b60a082015290565b805182526020908101516001600160a01b0316910152565b6001600160a01b039182168152911660208201526040810191909152606081019190915261ffff909116608082015260e0810192916112a99160a0019061304c565b91906101e08382031261043957613137906101806130c26113ec565b946130cc81611503565b865260208101356020870152604081013560408701526130ee6060820161129e565b60608701526130ff6080820161129e565b608087015261311060a08201611503565b60a087015260c081013560c087015261312c8360e08301612d47565b60e087015201612074565b610100830152565b9190916102e081840312610439576131568161129e565b926131636020830161129e565b92613170604084016114ee565b9261317d6060820161129e565b9261318b81608084016130a6565b926001600160401b039061026084013582811161043957836131ae918601612228565b9361028081013583811161043957846131c8918301612228565b936102a082013584811161043957816131e29184016120b8565b936102c083013590811161043957611486920161146b565b97946132af906132c1936132df98936132d0978c60406114869f9d9961ffff9060018060a01b038097818098168652166020850152169101521660608c01528151151560808c0152602082015160a08c0152604082015160c08c015260608201511660e08b015260808101519061327761010092838d019061174e565b60a081015115156101208c015260c08101516101408c01526132a260e08201516101608d0190612e67565b01516102008a0190612499565b6102e0806102608a01528801906125b1565b908682036102808801526125b1565b908482036102a08601526124bd565b916102c0818403910152610143565b91908260809103126104395760405161330681611345565b6060808294803584526020810135602085015260408101356133278161128d565b60408501520135916120708361128d565b9190916101a0818403126104395761334f8161129e565b9261335c6020830161129e565b92613369604084016114ee565b926001600160401b03926060820135848111610439578161338b91840161146b565b9361339982608085016132ee565b9361010084013582811161043957836133b39186016120b8565b936133c2846101208301612fac565b9361016082013584811161043957816133dc918401612228565b93610180830135908111610439576114869201612228565b97939561347492606061344061348e998c60406114869f9d9b976134809a61ffff9160018060a01b039889809216865216602085015216910152828d6101a091829101528d0190610143565b93805160808d0152602081015160a08d01528260408201511660c08d015201511660e08a01528882036101008a01526124bd565b9261012087019061304c565b8482036101608601526125b1565b916101808184039101526125b1565b90816080910312610439576060604051916134b783611345565b80356134c28161128d565b835260208101356134d28161128d565b602084015260408101356134e5816114f9565b60408401520135606082015290565b6001600160a01b039182168152911660208201529015156040820152606081019190915260800190565b8051821015611f0a5760209160051b010190565b90916101208284031261043957813561354a8161128d565b9260208301356135598161128d565b92604081013592606082013561356e816114e2565b9260808301359260a08101359260c08201359260e08301356001600160401b03811161043957610100916135a391850161146b565b9201356114868161128d565b9692610120989461ffff9161360597939d9c9b9d98949860018060a01b03998a8092168c521660208b015260408a0152166060880152608087015260a086015260c08501526101408060e0860152840190610143565b95166101008201520152565b9081606091031261043957604080519161362a836112f4565b80356136358161128d565b835260208101356136458161128d565b60208401520135604082015290565b9190826040910312610439576020825192015190565b6001600160a01b03918216815291166020820152604081019190915260600190565b908160a0910312610439576080604051916136a68361132a565b80356136b18161128d565b835260208101356136c18161128d565b602084015260408101356136d4816114f9565b6040840152606081013560608401520135608082015290565b908160a0910312610439576080604051916137078361132a565b8035835260208101356137198161128d565b602084015260408101356136d48161128d565b91909160a0818403126104395780356137448161128d565b926020820135613753816114e2565b926040830135926060810135926001600160401b0391608081013590838211610439570190606082820312610439576040519261378f846112f4565b823561379a8161128d565b845260208301356137aa8161128d565b60208501526040830135908111610439576137c5920161146b565b604082015290565b939061148695916101009461ffff60409560018060a01b03809516895216602088015284870152606086015260a060808601528082511660a086015260208201511660c0850152015191606060e08201520190610143565b9190826040910312610439576020823561383e8161128d565b92013590565b9081602091031261043957356114868161128d565b908060209392818452848401376000828201840152601f01601f1916010190565b908135613886816114f9565b151581526020820135602082015260408201356138a2816114f9565b1515604082015261ffff60608301356138ba816114e2565b1660608201526080820135601e1983360301811215610439578201803591906020016001600160401b0383116104395782360381136104395761391960a061391281936114869660c0608088015260c0870191613859565b9501611503565b1515910152565b60408091803561392f816114f9565b15158452602081013560208501520135613919816114f9565b604080918035613957816114f9565b1515845260208101356139698161128d565b6001600160a01b031660208501520135910152565b6040908181359161398e8361128d565b6001600160a01b0392831685528260208201356139aa8161128d565b16602086015201356139bb8161128d565b16910152565b903560be1982360301811215610439570190565b3d15613a00573d906139e682611419565b916139f4604051938461137c565b82523d6000602084013e565b606090565b803b1561164f57631221baf960e31b6001600160e01b03196020613a2a368787611434565b0151160361164f5782600083613a7d613a64613a54613a4c86869a879a61200a565b810190613b9e565b5060208082518301019101613bd4565b50506001600160a01b039094169450613dac9350505050565b613a8c60405180948193613c33565b03925af190613a996139d5565b91159081613aaf575b50613aaa5750565b613cbd565b90501538613aa2565b803b1561164f5763d505accf60e01b6001600160e01b03196020613add368787611434565b0151160361164f5782613af38160e0958561200a565b9080959181010312610439576000809493613a7d85613b2e608085983592613b1a8461128d565b613b27602082013561128d565b0135612212565b6001600160a01b0316613dac565b803b1561164f5763aba0784760e01b6001600160e01b03196020613b61368787611434565b0151160361164f5782613b778160c0958561200a565b9080959181010312610439576000809493613a7d85613b2e606085983592613b1a8461128d565b91906040838203126104395782356001600160401b03811161043957602091613bc891850161146b565b920135611486816114e2565b919082610100910312610439578151613bec816114f9565b916020810151613bfb8161128d565b916040820151613c0a8161128d565b9160608101519160808201519160a0810151613c2581612212565b9160e060c083015192015190565b908092918237016000815290565b6002546001600160a01b03168015613c7957816000929160208493519201905af490613c6b6139d5565b9115613c7357565b50613cbd565b60405162461bcd60e51b815260206004820152601c60248201527b135859db995d185c958c8e881b5bd91d5b19481b9bdd08199bdd5b9960221b6044820152606490fd5b6044815110613d5557600481015181019060208160248401930312610439576024810151906001600160401b0382116104395701908060438301121561043957602482015191613d0c83611419565b91613d1a604051938461137c565b838352604484830101116104395761123d92613d3d916044602085019101610120565b60405162461bcd60e51b815291829160048301611fb6565b60405162461bcd60e51b815260206004820152601a60248201527926b0b3b732ba30b92b191d102932b0b9b7b7103ab735b737bbb760311b6044820152606490fd5b908160209103126104395751611486816114f9565b6001600160a01b039081163314159081613dda575b50613dc857565b60405163ea8e4eb560e01b8152600490fd5b600154604051633a304d8b60e21b815260006004820152336024820152925060209183916044918391165afa90811561043457600091613e1d575b501538613dc1565b613e3e915060203d8111613e44575b613e36818361137c565b810190613d97565b38613e15565b503d613e2c56fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220590fcf1291dec797a3a9825b52fdd347e0f6a9300e23311eae1e8c069f530b6764736f6c63430008120033";

type MagnetarV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2__factory extends ContractFactory {
  constructor(...args: MagnetarV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2";
  }

  override deploy(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2> {
    return super.deploy(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    ) as Promise<MagnetarV2>;
  }
  override getDeployTransaction(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    );
  }
  override attach(address: string): MagnetarV2 {
    return super.attach(address) as MagnetarV2;
  }
  override connect(signer: Signer): MagnetarV2__factory {
    return super.connect(signer) as MagnetarV2__factory;
  }
  static readonly contractName: "MagnetarV2";

  public readonly contractName: "MagnetarV2";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2Interface {
    return new utils.Interface(_abi) as MagnetarV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2 {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2;
  }
}
