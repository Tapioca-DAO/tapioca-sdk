/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MagnetarV2,
  MagnetarV2Interface,
} from "../../../contracts/Magnetar/MagnetarV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_marketModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "burst",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "marketModule",
    outputs: [
      {
        internalType: "contract MagnetarMarketModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346200016357601f6200409038819003918201601f19168301916001600160401b03831184841017620001685780849260609460405283398101031262000163576200004d816200017e565b60406200005d602084016200017e565b9201516001600160a01b0380821693918490036200016357620000803362000193565b8060018060a01b03199316836001541617600155338160005416036200011f57811615620000cb57620000b39062000193565b6002541617600255604051613eb59081620001db8239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016357565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063013546e1146100eb5780630f164bf4146100e6578063150b7a02146100e1578063715018a6146100dc578063832bfe30146100d75780638da5cb5b146100d25780639391dd6d146100cd578063b25ea8fb146100c8578063cfd8b3d8146100c3578063dbd01de1146100be578063de576147146100b9578063e5546fac146100b45763f2fde38b0361000e57611b65565b611a2d565b611949565b611909565b6118e0565b61185b565b6116e3565b611672565b6115a2565b611556565b6114f2565b61120e565b6101af565b60005b8381106101035750506000910152565b81810151838201526020016100f3565b9060209161012c815180928185528580860191016100f0565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b8401019601946000925b85841061016d575050505050505090565b90919293949596858061019e600193603f1986820301885286838d5180511515845201519181858201520190610113565b99019401940192959493919061015c565b6020806003193601126103f4576001600160401b03600480358281116103f457366023820112156103f457808201359283116103f457602493848201918536918660051b0101116103f45792849160009461020983611c89565b9486935b8085106102335761022f876102238a3414613827565b60405191829182610138565b0390f35b909192939496610244868387611d2a565b956060968781019261025c61025885611d51565b1590565b61115d575b604087610272828501358094611e35565b9a8d60018061028a61028389611e42565b61ffff1690565b036102d9575050508392506102c29150946102ba6102af6102cd976102c8960161223f565b936080810190611d5b565b929091611d51565b92613bd6565b611d00565b9392919096949661020d565b8a61ffff6002816102e98b611e42565b16036103175750505050508392506103119150946102ba6102af6102cd976102c8960161223f565b92613ab5565b9091929394959796995061012c8161032e89611e42565b16036103f957505050505061037e61037e6103839261036561035d6103566080880188611d5b565b8091611e4c565b810190613613565b94610378610373875161119d565b613dfd565b0161223f565b61119d565b826103908984015161119d565b92015191813b156103f4576103bc9560009451809781958294630c46aac760e31b8452338d850161366c565b03925af19182156103ef576102cd926103d6575b50611d00565b806103e36103e9926112ef565b8061154b565b896103d0565b6124b4565b600080fd5b61012d8161040a89989c9799611e42565b1603610480575050505061037892509061037e9161045561037e61043f6104376103566080870187611d5b565b81019061372e565b9893600180929e9499939b9260a01b0316613dfd565b92833b156103f4576103bc8a9160009751998a978896879563695ef6bf60e01b8752339087016137cf565b60648161048c88611e42565b16036105d45750915050849392915060006104d361037e61037e8a6080966103786103736104ca6104c26103568c860186611d5b565b8101906136ef565b9e8f015161119d565b926105348951916104e6888c015161119d565b968b01519a01518751634d4d7cbd60e11b81529485019283523360208401526001600160a01b0390961660408301526060820199909952608081019490945290968793849291839160a00190565b03925af180156103ef576102cd93600090819261059c575b5091518781019283526020830191909152906105769082906040015b03601f1981018352826113c5565b61057e6113e8565b600181529086820152610591828a613520565b526103d08189613520565b610576925061056891506105c590843d86116105cd575b6105bd81836113c5565b810190613656565b92509061054c565b503d6105b3565b60c8816105e3889c9798611e42565b16036106ae57505050505050608061062361037e61037e8a61061561060d610356878c018c611d5b565b81019061368e565b986103786103738b5161119d565b906106308987015161119d565b9061063d85880151151590565b9387015196015193823b156103f457516374d2492960e11b815233818a019081526001600160a01b03909216602083015292151560408201526060810195909552608085019290925292600091849182908490829060a00103925af19182156103ef576102cd926103d65750611d00565b60c9816106bf8c9996979899611e42565b160361077d575050505050829150936106ee61037e61037e61071d9761036561035d6103566080880188611d5b565b826106fb8a84015161119d565b92015191600084518098819582946314890dcb60e21b84528d3390850161366c565b03925af180156103ef576102cd936000908192610755575b509151878101928352602083019190915290610576908290604001610568565b6105769250610568915061077590843d86116105cd576105bd81836113c5565b925090610735565b60668161078d8c9798999c611e42565b16036107fe5750505050916105686102cd966107f9936107c36107bb6103568860806103d09b9a0190611d5b565b810190613534565b9d5163de57614760e01b9c81019c909c529a9c8d9b9098909791969295939493926001600160a01b039081169216908c016135b1565b613ca7565b60cb8161080e8798969c97611e42565b16036108dc57505050505061083e61037e61037e846103656108366103566080880188611d5b565b81019061349f565b61084a8383015161119d565b9561085785840151151590565b9201519560008961087d8751998a9687958694630cb0f5b760e31b8652339086016134f6565b03925af19283156103ef576102cd9361056892610576926000926108ad575b505188810191825292839160200190565b6108ce919250893d8b116108d5575b6108c681836113c5565b810190612aac565b908d61089c565b503d6108bc565b60cc816108e888611e42565b160361094f57505050505061091061037e61037e846103656108366103566080880188611d5b565b61091c8383015161119d565b9561092985840151151590565b9201519560008961087d8751998a968795869463cd0211eb60e01b8652339086016134f6565b61012f8161095f889c9798611e42565b16036109de575050505050906109b061037e9261037e9461099161098961035660808b018b611d5b565b810190613370565b95979699939b929c919a90949e61037860018060a01b03809c16613dfd565b96873b156103f4576000998e996103bc95519d8e9b8c9a8b99630cdc41b960e11b8b52169033908a0161340f565b610130816109eb8c611e42565b1603610a6d5750505050509084610a3c9261037e610a1d610a15610356608061037e9b0186611d5b565b8101906131b1565b959c969b9397929e919a90949961037860018060a01b03809e16613dfd565b96873b156103f4578d9b60009a8a986103bc96519e8f9c8d9b8c9a623f241960e81b8c521693169033908a01613251565b61013181610a7d8c999799611e42565b1603610b04575050505050608094610aaf61037e61037e8b610365610aa76103568c880188611d5b565b81019061304b565b91610abc8a83015161119d565b9160a0610ad587830151968301519983015161ffff1690565b91015195843b156103f4576000968b926103bc92519a8b9889978896630fb6ba5960e01b8852339088016130d6565b61013281610b168c989996979c611e42565b1603610b9157505050505061037e9461037e9282610b48610b406103566080610b64970184611d5b565b810190612fa0565b989399929c919497909561037860018060a01b03809a16613dfd565b94853b156103f4578b6103bc92600099519b8c998a98899763076cf20360e11b8952169333908801612fe0565b60cd81610ba2889a9996979a611e42565b1603610c195750505050946105686103d094936107f9936102cd98610bda610bd261035660809485810190611d5b565b810190612e06565b91610be5835161119d565b91868401518585015191850151928501519360c060a087015196015196519a8b996339551beb60e21b908b01528901612f29565b60ce81610c2c8897949596999a98611e42565b1603610c935750505050946105686103d094936107f993610c62610c5a6103568b60806102cd9d0190611d5b565b810190612cb5565b9b516323ca9c7d60e01b9a81019a909a52989a8b999096909592946001600160a01b03908116931691508901612d04565b60cf81610ca1879697611e42565b1603610d06575050506103d094610ce5946107f9946102cd9994610cda610cd2610356876080610568990190611d5b565b810190612c2d565b93919990925461119d565b945198899763278edea160e11b9089015260018060a01b0316908701612c6f565b909192935060d081610d1786611e42565b1603610d7f57505050946105686103d094936107f993610d4c610d446103568b60806102cd9d0190611d5b565b810190612b7c565b9b516316e55a1d60e01b9a81019a909a52989a8b999096909591949293926001600160a01b039081169216908a01612be0565b9092935060d181610d9286979497611e42565b1603610e37575050509161037e91600084610e01610dd989610dc9610dc1610356608061037e9e9c0187611d5b565b810190612aed565b96939c929f91949590980161223f565b9751630f74e47960e11b81529b8c998a9889976001600160a01b039081169516908801612b42565b03925af19182156103ef576102cd92610e1a5750611d00565b610e3090863d88116108d5576108c681836113c5565b50896103d0565b60d281610e4386611e42565b1603610eb0575050509161037e91600084610e01610e8861037e610e79610e7161035660808e9c0187611d5b565b810190612a5b565b959394929b919e90970161223f565b9651632c6dcd7f60e11b81529a8b98899788966001600160a01b039081169416908701612abb565b83975080929450610ec46101909294611e42565b1603610f2f5750610ef761037e61037e8a610ef0610ee861035660808c018c611d5b565b8101906128b5565b980161223f565b90855190898701519385880151970151833b156103f4576103bc8a9160009751998a97889687956318e7fa1960e01b87528601612999565b60d3959392958082610f4087611e42565b1603610fcd5750506080610f7561037e61037e8b610f6e610f66610356878b018b611d5b565b810190612611565b970161223f565b91610f80855161119d565b918a860151948087015198870151918701519660a08101519060e060c082015191015191873b156103f4576000998e956103bc95519d8e9b8c9a8b9963bf2271ab60e01b8b528a01612752565b909150610fdc61028385611e42565b03611062575060809061100861037e61037e8a611001610f66610356888a018a611d5b565b960161223f565b90611013845161119d565b9089850151938186015197860151908601519160a08701519660e060c082015191015190863b156103f45760009889958e956103bc95519d8e9b8c9a8b9963bf2271ab60e01b8b528a01612752565b6101339061106f84611e42565b16036111105760809061109c61037e61037e8a611001611094610356888a018a611d5b565b810190612161565b906110a7845161119d565b906110b48a86015161119d565b936110cf6110c68388015161ffff1690565b9887015161119d565b908601519160a08701519660e060c082015191015190863b156103f45760009889958e956103bc95519d8e9b8c9a8b9963254d7d3760e21b8b528a01612442565b5162461bcd60e51b81526020818701818152601c918101919091527b135859db995d185c958c8e881858dd1a5bdb881b9bdd081d985b1a5960221b604082015281906060010390fd5b0390fd5b61119861116d6080840184611d5b565b604051808b018781529192506111909161118b908290602001610568565b611d8d565b901515611e09565b610261565b6001600160a01b031690565b6001600160a01b038116036103f457565b35906111c5826111a9565b565b801515036103f457565b35906111c5826111c7565b60a09060431901126103f457604490565b60a0906101431901126103f45761014490565b908160a09103126103f45790565b60e03660031901126103f457600435611226816111a9565b60243590611233826111a9565b60a43561123f816111c7565b60c435926001600160401b0384116103f4576112c46107f992611269610019963690600401611200565b906040519586946316e55a1d60e01b602087015260018060a01b0380921660248701521660448501526044356064850152606435608485015260843560a4850152151560c484015261010060e4840152610124830190613891565b3461010483015203601f1981018352826113c5565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161130257604052565b6112d9565b604081019081106001600160401b0382111761130257604052565b606081019081106001600160401b0382111761130257604052565b60a081019081106001600160401b0382111761130257604052565b608081019081106001600160401b0382111761130257604052565b60c081019081106001600160401b0382111761130257604052565b60e081019081106001600160401b0382111761130257604052565b6102e081019081106001600160401b0382111761130257604052565b601f909101601f19168101906001600160401b0382119082101761130257604052565b604051906111c582611307565b6040519061014082016001600160401b0381118382101761130257604052565b6040519061016082016001600160401b0381118382101761130257604052565b6040519061010082016001600160401b0381118382101761130257604052565b604051906111c58261138e565b6040519061012082016001600160401b0381118382101761130257604052565b6001600160401b03811161130257601f01601f191660200190565b9291926114a982611482565b916114b760405193846113c5565b8294818452818301116103f4578281602093846000960137010152565b9080601f830112156103f4578160206114ef9335910161149d565b90565b346103f45760803660031901126103f45761150e6004356111a9565b6115196024356111a9565b6064356001600160401b0381116103f4576115389036906004016114d4565b50604051630a85bd0160e11b8152602090f35b60009103126103f457565b346103f45760008060031936011261159f57611570611c1a565b80546001600160a01b03198116825581906001600160a01b0316600080516020613e608339815191528280a380f35b80fd5b60e03660031901126103f4576004356115ba816111a9565b602435906115c7826111a9565b608435916115d4836111c7565b60a435906115e1826111c7565b60c4356001600160401b0381116103f457610019946107f99361160b6112c4933690600401611200565b916040519687956323ca9c7d60e01b602088015260018060a01b03809216602488015216604486015260443560648601526064356084860152151560a4850152151560c484015261010060e4840152610124830190613891565b6001600160a01b03169052565b346103f45760003660031901126103f4576000546040516001600160a01b039091168152602090f35b60609060231901126103f457602490565b60609060e31901126103f45760e490565b6060906101e31901126103f4576101e490565b6060906102431901126103f45761024490565b60031960a0368201126103f457600435906116fd826111a9565b6117063661169b565b608435929091906001600160401b0384116103f45783600401916101c0809186360301126103f45761056861184a610019966118376107f99660018060a01b039661182f8860015416976117786040519c8d9b8c9563278edea160e11b6020880152166024860152604485019061397f565b60e060a48401526117966101048401611790866111d1565b15159052565b61181d6101246024880135818601526117be6117b460448a016111d1565b1515610144870152565b60648801356101648601526118156117d860848a016111d1565b916117ea610184938489019015159052565b6102246101a49760a48c01358982015261180c8c60c46101c484019101613949565b01908a01613949565b8701856139c2565b906102848b01526102c48a0190613891565b9301906139c2565b85820361010319016102a4870152613891565b913460c485015260e4840190611665565b346103f45760403660031901126103f457602435611878816111a9565b611880611c1a565b60008080808094600435905af16118956139d6565b501561189e5780f35b60405162461bcd60e51b815260206004820152601a60248201527926b0b3b732ba30b91d103a3930b739b332b9103330b4b632b21760311b6044820152606490fd5b346103f45760003660031901126103f4576002546040516001600160a01b039091168152602090f35b346103f45760003660031901126103f4576001546040516001600160a01b039091168152602090f35b61ffff8116036103f457565b35906111c582611932565b610120806003193601126103f457600435611963816111a9565b60243561196f816111a9565b6064359161197c83611932565b60c435916001600160401b0383116103f45761001994611a0e6119a66107f99536906004016114d4565b60e435926119b3846111a9565b61ffff60405198899763de57614760e01b60208a015260018060a01b03978880921660248b0152166044890152604435606489015216608487015260843560a487015260a43560c487015260e4860152610144850190610113565b916101049116818401523561012483015203601f1981018352826113c5565b6102a03660031901126103f457610019600435611a49816111a9565b611b57611a55366111dc565b91611b4c611a62366116ac565b916080611a6e366111ed565b611a77366116bd565b92611ae4611a84366116d0565b96611ad96040519a6339551beb60e21b60208d015260018060a01b0380951660248d015260243560448d01528035611abb816111c7565b151560648d0152602081013560848d0152604060a48d01910161391a565b6101048a019061391a565b8135611aef816111c7565b15156101648901526020820135611b05816111a9565b16610184880152600180831b0380611b1f60408401612d8c565b166101a4890152611b3260608301612d8c565b166101c488015201356101e4860152610204850190613949565b61026483019061397f565b6102a481526107f9816113a9565b346103f45760203660031901126103f457600435611b82816111a9565b611b8a611c1a565b6001600160a01b039081168015611bc657600080546001600160a01b0319811683178255909216600080516020613e608339815191528380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6000546001600160a01b03163303611c2e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b0381116113025760051b60200190565b90611c9382611c72565b6040611ca1815192836113c5565b8382528193611cb2601f1991611c72565b0191600091825b848110611cc7575050505050565b6020908251611cd581611307565b85815282606081830152828601015201611cb9565b634e487b7160e01b600052601160045260246000fd5b6000198114611d0f5760010190565b611cea565b634e487b7160e01b600052603260045260246000fd5b9190811015611d4c5760051b81013590609e19813603018212156103f4570190565b611d14565b356114ef816111c7565b903590601e19813603018212156103f457018035906001600160401b0382116103f4576020019181360383136103f457565b906111c5604e60405180947f4d61676e6574617256323a204d697373696e672063616c6c20666f722061637460208301526d0d2dedc40eed2e8d040d2dcc8caf60931b6040830152611de881518092602086860191016100f0565b810103602e8101855201836113c5565b9060206114ef928181520190610113565b15611e115750565b60405162461bcd60e51b815260206004820152908190611159906024830190610113565b91908201809211611d0f57565b356114ef81611932565b90929192836004116103f45783116103f457600401916003190190565b91908260609103126103f457604051611e8181611322565b60408082948035611e91816111a9565b84526020810135611ea1816111a9565b6020850152013591611eb2836111a9565b0152565b91908260609103126103f457604051611ece81611322565b60408082948035611ede816111c7565b84526020810135611eee816111a9565b60208501520135910152565b919060a0838203126103f45760405190611f138261133d565b81938035611f20816111c7565b8352602081013560208401526040810135611f3a816111c7565b60408401526060810135611f4d81611932565b60608401526080810135916001600160401b0383116103f457608092611f7392016114d4565b910152565b91906101c0838203126103f457611f8d6113f5565b92611f97816111d1565b845260208101356020850152611faf604082016111d1565b604085015260608101356060850152611fca608082016111d1565b608085015260a081013560a0850152611fe68260c08301611eb6565b60c085015261012091611ffb81848401611eb6565b60e08601526001600160401b036101808301358181116103f45782612021918501611efa565b6101008701526101a08301359081116103f45761203e9201611efa565b90830152565b359060ff821682036103f457565b81601f820112156103f45780359061206982611c72565b92604090612079825195866113c5565b8385526020918286019183610160809702860101948186116103f4578401925b8584106120aa575050505050505090565b86848303126103f4578487916120be611415565b6120c7876111d1565b81526120d48388016111d1565b838201526120e38688016111ba565b8682015260606120f48189016111d1565b9082015260806121058189016111ba565b9082015260a06121168189016111ba565b9082015260c0808801359082015260e0808801359082015261010061213c818901612044565b9082015261012080880135908201526101408088013590820152815201930192612099565b906020828203126103f4576001600160401b03918035908382116103f4570190610140828203126103f457612194611435565b9261219e836111ba565b84526121ac602084016111ba565b60208501526121bd6040840161193e565b60408501526121ce606084016111ba565b606085015260808301358181116103f457826121eb9185016114d4565b60808501526121fd8260a08501611e69565b60a08501526101008301358181116103f4578261221b918501611f78565b60c08501526101208301359081116103f4576122379201612052565b60e082015290565b356114ef816111a9565b80516001600160a01b03908116835260208083015182169084015260409182015116910152565b8051151582526020808201516001600160a01b031690830152604090810151910152565b9060a060806114ef938051151584526020810151602085015260408101511515604085015261ffff60608201511660608501520151918160808201520190610113565b8051151582526114ef91602082015160208201526122fe6040830151604083019015159052565b6060820151606082015261231b6080830151608083019015159052565b60a082015160a082015261233760c083015160c0830190612270565b60e082015161234c6101209182840190612270565b6123676101008401516101c080610180860152840190612294565b920151906101a0818403910152612294565b90815180825260208080930193019160005b828110612399575050505090565b909192938261016060019287516123b282825115159052565b808401511515828501526123ce60408083015190840190611665565b6060818101511515908301526123ec60808083015190840190611665565b6123fe60a08083015190840190611665565b60c0818101519083015260e080820151908301526101008082015160ff1690830152610120818101519083015261014090810151908201520195019392910161238b565b969294876114ef99979561ffff6124a59861248c956124979760018060a01b03958680931690521660208d01521660408b01521660608901526101408060808a0152880190610113565b9260a0870190612249565b8482036101008601526122d7565b91610120818403910152612379565b6040513d6000823e3d90fd5b91906060838203126103f457604051906124d982611322565b819380356124e6816111a9565b8352602081810135908401526040810135916001600160401b0383116103f457604092611f7392016114d4565b91909160e0818403126103f457612528611455565b92813584526125396020830161193e565b602085015261254a6040830161193e565b604085015261255b606083016111ba565b60608501526001600160401b039160808101358381116103f457826125819183016114d4565b608086015260a08101359283116103f4576125a360c0926125ae9483016114d4565b60a0860152016111ba565b60c0830152565b91908260809103126103f4576040516125cd81611358565b606080829480356125dd816111a9565b845260208101356125ed816111a9565b60208501526040810135612600816111a9565b6040850152013591611eb2836111a9565b906020828203126103f4576001600160401b03918035908382116103f4570190610160828203126103f457612644611435565b9261264e836111ba565b8452602083013560208501526040830135604085015260608301358181116103f4578261267c9185016124c0565b606085015260808301358181116103f45782612699918501612513565b60808501526126ab8260a085016125b5565b60a08501526101208301358181116103f457826126c99185016114d4565b60c08501526101408301359081116103f4576122379201612052565b908151815261ffff806020840151166020830152604083015116604082015260c060018060a01b0380606085015116606084015281612748612736608087015160e0608088015260e0870190610113565b60a087015186820360a0880152610113565b9401511691015290565b9692946127b360406114ef9a989660606127c19561280a9a848e6127fc9a60018060a01b038095168252602082015201528c6101609283910152825116908c015260208101516101808c0152015160606101a08b01526101c08a0190610113565b9088820360808a01526126e5565b83516001600160a01b0390811660a08901526020850151811660c08901526040850151811660e0890152606090940151909316610100870152565b848203610120860152610113565b91610140818403910152612379565b91908260609103126103f45760405161283181611322565b60408082948035611ede81611932565b91908260c09103126103f45760405161285981611373565b60a08082948035612869816111c7565b84526020810135612879816111a9565b6020850152604081013561288c81611932565b60408501526060810135606085015260808101356128a9816111a9565b60808501520135910152565b906020828203126103f4576001600160401b03918035908382116103f45701908181039261020084126103f45760c0604051946128f186611358565b126103f45760405161290281611373565b833561290d816111a9565b8152602084013561291d816111a9565b602082015260408401356040820152606084013560608201526080840135612944816111a9565b608082015260a084013560a082015284526129628260c08501612819565b6020850152612975826101208501612841565b60408501526101e08301359081116103f4576129919201612052565b606082015290565b81516001600160a01b039081168252602080840151821681840152604084810151818501526060808601518186015260808087015185168187015260a09687015187870152875161ffff90811660c088015284890151861660e088015297830151610100870152885115156101208701529288015184166101408601529087015190951661016084015293850151610180830152928401519092166101a0830152909101516101c08201526114ef919061020090816101e08201520190612379565b91909160a0818403126103f4578035612a73816111a9565b926020820135926040830135926060810135612a8e816111a9565b9260808201356001600160401b0381116103f4576114ef92016114d4565b908160209103126103f4575190565b919360a0936114ef9695600180871b038094168552602085015260408401521660608201528160808201520190610113565b9160c0838303126103f4578235612b03816111a9565b926020810135926040820135926060830135926080810135612b24816111a9565b9260a08201356001600160401b0381116103f4576114ef92016114d4565b929360c0946114ef9796929360018060a01b0380951686526020860152604085015260608401521660808201528160a08201520190610113565b9060e0828203126103f4578135612b92816111a9565b926020830135612ba1816111a9565b9260408101359260608201359260808301359260a0810135612bc2816111c7565b9260c08201356001600160401b0381116103f4576114ef9201611efa565b98979693909260e09693612c28969360018060a01b038092168c521660208b015260408a015260608901526080880152151560a08701526101008060c0880152860190612294565b930152565b9160a0838303126103f4578235612c43816111a9565b92612c518360208301611e69565b9260808201356001600160401b0381116103f4576114ef9201611f78565b6001600160a01b03918216815293959460c09391929091612ca991612c98906020880190612249565b60e0608087015260e08601906122d7565b9560a085015216910152565b9060e0828203126103f4578135612ccb816111a9565b926020830135612cda816111a9565b926040810135926060820135926080830135612cf5816111c7565b9260a0810135612bc2816111c7565b97969592612c28949160e0969360018060a01b038092168b521660208a01526040890152606088015260006080880152151560a08701526101008060c0880152860190612294565b91908260609103126103f457604051612d6481611322565b60408082948035612d74816111c7565b845260208101356020850152013591611eb2836111c7565b35906001600160801b03821682036103f457565b91908260a09103126103f457604051612db88161133d565b60808082948035612dc8816111c7565b84526020810135612dd8816111a9565b6020850152612de960408201612d8c565b6040850152612dfa60608201612d8c565b60608501520135910152565b808203916102a083126103f45760a060405193612e228561138e565b8335612e2d816111a9565b855260208401356020860152603f1901126103f457610240612ec492604051612e5581611322565b6040820135612e63816111c7565b815260608201356020820152612e7c8460808401612d4c565b60408201526040860152612e938360e08301612d4c565b6060860152612ea6836101408301612da0565b6080860152612eb9836101e08301611eb6565b60a086015201611e69565b60c082015290565b604080918051151584526020810151602085015201511515910152565b6080809180511515845260018060a01b036020820151166020850152600180831b0380604083015116604086015260608201511660608501520151910152565b926111c59691989795612f8361024096612f796040612f8e95612f99986102a08b019f60018060a01b03168b5260208b015280511515828b0152602081015160608b015201516080890190612ecc565b60e0870190612ecc565b610140850190612ee9565b6101e0830190612270565b0190612249565b9160c0838303126103f4578235612fb6816111a9565b926020810135926040820135926060830135612fd181611932565b926080810135612b24816111a9565b9260c09461ffff916114ef9897939460018060a01b038096168752602087015260408601521660608401521660808201528160a08201520190610113565b91908260409103126103f45760405161303681611307565b602080829480358452013591611eb2836111a9565b9060e0828203126103f4576130b69060a06040519361306985611373565b8035613074816111a9565b85526020810135613084816111a9565b6020860152604081013560408601526060810135606086015260808101356130ab81611932565b60808601520161301e565b60a082015290565b805182526020908101516001600160a01b0316910152565b6001600160a01b039182168152911660208201526040810191909152606081019190915261ffff909116608082015260e0810192916111c59160a001906130be565b91906101e0838203126103f4576131a990610180613134611462565b9461313e816111d1565b86526020810135602087015260408101356040870152613160606082016111ba565b6060870152613171608082016111ba565b608087015261318260a082016111d1565b60a087015260c081013560c087015261319e8360e08301612da0565b60e087015201611eb6565b610100830152565b91906102c0838203126103f4576131c7836111ba565b926131d4602082016111ba565b926131e16040830161193e565b926131ee606084016111ba565b926131fc8260808301613118565b926001600160401b03916102608101358381116103f4578461321f918301612052565b936102808201358481116103f45781613239918401611efa565b936102a08301359081116103f4576114ef92016114d4565b969394876133289661ffff61331996613307956114ef9d9b9760018060a01b03958680931690521660208d01521660408b0152166060890152805115156080890152602081015160a0890152604081015160c08901526132b9606082015160e08a0190611665565b6080810151906132cf61010092838b0190611665565b60a081015115156101208a015260c08101516101408a01526132fa60e08201516101608b0190612ee9565b0151610200880190612270565b6102c080610260880152860190612379565b90848203610280860152612294565b916102a0818403910152610113565b91908260809103126103f45760405161334f81611358565b606080829480358452602081013560208501526040810135612600816111a9565b90610180828203126103f457613385826111ba565b92613392602084016111ba565b9261339f6040820161193e565b926001600160401b0360608301358181116103f457826133c09185016114d4565b936133ce8360808601613337565b936101008101358381116103f457846133e8918301611efa565b936133f781610120840161301e565b936101608301359081116103f4576114ef9201612052565b949160606134516134919661ffff613485976114ef9d9b9660018060a01b0396878092168d521660208c01521660408a015261018080848b0152890190610113565b9380516080890152602081015160a08901528260408201511660c089015201511660e0860152848203610100860152612294565b936101208301906130be565b610160818403910152612379565b908160809103126103f4576060604051916134b983611358565b80356134c4816111a9565b835260208101356134d4816111a9565b602084015260408101356134e7816111c7565b60408401520135606082015290565b6001600160a01b039182168152911660208201529015156040820152606081019190915260800190565b8051821015611d4c5760209160051b010190565b9091610120828403126103f457813561354c816111a9565b92602083013561355b816111a9565b92604081013592606082013561357081611932565b9260808301359260a08101359260c08201359260e08301356001600160401b0381116103f457610100916135a59185016114d4565b9201356114ef816111a9565b9692610120989461ffff9161360797939d9c9b9d98949860018060a01b03998a8092168c521660208b015260408a0152166060880152608087015260a086015260c08501526101408060e0860152840190610113565b95166101008201520152565b908160609103126103f457604080519161362c83611322565b8035613637816111a9565b83526020810135613647816111a9565b60208401520135604082015290565b91908260409103126103f4576020825192015190565b6001600160a01b03918216815291166020820152604081019190915260600190565b908160a09103126103f4576080604051916136a88361133d565b80356136b3816111a9565b835260208101356136c3816111a9565b602084015260408101356136d6816111c7565b6040840152606081013560608401520135608082015290565b908160a09103126103f4576080604051916137098361133d565b80358352602081013561371b816111a9565b602084015260408101356136d6816111a9565b91909160a0818403126103f4578035613746816111a9565b92602082013561375581611932565b926040830135926060810135926001600160401b03916080810135908382116103f45701906060828203126103f4576040519261379184611322565b823561379c816111a9565b845260208301356137ac816111a9565b602085015260408301359081116103f4576137c792016114d4565b604082015290565b93906114ef95916101009461ffff60409560018060a01b03809516895216602088015284870152606086015260a060808601528082511660a086015260208201511660c0850152015191606060e08201520190610113565b1561382e57565b60405162461bcd60e51b815260206004820152601a60248201527909ac2cedccae8c2e4ac647440ecc2d8eaca40dad2e6dac2e8c6d60331b6044820152606490fd5b908060209392818452848401376000828201840152601f01601f1916010190565b803561389c816111c7565b151582526020810135602083015260408101356138b8816111c7565b1515604083015261ffff60608201356138d081611932565b1660608301526080810135601e19823603018112156103f457016020810190356001600160401b0381116103f45780360382136103f45760a0838160806114ef9601520191613870565b604080918035613929816111c7565b15158452602081013560208501520135613942816111c7565b1515910152565b604080918035613958816111c7565b15158452602081013561396a816111a9565b6001600160a01b031660208501520135910152565b6040908181359161398f836111a9565b6001600160a01b0392831685528260208201356139ab816111a9565b16602086015201356139bc816111a9565b16910152565b9035609e19823603018112156103f4570190565b3d15613a01573d906139e782611482565b916139f560405193846113c5565b82523d6000602084013e565b606090565b15613a0d57565b60405162461bcd60e51b815260206004820152602860248201527f4d61676e6574617256323a207065726d6974416c6c2073656c6563746f72206e6044820152671bdd08199bdd5b9960c21b6064820152608490fd5b15613a6a57565b60405162461bcd60e51b8152602060048201526015602482015274135859db995d185c8e881b9bc818dbdb9d1c9858dd605a1b6044820152606490fd5b908092918237016000815290565b60e092613aeb6001600160e01b03196020613ad136858861149d565b01511663d505accf861b8114908115613bc6575b50613a06565b613af6818085611e4c565b90809591810103126103f4576000809493613b7f8295604051613b188161138e565b60c080833593613b27856111a9565b8484526020810135613b38816111a9565b60208501526040810135604085015260608101356060850152613b5d60808201612044565b608085015260a0818101359085015201359101526001600160a01b0316613dfd565b613b8b843b1515613a63565b613b9a60405180948193613aa7565b03925af190613ba76139d6565b91159081613bbd575b50613bb85750565b613d23565b90501538613bb0565b905063aba07847861b1438613ae5565b60c092613c0c6001600160e01b03196020613bf236858861149d565b0151166318b9611f60e11b8114908115613c965750613a06565b613c17818085611e4c565b90809591810103126103f4576000809493613b7f8295604051613c3981611373565b60a080833593613c48856111a9565b8484526020810135613c59816111a9565b602085015260408101356040850152613c7460608201612044565b60608501526080818101359085015201359101526001600160a01b0316613dfd565b63aba0784760e01b14905038613ae5565b6002546001600160a01b03168015613cdf57816000929160208493519201905af490613cd16139d6565b9115613cd957565b50613d23565b60405162461bcd60e51b815260206004820152601c60248201527b135859db995d185c958c8e881b5bd91d5b19481b9bdd08199bdd5b9960221b6044820152606490fd5b6044815110613dbb576004810151810190602081602484019303126103f4576024810151906001600160401b0382116103f4570190806043830112156103f457602482015191613d7283611482565b91613d8060405193846113c5565b838352604484830101116103f45761115992613da39160446020850191016100f0565b60405162461bcd60e51b815291829160048301611df8565b60405162461bcd60e51b815260206004820152601a60248201527926b0b3b732ba30b92b191d102932b0b9b7b7103ab735b737bbb760311b6044820152606490fd5b336001600160a01b0390911603613e1057565b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a206f70657261746f72206e6f7420617070726f76656044820152601960fa1b6064820152608490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220d2c4616c032740927983eded68d6b80ea0c759b1f7d0c71a8da3c9df760bb49064736f6c63430008120033";

type MagnetarV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2__factory extends ContractFactory {
  constructor(...args: MagnetarV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2";
  }

  override deploy(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2> {
    return super.deploy(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    ) as Promise<MagnetarV2>;
  }
  override getDeployTransaction(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    );
  }
  override attach(address: string): MagnetarV2 {
    return super.attach(address) as MagnetarV2;
  }
  override connect(signer: Signer): MagnetarV2__factory {
    return super.connect(signer) as MagnetarV2__factory;
  }
  static readonly contractName: "MagnetarV2";

  public readonly contractName: "MagnetarV2";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2Interface {
    return new utils.Interface(_abi) as MagnetarV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2 {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2;
  }
}
