/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MagnetarV2,
  MagnetarV2Interface,
} from "../../../contracts/Magnetar/MagnetarV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_marketModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ActionNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "Failed",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownReason",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ICluster",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract ICluster",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newHelper",
        type: "address",
      },
    ],
    name: "HelperUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "burst",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct MagnetarV2Storage.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "unwrap",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "unwrap",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "helper",
    outputs: [
      {
        internalType: "contract IMagnetarHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketModule",
    outputs: [
      {
        internalType: "contract MagnetarMarketModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_helper",
        type: "address",
      },
    ],
    name: "setHelper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unwrap",
        type: "bool",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type MagnetarV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarV2__factory extends ContractFactory {
  constructor(...args: MagnetarV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarV2";
  }

  override deploy(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarV2> {
    return super.deploy(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    ) as Promise<MagnetarV2>;
  }
  override getDeployTransaction(
    _cluster: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _marketModule: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cluster,
      _owner,
      _marketModule,
      overrides || {}
    );
  }
  override attach(address: string): MagnetarV2 {
    return super.attach(address) as MagnetarV2;
  }
  override connect(signer: Signer): MagnetarV2__factory {
    return super.connect(signer) as MagnetarV2__factory;
  }
  static readonly contractName: "MagnetarV2";

  public readonly contractName: "MagnetarV2";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarV2Interface {
    return new utils.Interface(_abi) as MagnetarV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarV2 {
    return new Contract(address, _abi, signerOrProvider) as MagnetarV2;
  }
}
