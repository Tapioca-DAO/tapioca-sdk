/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MagnetarMarketModule,
  MagnetarMarketModuleInterface,
} from "../../../../contracts/Magnetar/modules/MagnetarMarketModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657613cc2908161001c8239f35b600080fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c90816316e55a1d146129425750806323ca9c7d146123525780634f1dbd4214611259578063dbd01de114611232578063de576147146111a15763e5546fac0361000f576102a036600319011261119e5761007d612ebe565b60a036604319011261119a5760603660e319011261119a5760a03661014319011261119a576060366101e319011261119a5760603661024319011261119a57604051906100c982612f22565b60443580151581036104bb578252606435602083015260603660831901126104bb576040516100f781612f22565b60843580151581036104bb57815260a435602082015260c43580151581036104bb57604082015260408301526040519061013082612f22565b60e43580151581036104bb5782526101043560208301526101243580151581036104bb57604083015260243591610284356001600160a01b03811690036104bb5761026435926001600160a01b03841684036104bb5760405163de40657760e01b8152946020866004816001600160a01b0389165afa958615610890578796611169575b506001600160a01b03851661114e575b610284356001600160a01b0316611130575b8051610c89575b5060405163226f120560e11b8152906020826004816001600160a01b0389165afa918215610890578792610c55575b50604051630cf35bdd60e41b8152600481018390526080816024816001600160a01b038b165afa908115610b75578891610c23575b508351610a61575b508692811580610a57575b610a4b575b508061095b575b505084906101443580151581036104bb576105d2575b5061027f6130bc565b6102e4575b50506001600160a01b0381166102c8575b50610284356001600160a01b03166102ab575080f35b6102c5906001600160a01b03908116906102843516613aa5565b80f35b6102de906001600160a01b038381169116613aa5565b38610295565b6102243580610573575b506001600160a01b036102ff613234565b161561052e5780156104ef5784916001600160a01b0361031d613234565b169161032761324b565b92803b156104eb57818591610353958360405180988195829463095ea7b360e01b84526004840161302b565b03925af19283156104815784936104d3575b5060209060246001600160a01b0361037b61324b565b1691604051958693849263422e498360e11b845260048401525af19182156104c857839261048c575b50600460206001600160a01b036103b961324b565b1660405192838092635ad7038760e01b82525afa908115610481578491610447575b506001600160a01b031691823b156104435761041192849283604051809681958294635c46a7ef60e11b84523060048501613276565b03925af1801561043857156102845761042990612ef9565b610434578238610284565b8280fd5b6040513d84823e3d90fd5b8380fd5b90506020813d602011610479575b8161046260209383612f3d565b810103126104435761047390612fd1565b386103db565b3d9150610455565b6040513d86823e3d90fd5b925090506020823d6020116104c0575b816104a960209383612f3d565b810103126104bb5784915190386103a4565b600080fd5b3d915061049c565b6040513d85823e3d90fd5b6104df90939193612ef9565b61043457829138610365565b8480fd5b60405162461bcd60e51b815260206004820152601760248201527604d61676e657461723a20744f4c50546f6b656e4964203604c1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f4d61676e657461723a206c6f636b20746172676574206d69736d6174636800006044820152606490fd5b9080610581575b50386102ee565b810361058d573861057a565b60405162461bcd60e51b815260206004820152601e60248201527f4d61676e657461723a20744f4c50546f6b656e4964206d69736d6174636800006044820152606490fd5b602491506101c43580610953575b5060606001600160a01b036105f3613234565b604051633873b0cd60e01b81526001600160a01b038816600482015294859290918391165afa918215610948578692610910575b5080156108d4576106438130856001600160a01b0388166132b2565b60405163095ea7b360e01b81526001600160a01b03868116600483015260248201889052602090829060449082908b908a165af180156108905761089b575b5060405163095ea7b360e01b8152602081806106ab856001600160a01b038b166004840161302b565b03818a6001600160a01b038a165af180156108905761084a575b5060408051634d4d7cbd60e11b8152929091839182916106ec91309081906004860161305c565b0381886001600160a01b0389165af1801561080b5761081c575b506107216001600160a01b03841661071c613234565b6139e6565b6107296130bc565b1561081657305b6001600160a01b03610740613234565b16906101843560018060801b03928382168092036104bb576101a4359384168094036104bb576040516362e8f3db60e11b81526001600160a01b039384166004820152928616602484015260448301919091526064820192909252906020908290608490829089905af190811561080b5785916107d9575b506107d36001600160a01b0385166107ce613234565b613aa5565b38610276565b90506020813d602011610803575b816107f460209383612f3d565b810103126104bb5751386107b8565b3d91506107e7565b6040513d87823e3d90fd5b80610730565b61083d9060403d604011610843575b6108358183612f3d565b810190613046565b50610706565b503d61082b565b906020823d602011610888575b8161086460209383612f3d565b81010312610884576106ec9261087b60409361301e565b509250906106c5565b8680fd5b3d9150610857565b6040513d89823e3d90fd5b6020813d6020116108cc575b816108b460209383612f3d565b81010312610884576108c59061301e565b5038610682565b3d91506108a7565b60405162461bcd60e51b815260206004820152601460248201527304d61676e657461723a206672616374696f6e20360641b6044820152606490fd5b9091506060813d606011610940575b8161092c60609383612f3d565b8101031261093c57519038610627565b8580fd5b3d915061091f565b6040513d88823e3d90fd5b9050386105e0565b604051638eb22cdd60e01b8152600481019290925260248201526044810186905290506020816064816001600160a01b0388165afa90811561080b578591610a18575b5060206109c19160405180938192630cb0f5b760e31b83528680600485016131df565b0381886001600160a01b0388165af190811561080b5785916109e6575b503880610260565b90506020813d602011610a10575b81610a0160209383612f3d565b810103126104bb5751386109de565b3d91506109f4565b90506020813d602011610a43575b81610a3360209383612f3d565b810103126104bb5751602061099e565b3d9150610a26565b60209150015138610259565b5080511515610254565b604084015115610c15575b604084015115610c0c57610a87335b82602087015191613b62565b602085015260405163095ea7b360e01b815260018060a01b03881660048201528860248201526020816044818c60018060a01b0387165af18015610c0157610bbd575b5060208481015160405163095ea7b360e01b815292839182908c908290610afe906001600160a01b038f166004840161302b565b03926001600160a01b03165af18015610b7557610b80575b50610b3d60406020850151815180938192634d4d7cbd60e11b83528930896004860161305c565b03818b6001600160a01b038c165af18015610b75571561024957610b6f9060403d604011610843576108358183612f3d565b50610249565b6040513d8a823e3d90fd5b6020813d602011610bb5575b81610b9960209383612f3d565b81010312610bb157610baa9061301e565b5038610b16565b8780fd5b3d9150610b8c565b6020813d602011610bf9575b81610bd660209383612f3d565b81010312610bf557610afe91610bed60209261301e565b509150610aca565b8880fd5b3d9150610bc9565b6040513d8b823e3d90fd5b610a8785610a7b565b610c1e8561317d565b610a6c565b610c44915060803d8111610c4e575b610c3c8183612f3d565b810190612fe5565b5050905038610241565b503d610c32565b9091506020813d602011610c81575b81610c7160209383612f3d565b810103126104bb5751903861020c565b3d9150610c64565b6040516377607a1760e11b81528790602081600481610284356001600160a01b03165afa9081156104385782916110fb575b50604051630cf35bdd60e41b8152600481018290526080816024816001600160a01b038d165afa9081156104c85783916110d9575b5060206040850151015160405190638eb22cdd60e01b825283600483015260248201528360448201526020816064818d60018060a01b03165afa9081156104815784916110a4575b509160408501518051610e57575b505050602060408401510151610dba575b505060200151604080516314890dcb60e21b81529182908190610d7f908880600485016130d9565b03818a610284356001600160a01b03165af1801561089057156101dd57610db49060403d604011610843576108358183612f3d565b506101dd565b610dd36001600160a01b038981169061028435166139e6565b6040830151805115610e4e57602030915b015191610284356001600160a01b03163b15610443576040516374d2492960e11b815292849284928392610e1d928c906004860161308b565b038183610284356001600160a01b03165af180156104385715610d5757610e4390612ef9565b610884578638610d57565b60208791610de4565b604091929350015115611096575b610e8960408501516040810151151560001461108c5783602033925b015191613b62565b60206040860151015260206040850151015160405190638eb22cdd60e01b825282600483015260248201528360448201526020816064818d60018060a01b03165afa908115610481578491611057575b5060405163095ea7b360e01b81526001600160a01b038b811660048301526024820186905291939160209082906044908290899087165af1801561080b57611017575b506020610f52918160408801510151908c8760405180968195829463095ea7b360e01b845260018060a01b03166004840161302b565b03926001600160a01b03165af1801561048157610fd7575b50604084810151602001518151634d4d7cbd60e11b81529283918291610f989190309081906004860161305c565b0381866001600160a01b038e165af180156104c857610fb9575b8080610d46565b610fd19060403d604011610843576108358183612f3d565b50610fb2565b6020813d60201161100f575b81610ff060209383612f3d565b8101031261044357610f989161100760409261301e565b509150610f6a565b3d9150610fe3565b6020813d60201161104f575b8161103060209383612f3d565b810103126104eb57610f529161104760209261301e565b509150610f1c565b3d9150611023565b9350506020833d602011611084575b8161107360209383612f3d565b810103126104bb5789925138610ed9565b3d9150611066565b8360208a92610e81565b61109f8761317d565b610e65565b9350506020833d6020116110d1575b816110c060209383612f3d565b810103126104bb5789925138610d38565b3d91506110b3565b6110f1915060803d8111610c4e57610c3c8183612f3d565b5050905038610cf0565b9150506020813d602011611128575b8161111760209383612f3d565b810103126104bb5787905138610cbb565b3d915061110a565b6111496001600160a01b038781169061028435166139e6565b6101d6565b6111646001600160a01b038781169087166139e6565b6101c4565b61118c91965060203d602011611193575b6111848183612f3d565b810190612fb2565b94386101b4565b503d61117a565b5080fd5b80fd5b5061012036600319011261119e576001600160a01b036004358181168103610434576111cb612ed4565b916064359161ffff831683036104eb5760c4356001600160401b03811161093c573660238201121561093c5761120b903690602481600401359101612f7b565b9060e435928316830361093c576102c594610104359460a435926084359260443591613553565b503461119e578060031936011261119e57546040516001600160a01b039091168152602090f35b506003199060e03683011261119e57611270612ebe565b91606036602319011261119a576001600160401b036084351161119a576101c0906084353603011261119e5760c4356001600160a01b0381169081900361119a57604051906348be20ab60e11b808352602083600481855afa928315610481578493612316575b5061130160206112e5613208565b60405180938192633a304d8b60e21b98898452600484016134e9565b0381865afa90811561080b5785916122dc575b501561229757604051908152602081600481855afa908115610481578491612253575b509160209161135e9361134861321e565b92604051958694859384938452600484016134e9565b03915afa908115610438578291612219575b50156121d4576001600160a01b03611386613208565b166001600160a01b0361139761321e565b60405163de40657760e01b8152911693602082600481885afa9182156104815784926121b3575b50836113ce60c4608435016130cc565b611d82575b6113e2610124608435016130cc565b611c84575b506113f66084356004016130cc565b611a51575b6114186114136101846084350160843560040161351b565b6130cc565b1580611a3d575b6117fa575b61143160848035016130cc565b61144c575b506102c5916001600160a01b0390911690613aa5565b6040516377607a1760e11b8152602081600481875afa90811561080b5785916117c8575b50604051638eb22cdd60e01b8152600481019190915260843560a401356024820152604481018590526020816064816001600160a01b0387165afa90811561080b578591611796575b506114d26114136101a46084350160843560040161351b565b1561179057305b843b1561093c5760405163cce19f8160e01b815291869183918291611503919087600485016130d9565b038183885af1801561080b5790859161177c575b50506115316114136101a46084350160843560040161351b565b156114365761155660406115506101a46084350160843560040161351b565b016130cc565b906115c861157a60606115746101a46084350160843560040161351b565b016130fb565b6115ba61159f6115956101a46084350160843560040161351b565b608081019061310a565b90604051968794602086019760018060a01b0316918861313c565b03601f198101845283612f3d565b81511561172d578151820190608083602084019303126104bb576115eb9061301e565b6115f7604084016134da565b6060840151608085015190946001600160401b0382116104bb57019183603f840112156104bb5760208301519261162d84612f60565b9461163b6040519687612f3d565b848652604085830101116104bb5760049361165d916040602088019101613492565b60a43534811161172357602090995b6040516377607a1760e11b815294859182905afa928315611717576000936116e1575b50916102c5979893916116cb95936000906000146116d95750925b84156116d25733935b60843560a4013592306001600160a01b038a16613553565b8392611436565b30936116b3565b9050926116aa565b90926020823d60201161170f575b816116fc60209383612f3d565b8101031261119e575051916102c561168f565b3d91506116ef565b6040513d6000823e3d90fd5b506020479961166c565b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a2077697468647261774461746120697320656d70746044820152607960f81b6064820152608490fd5b61178590612ef9565b610443578338611517565b816114d9565b90506020813d6020116117c0575b816117b160209383612f3d565b810103126104bb5751386114b9565b3d91506117a4565b90506020813d6020116117f2575b816117e360209383612f3d565b810103126104bb575138611470565b3d91506117d6565b61180d6001600160a01b038316846139e6565b60405163cd0211eb60e01b815260208180611833608435606401358630600485016131df565b038188885af190811561080b578591611a0b575b5060246084350135811061185c575b50611424565b60405163226f120560e11b815290602082600481885afa9182156109485786926119d7575b5060405163226f120560e11b815290602082600481895afa9182156108905787926119a1575b506118b89060246084350135613530565b604051638eb22cdd60e01b815260048101929092526024820152604481018690526020816064816001600160a01b0388165afa90811561094857869161196f575b506001600160a01b0384163b1561093c5760405191630208d92960e11b835230600484015260018060a01b03841660248401526044830152606482015284816084818360018060a01b0388165af1801561080b5790859161195b575b50611856565b61196490612ef9565b610443578338611955565b90506020813d602011611999575b8161198a60209383612f3d565b810103126104bb5751386118f9565b3d915061197d565b9091506020813d6020116119cf575b816119bd60209383612f3d565b810103126104bb5751906118b86118a7565b3d91506119b0565b9091506020813d602011611a03575b816119f360209383612f3d565b810103126104bb57519038611881565b3d91506119e6565b90506020813d602011611a35575b81611a2660209383612f3d565b810103126104bb575138611847565b3d9150611a19565b50611a4c6044608435016130cc565b61141f565b60405163226f120560e11b8152602081600481895afa90811561080b578591611c52575b50604051638eb22cdd60e01b81526004810191909152602460843581013590820152604481018590526020816064816001600160a01b0387165afa90811561080b578591611c1f575b506020611b0791611add6114136101846084350160843560040161351b565b8015611c0b575b15611c0557305b60405163f4d9375360e01b8152938492839287600485016130d9565b0381888a5af1801561080b57611bda575b50611b316114136101846084350160843560040161351b565b156113fb57611bd5611b5360406115506101846084350160843560040161351b565b611bb6611b7060606115746101846084350160843560040161351b565b611ba8611b8b6115956101846084350160843560040161351b565b6040519586949192916001600160a01b038a16916020870161313c565b03601f198101835282612f3d565b60a4359060843560240135906001600160a01b0386169089903061388b565b6113fb565b602090813d8311611bfe575b611bf08183612f3d565b810103126104bb5738611b18565b503d611be6565b83611aeb565b50611c1a6044608435016130cc565b611ae4565b90506020813d602011611c4a575b81611c3a60209383612f3d565b810103126104bb57516020611abe565b3d9150611c2d565b90506020813d602011611c7c575b81611c6d60209383612f3d565b810103126104bb575138611a75565b3d9150611c60565b610164608435013580611d25575b5060206001600160a01b03611cac60843561014401613262565b16916064611cb861321e565b6040516330dce68f60e11b815260048101939093526001600160a01b039081166024840152851660448301529092839190829089905af1801561080b57156113e757602090813d8311611d1e575b611d108183612f3d565b810103126104bb57386113e7565b503d611d06565b818192611d35575b505038611c92565b03611d41578038611d2d565b60405162461bcd60e51b815260206004820152601960248201527809ac2cedccae8c2e47440e89e98a092c840dad2e6dac2e8c6d603b1b6044820152606490fd5b5061010460843501351561217457600460206001600160a01b03611daa60843560e401613262565b1660405192838092635ad7038760e01b82525afa90811561080b57859161213a575b5060405163682ee63560e11b8152608435610104013560048201526080816024816001600160a01b0386165afa80156109485786906120c2575b60409081015190516331a9108f60e11b815260843561010401356004820152909291506020816024816001600160a01b0386165afa908115610890578791612088575b506001600160a01b038481169116908114908190811561207e575b501561202d57611fbf575b506001600160a01b03611e8660843560e401613262565b16803b1561093c578580916024604051809481936378dc905960e01b8352610104608435013560048401525af1801561094857908691611fab575b5050611ed2610124608435016130cc565b6113d357600460206001600160a01b03611ef060843560e401613262565b16604051928380926272410960e91b82525afa908115610948578691611f71575b506001600160a01b0316803b1561093c57856040518092635c46a7ef60e11b8252818381611f44888a3060048501613276565b03925af1801561094857908691611f5d575b50506113d3565b611f6690612ef9565b6104eb578438611f56565b90506020813d602011611fa3575b81611f8c60209383612f3d565b8101031261093c57611f9d90612fd1565b38611f11565b3d9150611f7f565b611fb490612ef9565b6104eb578438611ec1565b6001600160a01b0381163b1561093c57856040518092635c46a7ef60e11b8252818381611ff86101046084350135308b60048501613276565b03926001600160a01b03165af1801561094857908691612019575b50611e6f565b61202290612ef9565b6104eb578438612013565b60405162461bcd60e51b8152602060048201526024808201527f4d61676e657461723a206f544150546f6b656e4944206f776e6572206d69736d6044820152630c2e8c6d60e31b6064820152608490fd5b9050301438611e64565b90506020813d6020116120ba575b816120a360209383612f3d565b81010312610884576120b490612fd1565b38611e49565b3d9150612096565b508060803d8111612133575b6120d88183612f3d565b81010360808112610884576060906120ef83612fd1565b50601f19011261093c57604090606082519161210a83612f22565b61211660208201613507565b8352612123848201613507565b6020840152015182820152611e06565b503d6120ce565b90506020813d60201161216c575b8161215560209383612f3d565b810103126104eb5761216690612fd1565b38611dcc565b3d9150612148565b60405162461bcd60e51b815260206004820152601760248201527604d61676e657461723a206f544150546f6b656e4944203604c1b6044820152606490fd5b6121cd91925060203d602011611193576111848183612f3d565b90386113be565b60405162461bcd60e51b815260206004820152601f60248201527f4d61676e6574617256323a2053474c206e6f742077686974656c6973746564006044820152606490fd5b90506020813d60201161224b575b8161223460209383612f3d565b8101031261119a576122459061301e565b38611370565b3d9150612227565b90506020813d60201161228f575b8161226e60209383612f3d565b81010312610443579160209161228661135e946134da565b91935091611337565b3d9150612261565b60405162461bcd60e51b815260206004820152601e60248201527f4d61676e6574617256323a204242206e6f742077686974656c697374656400006044820152606490fd5b90506020813d60201161230e575b816122f760209383612f3d565b810103126104eb576123089061301e565b38611314565b3d91506122ea565b9092506020813d60201161234a575b8161233260209383612f3d565b8101031261044357612343906134da565b91386112d7565b3d9150612325565b506003196101003682011261119a576004356001600160a01b03811681036104345761237c612ed4565b916084351515608435036104bb57612392612eea565b906001600160401b0360c435116104eb5760a09060c435360301126104435760405163de40657760e01b8152908490604435906020846004816001600160a01b0389165afa9384156104c8578394612921575b506040516377607a1760e11b81526020816004816001600160a01b038a165afa9081156104815784916128ec575b50604051630cf35bdd60e41b815260048101829052906080826024816001600160a01b038a165afa91821561080b5785926128c8575b50604051638eb22cdd60e01b81526004810182905260248101859052604481018690526020816064816001600160a01b038b165afa90811561094857869161288f575b5092919082612665575b5050826125d8575b5050505060643592836124c4575b506102c592506001600160a01b039081169116613aa5565b60c4356004016124d3816130cc565b156125d15730945b604080516314890dcb60e21b8152969087806124fc858589600485016130d9565b03818b6001600160a01b038b165af1968715610b75576102c5976125b3575b50612525836130cc565b612532575b5050506124ac565b6125936125aa9461258561254a604460c435016130cc565b61256861255b606460c435016130fb565b97608460c435019061310a565b60405198899591936001600160a01b03909216916020870161313c565b03601f198101855284612f3d565b60e435926001600160a01b0386169187919061388b565b3880808061252a565b6125cb9060403d604011610843576108358183612f3d565b5061251b565b81946124db565b6125ee6001600160a01b038681169088166139e6565b1561265e5730905b6001600160a01b0386163b15610443576040516374d2492960e11b815292849284928392612629928b906004860161308b565b0381836001600160a01b0389165af180156104385761264a575b808061249e565b61265390612ef9565b610443578338612643565b85906125f6565b9250926126849060843515612881575b6084351561287a578433613b62565b604051638eb22cdd60e01b81526004810184905260248101829052604481018690529093906020816064816001600160a01b038b165afa908115610948578691612845575b5060405163095ea7b360e01b8082526001600160a01b0389811660048401526024830189905292959290931692906020816044818b885af18015610b755787928a928a926127f8575b50604051908152946020938693919284929091839161273e91906001600160a01b03166004840161302b565b03925af19182156109485785926127b4575b506127769160409182519384928392634d4d7cbd60e11b8452309030906004860161305c565b0381886001600160a01b038b165af1801561080b57612796575b80612496565b6127ae9060403d604011610843576108358183612f3d565b50612790565b91506020823d6020116127f0575b816127cf60209383612f3d565b8101031261093c57846040916127e76127769461301e565b50915091612750565b3d91506127c2565b92509250506020813d60201161283d575b8161281660209383612f3d565b81010312610bb15761273e9389896020946128318b9561301e565b50919394509195612712565b3d9150612809565b9550506020853d602011612872575b8161286160209383612f3d565b810103126104bb57889451386126c9565b3d9150612854565b8489613b62565b61288a8961317d565b612675565b92919550506020823d6020116128c0575b816128ad60209383612f3d565b810103126104bb5790518894908361248c565b3d91506128a0565b6128e191925060803d8111610c4e57610c3c8183612f3d565b505090509038612449565b9350506020833d602011612919575b8161290860209383612f3d565b810103126104bb5786925138612413565b3d91506128fb565b61293b91945060203d602011611193576111848183612f3d565b92386123e5565b6003199150610100368301126104345761295a612ebe565b612962612ed4565b9261296b612eea565b9060c435906001600160401b0382116108845760a090823603011261093c5763de40657760e01b84526001600160a01b038381169490936020916044359083816004818b5afa908115612dba578a91612ea1575b5060405163226f120560e11b81529084826004818c5afa918215612bbf578b92612e72575b50604051630cf35bdd60e41b815260048101839052908816966080826024818b5afa918215612be5578c92612e4e575b5083612ce3575b5050506064359081612c55575b5050506084359384612a38578780f35b8260040190612a46826130cc565b15612c4e5730915b6040516377607a1760e11b80825298908581600481855afa908115612be5578c91612c21575b5060405190638eb22cdd60e01b825260048201528860248201528b604482015285816064818b5afa908115612be5578c91612bf4575b50813b15612bf0578b858c612ad3604051948593849363cce19f8160e01b8552600485016130d9565b038183865af18015612be557612bd2575b50612aee826130cc565b612afa575b5050508780f35b8460e435348111612bca57995b60046040518094819382525afa948515612bbf578b95612b7b575b505091612b6598959391612b4b86946084612b436064612b5d9c9a016130fb565b96019061310a565b98908a15612b745733995b3691612f7b565b961693613553565b38808080808080808080612af3565b3099612b56565b908098969492939a979550813d8311612bb8575b612b998183612f3d565b810103126104bb57955194979395929491939192919081612b4b612b22565b503d612b8f565b6040513d8d823e3d90fd5b504799612b07565b612bde909b919b612ef9565b9938612ae4565b6040513d8e823e3d90fd5b8b80fd5b90508581813d8311612c1a575b612c0b8183612f3d565b81010312612bf0575138612aaa565b503d612c01565b90508581813d8311612c47575b612c388183612f3d565b81010312612bf0575138612a74565b503d612c2e565b8791612a4e565b612c5f86846139e6565b15612cdb578288305b612c86604051948593849363cd0211eb60e01b8552600485016131df565b03818c8b5af18015610c015785918491612cae575b5050612ca691613aa5565b388080612a28565b908092503d8311612cd4575b612cc48183612f3d565b81010312610bb157838238612c9b565b503d612cba565b828880612c68565b92612cf8919293600014612e47578233613b62565b918a604051928963095ea7b360e01b918286528a600487015283602487015216878560448186855af180156104c857889387938c92612e08575b612d4c97506040519788958694859384526004840161302b565b03925af1918215612bbf578392612dc5575b50612d849160409182519384928392634d4d7cbd60e11b8452309030906004860161305c565b03818d8a5af18015612dba57612d9c575b8080612a1b565b612db49060403d604011610843576108358183612f3d565b50612d95565b6040513d8c823e3d90fd5b91508482813d8311612e01575b612ddc8183612f3d565b81010312612dfd5782604091612df4612d849461301e565b50915091612d5e565b8a80fd5b503d612dd2565b935093905085813d8311612e40575b612e218183612f3d565b81010312610434578988938793612e3a612d4c9861301e565b50612d32565b503d612e17565b828b613b62565b612e6791925060803d8111610c4e57610c3c8183612f3d565b505090509038612a14565b9091508481813d8311612e9a575b612e8a8183612f3d565b81010312612dfd575190386129e4565b503d612e80565b612eb89150843d8611611193576111848183612f3d565b386129bf565b600435906001600160a01b03821682036104bb57565b602435906001600160a01b03821682036104bb57565b60a4359081151582036104bb57565b6001600160401b038111612f0c57604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b03821117612f0c57604052565b601f909101601f19168101906001600160401b03821190821017612f0c57604052565b6001600160401b038111612f0c57601f01601f191660200190565b929192612f8782612f60565b91612f956040519384612f3d565b8294818452818301116104bb578281602093846000960137010152565b908160209103126104bb57516001600160a01b03811681036104bb5790565b51906001600160a01b03821682036104bb57565b91908260809103126104bb57815160058110156104bb579161300960208201612fd1565b91606061301860408401612fd1565b92015190565b519081151582036104bb57565b6001600160a01b039091168152602081019190915260400190565b91908260409103126104bb576020825192015190565b9081526001600160a01b0391821660208201529116604082015260608101919091526000608082015260a00190565b6001600160a01b03918216815291166020820152600060408201526060810191909152608081019190915260a00190565b6101e43580151581036104bb5790565b3580151581036104bb5790565b6001600160a01b03918216815291166020820152604081019190915260600190565b3561ffff811681036104bb5790565b903590601e19813603018212156104bb57018035906001600160401b0382116104bb576020019181360383136104bb57565b93909261ffff86949360a0979415158752166020860152604085015260806060850152816080850152848401376000828201840152601f01601f1916010190565b336001600160a01b039091160361319057565b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a206f70657261746f72206e6f7420617070726f76656044820152601960fa1b6064820152608490fd5b6001600160a01b0391821681529116602082015260006040820152606081019190915260800190565b6064356001600160a01b03811681036104bb5790565b6044356001600160a01b03811681036104bb5790565b610164356001600160a01b03811681036104bb5790565b610204356001600160a01b03811681036104bb5790565b356001600160a01b03811681036104bb5790565b6001600160a01b03918216815291166020820152604081019190915260806060820181905260029082015261060f60f31b60a082015260c00190565b6115ba909392936132de6040948551938491602098898401976323b872dd60e01b8952602485016130d9565b83518085019290916001600160a01b0316906001600160401b03841183851017612f0c576133679386528683527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487840152600080958192519082855af13d156133f1573d9161334d83612f60565b9261335a88519485612f3d565b83523d868985013e6133f5565b90815180613377575b5050505050565b8285918101031261119e57508261338e910161301e565b1561339b57808080613370565b60849250519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6060915b919290156134575750815115613409575090565b3b156134125790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561346a5750805190602001fd5b60405162461bcd60e51b81526020600482015290819061348e9060248301906134b5565b0390fd5b60005b8381106134a55750506000910152565b8181015183820152602001613495565b906020916134ce81518092818552858086019101613492565b601f01601f1916010190565b519061ffff821682036104bb57565b61ffff90911681526001600160a01b03909116602082015260400190565b51906001600160801b03821682036104bb57565b903590609e19813603018212156104bb570190565b9190820391821161353d57565b634e487b7160e01b600052601160045260246000fd5b9261ffff90989794929598969196169384156138255760408051630cf35bdd60e41b8152600480820189905291996001600160a01b0396871697929490916080816024818c5afa90811561381a579088916000916137f8575b508c516301ffc9a760e01b815263843c6ae360e01b8882015291169460209182816024818a5afa90816137c4575b50613643575050505050509061360c879860009389989951998a98899788966311a5cc7760e31b88521692860161305c565b03925af180156136385761361e575050565b8161363492903d10610843576108358183612f3d565b5050565b82513d6000823e3d90fd5b9296998d9295998d9295999c600089936136728651978896879586946311a5cc7760e31b86523092860161305c565b03925af18015613795576137a8575b5034156137a057915b8951633b58a71760e21b8152828186818b5afa90811561379557600091613760575b501561375757905b888a51936136c185612f22565b16835282019760008952898301918252863b156104bb576000988161372f948c519d8e9b8c9a8b9963695ef6bf60e01b8b5230908b015260248a01526044890152606488015260a06084880152511660a4860152511660c484015251606060e48401526101048301906134b5565b03925af190811561374d57506137425750565b61374b90612ef9565b565b513d6000823e3d90fd5b506060906136b4565b908382813d831161378e575b6137768183612f3d565b8101031261119e57506137889061301e565b386136ac565b503d61376c565b8b513d6000823e3d90fd5b50309161368a565b6137be908b3d8d11610843576108358183612f3d565b50613681565b8381813d83116137f1575b6137d98183612f3d565b810103126104bb576137ea9061301e565b50386135da565b503d6137cf565b613810915060803d8111610c4e57610c3c8183612f3d565b50509050386135ac565b8c513d6000823e3d90fd5b5050604080516311a5cc7760e31b815297909650879592948694506000936001600160a01b0393869361386293909291861691906004860161305c565b0393165af18015611717576138745750565b6136349060403d8111610843576108358183612f3d565b91939095949580511561172d5780518101926020976080838a87019603126104bb576138b889840161301e565b986040916138c78386016134da565b6060860151608087015190969193916001600160401b0382116104bb57019188603f840112156104bb5781830151906138ff82612f60565b9961390c87519b8c612f3d565b828b528683860101116104bb5761392c839260049588858e019101613492565b3481116139c4579a5b855163226f120560e11b815293849182906001600160a01b03165afa93841561374d5750600093613991575b505061374b98996000906000146139895750915b8715613982573396613553565b3096613553565b905091613975565b81819c949c3d83116139bd575b6139a88183612f3d565b81010312612dfd575191995061374b38613961565b503d61399e565b50479a613935565b6001600160a01b0391821681529116602082015260400190565b60405163e985e9c560e01b81526001600160a01b03928316929060208180613a128630600484016139cc565b0381875afa90811561171757600091613a6c575b5015613a3157505050565b823b156104bb57604460009283604051958694859363a22cb46560e01b8552166004840152600160248401525af18015611717576137425750565b906020823d8211613a9d575b81613a8560209383612f3d565b8101031261119e5750613a979061301e565b38613a26565b3d9150613a78565b60405163e985e9c560e01b81526001600160a01b03928316929060208180613ad18630600484016139cc565b0381875afa90811561171757600091613b29575b50613aef57505050565b823b156104bb57604460009283604051958694859363a22cb46560e01b85521660048401528160248401525af18015611717576137425750565b906020823d8211613b5a575b81613b4260209383612f3d565b8101031261119e5750613b549061301e565b38613ae5565b3d9150613b35565b6040516370a0823160e01b8082523060048301526020959492936001600160a01b0316928683602481875afa948515611717578793600096613c54575b5090613bad913090866132b2565b60246040518094819382523060048301525afa90811561171757600091613c27575b5081811115613be657613be3929350613530565b90565b60405162461bcd60e51b8152600481018590526019602482015278135859db995d185c8e881d1c985b9cd9995c8819985a5b1959603a1b6044820152606490fd5b908482813d8311613c4d575b613c3d8183612f3d565b8101031261119e57505138613bcf565b503d613c33565b91929382819792973d8311613c85575b613c6e8183612f3d565b8101031261119e5750519386929190613bad613b9f565b503d613c6456fea26469706673582212209ffda2a3ad8b63c356e44ee30fafc914dc56aadabbbaa27b57c37d1d6c07645a64736f6c63430008120033";

type MagnetarMarketModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarMarketModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarMarketModule__factory extends ContractFactory {
  constructor(...args: MagnetarMarketModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarMarketModule";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarMarketModule> {
    return super.deploy(overrides || {}) as Promise<MagnetarMarketModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MagnetarMarketModule {
    return super.attach(address) as MagnetarMarketModule;
  }
  override connect(signer: Signer): MagnetarMarketModule__factory {
    return super.connect(signer) as MagnetarMarketModule__factory;
  }
  static readonly contractName: "MagnetarMarketModule";

  public readonly contractName: "MagnetarMarketModule";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarMarketModuleInterface {
    return new utils.Interface(_abi) as MagnetarMarketModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarMarketModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MagnetarMarketModule;
  }
}
