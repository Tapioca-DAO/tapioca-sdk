/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MagnetarMarketModule,
  MagnetarMarketModuleInterface,
} from "../../../../contracts/Magnetar/modules/MagnetarMarketModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36144c090816100618239f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c8063150b7a021461352357806316e55a1d14612fbc57806323ca9c7d146129e257806325e0e331146115cb5780634f1dbd421461026f578063715018a6146102275780638da5cb5b14610200578063dbd01de1146101d7578063de576147146101485763f2fde38b14610095575061000e565b34610145576020366003190112610145576100ae613579565b6100b661368b565b6001600160a01b039081169081156100f1576000548260018060a01b03198216176000551660008051602061446b833981519152600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b50610120366003190112610145576001600160a01b0360043581811681036101d35761017261358f565b916064359161ffff831683036101cf5760c4356001600160401b0381116101cb576101a190369060040161365e565b9060e43592831683036101cb576101c894610104359460a435926084359260443591613d33565b80f35b8580fd5b8480fd5b8280fd5b50346101455780600319360112610145576001546040516001600160a01b039091168152602090f35b5034610145578060031936011261014557546040516001600160a01b039091168152602090f35b503461014557806003193601126101455761024061368b565b600080546001600160a01b0319811682556001600160a01b031660008051602061446b8339815191528280a380f35b506003199060e03683011261014557610286613579565b9160603660231901126115c7576001600160401b03608435116115c7576101c090608435360301126101455760c4356001600160a01b03811681036106ab576001600160a01b036102d5613933565b166114ea575b6001600160a01b036102eb613949565b166113e6575b6001600160a01b03610301613933565b16906001600160a01b03610313613949565b16936040519163de40657760e01b8352602083600481895afa9283156107175785936113b5575b50849061034b60c4608435016137fd565b610e33575b61035f610124608435016137fd565b610c2c575b50506103746084356004016137fd565b6109f9575b61039661039161018460843501608435600401613cfb565b6137fd565b15806109e5575b61078c575b6103af60848035016137fd565b6103ca575b506101c8916001600160a01b0390911690614286565b6040516377607a1760e11b8152602081600481875afa90811561071757859161075a575b50604051638eb22cdd60e01b8152600481019190915260843560a401356024820152604481018590526020816064816001600160a01b0387165afa908115610717578591610728575b506104506103916101a460843501608435600401613cfb565b1561072257305b843b156101cb5760405163cce19f8160e01b8152918691839182916104819190876004850161380a565b038183885af18015610717579085916106ff575b50506104af6103916101a460843501608435600401613cfb565b156103b4576104d460406104ce6101a460843501608435600401613cfb565b016137fd565b906105466104f860606104f26101a460843501608435600401613cfb565b0161382c565b61053861051d6105136101a460843501608435600401613cfb565b608081019061383b565b90604051968794602086019760018060a01b0316918861386d565b03601f1981018452836135e9565b8151156106b0578151820190608083602084019303126106ab576105699061374f565b61057560408401613973565b6060840151608085015190946001600160401b0382116106ab57019183603f840112156106ab576020830151926105ab8461360c565b946105b960405196876135e9565b848652604085830101116106ab576004936105db916040602088019101613c9f565b60a4353481116106a157602090995b6040516377607a1760e11b815294859182905afa9283156106955760009361065f575b50916101c89798939161064995936000906000146106575750925b84156106505733935b60843560a4013592306001600160a01b038a16613d33565b83926103b4565b3093610631565b905092610628565b90926020823d60201161068d575b8161067a602093836135e9565b81010312610145575051916101c861060d565b3d915061066d565b6040513d6000823e3d90fd5b50602047996105ea565b600080fd5b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a2077697468647261774461746120697320656d70746044820152607960f81b6064820152608490fd5b610708906135a5565b610713578338610495565b8380fd5b6040513d87823e3d90fd5b81610457565b90506020813d602011610752575b81610743602093836135e9565b810103126106ab575138610437565b3d9150610736565b90506020813d602011610784575b81610775602093836135e9565b810103126106ab5751386103ee565b3d9150610768565b61079f6001600160a01b038316846141c7565b60405163cd0211eb60e01b8152602081806107c5608435606401358630600485016138ae565b038188885af19081156107175785916109b3575b506024608435013581106107ee575b506103a2565b60405163226f120560e11b815290602082600481885afa91821561093357869261097f575b5060405163226f120560e11b815290602082600481895afa91821561097457879261093e575b5061084a9060246084350135613d10565b604051638eb22cdd60e01b815260048101929092526024820152604481018690526020816064816001600160a01b0388165afa908115610933578691610901575b506001600160a01b0384163b156101cb5760405191630208d92960e11b835230600484015260018060a01b03841660248401526044830152606482015284816084818360018060a01b0388165af18015610717579085916108ed575b506107e8565b6108f6906135a5565b6107135783386108e7565b90506020813d60201161092b575b8161091c602093836135e9565b810103126106ab57513861088b565b3d915061090f565b6040513d88823e3d90fd5b9091506020813d60201161096c575b8161095a602093836135e9565b810103126106ab57519061084a610839565b3d915061094d565b6040513d89823e3d90fd5b9091506020813d6020116109ab575b8161099b602093836135e9565b810103126106ab57519038610813565b3d915061098e565b90506020813d6020116109dd575b816109ce602093836135e9565b810103126106ab5751386107d9565b3d91506109c1565b506109f46044608435016137fd565b61039d565b60405163226f120560e11b8152602081600481895afa908115610717578591610bfa575b50604051638eb22cdd60e01b81526004810191909152602460843581013590820152604481018590526020816064816001600160a01b0387165afa908115610717578591610bc7575b506020610aaf91610a8561039161018460843501608435600401613cfb565b8015610bb3575b15610bad57305b60405163f4d9375360e01b81529384928392876004850161380a565b0381888a5af1801561071757610b82575b50610ad961039161018460843501608435600401613cfb565b1561037957610b7d610afb60406104ce61018460843501608435600401613cfb565b610b5e610b1860606104f261018460843501608435600401613cfb565b610b50610b3361051361018460843501608435600401613cfb565b6040519586949192916001600160a01b038a16916020870161386d565b03601f1981018352826135e9565b60a4359060843560240135906001600160a01b0386169089903061406c565b610379565b602090813d8311610ba6575b610b9881836135e9565b810103126106ab5738610ac0565b503d610b8e565b83610a93565b50610bc26044608435016137fd565b610a8c565b90506020813d602011610bf2575b81610be2602093836135e9565b810103126106ab57516020610a66565b3d9150610bd5565b90506020813d602011610c24575b81610c15602093836135e9565b810103126106ab575138610a1d565b3d9150610c08565b6040516348be20ab60e11b81526020816004816001600160a01b0386165afa908115610974578791610df3575b506020610c8f916101446084350193610c718561395f565b604051633a304d8b60e21b8152948593849283929160048401613982565b03916001600160a01b03165afa8015610974578790610db4575b610cb39150613a38565b610164608435013580610d56575b506020906001600160a01b0390610cd79061395f565b16916064610ce3613949565b6040516330dce68f60e11b815260048101939093526001600160a01b039081166024840152851660448301529092839190829089905af1801561071757610d2b575b80610364565b602090813d8311610d4f575b610d4181836135e9565b810103126106ab5738610d25565b503d610d37565b909180610d67575b50906020610cc1565b8103610d735738610d5e565b60405162461bcd60e51b815260206004820152601960248201527809ac2cedccae8c2e47440e89e98a092c840dad2e6dac2e8c6d603b1b6044820152606490fd5b506020813d602011610deb575b81610dce602093836135e9565b81010312610de757610de2610cb39161374f565b610ca9565b8680fd5b3d9150610dc1565b90506020813d602011610e2b575b81610e0e602093836135e9565b81010312610de7576020610e24610c8f92613973565b9150610c59565b3d9150610e01565b9050610104608435013515611376576040516348be20ab60e11b81526020816004816001600160a01b0386165afa908115610933578691611336575b506020610ea091610e8460e46084350161395f565b604051633a304d8b60e21b815293849283929060048401613982565b03816001600160a01b0386165afa9081156109335786916112fc575b50156112b85760049060206001600160a01b03610edd60843560e40161395f565b1660405193848092635ad7038760e01b82525afa91821561093357869261127c575b5060405163682ee63560e11b8152608435610104013560048201526080816024816001600160a01b0387165afa8015610974578790611204575b60409081015190516331a9108f60e11b815260843561010401356004820152909391506020816024816001600160a01b0386165afa9081156111f95788916111bb575b506001600160a01b03858116911690811490819081156111b1575b5015611160576110f2575b506001600160a01b03610fb960843560e40161395f565b16803b15610de7578680916024604051809481936378dc905960e01b8352610104608435013560048401525af18015610974579087916110de575b5050611005610124608435016137fd565b61035057600460206001600160a01b0361102360843560e40161395f565b16604051928380926272410960e91b82525afa9081156109745787916110a4575b506001600160a01b0316803b15610de757866040518092635c46a7ef60e11b8252818381611077898b3060048501613a83565b03925af1801561097457908791611090575b5050610350565b611099906135a5565b6101cb578538611089565b90506020813d6020116110d6575b816110bf602093836135e9565b81010312610de7576110d090613702565b38611044565b3d91506110b2565b6110e7906135a5565b6101cb578538610ff4565b6001600160a01b0381163b15610de757866040518092635c46a7ef60e11b825281838161112b6101046084350135308c60048501613a83565b03926001600160a01b03165af180156109745790879161114c575b50610fa2565b611155906135a5565b6101cb578538611146565b60405162461bcd60e51b8152602060048201526024808201527f4d61676e657461723a206f544150546f6b656e4944206f776e6572206d69736d6044820152630c2e8c6d60e31b6064820152608490fd5b9050301438610f97565b90506020813d6020116111f1575b816111d6602093836135e9565b810103126111ed576111e790613702565b38610f7c565b8780fd5b3d91506111c9565b6040513d8a823e3d90fd5b508060803d8111611275575b61121a81836135e9565b810103608081126111ed5760609061123183613702565b50601f190112610de757604090606082519161124c836135ce565b61125860208201613ce7565b8352611265848201613ce7565b6020840152015182820152610f39565b503d611210565b9091506020813d6020116112b0575b81611298602093836135e9565b810103126101cb576112a990613702565b9038610eff565b3d915061128b565b606460405162461bcd60e51b815260206004820152602060248201527f4d61676e6574617256323a206f544150206e6f742077686974656c69737465646044820152fd5b90506020813d60201161132e575b81611317602093836135e9565b810103126101cb576113289061374f565b38610ebc565b3d915061130a565b90506020813d60201161136e575b81611351602093836135e9565b810103126101cb576020611367610ea092613973565b9150610e6f565b3d9150611344565b60405162461bcd60e51b815260206004820152601760248201527604d61676e657461723a206f544150546f6b656e4944203604c1b6044820152606490fd5b6113d891935060203d6020116113df575b6113d081836135e9565b8101906136e3565b913861033a565b503d6113c6565b6040516348be20ab60e11b815260209081816004816001600160a01b0387165afa9081156114a35784916114ae575b50908061144092611424613949565b604051633a304d8b60e21b815294859283929060048401613982565b03816001600160a01b0387165afa9081156114a357849161146c575b5061146791506139ec565b6102f1565b905081813d831161149c575b61148281836135e9565b810103126101d3576114966114679161374f565b3861145c565b503d611478565b6040513d86823e3d90fd5b90508181813d83116114e3575b6114c581836135e9565b810103126107135790806114db61144093613973565b919250611415565b503d6114bb565b6040516348be20ab60e11b815260209081816004816001600160a01b0387165afa9081156114a357849161158b575b50908061152892611424613933565b03816001600160a01b0387165afa9081156114a3578491611554575b5061154f91506139a0565b6102db565b905081813d8311611584575b61156a81836135e9565b810103126101d35761157e61154f9161374f565b38611544565b503d611560565b90508181813d83116115c0575b6115a281836135e9565b810103126107135790806115b861152893613973565b919250611519565b503d611598565b5080fd5b506102c0366003190112610145576115e1613579565b60a03660431901126115c75760603660e31901126115c75760a0366101431901126115c7576060366101e31901126115c7576060366102431901126115c7576102a4356001600160a01b03811681036106ab5760405191611641836135ce565b60443580151581036106ab578352606435602084015260603660831901126106ab5760405161166f816135ce565b60843580151581036106ab57815260a435602082015260c43580151581036106ab5760408201526040840152604051906116a8826135ce565b60e43580151581036106ab57825261010435602083015261012435151561012435036106ab57610124356040830152602435916001600160a01b036116eb6138d7565b16936001600160a01b036116fd6138ee565b16936040519663de40657760e01b8852602088600481895afa978815611f255789986129c1575b506001600160a01b036117356138d7565b166128e0575b6001600160a01b0361174b6138ee565b166127ff575b856127e7575b866127cf575b8051612372575b5060405163226f120560e11b815290602082600481895afa918215611f2557899261233e575b50604051630cf35bdd60e41b8152600481018390526080816024816001600160a01b038d165afa90811561226c578a9161230c575b508451612160575b508893811580612156575b61214a575b5080612061575b505086916101443580151581036106ab57611c3f575b506117fd6137ed565b611848575b5050508061182e575b5080611815578280f35b611828916001600160a01b031690614286565b38808280f35b611842906001600160a01b03841690614286565b3861180b565b6040516348be20ab60e11b81526020816004816001600160a01b0386165afa9081156111f9578891611bfd575b5060209061188592610c7161391c565b03916001600160a01b03165afa908115610974578791611bc3575b5015611b7e576102243580611b1f575b506001600160a01b036118c1613905565b1615611ada578015611a9b5785916001600160a01b036118df613905565b16916118e961391c565b92803b156101cf57818591611915958360405180988195829463095ea7b360e01b84526004840161375c565b03925af19283156114a3578493611a83575b5060209060246001600160a01b0361193d61391c565b1691604051958693849263422e498360e11b845260048401525af1918215611a78578392611a41575b50600460206001600160a01b0361197b61391c565b1660405192838092635ad7038760e01b82525afa9081156114a3578491611a07575b506001600160a01b031691823b15610713576119d392849283604051809681958294635c46a7ef60e11b84523060048501613a83565b03925af180156119fc576119e8575b80611802565b6119f1906135a5565b6107135783386119e2565b6040513d84823e3d90fd5b90506020813d602011611a39575b81611a22602093836135e9565b8101031261071357611a3390613702565b3861199d565b3d9150611a15565b925090506020823d602011611a70575b81611a5e602093836135e9565b810103126106ab578591519038611966565b3d9150611a51565b6040513d85823e3d90fd5b611a8f909391936135a5565b6101d357829138611927565b60405162461bcd60e51b815260206004820152601760248201527604d61676e657461723a20744f4c50546f6b656e4964203604c1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f4d61676e657461723a206c6f636b20746172676574206d69736d6174636800006044820152606490fd5b9080611b2d575b50386118b0565b8103611b395738611b26565b60405162461bcd60e51b815260206004820152601e60248201527f4d61676e657461723a20744f4c50546f6b656e4964206d69736d6174636800006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4d61676e6574617256323a20744f42206e6f742077686974656c6973746564006044820152606490fd5b90506020813d602011611bf5575b81611bde602093836135e9565b81010312610de757611bef9061374f565b386118a0565b3d9150611bd1565b90506020813d602011611c37575b81611c18602093836135e9565b810103126111ed5761188591611c2f602092613973565b915091611875565b3d9150611c0b565b6040516348be20ab60e11b81529192506020826004816001600160a01b0387165afa9182156111f9578892612021575b506020611c7e92611424613905565b03816001600160a01b0387165afa9182156111f9578892611fe1575b50611ca6602492613a38565b6101c43580611fd9575b5060606001600160a01b03611cc3613905565b1660405193848092633873b0cd60e01b82528960048301525afa9182156111f9578892611fa5575b508015611f6957611cfe81308688613abf565b60405163095ea7b360e01b81526001600160a01b0388166004820152602481018990526020816044818c8a5af18015611f2557611f30575b5060405163095ea7b360e01b815260208180611d5f856001600160a01b038d166004840161375c565b03818c8a5af18015611f2557611edf575b5060408051634d4d7cbd60e11b815292909183918291611d9791309081906004860161378d565b03818a6001600160a01b038b165af1801561097457611eb1575b50611dcc6001600160a01b038616611dc7613905565b6141c7565b611dd46137ed565b15611eab57305b6001600160a01b03611deb613905565b16906101843560018060801b03928382168092036106ab576101a4359384168094036106ab576020928a60849260405196879586946362e8f3db60e11b865260018060a01b031660048601528b6024860152604485015260648401525af1908115610974578791611e79575b5090611e736001600160a01b038716611e6e613905565b614286565b386117f4565b90506020813d602011611ea3575b81611e94602093836135e9565b810103126106ab575138611e57565b3d9150611e87565b81611ddb565b611ed29060403d604011611ed8575b611eca81836135e9565b810190613777565b50611db1565b503d611ec0565b906020823d602011611f1d575b81611ef9602093836135e9565b81010312611f1957611d9792611f1060409361374f565b50925090611d70565b8880fd5b3d9150611eec565b6040513d8b823e3d90fd5b6020813d602011611f61575b81611f49602093836135e9565b81010312611f1957611f5a9061374f565b5038611d36565b3d9150611f3c565b60405162461bcd60e51b815260206004820152601460248201527304d61676e657461723a206672616374696f6e20360641b6044820152606490fd5b9091506060813d606011611fd1575b81611fc1606093836135e9565b810103126111ed57519038611ceb565b3d9150611fb4565b905038611cb0565b91506020823d602011612019575b81611ffc602093836135e9565b810103126111ed57611ca661201260249361374f565b9250611c9a565b3d9150611fef565b91506020823d602011612059575b8161203c602093836135e9565b810103126111ed576020612052611c7e93613973565b9250611c6f565b3d915061202f565b604051638eb22cdd60e01b815260048101929092526024820152604481018890529091506020816064816001600160a01b038a165afa908115610974578791612117575b5060206120c89160405180938192630cb0f5b760e31b83528780600485016138ae565b03818a885af19081156109745787916120e5575b509038806117de565b90506020813d60201161210f575b81612100602093836135e9565b810103126106ab5751386120dc565b3d91506120f3565b90506020813d602011612142575b81612132602093836135e9565b810103126106ab575160206120a5565b3d9150612125565b602091500151386117d7565b50805115156117d2565b6040850151156123035761217b335b82602088015191614343565b60208681019190915260405163095ea7b360e01b81526001600160a01b03808c166004830152602482018d9052909190829060449082908f9087165af180156122f8576122b4575b5060206121f59181870151908b8d60405180968195829463095ea7b360e01b845260018060a01b03166004840161375c565b03926001600160a01b03165af1801561226c57612277575b5061223460406020860151815180938192634d4d7cbd60e11b83528a30896004860161378d565b03818d6001600160a01b038e165af1801561226c57156117c7576122669060403d604011611ed857611eca81836135e9565b506117c7565b6040513d8c823e3d90fd5b6020813d6020116122ac575b81612290602093836135e9565b810103126122a8576122a19061374f565b503861220d565b8980fd5b3d9150612283565b6020813d6020116122f0575b816122cd602093836135e9565b810103126122ec576121f5916122e460209261374f565b5091506121c3565b8a80fd5b3d91506122c0565b6040513d8d823e3d90fd5b61217b8661216f565b61232d915060803d8111612337575b61232581836135e9565b810190613716565b50509050386117bf565b503d61231b565b9091506020813d60201161236a575b8161235a602093836135e9565b810103126106ab5751903861178a565b3d915061234d565b6040516377607a1760e11b815289906020816004818c5afa9081156119fc57829161279a575b50604051630cf35bdd60e41b8152600481018290526080816024816001600160a01b038f165afa908115611a78578391612778575b508a60208060408701510151606460405180948193638eb22cdd60e01b8352886004840152602483015288604483015260018060a01b03165afa9081156114a3578491612743575b50916040850151805161250a575b50505060206040840151015161248b575b505060200151604080516314890dcb60e21b8152918290819061245c9089806004850161380a565b03818c8b5af18015611f255715611764576124859060403d604011611ed857611eca81836135e9565b50611764565b61249e6001600160a01b038b168a6141c7565b604083015180511561250157602030915b0151918a3b15610713576040516374d2492960e11b8152928492849283926124dc928d90600486016137bc565b0381838d5af180156119fc5715612434576124f6906135a5565b611f19578838612434565b602088916124af565b61252d91929350604081015115156000146127395783602033925b015191614343565b6020604086015101528a60208060408701510151606460405180948193638eb22cdd60e01b8352876004840152602483015288604483015260018060a01b03165afa9081156114a3578491612704575b5060405163095ea7b360e01b81526001600160a01b038d81166004830152602482018690529193909160209083906044908290899086165af1918215610717578d926126c0575b506125fa916020918260408901510151918760405180968195829463095ea7b360e01b845260018060a01b03166004840161375c565b03926001600160a01b03165af180156114a357612680575b506040612643918c602083880151015191868451809681958294634d4d7cbd60e11b8452309030906004860161378d565b03926001600160a01b03165af18015611a7857612662575b8080612423565b61267a9060403d604011611ed857611eca81836135e9565b5061265b565b6020813d6020116126b8575b81612699602093836135e9565b8101031261071357612643916126b060409261374f565b509150612612565b3d915061268c565b91506020823d6020116126fc575b816126db602093836135e9565b810103126101cf578c6020916126f36125fa9461374f565b509150916125c4565b3d91506126ce565b9350506020833d602011612731575b81612720602093836135e9565b810103126106ab578b92513861257d565b3d9150612713565b8360208b92612525565b9350506020833d602011612770575b8161275f602093836135e9565b810103126106ab578b925138612415565b3d9150612752565b612790915060803d81116123375761232581836135e9565b50509050386123cd565b9150506020813d6020116127c7575b816127b6602093836135e9565b810103126106ab5789905138612398565b3d91506127a9565b6127e26001600160a01b038916886141c7565b61175d565b6127fa6001600160a01b038916876141c7565b611757565b6040516348be20ab60e11b81526020816004816001600160a01b0388165afa90811561226c578a916128a0575b50602061283b91610e846138ee565b03816001600160a01b0388165afa801561226c578a90612865575b61286091506139ec565b611751565b506020813d602011612898575b8161287f602093836135e9565b810103126122a8576128936128609161374f565b612856565b3d9150612872565b90506020813d6020116128d8575b816128bb602093836135e9565b810103126122a85760206128d161283b92613973565b915061282c565b3d91506128ae565b6040516348be20ab60e11b81526020816004816001600160a01b0388165afa90811561226c578a91612981575b50602061291c91610e846138d7565b03816001600160a01b0388165afa801561226c578a90612946575b61294191506139a0565b61173b565b506020813d602011612979575b81612960602093836135e9565b810103126122a8576129746129419161374f565b612937565b3d9150612953565b90506020813d6020116129b9575b8161299c602093836135e9565b810103126122a85760206129b261291c92613973565b915061290d565b3d915061298f565b6129db91985060203d6020116113df576113d081836135e9565b9638611724565b50600319610100368201126115c7576004356001600160a01b03811690036115c757612a0c61358f565b906084351515608435036106ab57612a2261367c565b906001600160401b0360c435116107135760a09060c435360301126101d35760405163de40657760e01b81529083906044359060208460048181356001600160a01b03165afa938415611a78578394612f9b575b506040516377607a1760e11b815260208160048181356001600160a01b03165afa9081156114a3578491612f66575b50604051630cf35bdd60e41b815260048101829052906080826024816001600160a01b038a165afa918215610717578592612f42575b50604051638eb22cdd60e01b81526004810182905260248101859052604481018690526020816064816001600160a01b038b165afa908115610933578691612f09575b5092919082612cf4575b505082612c61575b505050506064359182612b57575b836101c86001600160a01b038085169060043516614286565b60c43560040192612b67846137fd565b15612c5a5730905b604080516314890dcb60e21b815295908680612b908587896004850161380a565b03818a6004356001600160a01b03165af1958615610974576101c896612c3c575b50612bbb816137fd565b612bc8575b505050612b3e565b612c1b612c3394610b50612be0604460c435016137fd565b612bfe612bf1606460c4350161382c565b95608460c435019061383b565b60405196879591936001600160a01b03909216916020870161386d565b60e435926001600160a01b038616916004359161406c565b38808080612bc0565b612c549060403d604011611ed857611eca81836135e9565b50612bb1565b8190612b6f565b612c796001600160a01b0386811690600435166141c7565b15612ced5730905b6004356001600160a01b03163b15610713576040516374d2492960e11b815292849284928392612cb6928a90600486016137bc565b0381836004356001600160a01b03165af180156119fc57612cd9575b8080612b30565b612ce2906135a5565b6101d3578238612cd2565b8490612c81565b925092612d0c90608435600014612f02578433614343565b604051638eb22cdd60e01b81526004810184905260248101829052604481018690529093906020816064816001600160a01b038b165afa908115610933578691612ecd575b5060405163095ea7b360e01b8082526001600160a01b0389811660048401526024830189905292959290931692906020816044818b885af180156111f95787928a928a92612e80575b506040519081529460209386939192849290918391612dc691906001600160a01b03166004840161375c565b03925af1918215610933578592612e3c575b50612dfe9160409182519384928392634d4d7cbd60e11b8452309030906004860161378d565b0381886001600160a01b038b165af1801561071757612e1e575b80612b28565b612e369060403d604011611ed857611eca81836135e9565b50612e18565b91506020823d602011612e78575b81612e57602093836135e9565b810103126101cb5784604091612e6f612dfe9461374f565b50915091612dd8565b3d9150612e4a565b92509250506020813d602011612ec5575b81612e9e602093836135e9565b810103126111ed57612dc6938989602094612eb98b9561374f565b50919394509195612d9a565b3d9150612e91565b9550506020853d602011612efa575b81612ee9602093836135e9565b810103126106ab5787945138612d51565b3d9150612edc565b8488614343565b92919550506020823d602011612f3a575b81612f27602093836135e9565b810103126106ab57905187949083612b1e565b3d9150612f1a565b612f5b91925060803d81116123375761232581836135e9565b505090509038612adb565b9350506020833d602011612f93575b81612f82602093836135e9565b810103126106ab5785925138612aa5565b3d9150612f75565b612fb591945060203d6020116113df576113d081836135e9565b9238612a76565b50600319610100368201126115c757612fd3613579565b90612fdc61358f565b91612fe561367c565b60c435926001600160401b0384116101cb5760a09084360301126101cf5760405163de40657760e01b81526001600160a01b038381169490939091602091906044359083816004818b5afa90811561226c578a91613506575b5060405163226f120560e11b81529084826004818c5afa9182156122f8578b926134d7575b50604051630cf35bdd60e41b815260048101839052908816966080826024818b5afa918215613259578c926134b3575b5083613357575b50505060643590816132c9575b50505060843593846130b7578780f35b82600401906130c5826137fd565b156132c25730915b6040516377607a1760e11b80825298908581600481855afa908115613259578c91613295575b5060405190638eb22cdd60e01b825260048201528860248201528b604482015285816064818b5afa908115613259578c91613268575b50813b15613264578b858c613152604051948593849363cce19f8160e01b85526004850161380a565b038183865af1801561325957613246575b5061316d826137fd565b613179575b5050508780f35b8460e43534811161323e57995b60046040518094819382525afa9485156122f8578b956131fa575b5050916131e4989593916131ca869460846131c260646131dc9c9a0161382c565b96019061383b565b98908a156131f35733995b3691613627565b961693613d33565b38808080808080808080613172565b30996131d5565b908098969492939a979550813d8311613237575b61321881836135e9565b810103126106ab579551949793959294919391929190816131ca6131a1565b503d61320e565b504799613186565b613252909b919b6135a5565b9938613163565b6040513d8e823e3d90fd5b8b80fd5b90508581813d831161328e575b61327f81836135e9565b81010312613264575138613129565b503d613275565b90508581813d83116132bb575b6132ac81836135e9565b810103126132645751386130f3565b503d6132a2565b87916130cd565b6132d386846141c7565b1561334f578288305b6132fa604051948593849363cd0211eb60e01b8552600485016138ae565b03818c8b5af18015611f255785918491613322575b505061331a91614286565b3880806130a7565b908092503d8311613348575b61333881836135e9565b810103126111ed5783823861330f565b503d61332e565b8288806132dc565b9261336c9192936000146134ac578233614343565b918a604051928963095ea7b360e01b918286528a600487015283602487015216878560448186855af18015611a7857889387938c9261346d575b6133c097506040519788958694859384526004840161375c565b03925af19182156122f857839261342e575b506133f89160409182519384928392634d4d7cbd60e11b8452309030906004860161378d565b03818d8a5af1801561226c57613410575b808061309a565b6134289060403d604011611ed857611eca81836135e9565b50613409565b91508482813d8311613466575b61344581836135e9565b810103126122ec578260409161345d6133f89461374f565b509150916133d2565b503d61343b565b935093905085813d83116134a5575b61348681836135e9565b810103126101d357898893879361349f6133c09861374f565b506133a6565b503d61347c565b828b614343565b6134cc91925060803d81116123375761232581836135e9565b505090509038613093565b9091508481813d83116134ff575b6134ef81836135e9565b810103126122ec57519038613063565b503d6134e5565b61351d9150843d86116113df576113d081836135e9565b3861303e565b50346101455760803660031901126101455761353d613579565b5061354661358f565b506064356001600160401b0381116115c75761356690369060040161365e565b50604051630a85bd0160e11b8152602090f35b600435906001600160a01b03821682036106ab57565b602435906001600160a01b03821682036106ab57565b6001600160401b0381116135b857604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b038211176135b857604052565b601f909101601f19168101906001600160401b038211908210176135b857604052565b6001600160401b0381116135b857601f01601f191660200190565b9291926136338261360c565b9161364160405193846135e9565b8294818452818301116106ab578281602093846000960137010152565b9080601f830112156106ab5781602061367993359101613627565b90565b60a4359081151582036106ab57565b6000546001600160a01b0316330361369f57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b908160209103126106ab57516001600160a01b03811681036106ab5790565b51906001600160a01b03821682036106ab57565b91908260809103126106ab57815160058110156106ab579161373a60208201613702565b91606061374960408401613702565b92015190565b519081151582036106ab57565b6001600160a01b039091168152602081019190915260400190565b91908260409103126106ab576020825192015190565b9081526001600160a01b0391821660208201529116604082015260608101919091526000608082015260a00190565b6001600160a01b03918216815291166020820152600060408201526060810191909152608081019190915260a00190565b6101e43580151581036106ab5790565b3580151581036106ab5790565b6001600160a01b03918216815291166020820152604081019190915260600190565b3561ffff811681036106ab5790565b903590601e19813603018212156106ab57018035906001600160401b0382116106ab576020019181360383136106ab57565b93909261ffff86949360a0979415158752166020860152604085015260806060850152816080850152848401376000828201840152601f01601f1916010190565b6001600160a01b0391821681529116602082015260006040820152606081019190915260800190565b610284356001600160a01b03811681036106ab5790565b610264356001600160a01b03811681036106ab5790565b610164356001600160a01b03811681036106ab5790565b610204356001600160a01b03811681036106ab5790565b6064356001600160a01b03811681036106ab5790565b6044356001600160a01b03811681036106ab5790565b356001600160a01b03811681036106ab5790565b519061ffff821682036106ab57565b61ffff90911681526001600160a01b03909116602082015260400190565b156139a757565b60405162461bcd60e51b815260206004820152601e60248201527f4d61676e6574617256323a204242206e6f742077686974656c697374656400006044820152606490fd5b156139f357565b60405162461bcd60e51b815260206004820152601f60248201527f4d61676e6574617256323a2053474c206e6f742077686974656c6973746564006044820152606490fd5b15613a3f57565b606460405162461bcd60e51b815260206004820152602060248201527f4d61676e6574617256323a20744f4c50206e6f742077686974656c69737465646044820152fd5b6001600160a01b03918216815291166020820152604081019190915260806060820181905260029082015261060f60f31b60a082015260c00190565b61053890939293613aeb6040948551938491602098898401976323b872dd60e01b89526024850161380a565b83518085019290916001600160a01b0316906001600160401b038411838510176135b857613b749386528683527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487840152600080958192519082855af13d15613bfe573d91613b5a8361360c565b92613b67885194856135e9565b83523d868985013e613c02565b90815180613b84575b5050505050565b82859181010312610145575082613b9b910161374f565b15613ba857808080613b7d565b60849250519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6060915b91929015613c645750815115613c16575090565b3b15613c1f5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015613c775750805190602001fd5b60405162461bcd60e51b815260206004820152908190613c9b906024830190613cc2565b0390fd5b60005b838110613cb25750506000910152565b8181015183820152602001613ca2565b90602091613cdb81518092818552858086019101613c9f565b601f01601f1916010190565b51906001600160801b03821682036106ab57565b903590609e19813603018212156106ab570190565b91908203918211613d1d57565b634e487b7160e01b600052601160045260246000fd5b9261ffff90989794929598969196169384156140065760408051630cf35bdd60e41b8152600480820189905291996001600160a01b0396871697929490916080816024818c5afa908115613ffb57908891600091613fd9575b508c516301ffc9a760e01b815263843c6ae360e01b8882015291169460209182816024818a5afa9081613fa5575b50613e235750505050505090613dec879860009389989951998a98899788966311a5cc7760e31b88521692860161378d565b03925af18015613e1857613dfe575050565b81613e1492903d10611ed857611eca81836135e9565b5050565b82513d6000823e3d90fd5b9296998d9295998d9295999c60008993613e528651978896879586946311a5cc7760e31b86523092860161378d565b03925af18015613f7657613f89575b50348503613f8157915b8951633b58a71760e21b8152828186818b5afa908115613f7657600091613f41575b5015613f3857905b888a5193613ea2856135ce565b16835282019760008952898301918252863b156106ab5760009881613f10948c519d8e9b8c9a8b9963695ef6bf60e01b8b5230908b015260248a01526044890152606488015260a06084880152511660a4860152511660c484015251606060e4840152610104830190613cc2565b03925af1908115613f2e5750613f235750565b613f2c906135a5565b565b513d6000823e3d90fd5b50606090613e95565b908382813d8311613f6f575b613f5781836135e9565b810103126101455750613f699061374f565b38613e8d565b503d613f4d565b8b513d6000823e3d90fd5b503091613e6b565b613f9f908b3d8d11611ed857611eca81836135e9565b50613e61565b8381813d8311613fd2575b613fba81836135e9565b810103126106ab57613fcb9061374f565b5038613dba565b503d613fb0565b613ff1915060803d81116123375761232581836135e9565b5050905038613d8c565b8c513d6000823e3d90fd5b5050604080516311a5cc7760e31b815297909650879592948694506000936001600160a01b0393869361404393909291861691906004860161378d565b0393165af18015610695576140555750565b613e149060403d8111611ed857611eca81836135e9565b9193909594958051156106b05780518101926020976080838a87019603126106ab5761409989840161374f565b986040916140a8838601613973565b6060860151608087015190969193916001600160401b0382116106ab57019188603f840112156106ab5781830151906140e08261360c565b996140ed87519b8c6135e9565b828b528683860101116106ab5761410d839260049588858e019101613c9f565b3481116141a5579a5b855163226f120560e11b815293849182906001600160a01b03165afa938415613f2e5750600093614172575b5050613f2c989960009060001461416a5750915b8715614163573396613d33565b3096613d33565b905091614156565b81819c949c3d831161419e575b61418981836135e9565b810103126122ec5751919950613f2c38614142565b503d61417f565b50479a614116565b6001600160a01b0391821681529116602082015260400190565b60405163e985e9c560e01b81526001600160a01b039283169290602081806141f38630600484016141ad565b0381875afa9081156106955760009161424d575b501561421257505050565b823b156106ab57604460009283604051958694859363a22cb46560e01b8552166004840152600160248401525af1801561069557613f235750565b906020823d821161427e575b81614266602093836135e9565b8101031261014557506142789061374f565b38614207565b3d9150614259565b60405163e985e9c560e01b81526001600160a01b039283169290602081806142b28630600484016141ad565b0381875afa9081156106955760009161430a575b506142d057505050565b823b156106ab57604460009283604051958694859363a22cb46560e01b85521660048401528160248401525af1801561069557613f235750565b906020823d821161433b575b81614323602093836135e9565b8101031261014557506143359061374f565b386142c6565b3d9150614316565b6040516370a0823160e01b8082523060048301526020959492936001600160a01b0316928683602481875afa948515610695578793600096614432575b509061438e91309086613abf565b60246040518094819382523060048301525afa90811561069557600091614405575b50818111156143c457613679929350613d10565b60405162461bcd60e51b8152600481018590526019602482015278135859db995d185c8e881d1c985b9cd9995c8819985a5b1959603a1b6044820152606490fd5b908482813d831161442b575b61441b81836135e9565b81010312610145575051386143b0565b503d614411565b91929382819792973d8311614463575b61444c81836135e9565b81010312610145575051938692919061438e614380565b503d61444256fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220fc837dc4934401476e525543990350a97ed8262dfd479785dec65a364b8518dc64736f6c63430008120033";

type MagnetarMarketModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarMarketModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarMarketModule__factory extends ContractFactory {
  constructor(...args: MagnetarMarketModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarMarketModule";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarMarketModule> {
    return super.deploy(overrides || {}) as Promise<MagnetarMarketModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MagnetarMarketModule {
    return super.attach(address) as MagnetarMarketModule;
  }
  override connect(signer: Signer): MagnetarMarketModule__factory {
    return super.connect(signer) as MagnetarMarketModule__factory;
  }
  static readonly contractName: "MagnetarMarketModule";

  public readonly contractName: "MagnetarMarketModule";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarMarketModuleInterface {
    return new utils.Interface(_abi) as MagnetarMarketModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarMarketModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MagnetarMarketModule;
  }
}
