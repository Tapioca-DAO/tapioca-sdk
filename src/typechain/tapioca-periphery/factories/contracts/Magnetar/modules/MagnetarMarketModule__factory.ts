/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MagnetarMarketModule,
  MagnetarMarketModuleInterface,
} from "../../../../contracts/Magnetar/modules/MagnetarMarketModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657613a9d908161001c8239f35b600080fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c9081630aaa02a014611dfe5750806316e55a1d1461187557806323ca9c7d14611285578063de576147146111f4578063e5546fac146100bd5763e985e9c50361000f57346100ba5760403660031901126100ba57610081612cce565b604061008b612ce4565b9260018060a01b03809316815280602052209116600052602052602060ff604060002054166040519015158152f35b80fd5b506102a03660031901126100ba576100d3612cce565b60a03660431901126111f05760603660e31901126111f05760a0366101431901126111f0576060366101e31901126111f0576060366102431901126111f0576040519061011f82612d09565b6044358015158103610511578252606435602083015260603660831901126105115760405161014d81612d09565b608435801515810361051157815260a435602082015260c435801515810361051157604082015260408301526040519061018682612d09565b60e435801515810361051157825261010435602083015261012435801515810361051157604083015260243591610284356001600160a01b03811690036105115761026435926001600160a01b03841684036105115760405163de40657760e01b8152946020866004816001600160a01b0389165afa9586156108e65787966111bf575b506001600160a01b0385166111a4575b610284356001600160a01b0316611186575b8051610cdf575b5060405163226f120560e11b8152906020826004816001600160a01b0389165afa9182156108e6578792610cab575b50604051630cf35bdd60e41b8152600481018390526080816024816001600160a01b038b165afa908115610bcb578891610c79575b508351610ab7575b508692811580610aad575b610aa1575b50806109b1575b5050849061014435801515810361051157610628575b506102d5612eca565b61033a575b50506001600160a01b03811661031e575b50610284356001600160a01b0316610301575080f35b61031b906001600160a01b03908116906102843516613880565b80f35b610334906001600160a01b038381169116613880565b386102eb565b61022435806105c9575b506001600160a01b0361035561302c565b16156105845780156105455784916001600160a01b0361037361302c565b169161037d613043565b92803b15610541578185916103a9958360405180988195829463095ea7b360e01b845260048401612e39565b03925af19283156104d7578493610529575b5060209060246001600160a01b036103d1613043565b1691604051958693849263422e498360e11b845260048401525af191821561051e5783926104e2575b50600460206001600160a01b0361040f613043565b1660405192838092635ad7038760e01b82525afa9081156104d757849161049d575b506001600160a01b031691823b156104995761046792849283604051809681958294635c46a7ef60e11b8452306004850161306e565b03925af1801561048e57156102da5761047f90612d3a565b61048a5782386102da565b8280fd5b6040513d84823e3d90fd5b8380fd5b90506020813d6020116104cf575b816104b860209383612d4d565b81010312610499576104c990612ddf565b38610431565b3d91506104ab565b6040513d86823e3d90fd5b925090506020823d602011610516575b816104ff60209383612d4d565b810103126105115784915190386103fa565b600080fd5b3d91506104f2565b6040513d85823e3d90fd5b61053590939193612d3a565b61048a578291386103bb565b8480fd5b60405162461bcd60e51b815260206004820152601760248201527604d61676e657461723a20744f4c50546f6b656e4964203604c1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f4d61676e657461723a206c6f636b20746172676574206d69736d6174636800006044820152606490fd5b90806105d7575b5038610344565b81036105e357386105d0565b60405162461bcd60e51b815260206004820152601e60248201527f4d61676e657461723a20744f4c50546f6b656e4964206d69736d6174636800006044820152606490fd5b602491506101c435806109a9575b5060606001600160a01b0361064961302c565b604051633873b0cd60e01b81526001600160a01b038816600482015294859290918391165afa91821561099e578692610966575b50801561092a576106998130856001600160a01b0388166130aa565b60405163095ea7b360e01b81526001600160a01b03868116600483015260248201889052602090829060449082908b908a165af180156108e6576108f1575b5060405163095ea7b360e01b815260208180610701856001600160a01b038b1660048401612e39565b03818a6001600160a01b038a165af180156108e6576108a0575b5060408051634d4d7cbd60e11b815292909183918291610742913090819060048601612e6a565b0381886001600160a01b0389165af1801561086157610872575b506107776001600160a01b03841661077261302c565b6137c1565b61077f612eca565b1561086c57305b6001600160a01b0361079661302c565b16906101843560018060801b0392838216809203610511576101a435938416809403610511576040516362e8f3db60e11b81526001600160a01b039384166004820152928616602484015260448301919091526064820192909252906020908290608490829089905af190811561086157859161082f575b506108296001600160a01b03851661082461302c565b613880565b386102cc565b90506020813d602011610859575b8161084a60209383612d4d565b8101031261051157513861080e565b3d915061083d565b6040513d87823e3d90fd5b80610786565b6108939060403d604011610899575b61088b8183612d4d565b810190612e54565b5061075c565b503d610881565b906020823d6020116108de575b816108ba60209383612d4d565b810103126108da57610742926108d1604093612e2c565b5092509061071b565b8680fd5b3d91506108ad565b6040513d89823e3d90fd5b6020813d602011610922575b8161090a60209383612d4d565b810103126108da5761091b90612e2c565b50386106d8565b3d91506108fd565b60405162461bcd60e51b815260206004820152601460248201527304d61676e657461723a206672616374696f6e20360641b6044820152606490fd5b9091506060813d606011610996575b8161098260609383612d4d565b810103126109925751903861067d565b8580fd5b3d9150610975565b6040513d88823e3d90fd5b905038610636565b604051638eb22cdd60e01b8152600481019290925260248201526044810186905290506020816064816001600160a01b0388165afa908115610861578591610a6e575b506020610a179160405180938192630cb0f5b760e31b8352868060048501612fed565b0381886001600160a01b0388165af1908115610861578591610a3c575b5038806102b6565b90506020813d602011610a66575b81610a5760209383612d4d565b81010312610511575138610a34565b3d9150610a4a565b90506020813d602011610a99575b81610a8960209383612d4d565b81010312610511575160206109f4565b3d9150610a7c565b602091500151386102af565b50805115156102aa565b604084015115610c6b575b604084015115610c6257610add335b8260208701519161393d565b602085015260405163095ea7b360e01b815260018060a01b03881660048201528860248201526020816044818c60018060a01b0387165af18015610c5757610c13575b5060208481015160405163095ea7b360e01b815292839182908c908290610b54906001600160a01b038f1660048401612e39565b03926001600160a01b03165af18015610bcb57610bd6575b50610b9360406020850151815180938192634d4d7cbd60e11b835289308960048601612e6a565b03818b6001600160a01b038c165af18015610bcb571561029f57610bc59060403d6040116108995761088b8183612d4d565b5061029f565b6040513d8a823e3d90fd5b6020813d602011610c0b575b81610bef60209383612d4d565b81010312610c0757610c0090612e2c565b5038610b6c565b8780fd5b3d9150610be2565b6020813d602011610c4f575b81610c2c60209383612d4d565b81010312610c4b57610b5491610c43602092612e2c565b509150610b20565b8880fd5b3d9150610c1f565b6040513d8b823e3d90fd5b610add85610ad1565b610c7485612f8b565b610ac2565b610c9a915060803d8111610ca4575b610c928183612d4d565b810190612df3565b5050905038610297565b503d610c88565b9091506020813d602011610cd7575b81610cc760209383612d4d565b8101031261051157519038610262565b3d9150610cba565b6040516377607a1760e11b81528790602081600481610284356001600160a01b03165afa90811561048e578291611151575b50604051630cf35bdd60e41b8152600481018290526080816024816001600160a01b038d165afa90811561051e57839161112f575b5060206040850151015160405190638eb22cdd60e01b825283600483015260248201528360448201526020816064818d60018060a01b03165afa9081156104d75784916110fa575b509160408501518051610ead575b505050602060408401510151610e10575b505060200151604080516314890dcb60e21b81529182908190610dd590888060048501612ee7565b03818a610284356001600160a01b03165af180156108e6571561023357610e0a9060403d6040116108995761088b8183612d4d565b50610233565b610e296001600160a01b038981169061028435166137c1565b6040830151805115610ea457602030915b015191610284356001600160a01b03163b15610499576040516374d2492960e11b815292849284928392610e73928c9060048601612e99565b038183610284356001600160a01b03165af1801561048e5715610dad57610e9990612d3a565b6108da578638610dad565b60208791610e3a565b6040919293500151156110ec575b610edf6040850151604081015115156000146110e25783602033925b01519161393d565b60206040860151015260206040850151015160405190638eb22cdd60e01b825282600483015260248201528360448201526020816064818d60018060a01b03165afa9081156104d75784916110ad575b5060405163095ea7b360e01b81526001600160a01b038b811660048301526024820186905291939160209082906044908290899087165af180156108615761106d575b506020610fa8918160408801510151908c8760405180968195829463095ea7b360e01b845260018060a01b031660048401612e39565b03926001600160a01b03165af180156104d75761102d575b50604084810151602001518151634d4d7cbd60e11b81529283918291610fee91903090819060048601612e6a565b0381866001600160a01b038e165af1801561051e5761100f575b8080610d9c565b6110279060403d6040116108995761088b8183612d4d565b50611008565b6020813d602011611065575b8161104660209383612d4d565b8101031261049957610fee9161105d604092612e2c565b509150610fc0565b3d9150611039565b6020813d6020116110a5575b8161108660209383612d4d565b8101031261054157610fa89161109d602092612e2c565b509150610f72565b3d9150611079565b9350506020833d6020116110da575b816110c960209383612d4d565b810103126105115789925138610f2f565b3d91506110bc565b8360208a92610ed7565b6110f587612f8b565b610ebb565b9350506020833d602011611127575b8161111660209383612d4d565b810103126105115789925138610d8e565b3d9150611109565b611147915060803d8111610ca457610c928183612d4d565b5050905038610d46565b9150506020813d60201161117e575b8161116d60209383612d4d565b810103126105115787905138610d11565b3d9150611160565b61119f6001600160a01b038781169061028435166137c1565b61022c565b6111ba6001600160a01b038781169087166137c1565b61021a565b6111e291965060203d6020116111e9575b6111da8183612d4d565b810190612dc0565b943861020a565b503d6111d0565b5080fd5b506101203660031901126100ba576001600160a01b03600435818116810361048a5761121e612ce4565b916064359161ffff831683036105415760c4356001600160401b03811161099257366023820112156109925761125e903690602481600401359101612d89565b9060e43592831683036109925761031b94610104359460a43592608435926044359161332c565b50600319610100368201126111f0576004356001600160a01b038116810361048a576112af612ce4565b91608435151560843503610511576112c5612cfa565b906001600160401b0360c435116105415760a09060c435360301126104995760405163de40657760e01b8152908490604435906020846004816001600160a01b0389165afa93841561051e578394611854575b506040516377607a1760e11b81526020816004816001600160a01b038a165afa9081156104d757849161181f575b50604051630cf35bdd60e41b815260048101829052906080826024816001600160a01b038a165afa9182156108615785926117fb575b50604051638eb22cdd60e01b81526004810182905260248101859052604481018690526020816064816001600160a01b038b165afa90811561099e5786916117c2575b5092919082611598575b50508261150b575b5050505060643592836113f7575b5061031b92506001600160a01b039081169116613880565b60c43560040161140681612eda565b156115045730945b604080516314890dcb60e21b81529690878061142f85858960048501612ee7565b03818b6001600160a01b038b165af1968715610bcb5761031b976114e6575b5061145883612eda565b611465575b5050506113df565b6114c66114dd946114b861147d604460c43501612eda565b61149b61148e606460c43501612f09565b97608460c4350190612f18565b60405198899591936001600160a01b039092169160208701612f4a565b03601f198101855284612d4d565b60e435926001600160a01b03861691879190613664565b3880808061145d565b6114fe9060403d6040116108995761088b8183612d4d565b5061144e565b819461140e565b6115216001600160a01b038681169088166137c1565b156115915730905b6001600160a01b0386163b15610499576040516374d2492960e11b81529284928492839261155c928b9060048601612e99565b0381836001600160a01b0389165af1801561048e5761157d575b80806113d1565b61158690612d3a565b610499578338611576565b8590611529565b9250926115b790608435156117b4575b608435156117ad57843361393d565b604051638eb22cdd60e01b81526004810184905260248101829052604481018690529093906020816064816001600160a01b038b165afa90811561099e578691611778575b5060405163095ea7b360e01b8082526001600160a01b0389811660048401526024830189905292959290931692906020816044818b885af18015610bcb5787928a928a9261172b575b50604051908152946020938693919284929091839161167191906001600160a01b031660048401612e39565b03925af191821561099e5785926116e7575b506116a99160409182519384928392634d4d7cbd60e11b84523090309060048601612e6a565b0381886001600160a01b038b165af18015610861576116c9575b806113c9565b6116e19060403d6040116108995761088b8183612d4d565b506116c3565b91506020823d602011611723575b8161170260209383612d4d565b81010312610992578460409161171a6116a994612e2c565b50915091611683565b3d91506116f5565b92509250506020813d602011611770575b8161174960209383612d4d565b81010312610c07576116719389896020946117648b95612e2c565b50919394509195611645565b3d915061173c565b9550506020853d6020116117a5575b8161179460209383612d4d565b8101031261051157889451386115fc565b3d9150611787565b848961393d565b6117bd89612f8b565b6115a8565b92919550506020823d6020116117f3575b816117e060209383612d4d565b81010312610511579051889490836113bf565b3d91506117d3565b61181491925060803d8111610ca457610c928183612d4d565b50509050903861137c565b9350506020833d60201161184c575b8161183b60209383612d4d565b810103126105115786925138611346565b3d915061182e565b61186e91945060203d6020116111e9576111da8183612d4d565b9238611318565b50600319610100368201126111f05761188c612cce565b90611895612ce4565b9161189e612cfa565b60c435926001600160401b0384116109925760a09084360301126105415760405163de40657760e01b81526001600160a01b038381169490939091602091906044359083816004818b5afa908115611cf3578a91611de1575b5060405163226f120560e11b81529084826004818c5afa918215611afa578b92611db2575b50604051630cf35bdd60e41b815260048101839052908816966080826024818b5afa918215611da7578c92611d83575b5083611c1c575b5050506064359081611b8e575b5050506084359384611970578780f35b826004019061197e82612eda565b15611b875730915b6040516377607a1760e11b80825298908b908681600481865afa90811561048e578291611b56575b5060405190638eb22cdd60e01b8252600482015289602482015281604482015286816064818c5afa90811561048e578291611b25575b50823b156111f05781868d611a0d604051948593849363cce19f8160e01b855260048501612ee7565b038183875af1801561048e57611b0d575b5050611a2982612eda565b611a35575b5050508780f35b8460e435348111611b0557995b60046040518094819382525afa948515611afa578b95611ab6575b505091611aa098959391611a8686946084611a7e6064611a989c9a01612f09565b960190612f18565b98908a15611aaf5733995b3691612d89565b96169361332c565b38808080808080808080611a2e565b3099611a91565b908098969492939a979550813d8311611af3575b611ad48183612d4d565b8101031261051157955194979395929491939192919081611a86611a5d565b503d611aca565b6040513d8d823e3d90fd5b504799611a42565b611b1690612d3a565b611b21578a38611a1e565b8a80fd5b809250878092503d8311611b4f575b611b3e8183612d4d565b81010312610511578b9051386119e4565b503d611b34565b809250878092503d8311611b80575b611b6f8183612d4d565b81010312610511578b9051386119ae565b503d611b65565b8791611986565b611b9886846137c1565b15611c14578288305b611bbf604051948593849363cd0211eb60e01b855260048501612fed565b03818c8b5af18015610c575785918491611be7575b5050611bdf91613880565b388080611960565b908092503d8311611c0d575b611bfd8183612d4d565b8101031261051157838238611bd4565b503d611bf3565b828880611ba1565b92611c31919293600014611d7c57823361393d565b918a604051928963095ea7b360e01b918286528a600487015283602487015216878560448186855af1801561051e57889387938c92611d3d575b611c85975060405197889586948593845260048401612e39565b03925af1918215611afa578392611cfe575b50611cbd9160409182519384928392634d4d7cbd60e11b84523090309060048601612e6a565b03818d8a5af18015611cf357611cd5575b8080611953565b611ced9060403d6040116108995761088b8183612d4d565b50611cce565b6040513d8c823e3d90fd5b91508482813d8311611d36575b611d158183612d4d565b81010312611b215782604091611d2d611cbd94612e2c565b50915091611c97565b503d611d0b565b935093905085813d8311611d75575b611d568183612d4d565b8101031261048a578988938793611d6f611c8598612e2c565b50611c6b565b503d611d4c565b828b61393d565b611d9c91925060803d8111610ca457610c928183612d4d565b50509050903861194c565b6040513d8e823e3d90fd5b9091508481813d8311611dda575b611dca8183612d4d565b810103126105115751903861191c565b503d611dc0565b611df89150843d86116111e9576111da8183612d4d565b386118f7565b826003199160c0833601126111f057611e15612cce565b92606036602319011261048a576001600160401b036084351161048a576101c090608435360301126111f057606435906001600160a01b038216820361048a576001600160a01b03611e65613016565b63de40657760e01b83521693602082600481885afa9182156104d7578492612cad575b5083611e9860c460843501612eda565b612881575b611eac61012460843501612eda565b612783575b50611ec0608435600401612eda565b61255e575b611ee2611edd610184608435016084356004016132f4565b612eda565b158061254a575b6122e9575b611efb6084803501612eda565b611f17575b5061031b916001600160a01b039182169116613880565b6040516377607a1760e11b81526020816004816001600160a01b0388165afa9081156108615785916122b7575b50604051638eb22cdd60e01b8152600481019190915260843560a401356024820152604481018590526020816064816001600160a01b0387165afa908115610861578591612285575b50611fa6611edd6101a4608435016084356004016132f4565b1561227f57305b6001600160a01b0385163b156109925760405163cce19f8160e01b815291869183918291611fe091908760048501612ee7565b0381836001600160a01b0389165af180156108615790859161226b575b5050612017611edd6101a4608435016084356004016132f4565b15611f00576120b161203f60406120396101a4608435016084356004016132f4565b01612eda565b916120a3612063606061205d6101a4608435016084356004016132f4565b01612f09565b9361208661207c6101a4608435016084356004016132f4565b6080810190612f18565b60405196879591936001600160a01b039092169160208701612f4a565b03601f198101835282612d4d565b80511561221c578051810160808260208301920312610511576120d660208301612e2c565b604083015161ffff81168103610511576060840151936080810151906001600160401b03821161051157019183603f840112156105115760208301519261211c84612d6e565b9461212a6040519687612d4d565b848652604085830101116105115760049361214c916040602088019101613298565b60a43534811161221257602090995b6040516377607a1760e11b815294859182905afa928315612206576000936121d0575b509161031b979893916121ba95936000906000146121c85750925b84156121c15733935b60843560a4013592306001600160a01b038a1661332c565b8392611f00565b30936121a2565b905092612199565b90926020823d6020116121fe575b816121eb60209383612d4d565b810103126100ba5750519161031b61217e565b3d91506121de565b6040513d6000823e3d90fd5b506020479961215b565b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a2077697468647261774461746120697320656d70746044820152607960f81b6064820152608490fd5b61227490612d3a565b610499578386611ffd565b81611fad565b90506020813d6020116122af575b816122a060209383612d4d565b81010312610511575186611f8d565b3d9150612293565b90506020813d6020116122e1575b816122d260209383612d4d565b81010312610511575186611f44565b3d91506122c5565b6122ff6001600160a01b038381169085166137c1565b60405163cd0211eb60e01b81526020818061232560843560640135863060048501612fed565b0381886001600160a01b0389165af1908115610861578591612518575b50602460843501358110612357575b50611eee565b60405163226f120560e11b8152906020826004816001600160a01b0389165afa91821561099e5786926124e4575b5060405163226f120560e11b8152906020826004816001600160a01b038a165afa9182156108e65787926124ae575b506123c59060246084350135613309565b604051638eb22cdd60e01b815260048101929092526024820152604481018690526020816064816001600160a01b0388165afa90811561099e57869161247c575b506001600160a01b0384163b156109925760405191630208d92960e11b835230600484015260018060a01b03841660248401526044830152606482015284816084818360018060a01b0388165af1801561086157908591612468575b50612351565b61247190612d3a565b610499578386612462565b90506020813d6020116124a6575b8161249760209383612d4d565b81010312610511575187612406565b3d915061248a565b9091506020813d6020116124dc575b816124ca60209383612d4d565b810103126105115751906123c56123b4565b3d91506124bd565b9091506020813d602011612510575b8161250060209383612d4d565b8101031261051157519087612385565b3d91506124f3565b90506020813d602011612542575b8161253360209383612d4d565b81010312610511575186612342565b3d9150612526565b50612559604460843501612eda565b611ee9565b60405163226f120560e11b8152602081600481895afa908115610861578591612751575b50604051638eb22cdd60e01b81526004810191909152602460843581013590820152604481018590526020816064816001600160a01b0387165afa90811561086157859161271e575b506020612614916125ea611edd610184608435016084356004016132f4565b801561270a575b1561270457305b60405163f4d9375360e01b815293849283928760048501612ee7565b0381888a5af18015610861576126d9575b5061263e611edd610184608435016084356004016132f4565b15611ec5576126d46126606040612039610184608435016084356004016132f4565b6126b561267d606061205d610184608435016084356004016132f4565b6120a361269861207c610184608435016084356004016132f4565b6040519586949192916001600160a01b038a169160208701612f4a565b60a4359060843560240135906001600160a01b03861690899030613664565b611ec5565b602090813d83116126fd575b6126ef8183612d4d565b810103126105115785612625565b503d6126e5565b836125f8565b50612719604460843501612eda565b6125f1565b90506020813d602011612749575b8161273960209383612d4d565b81010312610511575160206125cb565b3d915061272c565b90506020813d60201161277b575b8161276c60209383612d4d565b81010312610511575186612582565b3d915061275f565b610164608435013580612824575b5060206001600160a01b036127ab6084356101440161305a565b169160646127b7613016565b6040516330dce68f60e11b815260048101939093526001600160a01b039081166024840152851660448301529092839190829089905af180156108615715611eb157602090813d831161281d575b61280f8183612d4d565b810103126105115785611eb1565b503d612805565b818192612834575b505086612791565b0361284057808761282c565b60405162461bcd60e51b815260206004820152601960248201527809ac2cedccae8c2e47440e89e98a092c840dad2e6dac2e8c6d603b1b6044820152606490fd5b50610104608435013515612c6e57600460206001600160a01b036128a960843560e40161305a565b1660405192838092635ad7038760e01b82525afa908115610861578591612c34575b5060405163682ee63560e11b8152608435610104013560048201526080816024816001600160a01b0386165afa801561099e578690612bb7575b60409081015190516331a9108f60e11b815260843561010401356004820152909291506020816024816001600160a01b0386165afa9081156108e6578791612b7d575b506001600160a01b0384811691169081149081908115612b73575b5015612b2257612abe575b506001600160a01b0361298560843560e40161305a565b16803b15610992578580916024604051809481936378dc905960e01b8352610104608435013560048401525af1801561099e57908691612aaa575b50506129d161012460843501612eda565b611e9d57600460206001600160a01b036129ef60843560e40161305a565b16604051928380926272410960e91b82525afa90811561099e578691612a70575b506001600160a01b0316803b1561099257856040518092635c46a7ef60e11b8252818381612a43888a306004850161306e565b03925af1801561099e57908691612a5c575b5050611e9d565b612a6590612d3a565b610541578487612a55565b90506020813d602011612aa2575b81612a8b60209383612d4d565b8101031261099257612a9c90612ddf565b87612a10565b3d9150612a7e565b612ab390612d3a565b6105415784876129c0565b6001600160a01b0381163b1561099257856040518092635c46a7ef60e11b8252818381612af76101046084350135308b6004850161306e565b03926001600160a01b03165af1801561099e571561296e57612b1b90959195612d3a565b938661296e565b60405162461bcd60e51b8152602060048201526024808201527f4d61676e657461723a206f544150546f6b656e4944206f776e6572206d69736d6044820152630c2e8c6d60e31b6064820152608490fd5b9050301489612963565b90506020813d602011612baf575b81612b9860209383612d4d565b810103126108da57612ba990612ddf565b88612948565b3d9150612b8b565b5060803d8111612c2d575b612bcc8183612d4d565b60808282810103126108da57606090612be483612ddf565b508201829003601f190112610992576040906060825191612c0483612d09565b612c10602082016132e0565b8352612c1d8482016132e0565b6020840152015182820152612905565b503d612bc2565b90506020813d602011612c66575b81612c4f60209383612d4d565b8101031261054157612c6090612ddf565b866128cb565b3d9150612c42565b60405162461bcd60e51b815260206004820152601760248201527604d61676e657461723a206f544150546f6b656e4944203604c1b6044820152606490fd5b612cc791925060203d6020116111e9576111da8183612d4d565b9085611e88565b600435906001600160a01b038216820361051157565b602435906001600160a01b038216820361051157565b60a43590811515820361051157565b606081019081106001600160401b03821117612d2457604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111612d2457604052565b90601f801991011681019081106001600160401b03821117612d2457604052565b6001600160401b038111612d2457601f01601f191660200190565b929192612d9582612d6e565b91612da36040519384612d4d565b829481845281830111610511578281602093846000960137010152565b9081602091031261051157516001600160a01b03811681036105115790565b51906001600160a01b038216820361051157565b919082608091031261051157815160058110156105115791612e1760208201612ddf565b916060612e2660408401612ddf565b92015190565b5190811515820361051157565b6001600160a01b039091168152602081019190915260400190565b9190826040910312610511576020825192015190565b9081526001600160a01b0391821660208201529116604082015260608101919091526000608082015260a00190565b6001600160a01b03918216815291166020820152600060408201526060810191909152608081019190915260a00190565b6101e43580151581036105115790565b3580151581036105115790565b6001600160a01b03918216815291166020820152604081019190915260600190565b3561ffff811681036105115790565b903590601e198136030182121561051157018035906001600160401b0382116105115760200191813603831361051157565b93909261ffff86949360a0979415158752166020860152604085015260806060850152816080850152848401376000828201840152601f01601f1916010190565b336001600160a01b0390911603612f9e57565b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a206f70657261746f72206e6f7420617070726f76656044820152601960fa1b6064820152608490fd5b6001600160a01b0391821681529116602082015260006040820152606081019190915260800190565b6044356001600160a01b03811681036105115790565b610164356001600160a01b03811681036105115790565b610204356001600160a01b03811681036105115790565b356001600160a01b03811681036105115790565b6001600160a01b03918216815291166020820152604081019190915260806060820181905260029082015261060f60f31b60a082015260c00190565b6130d6909392936130e46040948551938491602098898401976323b872dd60e01b895260248501612ee7565b03601f198101845283612d4d565b83518085019290916001600160a01b0316906001600160401b03841183851017612d245761316d9386528683527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487840152600080958192519082855af13d156131f7573d9161315383612d6e565b9261316088519485612d4d565b83523d868985013e6131fb565b9081518061317d575b5050505050565b828591810103126100ba5750826131949101612e2c565b156131a157808080613176565b60849250519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6060915b9192901561325d575081511561320f575090565b3b156132185790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156132705750805190602001fd5b60405162461bcd60e51b8152602060048201529081906132949060248301906132bb565b0390fd5b60005b8381106132ab5750506000910152565b818101518382015260200161329b565b906020916132d481518092818552858086019101613298565b601f01601f1916010190565b51906001600160801b038216820361051157565b903590609e1981360301821215610511570190565b9190820391821161331657565b634e487b7160e01b600052601160045260246000fd5b9261ffff90989794929598969196169384156135fe5760408051630cf35bdd60e41b8152600480820189905291996001600160a01b0396871697929490916080816024818c5afa9081156135f3579088916000916135d1575b508c516301ffc9a760e01b815263843c6ae360e01b8882015291169460209182816024818a5afa908161359d575b5061341c57505050505050906133e5879860009389989951998a98899788966311a5cc7760e31b885216928601612e6a565b03925af18015613411576133f7575050565b8161340d92903d106108995761088b8183612d4d565b5050565b82513d6000823e3d90fd5b9296998d9295998d9295999c6000899361344b8651978896879586946311a5cc7760e31b865230928601612e6a565b03925af1801561356e57613581575b50341561357957915b8951633b58a71760e21b8152828186818b5afa90811561356e57600091613539575b501561353057905b888a519361349a85612d09565b16835282019760008952898301918252863b156105115760009881613508948c519d8e9b8c9a8b9963695ef6bf60e01b8b5230908b015260248a01526044890152606488015260a06084880152511660a4860152511660c484015251606060e48401526101048301906132bb565b03925af1908115613526575061351b5750565b61352490612d3a565b565b513d6000823e3d90fd5b5060609061348d565b908382813d8311613567575b61354f8183612d4d565b810103126100ba575061356190612e2c565b38613485565b503d613545565b8b513d6000823e3d90fd5b503091613463565b613597908b3d8d116108995761088b8183612d4d565b5061345a565b8381813d83116135ca575b6135b28183612d4d565b81010312610511576135c390612e2c565b50386133b3565b503d6135a8565b6135e9915060803d8111610ca457610c928183612d4d565b5050905038613385565b8c513d6000823e3d90fd5b5050604080516311a5cc7760e31b815297909650879592948694506000936001600160a01b0393869361363b939092918616919060048601612e6a565b0393165af180156122065761364d5750565b61340d9060403d81116108995761088b8183612d4d565b91939095949580511561221c5780518101926020976080838a870196031261051157613691898401612e2c565b98604091828501519161ffff83168303610511576060860151956080810151906001600160401b03821161051157019188603f840112156105115781830151906136da82612d6e565b996136e787519b8c612d4d565b828b5286838601011161051157613707839260049588858e019101613298565b34811161379f579a5b855163226f120560e11b815293849182906001600160a01b03165afa938415613526575060009361376c575b505061352498996000906000146137645750915b871561375d57339661332c565b309661332c565b905091613750565b81819c949c3d8311613798575b6137838183612d4d565b81010312611b2157519199506135243861373c565b503d613779565b50479a613710565b6001600160a01b0391821681529116602082015260400190565b60405163e985e9c560e01b81526001600160a01b039283169290602081806137ed8630600484016137a7565b0381875afa90811561220657600091613847575b501561380c57505050565b823b1561051157604460009283604051958694859363a22cb46560e01b8552166004840152600160248401525af180156122065761351b5750565b906020823d8211613878575b8161386060209383612d4d565b810103126100ba575061387290612e2c565b38613801565b3d9150613853565b60405163e985e9c560e01b81526001600160a01b039283169290602081806138ac8630600484016137a7565b0381875afa90811561220657600091613904575b506138ca57505050565b823b1561051157604460009283604051958694859363a22cb46560e01b85521660048401528160248401525af180156122065761351b5750565b906020823d8211613935575b8161391d60209383612d4d565b810103126100ba575061392f90612e2c565b386138c0565b3d9150613910565b6040516370a0823160e01b8082523060048301526020959492936001600160a01b0316928683602481875afa948515612206578793600096613a2f575b5090613988913090866130aa565b60246040518094819382523060048301525afa90811561220657600091613a02575b50818111156139c1576139be929350613309565b90565b60405162461bcd60e51b8152600481018590526019602482015278135859db995d185c8e881d1c985b9cd9995c8819985a5b1959603a1b6044820152606490fd5b908482813d8311613a28575b613a188183612d4d565b810103126100ba575051386139aa565b503d613a0e565b91929382819792973d8311613a60575b613a498183612d4d565b810103126100ba575051938692919061398861397a565b503d613a3f56fea26469706673582212203169170db610ea239e8bfbb7a817249f26f8e5479058a4dcc04ef65eca9af14064736f6c63430008120033";

type MagnetarMarketModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarMarketModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarMarketModule__factory extends ContractFactory {
  constructor(...args: MagnetarMarketModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarMarketModule";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarMarketModule> {
    return super.deploy(overrides || {}) as Promise<MagnetarMarketModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MagnetarMarketModule {
    return super.attach(address) as MagnetarMarketModule;
  }
  override connect(signer: Signer): MagnetarMarketModule__factory {
    return super.connect(signer) as MagnetarMarketModule__factory;
  }
  static readonly contractName: "MagnetarMarketModule";

  public readonly contractName: "MagnetarMarketModule";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarMarketModuleInterface {
    return new utils.Interface(_abi) as MagnetarMarketModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarMarketModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MagnetarMarketModule;
  }
}
