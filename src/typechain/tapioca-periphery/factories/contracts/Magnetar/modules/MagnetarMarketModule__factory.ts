/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MagnetarMarketModule,
  MagnetarMarketModuleInterface,
} from "../../../../contracts/Magnetar/modules/MagnetarMarketModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldCluster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCluster",
        type: "address",
      },
    ],
    name: "ClusterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
    ],
    name: "depositAddCollateralAndBorrowFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "extractFromSender",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "withdraw",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawLzFeeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "withdrawOnOtherChain",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "withdrawLzChainId",
            type: "uint16",
          },
          {
            internalType: "bytes",
            name: "withdrawAdapterParams",
            type: "bytes",
          },
        ],
        internalType: "struct ICommonData.IWithdrawParams",
        name: "withdrawCollateralParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
    ],
    name: "depositRepayAndRemoveCollateralFromMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "removeAssetFromSGL",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "repayAssetOnBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removeCollateralFromBB",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "exit",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "oTAPTokenID",
                type: "uint256",
              },
            ],
            internalType: "struct ITapiocaOptionsBroker.IOptionsExitData",
            name: "exitData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "unlock",
                type: "bool",
              },
              {
                internalType: "address",
                name: "target",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType:
              "struct ITapiocaOptionLiquidityProvision.IOptionsUnlockData",
            name: "unlockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "assetWithdrawData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdraw",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "withdrawLzFeeAmount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "withdrawOnOtherChain",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "withdrawLzChainId",
                type: "uint16",
              },
              {
                internalType: "bytes",
                name: "withdrawAdapterParams",
                type: "bytes",
              },
            ],
            internalType: "struct ICommonData.IWithdrawParams",
            name: "collateralWithdrawData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IRemoveAndRepay",
        name: "removeAndRepayData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "valueAmount",
        type: "uint256",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "exitPositionAndRemoveCollateral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mint",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mintAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "deposit",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "extractFromSender",
                type: "bool",
              },
            ],
            internalType: "struct ICommonData.IDepositData",
            name: "collateralDepositData",
            type: "tuple",
          },
        ],
        internalType: "struct IUSDOBase.IMintData",
        name: "mintData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deposit",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "extractFromSender",
            type: "bool",
          },
        ],
        internalType: "struct ICommonData.IDepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "lock",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "lockDuration",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "fraction",
            type: "uint256",
          },
        ],
        internalType:
          "struct ITapiocaOptionLiquidityProvision.IOptionsLockData",
        name: "lockData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "participate",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tOLPTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ITapiocaOptionsBroker.IOptionsParticipateData",
        name: "participateData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "magnetar",
            type: "address",
          },
          {
            internalType: "address",
            name: "singularity",
            type: "address",
          },
          {
            internalType: "address",
            name: "bigBang",
            type: "address",
          },
        ],
        internalType: "struct ICommonData.ICommonExternalContracts",
        name: "externalContracts",
        type: "tuple",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "mintFromBBAndLendOnSGL",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "refundAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "withdrawToChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361449b90816100618239f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c8063150b7a02146134fe57806316e55a1d14612f9757806323ca9c7d146129bd57806325e0e3311461158a5780634f1dbd421461026f578063715018a6146102275780638da5cb5b14610200578063dbd01de1146101d7578063de576147146101485763f2fde38b14610095575061000e565b34610145576020366003190112610145576100ae613554565b6100b6613666565b6001600160a01b039081169081156100f1576000548260018060a01b031982161760005516600080516020614446833981519152600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b50610120366003190112610145576001600160a01b0360043581811681036101d35761017261356a565b916064359161ffff831683036101cf5760c4356001600160401b0381116101cb576101a1903690600401613639565b9060e43592831683036101cb576101c894610104359460a435926084359260443591613d0e565b80f35b8580fd5b8480fd5b8280fd5b50346101455780600319360112610145576001546040516001600160a01b039091168152602090f35b5034610145578060031936011261014557546040516001600160a01b039091168152602090f35b5034610145578060031936011261014557610240613666565b600080546001600160a01b0319811682556001600160a01b03166000805160206144468339815191528280a380f35b506003199060e03683011261014557610286613554565b916060366023190112611586576001600160401b0360843511611586576101c090608435360301126101455760c4356001600160a01b038116810361075d576040516348be20ab60e11b81526020816004816001600160a01b0386165afa9081156114c0578391611546575b50602061031d9161030161390e565b604051633a304d8b60e21b81529384928392906004840161395d565b03816001600160a01b0386165afa80156114c057839061150b575b610342915061397b565b6040516348be20ab60e11b81526020816004816001600160a01b0386165afa9081156114c05783916114cb575b50602061037e91610301613924565b03816001600160a01b0386165afa80156114c0578390611485575b6103a391506139c7565b6001600160a01b036103b361390e565b16906001600160a01b036103c5613924565b16936040519163de40657760e01b8352602083600481895afa9283156107c9578593611454575b5084906103fd60c4608435016137d8565b610ee5575b610411610124608435016137d8565b610cde575b50506104266084356004016137d8565b610aab575b61044861044361018460843501608435600401613cd6565b6137d8565b1580610a97575b61083e575b61046160848035016137d8565b61047c575b506101c8916001600160a01b0390911690614261565b6040516377607a1760e11b8152602081600481875afa9081156107c957859161080c575b50604051638eb22cdd60e01b8152600481019190915260843560a401356024820152604481018590526020816064816001600160a01b0387165afa9081156107c95785916107da575b506105026104436101a460843501608435600401613cd6565b156107d457305b843b156101cb5760405163cce19f8160e01b815291869183918291610533919087600485016137e5565b038183885af180156107c9579085916107b1575b50506105616104436101a460843501608435600401613cd6565b156104665761058660406105806101a460843501608435600401613cd6565b016137d8565b906105f86105aa60606105a46101a460843501608435600401613cd6565b01613807565b6105ea6105cf6105c56101a460843501608435600401613cd6565b6080810190613816565b90604051968794602086019760018060a01b03169188613848565b03601f1981018452836135c4565b8151156107625781518201906080836020840193031261075d5761061b9061372a565b6106276040840161394e565b6060840151608085015190946001600160401b03821161075d57019183603f8401121561075d5760208301519261065d846135e7565b9461066b60405196876135c4565b8486526040858301011161075d5760049361068d916040602088019101613c7a565b60a43534811161075357602090995b6040516377607a1760e11b815294859182905afa92831561074757600093610711575b50916101c8979893916106fb95936000906000146107095750925b84156107025733935b60843560a4013592306001600160a01b038a16613d0e565b8392610466565b30936106e3565b9050926106da565b90926020823d60201161073f575b8161072c602093836135c4565b81010312610145575051916101c86106bf565b3d915061071f565b6040513d6000823e3d90fd5b506020479961069c565b600080fd5b60405162461bcd60e51b815260206004820152602160248201527f4d61676e6574617256323a2077697468647261774461746120697320656d70746044820152607960f81b6064820152608490fd5b6107ba90613580565b6107c5578338610547565b8380fd5b6040513d87823e3d90fd5b81610509565b90506020813d602011610804575b816107f5602093836135c4565b8101031261075d5751386104e9565b3d91506107e8565b90506020813d602011610836575b81610827602093836135c4565b8101031261075d5751386104a0565b3d915061081a565b6108516001600160a01b038316846141a2565b60405163cd0211eb60e01b81526020818061087760843560640135863060048501613889565b038188885af19081156107c9578591610a65575b506024608435013581106108a0575b50610454565b60405163226f120560e11b815290602082600481885afa9182156109e5578692610a31575b5060405163226f120560e11b815290602082600481895afa918215610a265787926109f0575b506108fc9060246084350135613ceb565b604051638eb22cdd60e01b815260048101929092526024820152604481018690526020816064816001600160a01b0388165afa9081156109e55786916109b3575b506001600160a01b0384163b156101cb5760405191630208d92960e11b835230600484015260018060a01b03841660248401526044830152606482015284816084818360018060a01b0388165af180156107c95790859161099f575b5061089a565b6109a890613580565b6107c5578338610999565b90506020813d6020116109dd575b816109ce602093836135c4565b8101031261075d57513861093d565b3d91506109c1565b6040513d88823e3d90fd5b9091506020813d602011610a1e575b81610a0c602093836135c4565b8101031261075d5751906108fc6108eb565b3d91506109ff565b6040513d89823e3d90fd5b9091506020813d602011610a5d575b81610a4d602093836135c4565b8101031261075d575190386108c5565b3d9150610a40565b90506020813d602011610a8f575b81610a80602093836135c4565b8101031261075d57513861088b565b3d9150610a73565b50610aa66044608435016137d8565b61044f565b60405163226f120560e11b8152602081600481895afa9081156107c9578591610cac575b50604051638eb22cdd60e01b81526004810191909152602460843581013590820152604481018590526020816064816001600160a01b0387165afa9081156107c9578591610c79575b506020610b6191610b3761044361018460843501608435600401613cd6565b8015610c65575b15610c5f57305b60405163f4d9375360e01b8152938492839287600485016137e5565b0381888a5af180156107c957610c34575b50610b8b61044361018460843501608435600401613cd6565b1561042b57610c2f610bad604061058061018460843501608435600401613cd6565b610c10610bca60606105a461018460843501608435600401613cd6565b610c02610be56105c561018460843501608435600401613cd6565b6040519586949192916001600160a01b038a169160208701613848565b03601f1981018352826135c4565b60a4359060843560240135906001600160a01b03861690899030614047565b61042b565b602090813d8311610c58575b610c4a81836135c4565b8101031261075d5738610b72565b503d610c40565b83610b45565b50610c746044608435016137d8565b610b3e565b90506020813d602011610ca4575b81610c94602093836135c4565b8101031261075d57516020610b18565b3d9150610c87565b90506020813d602011610cd6575b81610cc7602093836135c4565b8101031261075d575138610acf565b3d9150610cba565b6040516348be20ab60e11b81526020816004816001600160a01b0386165afa908115610a26578791610ea5575b506020610d41916101446084350193610d238561393a565b604051633a304d8b60e21b815294859384928392916004840161395d565b03916001600160a01b03165afa8015610a26578790610e66575b610d659150613a13565b610164608435013580610e08575b506020906001600160a01b0390610d899061393a565b16916064610d95613924565b6040516330dce68f60e11b815260048101939093526001600160a01b039081166024840152851660448301529092839190829089905af180156107c957610ddd575b80610416565b602090813d8311610e01575b610df381836135c4565b8101031261075d5738610dd7565b503d610de9565b909180610e19575b50906020610d73565b8103610e255738610e10565b60405162461bcd60e51b815260206004820152601960248201527809ac2cedccae8c2e47440e89e98a092c840dad2e6dac2e8c6d603b1b6044820152606490fd5b506020813d602011610e9d575b81610e80602093836135c4565b81010312610e9957610e94610d659161372a565b610d5b565b8680fd5b3d9150610e73565b90506020813d602011610edd575b81610ec0602093836135c4565b81010312610e99576020610ed6610d419261394e565b9150610d0b565b3d9150610eb3565b9050610104608435013515611415576040516348be20ab60e11b81526020816004816001600160a01b0386165afa9081156109e55786916113d5575b506020610f369161030160e46084350161393a565b03816001600160a01b0386165afa9081156109e557869161139b575b50156113575760049060206001600160a01b03610f7360843560e40161393a565b1660405193848092635ad7038760e01b82525afa9182156109e557869261131b575b5060405163682ee63560e11b8152608435610104013560048201526080816024816001600160a01b0387165afa8015610a265787906112a3575b60409081015190516331a9108f60e11b815260843561010401356004820152909391506020816024816001600160a01b0386165afa90811561129857889161125a575b506001600160a01b0385811691169081149081908115611250575b50156111ff57611191575b506001600160a01b0361104f60843560e40161393a565b16803b15610e99578680916024604051809481936378dc905960e01b8352610104608435013560048401525af18015610a265790879161117d575b505061109b610124608435016137d8565b61040257600460206001600160a01b036110b960843560e40161393a565b16604051928380926272410960e91b82525afa908115610a26578791611143575b506001600160a01b0381163b15610e9957866040518092635c46a7ef60e11b825281838161110d898b3060048501613a5e565b03926001600160a01b03165af18015610a265790879161112f575b5050610402565b61113890613580565b6101cb578538611128565b90506020813d602011611175575b8161115e602093836135c4565b81010312610e995761116f906136dd565b386110da565b3d9150611151565b61118690613580565b6101cb57853861108a565b6001600160a01b0381163b15610e9957866040518092635c46a7ef60e11b82528183816111ca6101046084350135308c60048501613a5e565b03926001600160a01b03165af18015610a26579087916111eb575b50611038565b6111f490613580565b6101cb5785386111e5565b60405162461bcd60e51b8152602060048201526024808201527f4d61676e657461723a206f544150546f6b656e4944206f776e6572206d69736d6044820152630c2e8c6d60e31b6064820152608490fd5b905030143861102d565b90506020813d602011611290575b81611275602093836135c4565b8101031261128c57611286906136dd565b38611012565b8780fd5b3d9150611268565b6040513d8a823e3d90fd5b508060803d8111611314575b6112b981836135c4565b8101036080811261128c576060906112d0836136dd565b50601f190112610e995760409060608251916112eb836135a9565b6112f760208201613cc2565b8352611304848201613cc2565b6020840152015182820152610fcf565b503d6112af565b9091506020813d60201161134f575b81611337602093836135c4565b810103126101cb57611348906136dd565b9038610f95565b3d915061132a565b606460405162461bcd60e51b815260206004820152602060248201527f4d61676e6574617256323a206f544150206e6f742077686974656c69737465646044820152fd5b90506020813d6020116113cd575b816113b6602093836135c4565b810103126101cb576113c79061372a565b38610f52565b3d91506113a9565b90506020813d60201161140d575b816113f0602093836135c4565b810103126101cb576020611406610f369261394e565b9150610f21565b3d91506113e3565b60405162461bcd60e51b815260206004820152601760248201527604d61676e657461723a206f544150546f6b656e4944203604c1b6044820152606490fd5b61147791935060203d60201161147e575b61146f81836135c4565b8101906136be565b91386103ec565b503d611465565b506020813d6020116114b8575b8161149f602093836135c4565b810103126101d3576114b36103a39161372a565b610399565b3d9150611492565b6040513d85823e3d90fd5b90506020813d602011611503575b816114e6602093836135c4565b810103126101d35760206114fc61037e9261394e565b915061036f565b3d91506114d9565b506020813d60201161153e575b81611525602093836135c4565b810103126101d3576115396103429161372a565b610338565b3d9150611518565b90506020813d60201161157e575b81611561602093836135c4565b810103126101d357602061157761031d9261394e565b91506102f2565b3d9150611554565b5080fd5b506102c0366003190112610145576115a0613554565b60a03660431901126115865760603660e31901126115865760a036610143190112611586576060366101e319011261158657606036610243190112611586576102a4356001600160a01b038116810361075d5760405191611600836135a9565b604435801515810361075d5783526064356020840152606036608319011261075d5760405161162e816135a9565b608435801515810361075d57815260a435602082015260c435801515810361075d576040820152604084015260405190611667826135a9565b60e435801515810361075d578252610104356020830152610124351515610124350361075d57610124356040830152602435916001600160a01b036116aa6138b2565b16936001600160a01b036116bc6138c9565b16936040519663de40657760e01b8852602088600481895afa978815611f0057899861299c575b506001600160a01b036116f46138b2565b166128bb575b6001600160a01b0361170a6138c9565b166127da575b856127c2575b866127aa575b805161234d575b5060405163226f120560e11b815290602082600481895afa918215611f00578992612319575b50604051630cf35bdd60e41b8152600481018390526080816024816001600160a01b038d165afa908115612247578a916122e7575b50845161213b575b508893811580612131575b612125575b508061203c575b5050869161014435801515810361075d57611bfe575b506117bc6137c8565b611807575b505050806117ed575b50806117d4578280f35b6117e7916001600160a01b031690614261565b38808280f35b611801906001600160a01b03841690614261565b386117ca565b6040516348be20ab60e11b81526020816004816001600160a01b0386165afa908115611298578891611bbc575b5060209061184492610d236138f7565b03916001600160a01b03165afa908115610a26578791611b82575b5015611b3d576102243580611ade575b506001600160a01b036118806138e0565b1615611a99578015611a5a5785916001600160a01b0361189e6138e0565b16916118a86138f7565b92803b156101cf578185916118d4958360405180988195829463095ea7b360e01b845260048401613737565b03925af1928315611a00578493611a42575b5060209060246001600160a01b036118fc6138f7565b1691604051958693849263422e498360e11b845260048401525af19182156114c0578392611a0b575b50600460206001600160a01b0361193a6138f7565b1660405192838092635ad7038760e01b82525afa908115611a005784916119c6575b506001600160a01b031691823b156107c55761199292849283604051809681958294635c46a7ef60e11b84523060048501613a5e565b03925af180156119bb576119a7575b806117c1565b6119b090613580565b6107c55783386119a1565b6040513d84823e3d90fd5b90506020813d6020116119f8575b816119e1602093836135c4565b810103126107c5576119f2906136dd565b3861195c565b3d91506119d4565b6040513d86823e3d90fd5b925090506020823d602011611a3a575b81611a28602093836135c4565b8101031261075d578591519038611925565b3d9150611a1b565b611a4e90939193613580565b6101d3578291386118e6565b60405162461bcd60e51b815260206004820152601760248201527604d61676e657461723a20744f4c50546f6b656e4964203604c1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f4d61676e657461723a206c6f636b20746172676574206d69736d6174636800006044820152606490fd5b9080611aec575b503861186f565b8103611af85738611ae5565b60405162461bcd60e51b815260206004820152601e60248201527f4d61676e657461723a20744f4c50546f6b656e4964206d69736d6174636800006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4d61676e6574617256323a20744f42206e6f742077686974656c6973746564006044820152606490fd5b90506020813d602011611bb4575b81611b9d602093836135c4565b81010312610e9957611bae9061372a565b3861185f565b3d9150611b90565b90506020813d602011611bf6575b81611bd7602093836135c4565b8101031261128c5761184491611bee60209261394e565b915091611834565b3d9150611bca565b6040516348be20ab60e11b81529192506020826004816001600160a01b0387165afa918215611298578892611ffc575b506020611c5992611c3d6138e0565b604051633a304d8b60e21b81529485928392906004840161395d565b03816001600160a01b0387165afa918215611298578892611fbc575b50611c81602492613a13565b6101c43580611fb4575b5060606001600160a01b03611c9e6138e0565b1660405193848092633873b0cd60e01b82528960048301525afa918215611298578892611f80575b508015611f4457611cd981308688613a9a565b60405163095ea7b360e01b81526001600160a01b0388166004820152602481018990526020816044818c8a5af18015611f0057611f0b575b5060405163095ea7b360e01b815260208180611d3a856001600160a01b038d1660048401613737565b03818c8a5af18015611f0057611eba575b5060408051634d4d7cbd60e11b815292909183918291611d72913090819060048601613768565b03818a6001600160a01b038b165af18015610a2657611e8c575b50611da76001600160a01b038616611da26138e0565b6141a2565b611daf6137c8565b15611e8657305b6001600160a01b03611dc66138e0565b16906101843560018060801b039283821680920361075d576101a43593841680940361075d576020928a60849260405196879586946362e8f3db60e11b865260018060a01b031660048601528b6024860152604485015260648401525af1908115610a26578791611e54575b5090611e4e6001600160a01b038716611e496138e0565b614261565b386117b3565b90506020813d602011611e7e575b81611e6f602093836135c4565b8101031261075d575138611e32565b3d9150611e62565b81611db6565b611ead9060403d604011611eb3575b611ea581836135c4565b810190613752565b50611d8c565b503d611e9b565b906020823d602011611ef8575b81611ed4602093836135c4565b81010312611ef457611d7292611eeb60409361372a565b50925090611d4b565b8880fd5b3d9150611ec7565b6040513d8b823e3d90fd5b6020813d602011611f3c575b81611f24602093836135c4565b81010312611ef457611f359061372a565b5038611d11565b3d9150611f17565b60405162461bcd60e51b815260206004820152601460248201527304d61676e657461723a206672616374696f6e20360641b6044820152606490fd5b9091506060813d606011611fac575b81611f9c606093836135c4565b8101031261128c57519038611cc6565b3d9150611f8f565b905038611c8b565b91506020823d602011611ff4575b81611fd7602093836135c4565b8101031261128c57611c81611fed60249361372a565b9250611c75565b3d9150611fca565b91506020823d602011612034575b81612017602093836135c4565b8101031261128c57602061202d611c599361394e565b9250611c2e565b3d915061200a565b604051638eb22cdd60e01b815260048101929092526024820152604481018890529091506020816064816001600160a01b038a165afa908115610a265787916120f2575b5060206120a39160405180938192630cb0f5b760e31b8352878060048501613889565b03818a885af1908115610a265787916120c0575b5090388061179d565b90506020813d6020116120ea575b816120db602093836135c4565b8101031261075d5751386120b7565b3d91506120ce565b90506020813d60201161211d575b8161210d602093836135c4565b8101031261075d57516020612080565b3d9150612100565b60209150015138611796565b5080511515611791565b6040850151156122de57612156335b8260208801519161431e565b60208681019190915260405163095ea7b360e01b81526001600160a01b03808c166004830152602482018d9052909190829060449082908f9087165af180156122d35761228f575b5060206121d09181870151908b8d60405180968195829463095ea7b360e01b845260018060a01b031660048401613737565b03926001600160a01b03165af1801561224757612252575b5061220f60406020860151815180938192634d4d7cbd60e11b83528a308960048601613768565b03818d6001600160a01b038e165af180156122475715611786576122419060403d604011611eb357611ea581836135c4565b50611786565b6040513d8c823e3d90fd5b6020813d602011612287575b8161226b602093836135c4565b810103126122835761227c9061372a565b50386121e8565b8980fd5b3d915061225e565b6020813d6020116122cb575b816122a8602093836135c4565b810103126122c7576121d0916122bf60209261372a565b50915061219e565b8a80fd5b3d915061229b565b6040513d8d823e3d90fd5b6121568661214a565b612308915060803d8111612312575b61230081836135c4565b8101906136f1565b505090503861177e565b503d6122f6565b9091506020813d602011612345575b81612335602093836135c4565b8101031261075d57519038611749565b3d9150612328565b6040516377607a1760e11b815289906020816004818c5afa9081156119bb578291612775575b50604051630cf35bdd60e41b8152600481018290526080816024816001600160a01b038f165afa9081156114c0578391612753575b508a60208060408701510151606460405180948193638eb22cdd60e01b8352886004840152602483015288604483015260018060a01b03165afa908115611a0057849161271e575b5091604085015180516124e5575b505050602060408401510151612466575b505060200151604080516314890dcb60e21b81529182908190612437908980600485016137e5565b03818c8b5af18015611f005715611723576124609060403d604011611eb357611ea581836135c4565b50611723565b6124796001600160a01b038b168a6141a2565b60408301518051156124dc57602030915b0151918a3b156107c5576040516374d2492960e11b8152928492849283926124b7928d9060048601613797565b0381838d5af180156119bb571561240f576124d190613580565b611ef457883861240f565b6020889161248a565b61250891929350604081015115156000146127145783602033925b01519161431e565b6020604086015101528a60208060408701510151606460405180948193638eb22cdd60e01b8352876004840152602483015288604483015260018060a01b03165afa908115611a005784916126df575b5060405163095ea7b360e01b81526001600160a01b038d81166004830152602482018690529193909160209083906044908290899086165af19182156107c9578d9261269b575b506125d5916020918260408901510151918760405180968195829463095ea7b360e01b845260018060a01b031660048401613737565b03926001600160a01b03165af18015611a005761265b575b50604061261e918c602083880151015191868451809681958294634d4d7cbd60e11b84523090309060048601613768565b03926001600160a01b03165af180156114c05761263d575b80806123fe565b6126559060403d604011611eb357611ea581836135c4565b50612636565b6020813d602011612693575b81612674602093836135c4565b810103126107c55761261e9161268b60409261372a565b5091506125ed565b3d9150612667565b91506020823d6020116126d7575b816126b6602093836135c4565b810103126101cf578c6020916126ce6125d59461372a565b5091509161259f565b3d91506126a9565b9350506020833d60201161270c575b816126fb602093836135c4565b8101031261075d578b925138612558565b3d91506126ee565b8360208b92612500565b9350506020833d60201161274b575b8161273a602093836135c4565b8101031261075d578b9251386123f0565b3d915061272d565b61276b915060803d81116123125761230081836135c4565b50509050386123a8565b9150506020813d6020116127a2575b81612791602093836135c4565b8101031261075d5789905138612373565b3d9150612784565b6127bd6001600160a01b038916886141a2565b61171c565b6127d56001600160a01b038916876141a2565b611716565b6040516348be20ab60e11b81526020816004816001600160a01b0388165afa908115612247578a9161287b575b506020612816916103016138c9565b03816001600160a01b0388165afa8015612247578a90612840575b61283b91506139c7565b611710565b506020813d602011612873575b8161285a602093836135c4565b810103126122835761286e61283b9161372a565b612831565b3d915061284d565b90506020813d6020116128b3575b81612896602093836135c4565b810103126122835760206128ac6128169261394e565b9150612807565b3d9150612889565b6040516348be20ab60e11b81526020816004816001600160a01b0388165afa908115612247578a9161295c575b5060206128f7916103016138b2565b03816001600160a01b0388165afa8015612247578a90612921575b61291c915061397b565b6116fa565b506020813d602011612954575b8161293b602093836135c4565b810103126122835761294f61291c9161372a565b612912565b3d915061292e565b90506020813d602011612994575b81612977602093836135c4565b8101031261228357602061298d6128f79261394e565b91506128e8565b3d915061296a565b6129b691985060203d60201161147e5761146f81836135c4565b96386116e3565b5060031961010036820112611586576004356001600160a01b0381169003611586576129e761356a565b9060843515156084350361075d576129fd613657565b906001600160401b0360c435116107c55760a09060c435360301126101d35760405163de40657760e01b81529083906044359060208460048181356001600160a01b03165afa9384156114c0578394612f76575b506040516377607a1760e11b815260208160048181356001600160a01b03165afa908115611a00578491612f41575b50604051630cf35bdd60e41b815260048101829052906080826024816001600160a01b038a165afa9182156107c9578592612f1d575b50604051638eb22cdd60e01b81526004810182905260248101859052604481018690526020816064816001600160a01b038b165afa9081156109e5578691612ee4575b5092919082612ccf575b505082612c3c575b505050506064359182612b32575b836101c86001600160a01b038085169060043516614261565b60c43560040192612b42846137d8565b15612c355730905b604080516314890dcb60e21b815295908680612b6b858789600485016137e5565b03818a6004356001600160a01b03165af1958615610a26576101c896612c17575b50612b96816137d8565b612ba3575b505050612b19565b612bf6612c0e94610c02612bbb604460c435016137d8565b612bd9612bcc606460c43501613807565b95608460c4350190613816565b60405196879591936001600160a01b039092169160208701613848565b60e435926001600160a01b0386169160043591614047565b38808080612b9b565b612c2f9060403d604011611eb357611ea581836135c4565b50612b8c565b8190612b4a565b612c546001600160a01b0386811690600435166141a2565b15612cc85730905b6004356001600160a01b03163b156107c5576040516374d2492960e11b815292849284928392612c91928a9060048601613797565b0381836004356001600160a01b03165af180156119bb57612cb4575b8080612b0b565b612cbd90613580565b6101d3578238612cad565b8490612c5c565b925092612ce790608435600014612edd57843361431e565b604051638eb22cdd60e01b81526004810184905260248101829052604481018690529093906020816064816001600160a01b038b165afa9081156109e5578691612ea8575b5060405163095ea7b360e01b8082526001600160a01b0389811660048401526024830189905292959290931692906020816044818b885af180156112985787928a928a92612e5b575b506040519081529460209386939192849290918391612da191906001600160a01b031660048401613737565b03925af19182156109e5578592612e17575b50612dd99160409182519384928392634d4d7cbd60e11b84523090309060048601613768565b0381886001600160a01b038b165af180156107c957612df9575b80612b03565b612e119060403d604011611eb357611ea581836135c4565b50612df3565b91506020823d602011612e53575b81612e32602093836135c4565b810103126101cb5784604091612e4a612dd99461372a565b50915091612db3565b3d9150612e25565b92509250506020813d602011612ea0575b81612e79602093836135c4565b8101031261128c57612da1938989602094612e948b9561372a565b50919394509195612d75565b3d9150612e6c565b9550506020853d602011612ed5575b81612ec4602093836135c4565b8101031261075d5787945138612d2c565b3d9150612eb7565b848861431e565b92919550506020823d602011612f15575b81612f02602093836135c4565b8101031261075d57905187949083612af9565b3d9150612ef5565b612f3691925060803d81116123125761230081836135c4565b505090509038612ab6565b9350506020833d602011612f6e575b81612f5d602093836135c4565b8101031261075d5785925138612a80565b3d9150612f50565b612f9091945060203d60201161147e5761146f81836135c4565b9238612a51565b506003196101003682011261158657612fae613554565b90612fb761356a565b91612fc0613657565b60c435926001600160401b0384116101cb5760a09084360301126101cf5760405163de40657760e01b81526001600160a01b038381169490939091602091906044359083816004818b5afa908115612247578a916134e1575b5060405163226f120560e11b81529084826004818c5afa9182156122d3578b926134b2575b50604051630cf35bdd60e41b815260048101839052908816966080826024818b5afa918215613234578c9261348e575b5083613332575b50505060643590816132a4575b5050506084359384613092578780f35b82600401906130a0826137d8565b1561329d5730915b6040516377607a1760e11b80825298908581600481855afa908115613234578c91613270575b5060405190638eb22cdd60e01b825260048201528860248201528b604482015285816064818b5afa908115613234578c91613243575b50813b1561323f578b858c61312d604051948593849363cce19f8160e01b8552600485016137e5565b038183865af1801561323457613221575b50613148826137d8565b613154575b5050508780f35b8460e43534811161321957995b60046040518094819382525afa9485156122d3578b956131d5575b5050916131bf989593916131a58694608461319d60646131b79c9a01613807565b960190613816565b98908a156131ce5733995b3691613602565b961693613d0e565b3880808080808080808061314d565b30996131b0565b908098969492939a979550813d8311613212575b6131f381836135c4565b8101031261075d579551949793959294919391929190816131a561317c565b503d6131e9565b504799613161565b61322d909b919b613580565b993861313e565b6040513d8e823e3d90fd5b8b80fd5b90508581813d8311613269575b61325a81836135c4565b8101031261323f575138613104565b503d613250565b90508581813d8311613296575b61328781836135c4565b8101031261323f5751386130ce565b503d61327d565b87916130a8565b6132ae86846141a2565b1561332a578288305b6132d5604051948593849363cd0211eb60e01b855260048501613889565b03818c8b5af18015611f0057859184916132fd575b50506132f591614261565b388080613082565b908092503d8311613323575b61331381836135c4565b8101031261128c578382386132ea565b503d613309565b8288806132b7565b9261334791929360001461348757823361431e565b918a604051928963095ea7b360e01b918286528a600487015283602487015216878560448186855af180156114c057889387938c92613448575b61339b975060405197889586948593845260048401613737565b03925af19182156122d3578392613409575b506133d39160409182519384928392634d4d7cbd60e11b84523090309060048601613768565b03818d8a5af18015612247576133eb575b8080613075565b6134039060403d604011611eb357611ea581836135c4565b506133e4565b91508482813d8311613441575b61342081836135c4565b810103126122c757826040916134386133d39461372a565b509150916133ad565b503d613416565b935093905085813d8311613480575b61346181836135c4565b810103126101d357898893879361347a61339b9861372a565b50613381565b503d613457565b828b61431e565b6134a791925060803d81116123125761230081836135c4565b50509050903861306e565b9091508481813d83116134da575b6134ca81836135c4565b810103126122c75751903861303e565b503d6134c0565b6134f89150843d861161147e5761146f81836135c4565b38613019565b503461014557608036600319011261014557613518613554565b5061352161356a565b506064356001600160401b03811161158657613541903690600401613639565b50604051630a85bd0160e11b8152602090f35b600435906001600160a01b038216820361075d57565b602435906001600160a01b038216820361075d57565b6001600160401b03811161359357604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761359357604052565b601f909101601f19168101906001600160401b0382119082101761359357604052565b6001600160401b03811161359357601f01601f191660200190565b92919261360e826135e7565b9161361c60405193846135c4565b82948184528183011161075d578281602093846000960137010152565b9080601f8301121561075d5781602061365493359101613602565b90565b60a43590811515820361075d57565b6000546001600160a01b0316330361367a57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b9081602091031261075d57516001600160a01b038116810361075d5790565b51906001600160a01b038216820361075d57565b919082608091031261075d578151600581101561075d5791613715602082016136dd565b916060613724604084016136dd565b92015190565b5190811515820361075d57565b6001600160a01b039091168152602081019190915260400190565b919082604091031261075d576020825192015190565b9081526001600160a01b0391821660208201529116604082015260608101919091526000608082015260a00190565b6001600160a01b03918216815291166020820152600060408201526060810191909152608081019190915260a00190565b6101e435801515810361075d5790565b35801515810361075d5790565b6001600160a01b03918216815291166020820152604081019190915260600190565b3561ffff8116810361075d5790565b903590601e198136030182121561075d57018035906001600160401b03821161075d5760200191813603831361075d57565b93909261ffff86949360a0979415158752166020860152604085015260806060850152816080850152848401376000828201840152601f01601f1916010190565b6001600160a01b0391821681529116602082015260006040820152606081019190915260800190565b610284356001600160a01b038116810361075d5790565b610264356001600160a01b038116810361075d5790565b610164356001600160a01b038116810361075d5790565b610204356001600160a01b038116810361075d5790565b6064356001600160a01b038116810361075d5790565b6044356001600160a01b038116810361075d5790565b356001600160a01b038116810361075d5790565b519061ffff8216820361075d57565b61ffff90911681526001600160a01b03909116602082015260400190565b1561398257565b60405162461bcd60e51b815260206004820152601e60248201527f4d61676e6574617256323a204242206e6f742077686974656c697374656400006044820152606490fd5b156139ce57565b60405162461bcd60e51b815260206004820152601f60248201527f4d61676e6574617256323a2053474c206e6f742077686974656c6973746564006044820152606490fd5b15613a1a57565b606460405162461bcd60e51b815260206004820152602060248201527f4d61676e6574617256323a20744f4c50206e6f742077686974656c69737465646044820152fd5b6001600160a01b03918216815291166020820152604081019190915260806060820181905260029082015261060f60f31b60a082015260c00190565b6105ea90939293613ac66040948551938491602098898401976323b872dd60e01b8952602485016137e5565b83518085019290916001600160a01b0316906001600160401b0384118385101761359357613b4f9386528683527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487840152600080958192519082855af13d15613bd9573d91613b35836135e7565b92613b42885194856135c4565b83523d868985013e613bdd565b90815180613b5f575b5050505050565b82859181010312610145575082613b76910161372a565b15613b8357808080613b58565b60849250519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6060915b91929015613c3f5750815115613bf1575090565b3b15613bfa5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015613c525750805190602001fd5b60405162461bcd60e51b815260206004820152908190613c76906024830190613c9d565b0390fd5b60005b838110613c8d5750506000910152565b8181015183820152602001613c7d565b90602091613cb681518092818552858086019101613c7a565b601f01601f1916010190565b51906001600160801b038216820361075d57565b903590609e198136030182121561075d570190565b91908203918211613cf857565b634e487b7160e01b600052601160045260246000fd5b9261ffff9098979492959896919616938415613fe15760408051630cf35bdd60e41b8152600480820189905291996001600160a01b0396871697929490916080816024818c5afa908115613fd657908891600091613fb4575b508c516301ffc9a760e01b815263843c6ae360e01b8882015291169460209182816024818a5afa9081613f80575b50613dfe5750505050505090613dc7879860009389989951998a98899788966311a5cc7760e31b885216928601613768565b03925af18015613df357613dd9575050565b81613def92903d10611eb357611ea581836135c4565b5050565b82513d6000823e3d90fd5b9296998d9295998d9295999c60008993613e2d8651978896879586946311a5cc7760e31b865230928601613768565b03925af18015613f5157613f64575b50348503613f5c57915b8951633b58a71760e21b8152828186818b5afa908115613f5157600091613f1c575b5015613f1357905b888a5193613e7d856135a9565b16835282019760008952898301918252863b1561075d5760009881613eeb948c519d8e9b8c9a8b9963695ef6bf60e01b8b5230908b015260248a01526044890152606488015260a06084880152511660a4860152511660c484015251606060e4840152610104830190613c9d565b03925af1908115613f095750613efe5750565b613f0790613580565b565b513d6000823e3d90fd5b50606090613e70565b908382813d8311613f4a575b613f3281836135c4565b810103126101455750613f449061372a565b38613e68565b503d613f28565b8b513d6000823e3d90fd5b503091613e46565b613f7a908b3d8d11611eb357611ea581836135c4565b50613e3c565b8381813d8311613fad575b613f9581836135c4565b8101031261075d57613fa69061372a565b5038613d95565b503d613f8b565b613fcc915060803d81116123125761230081836135c4565b5050905038613d67565b8c513d6000823e3d90fd5b5050604080516311a5cc7760e31b815297909650879592948694506000936001600160a01b0393869361401e939092918616919060048601613768565b0393165af18015610747576140305750565b613def9060403d8111611eb357611ea581836135c4565b9193909594958051156107625780518101926020976080838a870196031261075d5761407489840161372a565b9860409161408383860161394e565b6060860151608087015190969193916001600160401b03821161075d57019188603f8401121561075d5781830151906140bb826135e7565b996140c887519b8c6135c4565b828b5286838601011161075d576140e8839260049588858e019101613c7a565b348111614180579a5b855163226f120560e11b815293849182906001600160a01b03165afa938415613f09575060009361414d575b5050613f0798996000906000146141455750915b871561413e573396613d0e565b3096613d0e565b905091614131565b81819c949c3d8311614179575b61416481836135c4565b810103126122c75751919950613f073861411d565b503d61415a565b50479a6140f1565b6001600160a01b0391821681529116602082015260400190565b60405163e985e9c560e01b81526001600160a01b039283169290602081806141ce863060048401614188565b0381875afa90811561074757600091614228575b50156141ed57505050565b823b1561075d57604460009283604051958694859363a22cb46560e01b8552166004840152600160248401525af1801561074757613efe5750565b906020823d8211614259575b81614241602093836135c4565b8101031261014557506142539061372a565b386141e2565b3d9150614234565b60405163e985e9c560e01b81526001600160a01b0392831692906020818061428d863060048401614188565b0381875afa908115610747576000916142e5575b506142ab57505050565b823b1561075d57604460009283604051958694859363a22cb46560e01b85521660048401528160248401525af1801561074757613efe5750565b906020823d8211614316575b816142fe602093836135c4565b8101031261014557506143109061372a565b386142a1565b3d91506142f1565b6040516370a0823160e01b8082523060048301526020959492936001600160a01b0316928683602481875afa94851561074757879360009661440d575b509061436991309086613a9a565b60246040518094819382523060048301525afa908115610747576000916143e0575b508181111561439f57613654929350613ceb565b60405162461bcd60e51b8152600481018590526019602482015278135859db995d185c8e881d1c985b9cd9995c8819985a5b1959603a1b6044820152606490fd5b908482813d8311614406575b6143f681836135c4565b810103126101455750513861438b565b503d6143ec565b91929382819792973d831161443e575b61442781836135c4565b81010312610145575051938692919061436961435b565b503d61441d56fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220bdf8b65368dea2ee3cc1a90f0e1bfbe16752e78c7811205ec17e59f86e30e4ca64736f6c63430008120033";

type MagnetarMarketModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MagnetarMarketModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MagnetarMarketModule__factory extends ContractFactory {
  constructor(...args: MagnetarMarketModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MagnetarMarketModule";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MagnetarMarketModule> {
    return super.deploy(overrides || {}) as Promise<MagnetarMarketModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MagnetarMarketModule {
    return super.attach(address) as MagnetarMarketModule;
  }
  override connect(signer: Signer): MagnetarMarketModule__factory {
    return super.connect(signer) as MagnetarMarketModule__factory;
  }
  static readonly contractName: "MagnetarMarketModule";

  public readonly contractName: "MagnetarMarketModule";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MagnetarMarketModuleInterface {
    return new utils.Interface(_abi) as MagnetarMarketModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MagnetarMarketModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MagnetarMarketModule;
  }
}
