/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CurveSwapper,
  CurveSwapperInterface,
} from "../../../contracts/Swapper/CurveSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICurvePool",
        name: "_curvePool",
        type: "address",
      },
      {
        internalType: "contract IYieldBoxBase",
        name: "_yieldBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountZero",
    type: "error",
  },
  {
    inputs: [],
    name: "Failed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "curvePool",
    outputs: [
      {
        internalType: "contract ICurvePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "dexOptions",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461011a57601f611aa138819003918201601f19168301916001600160401b0383118484101761011f57808492604094855283398101031261011a5780516001600160a01b03918282169182900361011a57602001519180831680840361011a576000549160018060a01b0319923384821617600055604051913391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055831561010b5750156100f957600254161760025560805260405161196b908161013682396080518181816102f2015281816104f60152818161087b0152818161093701528181610aa10152610d1b0152f35b60405163d23f952160e01b8152600490fd5b63d23f952160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081631a16321014610fa757508063218751b214610f7e5780635bf66e4814610c8a578063715018a614610c425780637b2a8bd214610b9f5780638da5cb5b14610b78578063cf144a4e14610ad0578063de40657714610a8b578063e3c711a014610a5b578063efa84c6d1461014d5763f2fde38b1461009a57600080fd5b3461014a57602036600319011261014a576100b3611099565b6100bb611103565b6001600160a01b039081169081156100f6576000548260018060a01b031982161760005516600080516020611916833981519152600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b5036600319016101a08112610a57576101401361014a57610164356001600160a01b038116900361014a57610184356001600160401b038111610a575736602382011215610a57578060040135826101a4826110e8565b926101b260405194856110af565b82845260208401923660248284010111610a535780602460209301853784010152600260015414610a0e576002600155829180518101916020828185019403126107335751906001600160401b03821161073357019080603f8301121561070157602082015161022181611235565b9261022f60405194856110af565b8184526040602085019260051b8201019283116108e057604001905b8282106109fe5750506002546001600160a01b031691905061026c8161124c565b516040519063c661065760e01b82526004820152602081602481865afa9081156106bb5785916109df575b5060206102a38361126f565b5160246040518096819363c661065760e01b835260048301525afa9283156106bb5785936109be575b50849060843580158015816109b3575b15610827575061031692505b60a43591602435907f0000000000000000000000000000000000000000000000000000000000000000611521565b9061032a6103238261124c565b519161126f565b5160025460405163c661065760e01b81526001600160801b038416600482015293916001600160a01b0390911690602085602481855afa94851561081c5788956107fb575b5060405163c661065760e01b81526001600160801b038216600482015293602085602481865afa9485156107f05789956107bf575b50604051635e0d443f60e01b8152602081806103cb8887600f0b87600f0b6004850161127f565b0381875afa9081156107b4578a9161077e575b50610144351161073f576040516370a0823160e01b8152306004820152958993906020886024816001600160a01b038b165afa9788156106bb578598610705575b5061042b918691611783565b6002546001600160a01b031690813b1561070157836084926040519687958694630f7c084960e21b8652600f0b6004860152600f0b602485015260448401526101443560648401525af180156106f6576106c6575b506040516370a0823160e01b81523060048201529190602090839060249082906001600160a01b03165afa9182156106bb578592610687575b5080821115610654576104cb916114fe565b9182156106105761012435801515810361060b57156105bc57506040839161051d8460018060a01b037f0000000000000000000000000000000000000000000000000000000000000000168093611783565b8151634d4d7cbd60e11b8152606480356004830152306024830152610164356001600160a01b0316604483015281018590526084810184905292839160a49183915af19081156105b15760409391610582575b505b6001805582519182526020820152f35b6105a29150833d85116105aa575b61059a81836110af565b8101906112ba565b905038610570565b503d610590565b6040513d85823e3d90fd5b90604093506106069084519063a9059cbb60e01b60208301526105f8826105ea8761016435602484016112d0565b03601f1981018452836110af565b6001600160a01b0316611303565b610572565b600080fd5b60405162461bcd60e51b815260206004820152601c60248201527b04375727665537761707065723a20616d6f756e744f757420697320360241b6044820152606490fd5b60405162461bcd60e51b815260206004820152600b60248201526a1cddd85c0819985a5b195960aa1b6044820152606490fd5b9091506020813d6020116106b3575b816106a3602093836110af565b8101031261060b575190386104b9565b3d9150610696565b6040513d87823e3d90fd5b9094906001600160401b0381116106e257604052936020610480565b634e487b7160e01b82526041600452602482fd5b6040513d88823e3d90fd5b8380fd5b9097506020813d602011610737575b81610721602093836110af565b8101031261073357519661042b61041f565b8480fd5b3d9150610714565b60405162461bcd60e51b81526020600482015260176024820152761a5b9cdd59999a58da595b9d0b585b5bdd5b9d0b5bdd5d604a1b6044820152606490fd5b90506020813d6020116107ac575b81610799602093836110af565b810103126107a85751386103de565b8980fd5b3d915061078c565b6040513d8c823e3d90fd5b6107e291955060203d6020116107e9575b6107da81836110af565b81019061129b565b93386103a4565b503d6107d0565b6040513d8b823e3d90fd5b61081591955060203d6020116107e9576107da81836110af565b933861036f565b6040513d8a823e3d90fd5b906024359182610900575b50505060643580610848575b50610316916102e8565b60c4356108f65760405163442c159960e01b8152600481019190915260e4356024820152604481018790526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156108eb576108bc575b50610316915b9161083e565b602090813d83116108e4575b6108d281836110af565b810103126108e057386108b0565b8580fd5b503d6108c8565b6040513d89823e3d90fd5b50610316916108b6565b9293509091156109ac575060405163442c159960e01b8152600481019190915260a4356024820152604481018690526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156106f657869161097a575b505b90388080610832565b90506020813d6020116109a4575b81610995602093836110af565b810103126108e057513861096f565b3d9150610988565b9050610971565b5060c43515156102dc565b6109d891935060203d6020116107e9576107da81836110af565b91386102cc565b6109f8915060203d6020116107e9576107da81836110af565b38610297565b815181526020918201910161024b565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8280fd5b5080fd5b503461014a57610a6a36610fcf565b505060405162461bcd60e51b8152905080610a87600482016111fd565b0390fd5b503461014a578060031936011261014a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461014a57608036600319011261014a57610aea611099565b906024356001600160a01b038181169291839003610a5757610b7493610b0e6111b9565b50610b176111b9565b93610b2061115b565b9260443584526064356020850152610b3661115b565b921682526040820152826020820152826060820152610b53611190565b92808452602084015283526020830152604082015260405191829182611025565b0390f35b503461014a578060031936011261014a57546040516001600160a01b039091168152602090f35b503461014a5760c036600319011261014a576084359081151580920361014a5760a43591821515809303610a5757610b7492610bd96111b9565b50610be26111b9565b92610beb61115b565b9160443583526064356020840152610c0161115b565b91808352604083015260043560208301526024356060830152610c22611190565b938452602084015283526020830152604082015260405191829182611025565b503461014a578060031936011261014a57610c5b611103565b80546001600160a01b03198116825581906001600160a01b03166000805160206119168339815191528280a380f35b503461014a57610c9936610fcf565b81939291016020938481830312610701578035906001600160401b03821161073357019080601f83011215610701578135610cd381611235565b92610ce160405194856110af565b818452868085019260051b8201019283116108e0579086808095949301915b838310610f6e575060608601359560808101359350879250907f0000000000000000000000000000000000000000000000000000000000000000908201358415801581610f61575b15610def575050505050610d979350905b6002546001600160a01b031690610d726103238261124c565b5160405195869485938493635e0d443f60e01b8552600f0b90600f0b6004850161127f565b03915afa918215610de3578092610db3575b5050604051908152f35b9091508282813d8311610ddc575b610dcb81836110af565b8101031261014a5750513880610da9565b503d610dc1565b604051903d90823e3d90fd5b81929394969591610eb9575b50505085610e10575b5050610d979350610d59565b9293919260c0820135610eab5760405163442c159960e01b8152600481019690965260e09190910135602486015260448501869052849060649082906001600160a01b03165afa8015610ea05790859291610e73575b610d9793505b3880610e04565b919092813d8311610e99575b610e8981836110af565b81010312610a5357818491610e66565b503d610e7f565b6040513d86823e3d90fd5b50509190610d979350610e6c565b929694955092939092909115610f5657505060405163442c159960e01b8152600481019190915260a082013560248201526044810186905286816064816001600160a01b0388165afa9081156106f6579087949392918791610f21575b505b92388080610dfb565b85819394959692503d8311610f4f575b610f3b81836110af565b810103126108e05790869392915138610f16565b503d610f31565b909493929150610f18565b5060c08401351515610d48565b8235815291810191859101610d00565b503461014a578060031936011261014a576002546040516001600160a01b039091168152602090f35b823461014a578060031936011261014a575062461bcd60e51b815280610a87600482016111fd565b6003198101610160811261060b576101401361060b576004916001600160401b0391610144359083821161060b578060238301121561060b578185013593841161060b576024848301011161060b576024019190565b919091610120602060406101408401956060815160018060a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b600435906001600160a01b038216820361060b57565b601f909101601f19168101906001600160401b038211908210176110d257604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116110d257601f01601f191660200190565b6000546001600160a01b0316330361111757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60405190608082016001600160401b038111838210176110d25760405260006060838281528260208201528260408201520152565b60408051919082016001600160401b038111838210176110d25760405260006020838281520152565b60405190606082016001600160401b038111838210176110d257604052816111df61115b565b81526111e961115b565b602082015260406111f8611190565b910152565b60609060208152601d60208201527f4375727665537761707065723a206e6f7420696d706c656d656e74656400000060408201520190565b6001600160401b0381116110d25760051b60200190565b8051156112595760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156112595760400190565b6040919493926060820195600f0b8252600f0b60208201520152565b9081602091031261060b57516001600160a01b038116810361060b5790565b919082604091031261060b576020825192015190565b6001600160a01b039091168152602081019190915260400190565b9081602091031261060b5751801515810361060b5790565b60408051908101916001600160a01b03166001600160401b038311828410176110d257611372926040526000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af161136c6113fa565b9161142a565b8051908282159283156113e2575b5050501561138b5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6113f293508201810191016112eb565b388281611380565b3d15611425573d9061140b826110e8565b9161141960405193846110af565b82523d6000602084013e565b606090565b9192901561148c575081511561143e575090565b3b156114475790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561149f5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106114e5575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506114c2565b9190820391821161150b57565b634e487b7160e01b600052601160045260246000fd5b94939190929461010435801515810361060b576116bb5750505082156116a9576001600160a01b031691821561168a576040928351916370a0823160e01b908184523060048501526020918285602481875afa94851561167f57600095611650575b5086516323b872dd60e01b8482015233602482015230604482015260648082019390935291825260a082016001600160401b038111838210176110d25783926115ce91895285611303565b602487518095819382523060048301525afa90811561164557600091611619575b50905081811115611608576116059293506114fe565b90565b835163312d207360e11b8152600490fd5b82813d831161163e575b61162d81836110af565b8101031261014a57505180386115ef565b503d611623565b85513d6000823e3d90fd5b90948382813d8311611678575b61166781836110af565b8101031261014a5750519338611583565b503d61165d565b87513d6000823e3d90fd5b8091925034036116975790565b60405163f1640ae160e01b8152600490fd5b6040516365e52d5160e11b8152600490fd5b6040935090600060a49285979496975196879586946311a5cc7760e31b865260048601523060248601523060448601526064850152608484015260018060a01b03165af190811561172d57600091611711575090565b611729915060403d81116105aa5761059a81836110af565b5090565b6040513d6000823e3d90fd5b1561174057565b60405162461bcd60e51b815260206004820152601b60248201527a14d85999505c1c1c9bdd994e88185c1c1c9bdd994819985a5b1959602a1b6044820152606490fd5b9091813b156118d55760405163095ea7b360e01b60208083018281526001600160a01b03871660248501526000604480860182905285529195919493919291608081016001600160401b038111828210176118c157604052516117fc918691829182875af16117f06113fa565b81611891575b50611739565b8261180a575b505050505050565b83809361183a6118549861182c6040519384928b8401978852602484016112d0565b03601f1981018352826110af565b51925af1906118476113fa565b8261185f575b5050611739565b388080808080611802565b8091925051918215928315611879575b505050388061184d565b61188993508201810191016112eb565b38808061186f565b805180159250889083156118a9575b505050386117f6565b6118b993508201810191016112eb565b3887816118a0565b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152601860248201527714d85999505c1c1c9bdd994e881b9bc818dbdb9d1c9858dd60421b6044820152606490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220849f08d584822cec53f3440386df1fc54e35a7364f4133a48b545472bb0d03fc64736f6c63430008130033";

type CurveSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveSwapper__factory extends ContractFactory {
  constructor(...args: CurveSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CurveSwapper";
  }

  override deploy(
    _curvePool: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurveSwapper> {
    return super.deploy(
      _curvePool,
      _yieldBox,
      overrides || {}
    ) as Promise<CurveSwapper>;
  }
  override getDeployTransaction(
    _curvePool: PromiseOrValue<string>,
    _yieldBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_curvePool, _yieldBox, overrides || {});
  }
  override attach(address: string): CurveSwapper {
    return super.attach(address) as CurveSwapper;
  }
  override connect(signer: Signer): CurveSwapper__factory {
    return super.connect(signer) as CurveSwapper__factory;
  }
  static readonly contractName: "CurveSwapper";

  public readonly contractName: "CurveSwapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveSwapperInterface {
    return new utils.Interface(_abi) as CurveSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveSwapper {
    return new Contract(address, _abi, signerOrProvider) as CurveSwapper;
  }
}
