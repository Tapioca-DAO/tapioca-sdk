/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UniswapV3Swapper,
  UniswapV3SwapperInterface,
} from "../../../contracts/Swapper/UniswapV3Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Factory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountZero",
    type: "error",
  },
  {
    inputs: [],
    name: "Failed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnwrapFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "PoolFee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_newFee",
        type: "uint24",
      },
    ],
    name: "setPoolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "twapDuration",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040526002805466ffffffffffffff1916633c000bb81790553480156200002757600080fd5b50604051620035bb380380620035bb8339810160408190526200004a916200024c565b620000553362000105565b60018055836001600160a01b038116620000825760405163d23f952160e01b815260040160405180910390fd5b836001600160a01b038116620000ab5760405163d23f952160e01b815260040160405180910390fd5b836001600160a01b038116620000d45760405163d23f952160e01b815260040160405180910390fd5b6001600160a01b0380881660805286811660a052851660c052620000f88462000155565b50505050505050620002b4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200015f620001d8565b6001600160a01b038116620001ca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620001d58162000105565b50565b6000546001600160a01b03163314620002345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620001c1565b565b6001600160a01b0381168114620001d557600080fd5b600080600080608085870312156200026357600080fd5b8451620002708162000236565b6020860151909450620002838162000236565b6040860151909350620002968162000236565b6060860151909250620002a98162000236565b939692955090935050565b60805160a05160c05161326762000354600039600081816102870152818161045501526106b5015260008181610253015281816108a201528181610922015281816109c601528181611a6e0152611b7c01526000818161037a015281816103df015281816105da01528181610618015281816107ca015281816108190152818161085301528181610b6201528181610bdd0152610c9b01526132676000f3fe6080604052600436106100e15760003560e01c80638da5cb5b1161007f578063cf144a4e11610059578063cf144a4e146102a9578063e3c711a0146102c9578063efa84c6d146102e9578063f2fde38b1461031157600080fd5b80638da5cb5b1461020f578063c31c9c0714610241578063c45a01551461027557600080fd5b80635bf66e48116100bb5780635bf66e481461017d578063715018a6146101ab57806373dd250c146101c25780637b2a8bd2146101e257600080fd5b8063089fe6aa146100ed5780631a1632101461012257806326d895451461014457600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b506002546101099062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b34801561012e57600080fd5b50610137610331565b604051610119919061293c565b34801561015057600080fd5b50600254610168906301000000900463ffffffff1681565b60405163ffffffff9091168152602001610119565b34801561018957600080fd5b5061019d610198366004612968565b610370565b604051908152602001610119565b3480156101b757600080fd5b506101c06104fd565b005b3480156101ce57600080fd5b506101c06101dd3660046129ff565b610511565b3480156101ee57600080fd5b506102026101fd366004612a2a565b610585565b6040516101199190612a88565b34801561021b57600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610119565b34801561024d57600080fd5b506102297f000000000000000000000000000000000000000000000000000000000000000081565b34801561028157600080fd5b506102297f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b557600080fd5b506102026102c4366004612b1c565b6105ab565b3480156102d557600080fd5b5061019d6102e4366004612968565b6105d0565b6102fc6102f7366004612bc2565b610751565b60408051928352602083019190915201610119565b34801561031d57600080fd5b506101c061032c366004612c89565b610d19565b606061033f42610e10612cd5565b60025460408051602081019390935262ffffff90911690820152606001604051602081830303815290604052905090565b6000808061039e867f0000000000000000000000000000000000000000000000000000000000000000610dc8565b909250905060006103b1858701876129ff565b90508062ffffff166000036103ca575060025462ffffff165b60006104036080890160208a013560608b01357f0000000000000000000000000000000000000000000000000000000000000000610f51565b506040517f1698ee820000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152858116602483015262ffffff851660448301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690631698ee8290606401602060405180830381865afa15801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c09190612cee565b905060006104e082600260039054906101000a900463ffffffff166110dd565b5090506104ef81848888611365565b9a9950505050505050505050565b6105056114e4565b61050f6000611558565b565b6105196114e4565b60025460405162ffffff8084169216907f2bff118b9b9e3deb4fc5204e6ba828351c954685d0b119d0e21add79f878339990600090a3600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001662ffffff92909216919091179055565b61058d612865565b61059e6000808989898989896115c0565b90505b9695505050505050565b6105b3612865565b6105c5858560008087876000806115c0565b90505b949350505050565b600080806105fe867f0000000000000000000000000000000000000000000000000000000000000000610dc8565b9092509050600061063c60808801602089013560608a01357f0000000000000000000000000000000000000000000000000000000000000000610f51565b91506000905061064e868801886129ff565b90508062ffffff16600003610667575060025462ffffff165b6040517f1698ee820000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152848116602483015262ffffff831660448301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631698ee8290606401602060405180830381865afa1580156106fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107229190612cee565b9050600061074282600260039054906101000a900463ffffffff166110dd565b5090506104ef81858789611365565b6000806107c46040805160c080820183526000808352602080840182905283850182905260608085018390526080808601849052865161010081018852848152928301849052958201839052810182905293840181905260a084810182905291840181905260e084015290919082015290565b6107ee877f0000000000000000000000000000000000000000000000000000000000000000610dc8565b6001600160a01b039081166020808501919091529116825261083d90608089019089013560608a01357f0000000000000000000000000000000000000000000000000000000000000000610f51565b50604082018190528151610883916101008a01917f00000000000000000000000000000000000000000000000000000000000000009160208c01359060a08d0135611651565b604082015280516001600160a01b0316156108cb576108cb81600001517f00000000000000000000000000000000000000000000000000000000000000008360400151611906565b83516000036108df576108dc610331565b93505b600080858060200190518101906108f69190612d0b565b915091508062ffffff16600003610911575060025462ffffff165b82516001600160a01b03166109a7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634aa4a4fc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190612cee565b6109aa565b82515b6001600160a01b039081166060850152602084015116610a4b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634aa4a4fc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a469190612cee565b610a51565b82602001515b6001600160a01b03908116608080860191825260408051610100810182526060808901518616825293518516602082015262ffffff861681830152309381019390935290820185905285015160a08083019190915260c082018b9052600060e0830152850152835116610afb5782604001513414610afb576040517ff1640ae100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602083015160a0840151610b229190610b1c6101408d016101208e01612d3b565b8a611a69565b9450610b366101408a016101208b01612d3b565b15610d0d5760208301516001600160a01b031615610c52576020830151610b87906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000087611d83565b6040517f9a9af97a00000000000000000000000000000000000000000000000000000000815260608a013560048201523060248201526001600160a01b03888116604483015260648201879052600060848301527f00000000000000000000000000000000000000000000000000000000000000001690639a9af97a9060a40160408051808303816000875af1158015610c25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c499190612d58565b9450610d0d9050565b6040517f70400fbe00000000000000000000000000000000000000000000000000000000815260608a013560048201526001600160a01b038881166024830152604482018790527f000000000000000000000000000000000000000000000000000000000000000016906370400fbe908790606401604080518083038185885af1158015610ce4573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d099190612d58565b9450505b50505094509492505050565b610d216114e4565b6001600160a01b038116610dbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610dc581611558565b50565b60008080610dd96020860186612c89565b6001600160a01b0316141580610e0857506000610dfc6060860160408701612c89565b6001600160a01b031614155b15610e3357610e1a6020850185612c89565b9150610e2c6060850160408601612c89565b9050610f4a565b6040517fcf35bdd0000000000000000000000000000000000000000000000000000000008152602085013560048201526001600160a01b0384169063cf35bdd090602401608060405180830381865afa158015610e94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb89190612d7c565b50506040517fcf35bdd0000000000000000000000000000000000000000000000000000000008152606087013560048201529093506001600160a01b038516915063cf35bdd090602401608060405180830381865afa158015610f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f439190612d7c565b5090925050505b9250929050565b6000808535151580610f67575060008660400135115b15610f7a575050833560408501356110d4565b841561102457853515610f8e578535611021565b6040517f442c15990000000000000000000000000000000000000000000000000000000081526004810186905260208701356024820152600060448201526001600160a01b0384169063442c159990606401602060405180830381865afa158015610ffd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110219190612dd3565b91505b83156110d45760408601351561103e5785604001356110d1565b6040517f442c15990000000000000000000000000000000000000000000000000000000081526004810185905260608701356024820152600060448201526001600160a01b0384169063442c159990606401602060405180830381865afa1580156110ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d19190612dd3565b90505b94509492505050565b6000808263ffffffff16600003611150576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f42500000000000000000000000000000000000000000000000000000000000006044820152606401610db3565b604080516002808252606082018352600092602083019080368337019050509050838160008151811061118557611185612dec565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106111b4576111b4612dec565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd846040518263ffffffff1660e01b81526004016111fd9190612e1b565b600060405180830381865afa15801561121a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112429190810190612f01565b9150915060008260008151811061125b5761125b612dec565b60200260200101518360018151811061127657611276612dec565b60200260200101516112889190612fcd565b905060008260008151811061129f5761129f612dec565b6020026020010151836001815181106112ba576112ba612dec565b60200260200101516112cc9190613012565b90506112dc600389900b83613061565b965060008260060b12801561130057506112fa600389900b836130d5565b60060b15155b15611313578661130f816130f7565b9750505b600061132c6001600160a01b0363ffffffff8b16613154565b905061135677ffffffffffffffffffffffffffffffffffffffff00000000602084901b1682613197565b96505050505050509250929050565b600080611371866120af565b90506fffffffffffffffffffffffffffffffff6001600160a01b0382161161143c5760006113a86001600160a01b038316806131ce565b9050836001600160a01b0316856001600160a01b0316106113fe576113f97801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683612446565b611434565b61143481876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000612446565b9250506114db565b600061145b6001600160a01b0383168068010000000000000000612446565b9050836001600160a01b0316856001600160a01b0316106114a9576114a4700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683612446565b6114d7565b6114d781876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000612446565b9250505b50949350505050565b6000546001600160a01b0316331461050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610db3565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6115c8612865565b6115f36040518060800160405280600081526020016000815260200160008152602001600081525090565b948552602080860194909452604080516080810182526001600160a01b039a8b16815298909916888a015287840196909652606087019490945286518088018852901515815292151583820152938352928201929092529182015290565b60006116606020880188612d3b565b15611710576040517f8d2e63b8000000000000000000000000000000000000000000000000000000008152600481018590523060248201819052604482015260648101849052608481018390526001600160a01b03871690638d2e63b89060a40160408051808303816000875af11580156116df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117039190612d58565b90935091508290506105a1565b8260000361174a576040517fcbca5aa200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038516156118c6576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa1580156117b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117dd9190612dd3565b90506117f46001600160a01b038716333087612517565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038816906370a0823190602401602060405180830381865afa158015611854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118789190612dd3565b90508181116118b3576040517f625a40e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118bd82826131e5565b925050506105a1565b8234146118ff576040517ff1640ae100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50816105a1565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052915160009283929087169161199091906131f8565b6000604051808303816000865af19150503d80600081146119cd576040519150601f19603f3d011682016040523d82523d6000602084013e6119d2565b606091505b50915091508180156119fc5750805115806119fc5750808060200190518101906119fc9190613214565b611a62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f53410000000000000000000000000000000000000000000000000000000000006044820152606401610db3565b5050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634aa4a4fc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aee9190612cee565b604080517f414bf38900000000000000000000000000000000000000000000000000000000815287516001600160a01b0390811660048301526020890151811660248301529188015162ffffff1660448201526060880151821660648201526080880151608482015260a088015160a482015260c088015160c482015260e0880151821660e48201529192507f0000000000000000000000000000000000000000000000000000000000000000169063414bf3899034906101040160206040518083038185885af1158015611bc7573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611bec9190612dd3565b9150806001600160a01b031685602001516001600160a01b0316148015611c1a57506001600160a01b038616155b15611d65576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611c7a57600080fd5b505af1158015611c8e573d6000803e3d6000fd5b5050505081471015611ccc576040517f3f6134c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83611d60576000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114611d1e576040519150601f19603f3d011682016040523d82523d6000602084013e611d23565b606091505b5050905080611d5e576040517f625a40e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b6114db565b836114db5760208501516114db906001600160a01b031684846125ce565b6000836001600160a01b03163b11611df7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f53616665417070726f76653a206e6f20636f6e747261637400000000000000006044820152606401610db3565b6040516001600160a01b0383811660248301526000604483018190529160609186169060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905251611e8091906131f8565b6000604051808303816000865af19150503d8060008114611ebd576040519150601f19603f3d011682016040523d82523d6000602084013e611ec2565b606091505b509092509050818015611eed575080511580611eed575080806020019051810190611eed9190613214565b611f53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c656400000000006044820152606401610db3565b8215611a62576040516001600160a01b0385811660248301526044820185905286169060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905251611fdc91906131f8565b6000604051808303816000865af19150503d8060008114612019576040519150601f19603f3d011682016040523d82523d6000602084013e61201e565b606091505b5090925090508180156120495750805115806120495750808060200190518101906120499190613214565b611a62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c656400000000006044820152606401610db3565b60008060008360020b126120c6578260020b6120ce565b8260020b6000035b9050620d89e881111561213d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f54000000000000000000000000000000000000000000000000000000000000006044820152606401610db3565b60008160011660000361216157700100000000000000000000000000000000612173565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156121a7576ffff97272373d413259a46990580e213a0260801c5b60048216156121c6576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156121e5576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612204576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612223576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612242576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612261576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612281576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156122a1576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156122c1576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156122e1576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612301576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612321576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612341576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612361576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612382576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156123a2576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156123c1576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156123de576b048a170391f7dc42444e8fa20260801c5b60008460020b131561241d57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8161241957612419613032565b0490505b640100000000810615612431576001612434565b60005b60ff16602082901c0192505050919050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361249d576000841161249257600080fd5b508290049050612510565b8084116124a957600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526125c89085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261261c565b50505050565b6040516001600160a01b0383166024820152604481018290526126179084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401612564565b505050565b6000612671826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661271e9092919063ffffffff16565b90508051600014806126925750808060200190518101906126929190613214565b612617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610db3565b60606105c8848460008585600080866001600160a01b0316858760405161274591906131f8565b60006040518083038185875af1925050503d8060008114612782576040519150601f19603f3d011682016040523d82523d6000602084013e612787565b606091505b50915091506114d7878383876060831561281c578251600003612815576001600160a01b0385163b612815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610db3565b50816105c8565b6105c883838151156128315781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db3919061293c565b6040805160e081019091526000606082018181526080830182905260a0830182905260c0830191909152819081526020016128c16040518060800160405280600081526020016000815260200160008152602001600081525090565b81526020016128e760405180604001604052806000151581526020016000151581525090565b905290565b60005b838110156129075781810151838201526020016128ef565b50506000910152565b600081518084526129288160208601602086016128ec565b601f01601f19169290920160200192915050565b6020815260006125106020830184612910565b6000610140828403121561296257600080fd5b50919050565b6000806000610160848603121561297e57600080fd5b612988858561294f565b925061014084013567ffffffffffffffff808211156129a657600080fd5b818601915086601f8301126129ba57600080fd5b8135818111156129c957600080fd5b8760208285010111156129db57600080fd5b6020830194508093505050509250925092565b62ffffff81168114610dc557600080fd5b600060208284031215612a1157600080fd5b8135612510816129ee565b8015158114610dc557600080fd5b60008060008060008060c08789031215612a4357600080fd5b863595506020870135945060408701359350606087013592506080870135612a6a81612a1c565b915060a0870135612a7a81612a1c565b809150509295509295509295565b815180516001600160a01b03908116835260208083015181850152604080840151909216828501526060928301518385015280850151805160808601528082015160a08601528083015160c08601529092015160e0840152830151805115156101008401529081015115156101208301526101408201905b5092915050565b6001600160a01b0381168114610dc557600080fd5b60008060008060808587031215612b3257600080fd5b8435612b3d81612b07565b93506020850135612b4d81612b07565b93969395505050506040820135916060013590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612bba57612bba612b62565b604052919050565b6000806000806101a08587031215612bd957600080fd5b612be3868661294f565b93506101408501359250610160850135612bfc81612b07565b915061018085013567ffffffffffffffff80821115612c1a57600080fd5b818701915087601f830112612c2e57600080fd5b813581811115612c4057612c40612b62565b612c536020601f19601f84011601612b91565b9150808252886020828501011115612c6a57600080fd5b8060208401602084013760009082016020015294979396509194505050565b600060208284031215612c9b57600080fd5b813561251081612b07565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115612ce857612ce8612ca6565b92915050565b600060208284031215612d0057600080fd5b815161251081612b07565b60008060408385031215612d1e57600080fd5b825191506020830151612d30816129ee565b809150509250929050565b600060208284031215612d4d57600080fd5b813561251081612a1c565b60008060408385031215612d6b57600080fd5b505080516020909101519092909150565b60008060008060808587031215612d9257600080fd5b845160058110612da157600080fd5b6020860151909450612db281612b07565b6040860151909350612dc381612b07565b6060959095015193969295505050565b600060208284031215612de557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015612e5957835163ffffffff1683529284019291840191600101612e37565b50909695505050505050565b600067ffffffffffffffff821115612e7f57612e7f612b62565b5060051b60200190565b600082601f830112612e9a57600080fd5b81516020612eaf612eaa83612e65565b612b91565b8083825260208201915060208460051b870101935086841115612ed157600080fd5b602086015b84811015612ef6578051612ee981612b07565b8352918301918301612ed6565b509695505050505050565b60008060408385031215612f1457600080fd5b825167ffffffffffffffff80821115612f2c57600080fd5b818501915085601f830112612f4057600080fd5b81516020612f50612eaa83612e65565b82815260059290921b84018101918181019089841115612f6f57600080fd5b948201945b83861015612f9d5785518060060b8114612f8e5760008081fd5b82529482019490820190612f74565b91880151919650909350505080821115612fb657600080fd5b50612fc385828601612e89565b9150509250929050565b600682810b9082900b037fffffffffffffffffffffffffffffffffffffffffffffffffff800000000000008112667fffffffffffff82131715612ce857612ce8612ca6565b6001600160a01b03828116828216039080821115612b0057612b00612ca6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160060b8360060b8061307857613078613032565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000831416156130cc576130cc612ca6565b90059392505050565b60008260060b806130e8576130e8613032565b808360060b0791505092915050565b60008160020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000810361312c5761312c612ca6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0192915050565b77ffffffffffffffffffffffffffffffffffffffffffffffff82811682821681810283169291811582850482141761318e5761318e612ca6565b50505092915050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff808416806131c2576131c2613032565b92169190910492915050565b8082028115828204841417612ce857612ce8612ca6565b81810381811115612ce857612ce8612ca6565b6000825161320a8184602087016128ec565b9190910192915050565b60006020828403121561322657600080fd5b815161251081612a1c56fea2646970667358221220d91794aef16af87eff1868516750078a1889277e564ef6d10dd58caff204f13764736f6c63430008160033";

type UniswapV3SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Swapper__factory extends ContractFactory {
  constructor(...args: UniswapV3SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3Swapper";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Swapper> {
    return super.deploy(
      _yieldBox,
      _swapRouter,
      _factory,
      _owner,
      overrides || {}
    ) as Promise<UniswapV3Swapper>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _swapRouter,
      _factory,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3Swapper {
    return super.attach(address) as UniswapV3Swapper;
  }
  override connect(signer: Signer): UniswapV3Swapper__factory {
    return super.connect(signer) as UniswapV3Swapper__factory;
  }
  static readonly contractName: "UniswapV3Swapper";

  public readonly contractName: "UniswapV3Swapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3SwapperInterface {
    return new utils.Interface(_abi) as UniswapV3SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Swapper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Swapper;
  }
}
