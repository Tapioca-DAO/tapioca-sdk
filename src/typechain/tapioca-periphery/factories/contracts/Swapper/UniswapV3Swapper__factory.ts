/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UniswapV3Swapper,
  UniswapV3SwapperInterface,
} from "../../../contracts/Swapper/UniswapV3Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Factory",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "PoolFee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_newFee",
        type: "uint24",
      },
    ],
    name: "setPoolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346200016b57601f6200272a38819003918201601f19168301916001600160401b0383118484101762000170578084926060946040528339810103126200016b5780516001600160a01b038082169291908382036200016b57602083015192818416908185036200016b576040015194828616918287036200016b57620000e2620000e292620000ea95600054903360018060a01b03198316176000553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055610bb862ffffff196002541617600255151562000186565b151562000186565b60805260a05260c0526040516125569081620001d4823960805181818161024b0152818161043c01528181610718015281816107c40152818161086a015281816108c40152818161098c0152610fd2015260a051818181610291015281816103ea0152610da6015260c051818181610a0b01528181610d6101526110520152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b156200018e57565b60405162461bcd60e51b815260206004820152601a60248201527f537761707065723a2061646472657373206e6f742076616c69640000000000006044820152606490fdfe608080604052600436101561001357600080fd5b60003560e01c908163089fe6aa14611339575080631a163210146113095780633fa2ef5e146112745780635bf66e4814610fc0578063715018a614610f7957806373dd250c14610f0e5780637b2a8bd214610dfe5780638da5cb5b14610dd5578063c31c9c0714610d90578063c45a015514610d4b578063e3c711a014610977578063efa84c6d146101625763f2fde38b146100ae57600080fd5b3461015d57602036600319011261015d576100c7611399565b6100cf611497565b6001600160a01b03908116908115610109576000548260018060a01b031982161760005516600080516020612501833981519152600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b3461015d5736600319016101a0811261015d576101401361015d57610164356001600160a01b038116900361015d57610184356001600160401b03811161015d573660238201121561015d5780600401356101bc8161147c565b916101ca6040519384611459565b818352366024838301011161015d578160009260246020930183860137830101528060006004356001600160a01b03811680820361015d571580159061095a575b1561084b57916044356001600160a01b038116810361015d57935b60006084358015801581610840575b156106c4575061026f91505b60a43590602435877f000000000000000000000000000000000000000000000000000000000000000061196d565b60405163095ea7b360e01b602082015290929060009081906102d0816102c2887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166024840161190a565b03601f198101835282611459565b60208151910182895af16102e2611925565b81610695575b501561066b57511561065d575b60208180518101031261015d576020015162ffffff600254166103166118e4565b156106535730905b604051956001600160401b0361010088019081119088111761063d57610100870160409081526001600160a01b0391821688528882166020808a01918252828a0194855294831660608a0190815260808a0196875260a08a019788526101443560c08b01908152600060e08c01818152945163414bf38960e01b81529b51861660048d01529251851660248c0152945162ffffff1660448b015251831660648a015294516084890152945160a4880152905160c48701529251831660e4860152918491610104918391907f0000000000000000000000000000000000000000000000000000000000000000165af191821561053c57600092610609575b506104246118e4565b610439575b6040809350519182526020820152f35b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691803b156105cd576000809160405182602082019163095ea7b360e01b8352610495816102c2898b6024840161190a565b51925af16104a1611925565b8161059e575b50156105485760408051634d4d7cbd60e11b8152606480356004830152306024830152610164356001600160a01b0316604483015281018390526000608482018190529093849160a4918391905af1801561053c5760409260009161050d575b50610429565b61052d9150833d8511610535575b6105258183611459565b8101906118f4565b905083610507565b503d61051b565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602860248201527f42617365537761707065723a3a73616665417070726f76653a20617070726f76604482015267194819985a5b195960c21b6064820152608490fd5b80518015925082156105b3575b5050836104a7565b6105c69250602080918301019101611955565b83806105ab565b60405162461bcd60e51b815260206004820152601460248201527314ddd85c1c195c8e881b9bc818dbdb9d1c9858dd60621b6044820152606490fd5b9091506020813d602011610635575b8161062560209383611459565b8101031261015d5751908361041b565b3d9150610618565b634e487b7160e01b600052604160045260246000fd5b610164359061031e565b50610666611591565b6102f5565b60405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606490fd5b80518015925082156106aa575b5050876102e8565b6106bd9250602080918301019101611955565b87806106a2565b90602435918261078e575b505050606435806106e5575b5061026f90610241565b60c4356107845760405163442c159960e01b8152600481019190915260e4356024820152600060448201526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa801561053c57610759575b5061026f905b906106db565b602090813d831161077d575b61076f8183611459565b8101031261015d578661074d565b503d610765565b5061026f90610753565b9192509015610839575060405163442c159960e01b8152600481019190915260a4356024820152600060448201526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561053c57600091610807575b505b8680806106cf565b90506020813d602011610831575b8161082260209383611459565b8101031261015d5751866107fd565b3d9150610815565b90506107ff565b5060c4351515610235565b50604051630cf35bdd60e41b81526024803560048301526080908290817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561053c57600091610937575b50604051630cf35bdd60e41b815260643560048201529092906080816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561053c57600091610904575b5093610226565b610926915060803d608011610930575b61091e8183611459565b810190611604565b50509050856108fd565b503d610914565b610950915060803d6080116109305761091e8183611459565b50509050846108a3565b506044356001600160a01b0381169081900361015d57151561020b565b3461015d57610985366113cd565b50506109ce7f00000000000000000000000000000000000000000000000000000000000000006109b5818461163d565b9290916020946060810135906080878201359101611731565b600254604051630b4c774160e11b81529194925081906109f89062ffffff168486600485016115ca565b6001600160a01b039291879183919003817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561053c57600091610d16575b5060405190610a4b82611423565b60028252868201916040368437603c610a6382611d4c565b526000610a6f82611d6f565b528360405193849263883bdbfd60e01b845260248401908b60048601525180915260448401919060005b8c828210610cf65750505050600093918380920392165afa90811561053c57600090600092610bed575b50610ad7610ad082611d6f565b5191611d4c565b5160060b9060060b0390667fffffffffffff8213667fffffffffffff19831217610bd75782610b1181610b0984611d6f565b511692611d4c565b51169003918211610bd75760060b906000603c830560020b92600081129081610bc3575b50610b99575b80610b855750851b600160201b600160c01b031615610b6f57610b67936001600160801b031690611d7f565b604051908152f35b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b81526011600452602490fd5b91627fffff198114610baf576000190191610b3b565b634e487b7160e01b83526011600452602483fd5b915050603c6000910760060b151588610b35565b634e487b7160e01b600052601160045260246000fd5b9150503d806000833e610c008183611459565b81019060408183031261015d5780516001600160401b039081811161015d5782019183601f8401121561015d57825192610c3984611d35565b93610c476040519586611459565b8085528a8086019160051b8301019186831161015d578b01905b828210610cdd575050508881015191821161015d57019180601f8401121561015d578251610c8e81611d35565b93610c9c6040519586611459565b818552898086019260051b82010192831161015d578901905b828210610cc55750505087610ac3565b8151868116810361015d578152908901908901610cb5565b81518060060b810361015d578152908b01908b01610c61565b835163ffffffff1685528896508995509384019390920191600101610a99565b90508581813d8311610d44575b610d2d8183611459565b8101031261015d57610d3e906115b6565b86610a3d565b503d610d23565b3461015d57600036600319011261015d576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461015d57600036600319011261015d576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461015d57600036600319011261015d576000546040516001600160a01b039091168152602090f35b3461015d5760c036600319011261015d57610f0a610e1a6113af565b610e226113be565b90610e2b61154d565b50610e3461154d565b91610e3d6114ef565b9060443582526064356020830152610e536114ef565b90600082526000604083015260043560208301526024356060830152610e77611524565b93151584521515602084015283526020830152604082015260405191829182919091610120602060406101408401956060815160018060a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b0390f35b3461015d57602036600319011261015d5760043562ffffff80821680920361015d57610f38611497565b7f2bff118b9b9e3deb4fc5204e6ba828351c954685d0b119d0e21add79f878339960406002549281519084168152846020820152a162ffffff191617600255005b3461015d57600036600319011261015d57610f92611497565b600080546001600160a01b0319811682556001600160a01b03166000805160206125018339815191528280a3005b3461015d57610fce366113cd565b50507f0000000000000000000000000000000000000000000000000000000000000000611017610ffe828461163d565b9190926020946060810135906080878201359101611731565b509161103f62ffffff60025416604051918291630b4c774160e11b83528585600485016115ca565b6001600160a01b039291879183919003817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561053c5760009161123f575b506040519061109282611423565b60028252868201916040368437603c6110aa82611d4c565b5260006110b682611d6f565b528360405193849263883bdbfd60e01b845260248401908b60048601525180915260448401919060005b8c82821061121f5750505050600093918380920392165afa90811561053c576000906000926111165750610ad7610ad082611d6f565b9150503d806000833e6111298183611459565b81019060408183031261015d5780516001600160401b039081811161015d5782019183601f8401121561015d5782519261116284611d35565b936111706040519586611459565b8085528a8086019160051b8301019186831161015d578b01905b828210611206575050508881015191821161015d57019180601f8401121561015d5782516111b781611d35565b936111c56040519586611459565b818552898086019260051b82010192831161015d578901905b8282106111ee5750505087610ac3565b8151868116810361015d5781529089019089016111de565b81518060060b810361015d578152908b01908b0161118a565b835163ffffffff16855288965089955093840193909201916001016110e0565b90508581813d831161126d575b6112568183611459565b8101031261015d57611267906115b6565b86611084565b503d61124c565b3461015d5760c036600319011261015d5761128d611399565b6001600160a01b0390602435828116919082900361015d57610f0a926112b16113af565b916112ba6113be565b6112c261154d565b506112cb61154d565b946112d46114ef565b93604435855260643560208601526112ea6114ef565b9316835260408301526000602083015260006060830152610e77611524565b3461015d57600036600319011261015d57610f0a611325611591565b604051918291602083526020830190611359565b3461015d57600036600319011261015d5760209062ffffff600254168152f35b919082519283825260005b848110611385575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611364565b600435906001600160a01b038216820361015d57565b60843590811515820361015d57565b60a43590811515820361015d57565b6003198101610160811261015d576101401361015d576004916001600160401b0391610144359083821161015d578060238301121561015d578185013593841161015d576024848301011161015d576024019190565b606081019081106001600160401b0382111761063d57604052565b604081019081106001600160401b0382111761063d57604052565b601f909101601f19168101906001600160401b0382119082101761063d57604052565b6001600160401b03811161063d57601f01601f191660200190565b6000546001600160a01b031633036114ab57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60405190608082016001600160401b0381118382101761063d5760405260006060838281528260208201528260408201520152565b60408051919082016001600160401b0381118382101761063d5760405260006020838281520152565b60405190606082016001600160401b0381118382101761063d57604052816115736114ef565b815261157d6114ef565b6020820152604061158c611524565b910152565b610e104201804211610bd757604051906020820152602081526115b38161143e565b90565b51906001600160a01b038216820361015d57565b6001600160a01b0391821681529116602082015262ffffff909116604082015260600190565b356001600160a01b038116810361015d5790565b919082608091031261015d578151600581101561015d5791611628602082016115b6565b916060611637604084016115b6565b92015190565b91906001600160a01b039081611652856115f0565b161580159061171b575b156116785750506115b36040611671846115f0565b93016115f0565b1691604051630cf35bdd60e41b90818152602083013560048201526080928382602481895afa91821561053c5760609385936024926000916116fa575b509760405195869485938452013560048301525afa91821561053c576000926116dd57505090565b6116f39250803d106109305761091e8183611459565b5050905090565b6117119150853d87116109305761091e8183611459565b50509050386116b5565b5081611729604086016115f0565b16151561165c565b9392843592600092839283929186158015816118d7575b1561175d575050505050505060409092013590565b81929394969995989791611835575b5050508161177b575b50505050565b9091929394506040830135801560001461182b575060405163442c159960e01b8152600481019290925260609092013560248201526044810183905290602090829060649082906001600160a01b03165afa91821561181f5780926117e8575b50505b9038808080611775565b9091506020823d8211611817575b8161180360209383611459565b8101031261181457505138806117db565b80fd5b3d91506117f6565b604051903d90823e3d90fd5b93505050506117de565b9298509091156118d0575060405163442c159960e01b81526004810191909152602083810135602483015260448201859052816064816001600160a01b038b165afa9081156118c5578491611890575b505b9538808061176c565b90506020813d82116118bd575b816118aa60209383611459565b810103126118b9575138611885565b8380fd5b3d915061189d565b6040513d86823e3d90fd5b9050611887565b5060408a01351515611748565b61012435801515810361015d5790565b919082604091031261015d576020825192015190565b6001600160a01b039091168152602081019190915260400190565b3d15611950573d906119368261147c565b916119446040519384611459565b82523d6000602084013e565b606090565b9081602091031261015d5751801515810361015d5790565b939190929361010435801515810361015d57611c27575050508115611beb5760018060a01b031690604080516370a0823160e01b8082526004923084840152602091602495838588818b5afa948515611be057600095611bb1575b5082516323b872dd60e01b858201908152338983015230604483015260648083019390935291815260a0810191906001600160401b03831181841017611b9d57916000808b611a5d94828a9897868b52611a218761143e565b8987527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c082015251925af1611a56611925565b908b611c98565b805180611b29575b505086835180998193825230898301525afa958615611b1e57600096611aef575b5082861115611ab25750508303928311611a9f57505090565b601190634e487b7160e01b600052526000fd5b5162461bcd60e51b8152808401919091526018818501527714ddd85c1c195c8e881d1c985b9cd9995c8819985a5b195960421b6044820152606490fd5b90958282813d8311611b17575b611b068183611459565b810103126118145750519438611a86565b503d611afc565b50513d6000823e3d90fd5b9280611b3a93948301019101611955565b15611b485782903880611a65565b815162461bcd60e51b8152808601849052602a818801527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b88604189634e487b7160e01b600052526000fd5b90948482813d8311611bd9575b611bc88183611459565b8101031261181457505193386119c8565b503d611bbe565b83513d6000823e3d90fd5b60405162461bcd60e51b81526020600482015260146024820152730537761707065723a20616d6f756e7420697320360641b6044820152606490fd5b6040935090600060a492859694965196879586946311a5cc7760e31b865260048601523060248601523060448601526064850152608484015260018060a01b03165af190811561053c57600091611c7c575090565b611c94915060403d8111610535576105258183611459565b5090565b91929015611cfa5750815115611cac575090565b3b15611cb55790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611d0d5750805190602001fd5b60405162461bcd60e51b815260206004820152908190611d31906024830190611359565b0390fd5b6001600160401b03811161063d5760051b60200190565b805115611d595760200190565b634e487b7160e01b600052603260045260246000fd5b805160011015611d595760400190565b9291909260020b906000821260001461231557600160ff1b8214610bd75781600003915b620d89e883116122ec5760018316156122e2576ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b0316600284166122b8575b60049384811661228c575b60088116612260575b60108116612234575b60208116612208575b604081166121dc575b6080908181166121b1575b6101008116612186575b610200811661215b575b6104008116612130575b6108008116612105575b61100081166120da575b61200081166120af575b6140008116612084575b6180008116612059575b62010000811661202e575b620200008116612004575b620400008116611fc6575b6208000016611f8b575b5090600012611f67575b63ffffffff8160201c911615600014611f5e5760ff60005b168101809111611f49576001600160a01b03908116936001600160801b0393848611611f1d5785800295808704811490151715611f085750811691161015611efe576115b39216906124b5565b6115b3921661243a565b601190634e487b7160e01b6000525260246000fd5b5093611f2a81839261231b565b941691161015611f3f576115b39216906123ef565b6115b39216612366565b601183634e487b7160e01b6000525260246000fd5b60ff6001611eb1565b8015611f765760001904611e99565b601283634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa291828102928184041490151715611fb1571c6000611e8f565b601185634e487b7160e01b6000525260246000fd5b916d2216e584f5fa1ea926041bedfe9890818102918183041490151715611fef57811c91611e85565b601186634e487b7160e01b6000525260246000fd5b916e5d6af8dedb81196699c329225ee60490818102918183041490151715611fef57811c91611e7a565b916f09aa508b5b7a84e1c677de54f3e99bc990818102918183041490151715611fef57811c91611e6f565b916f31be135f97d08fd981231505542fcfa690818102918183041490151715611fef57811c91611e64565b916f70d869a156d2a1b890bb3df62baf32f790818102918183041490151715611fef57811c91611e5a565b916fa9f746462d870fdf8a65dc1f90e061e590818102918183041490151715611fef57811c91611e50565b916fd097f3bdfd2022b8845ad8f792aa582590818102918183041490151715611fef57811c91611e46565b916fe7159475a2c29b7443b29c7fa6e889d990818102918183041490151715611fef57811c91611e3c565b916ff3392b0822b70005940c7a398e4b70f390818102918183041490151715611fef57811c91611e32565b916ff987a7253ac413176f2b074cf7815e5490818102918183041490151715611fef57811c91611e28565b916ffcbe86c7900a88aedcffc83b479aa3a490818102918183041490151715611fef57811c91611e1e565b916ffe5dee046a99a2a811c461f1969c305390818102918183041490151715611fef57811c91611e14565b906fff2ea16466c96a3843ec78b326b5286190818102918183041490151715611fb15760801c90611e09565b906fff973b41fa98c081472e6896dfb254c090818102918183041490151715611fb15760801c90611e00565b906fffcb9843d60f6159c9db58835c92664490818102918183041490151715611fb15760801c90611df7565b906fffe5caca7e10e4e61c3624eaa0941cd090818102918183041490151715611fb15760801c90611dee565b906ffff2e50f5f656932ef12357cf3c7fdcc90818102918183041490151715611fb15760801c90611de5565b6ffff97272373d413259a46990580e213a90818102918183041490151715610bd75760801c611dda565b600160801b611dc8565b60405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606490fd5b81611da3565b600019828209908281029283808410930391838303936000931461235b57600160401b928484111561181457500990828211900360c01b910360401c1790565b505090505060401c90565b600160801b91600019828409928260801b928380861095039480860395146123e1578483111561015d5782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b50508092501561015d570490565b600019828209908281029283808410930391838303936000931461242f57600160801b928484111561181457500990828211900360801b910360801c1790565b505090505060801c90565b600160c01b91600019828409928260c01b928380861095039480860395146123e1578483111561015d5782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b60001982820990828102928380841093039183830393600093146124f557600160c01b928484111561181457500990828211900360401b910360c01c1790565b505090505060c01c9056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212204a7a06b3e1b0a062f2713ccccf62191b0037325e9d4563f998f676cd23d149ab64736f6c63430008120033";

type UniswapV3SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Swapper__factory extends ContractFactory {
  constructor(...args: UniswapV3SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3Swapper";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Swapper> {
    return super.deploy(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    ) as Promise<UniswapV3Swapper>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3Swapper {
    return super.attach(address) as UniswapV3Swapper;
  }
  override connect(signer: Signer): UniswapV3Swapper__factory {
    return super.connect(signer) as UniswapV3Swapper__factory;
  }
  static readonly contractName: "UniswapV3Swapper";

  public readonly contractName: "UniswapV3Swapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3SwapperInterface {
    return new utils.Interface(_abi) as UniswapV3SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Swapper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Swapper;
  }
}
