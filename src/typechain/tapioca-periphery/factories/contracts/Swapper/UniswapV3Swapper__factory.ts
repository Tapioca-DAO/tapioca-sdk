/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UniswapV3Swapper,
  UniswapV3SwapperInterface,
} from "../../../contracts/Swapper/UniswapV3Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Factory",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "PoolFee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_newFee",
        type: "uint24",
      },
    ],
    name: "setPoolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346200016b57601f6200272a38819003918201601f19168301916001600160401b0383118484101762000170578084926060946040528339810103126200016b5780516001600160a01b038082169291908382036200016b57602083015192818416908185036200016b576040015194828616918287036200016b57620000e2620000e292620000ea95600054903360018060a01b03198316176000553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055610bb862ffffff196002541617600255151562000186565b151562000186565b60805260a05260c0526040516125569081620001d4823960805181818161025d015281816104500152818161072c015281816107d80152818161087e015281816108d8015281816109a00152610ff8015260a0518181816102a3015281816103fe0152610dba015260c051818181610a1f01528181610d7501526110780152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b156200018e57565b60405162461bcd60e51b815260206004820152601a60248201527f537761707065723a2061646472657373206e6f742076616c69640000000000006044820152606490fdfe608080604052600436101561001357600080fd5b60003560e01c908163089fe6aa1461135f575080631a1632101461132f5780633fa2ef5e1461129a5780635bf66e4814610fe6578063715018a614610f8d57806373dd250c14610f225780637b2a8bd214610e125780638da5cb5b14610de9578063c31c9c0714610da4578063c45a015514610d5f578063e3c711a01461098b578063efa84c6d146101745763f2fde38b146100ae57600080fd5b3461016f57602036600319011261016f576100c76113bf565b6100cf6114ba565b6001600160a01b0390811690811561011b576000548260018060a01b0319821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b3461016f5736600319016101a0811261016f576101401361016f57610164356001600160a01b038116900361016f57610184356001600160401b03811161016f573660238201121561016f5780600401356101ce8161149f565b916101dc604051938461147e565b818352366024838301011161016f578160009260246020930183860137830101528060006004356001600160a01b03811680820361016f571580159061096e575b1561085f57916044356001600160a01b038116810361016f57935b60006084358015801581610854575b156106d8575061028191505b60a43590602435877f0000000000000000000000000000000000000000000000000000000000000000611990565b60405163095ea7b360e01b602082015290929060009081906102e2816102d4887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166024840161192d565b03601f19810183528261147e565b60208151910182895af16102f4611948565b816106a9575b501561067f575115610671575b60208180518101031261016f576020015162ffffff60025416610328611907565b156106675730905b60405195866101008101106001600160401b036101008901111761065157610100870160409081526001600160a01b0391821688528882166020808a01918252828a0194855294831660608a0190815260808a0196875260a08a019788526101443560c08b01908152600060e08c01818152945163414bf38960e01b81529b51861660048d01529251851660248c0152945162ffffff1660448b015251831660648a015294516084890152945160a4880152905160c48701529251831660e4860152918491610104918391907f0000000000000000000000000000000000000000000000000000000000000000165af19182156105505760009261061d575b50610438611907565b61044d575b6040809350519182526020820152f35b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691803b156105e1576000809160405182602082019163095ea7b360e01b83526104a9816102d4898b6024840161192d565b51925af16104b5611948565b816105b2575b501561055c5760408051634d4d7cbd60e11b8152606480356004830152306024830152610164356001600160a01b0316604483015281018390526000608482018190529093849160a4918391905af1801561055057604092600091610521575b5061043d565b6105419150833d8511610549575b610539818361147e565b810190611917565b90508361051b565b503d61052f565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602860248201527f42617365537761707065723a3a73616665417070726f76653a20617070726f76604482015267194819985a5b195960c21b6064820152608490fd5b80518015925082156105c7575b5050836104bb565b6105da9250602080918301019101611978565b83806105bf565b60405162461bcd60e51b815260206004820152601460248201527314ddd85c1c195c8e881b9bc818dbdb9d1c9858dd60621b6044820152606490fd5b9091506020813d602011610649575b816106396020938361147e565b8101031261016f5751908361042f565b3d915061062c565b634e487b7160e01b600052604160045260246000fd5b6101643590610330565b5061067a6115b4565b610307565b60405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606490fd5b80518015925082156106be575b5050876102fa565b6106d19250602080918301019101611978565b87806106b6565b9060243591826107a2575b505050606435806106f9575b5061028190610253565b60c4356107985760405163442c159960e01b8152600481019190915260e4356024820152600060448201526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156105505761076d575b50610281905b906106ef565b602090813d8311610791575b610783818361147e565b8101031261016f5786610761565b503d610779565b5061028190610767565b919250901561084d575060405163442c159960e01b8152600481019190915260a4356024820152600060448201526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156105505760009161081b575b505b8680806106e3565b90506020813d602011610845575b816108366020938361147e565b8101031261016f575186610811565b3d9150610829565b9050610813565b5060c4351515610247565b50604051630cf35bdd60e41b81526024803560048301526080908290817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156105505760009161094b575b50604051630cf35bdd60e41b815260643560048201529092906080816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561055057600091610918575b5093610238565b61093a915060803d608011610944575b610932818361147e565b810190611627565b5050905085610911565b503d610928565b610964915060803d60801161094457610932818361147e565b50509050846108b7565b506044356001600160a01b0381169081900361016f57151561021d565b3461016f57610999366113f3565b50506109e27f00000000000000000000000000000000000000000000000000000000000000006109c98184611660565b9290916020946060810135906080878201359101611754565b600254604051630b4c774160e11b8152919492508190610a0c9062ffffff168486600485016115ed565b6001600160a01b039291879183919003817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561055057600091610d2a575b5060405190610a5f82611448565b60028252868201916040368437603c610a7782611d6c565b526000610a8382611d8f565b528360405193849263883bdbfd60e01b845260248401908b60048601525180915260448401919060005b8c828210610d0a5750505050600093918380920392165afa90811561055057600090600092610c01575b50610aeb610ae482611d8f565b5191611d6c565b5160060b9060060b0390667fffffffffffff8213667fffffffffffff19831217610beb5782610b2581610b1d84611d8f565b511692611d6c565b51169003918211610beb5760060b906000603c830560020b92600081129081610bd7575b50610bad575b80610b995750851b600160201b600160c01b031615610b8357610b7b936001600160801b031690611d9f565b604051908152f35b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b81526011600452602490fd5b91627fffff198114610bc3576000190191610b4f565b634e487b7160e01b83526011600452602483fd5b915050603c6000910760060b151588610b49565b634e487b7160e01b600052601160045260246000fd5b9150503d806000833e610c14818361147e565b81019060408183031261016f5780516001600160401b039081811161016f5782019183601f8401121561016f57825192610c4d84611d55565b93610c5b604051958661147e565b8085528a8086019160051b8301019186831161016f578b01905b828210610cf1575050508881015191821161016f57019180601f8401121561016f578251610ca281611d55565b93610cb0604051958661147e565b818552898086019260051b82010192831161016f578901905b828210610cd95750505087610ad7565b8151868116810361016f578152908901908901610cc9565b81518060060b810361016f578152908b01908b01610c75565b835163ffffffff1685528896508995509384019390920191600101610aad565b90508581813d8311610d58575b610d41818361147e565b8101031261016f57610d52906115d9565b86610a51565b503d610d37565b3461016f57600036600319011261016f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461016f57600036600319011261016f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461016f57600036600319011261016f576000546040516001600160a01b039091168152602090f35b3461016f5760c036600319011261016f57610f1e610e2e6113d5565b610e366113e4565b90610e3f611570565b50610e48611570565b91610e51611512565b9060443582526064356020830152610e67611512565b90600082526000604083015260043560208301526024356060830152610e8b611547565b93151584521515602084015283526020830152604082015260405191829182919091610120602060406101408401956060815160018060a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b0390f35b3461016f57602036600319011261016f5760043562ffffff80821680920361016f57610f4c6114ba565b7f2bff118b9b9e3deb4fc5204e6ba828351c954685d0b119d0e21add79f878339960406002549281519084168152846020820152a162ffffff191617600255005b3461016f57600036600319011261016f57610fa66114ba565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461016f57610ff4366113f3565b50507f000000000000000000000000000000000000000000000000000000000000000061103d6110248284611660565b9190926020946060810135906080878201359101611754565b509161106562ffffff60025416604051918291630b4c774160e11b83528585600485016115ed565b6001600160a01b039291879183919003817f000000000000000000000000000000000000000000000000000000000000000086165afa90811561055057600091611265575b50604051906110b882611448565b60028252868201916040368437603c6110d082611d6c565b5260006110dc82611d8f565b528360405193849263883bdbfd60e01b845260248401908b60048601525180915260448401919060005b8c8282106112455750505050600093918380920392165afa9081156105505760009060009261113c5750610aeb610ae482611d8f565b9150503d806000833e61114f818361147e565b81019060408183031261016f5780516001600160401b039081811161016f5782019183601f8401121561016f5782519261118884611d55565b93611196604051958661147e565b8085528a8086019160051b8301019186831161016f578b01905b82821061122c575050508881015191821161016f57019180601f8401121561016f5782516111dd81611d55565b936111eb604051958661147e565b818552898086019260051b82010192831161016f578901905b8282106112145750505087610ad7565b8151868116810361016f578152908901908901611204565b81518060060b810361016f578152908b01908b016111b0565b835163ffffffff1685528896508995509384019390920191600101611106565b90508581813d8311611293575b61127c818361147e565b8101031261016f5761128d906115d9565b866110aa565b503d611272565b3461016f5760c036600319011261016f576112b36113bf565b6001600160a01b0390602435828116919082900361016f57610f1e926112d76113d5565b916112e06113e4565b6112e8611570565b506112f1611570565b946112fa611512565b9360443585526064356020860152611310611512565b9316835260408301526000602083015260006060830152610e8b611547565b3461016f57600036600319011261016f57610f1e61134b6115b4565b60405191829160208352602083019061137f565b3461016f57600036600319011261016f5760209062ffffff600254168152f35b919082519283825260005b8481106113ab575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161138a565b600435906001600160a01b038216820361016f57565b60843590811515820361016f57565b60a43590811515820361016f57565b6003198101610160811261016f576101401361016f57600491610144356001600160401b039283821161016f578060238301121561016f578185013593841161016f576024848301011161016f576024019190565b606081019081106001600160401b0382111761065157604052565b604081019081106001600160401b0382111761065157604052565b90601f801991011681019081106001600160401b0382111761065157604052565b6001600160401b03811161065157601f01601f191660200190565b6000546001600160a01b031633036114ce57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60405190608082018281106001600160401b038211176106515760405260006060838281528260208201528260408201520152565b60405190604082018281106001600160401b038211176106515760405260006020838281520152565b60405190606082018281106001600160401b038211176106515760405281611596611512565b81526115a0611512565b602082015260406115af611547565b910152565b610e104201804211610beb57604051906020820152602081526115d681611463565b90565b51906001600160a01b038216820361016f57565b6001600160a01b0391821681529116602082015262ffffff909116604082015260600190565b356001600160a01b038116810361016f5790565b919082608091031261016f578151600581101561016f579161164b602082016115d9565b91606061165a604084016115d9565b92015190565b91906001600160a01b03908161167585611613565b161580159061173e575b1561169b5750506115d6604061169484611613565b9301611613565b1691604051630cf35bdd60e41b90818152602083013560048201526080928382602481895afa91821561055057606093859360249260009161171d575b509760405195869485938452013560048301525afa9182156105505760009261170057505090565b6117169250803d1061094457610932818361147e565b5050905090565b6117349150853d871161094457610932818361147e565b50509050386116d8565b508161174c60408601611613565b16151561167f565b9392843592600092839283929186158015816118fa575b15611780575050505050505060409092013590565b81929394969995989791611858575b5050508161179e575b50505050565b9091929394506040830135801560001461184e575060405163442c159960e01b8152600481019290925260609092013560248201526044810183905290602090829060649082906001600160a01b03165afa91821561184257809261180b575b50505b9038808080611798565b9091506020823d821161183a575b816118266020938361147e565b8101031261183757505138806117fe565b80fd5b3d9150611819565b604051903d90823e3d90fd5b9350505050611801565b9298509091156118f3575060405163442c159960e01b81526004810191909152602083810135602483015260448201859052816064816001600160a01b038b165afa9081156118e85784916118b3575b505b9538808061178f565b90506020813d82116118e0575b816118cd6020938361147e565b810103126118dc5751386118a8565b8380fd5b3d91506118c0565b6040513d86823e3d90fd5b90506118aa565b5060408a0135151561176b565b61012435801515810361016f5790565b919082604091031261016f576020825192015190565b6001600160a01b039091168152602081019190915260400190565b3d15611973573d906119598261149f565b91611967604051938461147e565b82523d6000602084013e565b606090565b9081602091031261016f5751801515810361016f5790565b939190929361010435801515810361016f57611c47575050508115611c0b5760018060a01b031690604080516370a0823160e01b8082526004923084840152602091602495838588818b5afa948515611c0057600095611bd1575b50825190848201906323b872dd60e01b8252338984015230604484015260648301526064825260a08201918083106001600160401b03841117611bbd57916000808b611a7d94828a9897868b52611a4187611463565b8987527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c082015251925af1611a76611948565b908b611cb8565b805180611b49575b505086835180998193825230898301525afa958615611b3e57600096611b0f575b5082861115611ad25750508303928311611abf57505090565b601190634e487b7160e01b600052526000fd5b5162461bcd60e51b8152808401919091526018818501527714ddd85c1c195c8e881d1c985b9cd9995c8819985a5b195960421b6044820152606490fd5b90958282813d8311611b37575b611b26818361147e565b810103126118375750519438611aa6565b503d611b1c565b50513d6000823e3d90fd5b9280611b5a93948301019101611978565b15611b685782903880611a85565b815162461bcd60e51b8152808601849052602a818801527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b88604189634e487b7160e01b600052526000fd5b90948482813d8311611bf9575b611be8818361147e565b8101031261183757505193386119eb565b503d611bde565b83513d6000823e3d90fd5b60405162461bcd60e51b81526020600482015260146024820152730537761707065723a20616d6f756e7420697320360641b6044820152606490fd5b6040935090600060a492859694965196879586946311a5cc7760e31b865260048601523060248601523060448601526064850152608484015260018060a01b03165af190811561055057600091611c9c575090565b611cb4915060403d811161054957610539818361147e565b5090565b91929015611d1a5750815115611ccc575090565b3b15611cd55790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611d2d5750805190602001fd5b60405162461bcd60e51b815260206004820152908190611d5190602483019061137f565b0390fd5b6001600160401b0381116106515760051b60200190565b805115611d795760200190565b634e487b7160e01b600052603260045260246000fd5b805160011015611d795760400190565b9291909260020b906000821260001461233557600160ff1b8214610beb5781600003915b620d89e8831161230c576001831615612302576ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b0316600284166122d8575b6004938481166122ac575b60088116612280575b60108116612254575b60208116612228575b604081166121fc575b6080908181166121d1575b61010081166121a6575b610200811661217b575b6104008116612150575b6108008116612125575b61100081166120fa575b61200081166120cf575b61400081166120a4575b6180008116612079575b62010000811661204e575b620200008116612024575b620400008116611fe6575b6208000016611fab575b5090600012611f87575b63ffffffff8160201c911615600014611f7e5760ff60005b168101809111611f69576001600160a01b03908116936001600160801b0393848611611f3d5785800295808704811490151715611f285750811691161015611f1e576115d69216906124d5565b6115d6921661245a565b601190634e487b7160e01b6000525260246000fd5b5093611f4a81839261233b565b941691161015611f5f576115d692169061240f565b6115d69216612386565b601183634e487b7160e01b6000525260246000fd5b60ff6001611ed1565b8015611f965760001904611eb9565b601283634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa291828102928184041490151715611fd1571c6000611eaf565b601185634e487b7160e01b6000525260246000fd5b916d2216e584f5fa1ea926041bedfe989081810291818304149015171561200f57811c91611ea5565b601186634e487b7160e01b6000525260246000fd5b916e5d6af8dedb81196699c329225ee6049081810291818304149015171561200f57811c91611e9a565b916f09aa508b5b7a84e1c677de54f3e99bc99081810291818304149015171561200f57811c91611e8f565b916f31be135f97d08fd981231505542fcfa69081810291818304149015171561200f57811c91611e84565b916f70d869a156d2a1b890bb3df62baf32f79081810291818304149015171561200f57811c91611e7a565b916fa9f746462d870fdf8a65dc1f90e061e59081810291818304149015171561200f57811c91611e70565b916fd097f3bdfd2022b8845ad8f792aa58259081810291818304149015171561200f57811c91611e66565b916fe7159475a2c29b7443b29c7fa6e889d99081810291818304149015171561200f57811c91611e5c565b916ff3392b0822b70005940c7a398e4b70f39081810291818304149015171561200f57811c91611e52565b916ff987a7253ac413176f2b074cf7815e549081810291818304149015171561200f57811c91611e48565b916ffcbe86c7900a88aedcffc83b479aa3a49081810291818304149015171561200f57811c91611e3e565b916ffe5dee046a99a2a811c461f1969c30539081810291818304149015171561200f57811c91611e34565b906fff2ea16466c96a3843ec78b326b5286190818102918183041490151715611fd15760801c90611e29565b906fff973b41fa98c081472e6896dfb254c090818102918183041490151715611fd15760801c90611e20565b906fffcb9843d60f6159c9db58835c92664490818102918183041490151715611fd15760801c90611e17565b906fffe5caca7e10e4e61c3624eaa0941cd090818102918183041490151715611fd15760801c90611e0e565b906ffff2e50f5f656932ef12357cf3c7fdcc90818102918183041490151715611fd15760801c90611e05565b6ffff97272373d413259a46990580e213a90818102918183041490151715610beb5760801c611dfa565b600160801b611de8565b60405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606490fd5b81611dc3565b600019828209908281029283808410930391838303936000931461237b57600160401b928484111561183757500990828211900360c01b910360401c1790565b505090505060401c90565b600160801b91600019828409928260801b92838086109503948086039514612401578483111561016f5782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b50508092501561016f570490565b600019828209908281029283808410930391838303936000931461244f57600160801b928484111561183757500990828211900360801b910360801c1790565b505090505060801c90565b600160c01b91600019828409928260c01b92838086109503948086039514612401578483111561016f5782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b600019828209908281029283808410930391838303936000931461251557600160c01b928484111561183757500990828211900360401b910360c01c1790565b505090505060c01c9056fea26469706673582212204e99c7fb3ba57216cbee6a525abc7f1a0f99423b45c01b17a605413d62608cf064736f6c63430008120033";

type UniswapV3SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Swapper__factory extends ContractFactory {
  constructor(...args: UniswapV3SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3Swapper";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Swapper> {
    return super.deploy(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    ) as Promise<UniswapV3Swapper>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3Swapper {
    return super.attach(address) as UniswapV3Swapper;
  }
  override connect(signer: Signer): UniswapV3Swapper__factory {
    return super.connect(signer) as UniswapV3Swapper__factory;
  }
  static readonly contractName: "UniswapV3Swapper";

  public readonly contractName: "UniswapV3Swapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3SwapperInterface {
    return new utils.Interface(_abi) as UniswapV3SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Swapper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Swapper;
  }
}
