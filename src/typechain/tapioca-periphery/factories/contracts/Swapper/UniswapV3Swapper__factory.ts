/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UniswapV3Swapper,
  UniswapV3SwapperInterface,
} from "../../../contracts/Swapper/UniswapV3Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBoxBase",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Factory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountZero",
    type: "error",
  },
  {
    inputs: [],
    name: "Failed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnwrapFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "PoolFee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_newFee",
        type: "uint24",
      },
    ],
    name: "setPoolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "twapDuration",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0346200023a57601f620029de38819003918201601f191683019291906001600160401b038411838510176200023f5781608092849260409687528339810103126200023a578051906001600160a01b03808316918284036200023a576020810151828116948582036200023a578683015192848416908185036200023a576060015196858816968789036200023a576200009b3362000255565b60018055633c000bb866ffffffffffffff19600254161760025515620002295715620002185715620002075760805260a05260c05233906000541603620001c457156200017157620000ed9062000255565b5161274190816200029d8239608051818181610255015281816105040152818161074001528181610b9b01528181610c4701528181610cf501528181610de801526111ec015260a0518181816103760152818161043001528181610938015281816109d401528181610aa40152611037015260c051818181610e6f0152610ff20152f35b815162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6064835162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b865163d23f952160e01b8152600490fd5b875163d23f952160e01b8152600490fd5b885163d23f952160e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c908163089fe6aa146112d5575080631a163210146112a557806326d895451461127e5780635bf66e48146111db578063715018a61461119357806373dd250c146111305780637b2a8bd21461108d5780638da5cb5b14611066578063c31c9c0714611021578063c45a015514610fdc578063cf144a4e14610f34578063e3c711a014610dd4578063efa84c6d146101735763f2fde38b0361000f5734610170576020366003190112610170576100d9611420565b6100e161148f565b6001600160a01b0390811690811561011c576000548260018060a01b0319821617600055166000805160206126ec833981519152600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b5036600319016101a0811261080d576101401361017057610164356001600160a01b038116900361017057610184356001600160401b03811161080d573660238201121561080d57818160040135916101cb83611474565b926101d96040519485611451565b80845236602482840101116108a05780602460209301838601378301015281816004356001600160a01b038116808203610a6f5715801590610db7575b15610cd857906044356001600160a01b0381168103610a6f57915b856084358015801581610ccd575b15610b47575061027991505b60a43590602435847f0000000000000000000000000000000000000000000000000000000000000000611985565b916001600160a01b038216610a83575b5115610a73575b604085805181010312610a6f57604060208601519501519462ffffff86168603610a6b5762ffffff861615610a5c575b6001600160a01b038216156109bf5781955b6001600160a01b0385161561092357845b604051976001600160401b036101008a01908111908a111761090f57610100890160409081526001600160a01b039182168a5291811660208a015262ffffff9290921690880152306060880152608087019190915260a086018390526101443560c087015260e0860187905216156108f1575b5061035f6118fc565b6040516312a9293f60e21b815285906020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156108e65782916108ac575b506040805163414bf38960e01b815287516001600160a01b0390811660048301526020808a0151821660248401529289015162ffffff1660448301526060890151811660648301526080890151608483015260a089015160a483015260c089015160c483015260e0890151811660e483015290979190889061010490829034907f0000000000000000000000000000000000000000000000000000000000000000165af196871561062e578397610874575b50602001516001600160a01b03908116908216811480610863575b1561081157506001600160a01b0381163b1561080d57604051632e1a7d4d60e01b81526004810187905291908290602490829084906001600160a01b03165af18015610802576107d3575b508347106107c15715610797575b6104dc6118fc565b6104f1575b6040838382519182526020820152f35b90506001600160a01b03811615610702577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316813b156106c25760405163095ea7b360e01b602082018181526024830184905260448084018890528352939192919060808401906001600160401b038211858310176106ac5761059a8880809860409882968a52519082885af161058e61193d565b8161067d575b506126a1565b86610639575b50508251634d4d7cbd60e11b8152606480356004830152306024830152610164356001600160a01b0316604483015281018690526084810185905293849260a492508391905af190811561062e57604093916105ff575b505b386104e1565b61061f9150833d8511610627575b6106178183611451565b81019061190c565b9050386105f7565b503d61060d565b6040513d85823e3d90fd5b610675928291828751602081019283526106698161065b8d8b60248401611922565b03601f198101835282611451565b51925af161058e61193d565b3883816105a0565b8051801592508215610692575b505038610594565b6106a5925060208091830101910161196d565b388061068a565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601860248201527714d85999505c1c1c9bdd994e881b9bc818dbdb9d1c9858dd60421b6044820152606490fd5b506040805163382007df60e11b81526064803560048301526001600160a01b03610164358116602484015260448301859052919291839190829086907f0000000000000000000000000000000000000000000000000000000000000000165af190811561062e5760409391610778575b506105f9565b61078f9150833d8511610627576106178183611451565b905038610772565b8380808086610164355af16107aa61193d565b506104d45760405163312d207360e11b8152600490fd5b604051633f6134c760e01b8152600490fd5b9094906001600160401b0381116107ee5760405293386104c6565b634e487b7160e01b82526041600452602482fd5b6040513d88823e3d90fd5b5080fd5b9291505015610821575b506104d4565b60405163a9059cbb60e01b602082015261085d916108588261084a886101643560248401611922565b03601f198101845283611451565b611b7b565b3861081b565b506001600160a01b0385161561047b565b9096506020813d6020116108a4575b8161089060209383611451565b810103126108a057519538610460565b8280fd5b3d9150610883565b90506020813d6020116108de575b816108c760209383611451565b8101031261080d576108d8906115d1565b386103ae565b3d91506108ba565b6040513d84823e3d90fd5b34036108fd5738610356565b60405163f1640ae160e01b8152600490fd5b634e487b7160e01b8a52604160045260248afd5b6040516312a9293f60e21b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156109b4578991610976575b506102e3565b90506020813d6020116109ac575b8161099160209383611451565b810103126109a8576109a2906115d1565b38610970565b8880fd5b3d9150610984565b6040513d8b823e3d90fd5b6040516312a9293f60e21b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610a51578891610a13575b50956102d2565b90506020813d602011610a49575b81610a2e60209383611451565b81010312610a4557610a3f906115d1565b38610a0c565b8780fd5b3d9150610a21565b6040513d8a823e3d90fd5b60025462ffffff1695506102c0565b8680fd5b8580fd5b9350610a7d611589565b93610290565b60405163095ea7b360e01b602082019081528891829190610ad58161065b897f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248401611922565b519082865af1610ae361193d565b81610b18575b506102895760405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606490fd5b8051801592508215610b2d575b505038610ae9565b610b40925060208091830101910161196d565b3880610b25565b906024359182610c11575b50505060643580610b68575b506102799061024b565b60c435610c075760405163442c159960e01b8152600481019190915260e4356024820152604481018890526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610a5157610bdc575b50610279905b90610b5e565b602090813d8311610c00575b610bf28183611451565b81010312610a6b5738610bd0565b503d610be8565b5061027990610bd6565b9192509015610cc6575060405163442c159960e01b8152600481019190915260a4356024820152604481018790526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610cbb578791610c89575b505b388080610b52565b90506020813d602011610cb3575b81610ca460209383611451565b81010312610a6b575138610c7f565b3d9150610c97565b6040513d89823e3d90fd5b9050610c81565b5060c435151561023f565b50604051630cf35bdd60e41b8082526024803560048401529092917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691608090829081855afa8015610cbb576080918891610d96575b5093602460405180948193825260643560048301525afa908115610802578691610d63575b5091610231565b610d85915060803d608011610d8f575b610d7d8183611451565b81019061161f565b5050905038610d5c565b503d610d73565b610dad9150823d8411610d8f57610d7d8183611451565b5050905038610d37565b506044356001600160a01b03811690819003610a6f571515610216565b503461017057610e41610de636611336565b7f0000000000000000000000000000000000000000000000000000000000000000939192610e6b90610e188682611658565b949095610e366020988460608b960135906080878201359101611758565b959050810190611391565b62ffffff80821615610f28575b5060405180938192630b4c774160e11b83528789600485016115e5565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa958615610f1c578096610edd575b5050610ec3610ed5949563ffffffff60025460181c1690611d59565b506001600160801b03909116906120ac565b604051908152f35b9095508486813d8311610f15575b610ef58183611451565b810103126101705750610ec3610f0e610ed595966115d1565b9594610ea7565b503d610eeb565b604051903d90823e3d90fd5b90506002541638610e4e565b503461017057608036600319011261017057610f4e611420565b906024356001600160a01b03818116929183900361080d57610fd893610f72611545565b50610f7b611545565b93610f846114e7565b9260443584526064356020850152610f9a6114e7565b921682526040820152826020820152826060820152610fb761151c565b928084526020840152835260208301526040820152604051918291826113ac565b0390f35b50346101705780600319360112610170576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101705780600319360112610170576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610170578060031936011261017057546040516001600160a01b039091168152602090f35b50346101705760c036600319011261017057608435908115158092036101705760a4359182151580930361080d57610fd8926110c7611545565b506110d0611545565b926110d96114e7565b91604435835260643560208401526110ef6114e7565b9180835260408301526004356020830152602435606083015261111061151c565b9384526020840152835260208301526040820152604051918291826113ac565b50346101705760203660031901126101705760043562ffffff8082168092036108a05761115b61148f565b816002549182167f2bff118b9b9e3deb4fc5204e6ba828351c954685d0b119d0e21add79f87833998580a362ffffff19161760025580f35b50346101705780600319360112610170576111ac61148f565b80546001600160a01b03198116825581906001600160a01b03166000805160206126ec8339815191528280a380f35b5034610170576111ea36611336565b7f0000000000000000000000000000000000000000000000000000000000000000926112246112198583611658565b949093810190611391565b9062ffffff80831615611270575b50610e6b9061125260209682606089940135906080858201359101611758565b509260405180938192630b4c774160e11b83528888600485016115e5565b600254169150610e6b611232565b5034610170578060031936011261017057602063ffffffff60025460181c16604051908152f35b5034610170578060031936011261017057610fd86112c1611589565b6040519182916020835260208301906112f6565b90503461080d578160031936011261080d5760209062ffffff600254168152f35b919082519283825260005b848110611322575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611301565b6003198101610160811261138c576101401361138c576004916001600160401b0391610144359083821161138c578060238301121561138c578185013593841161138c576024848301011161138c576024019190565b600080fd5b9081602091031261138c573562ffffff8116810361138c5790565b919091610120602060406101408401956060815160018060a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b600435906001600160a01b038216820361138c57565b606081019081106001600160401b038211176106ac57604052565b601f909101601f19168101906001600160401b038211908210176106ac57604052565b6001600160401b0381116106ac57601f01601f191660200190565b6000546001600160a01b031633036114a357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60405190608082016001600160401b038111838210176106ac5760405260006060838281528260208201528260408201520152565b60408051919082016001600160401b038111838210176106ac5760405260006020838281520152565b60405190606082016001600160401b038111838210176106ac576040528161156b6114e7565b81526115756114e7565b6020820152604061158461151c565b910152565b610e1042018042116115bb5762ffffff600254166040519160208301526040820152604081526115b881611436565b90565b634e487b7160e01b600052601160045260246000fd5b51906001600160a01b038216820361138c57565b6001600160a01b0391821681529116602082015262ffffff909116604082015260600190565b356001600160a01b038116810361138c5790565b919082608091031261138c578151600581101561138c5791611643602082016115d1565b916060611652604084016115d1565b92015190565b91906001600160a01b03908161166d8561160b565b1615801590611742575b156116935750506115b8604061168c8461160b565b930161160b565b1691604051630cf35bdd60e41b90818152602083013560048201526080928382602481895afa918215611715576060938593602492600091611721575b509760405195869485938452013560048301525afa918215611715576000926116f857505090565b61170e9250803d10610d8f57610d7d8183611451565b5050905090565b6040513d6000823e3d90fd5b6117389150853d8711610d8f57610d7d8183611451565b50509050386116d0565b50816117506040860161160b565b161515611677565b9392843592600092839283929186158015816118ef575b15611784575050505050505060409092013590565b8192939496999598979161184d575b505050816117a2575b50505050565b90919293945060408301358015600014611843575060405163442c159960e01b8152600481019290925260609092013560248201526044810183905290602090829060649082906001600160a01b03165afa918215610f1c57809261180f575b50505b903880808061179c565b9091506020823d821161183b575b8161182a60209383611451565b810103126101705750513880611802565b3d915061181d565b9350505050611805565b9298509091156118e8575060405163442c159960e01b81526004810191909152602083810135602483015260448201859052816064816001600160a01b038b165afa9081156118dd5784916118a8575b505b95388080611793565b90506020813d82116118d5575b816118c260209383611451565b810103126118d157513861189d565b8380fd5b3d91506118b5565b6040513d86823e3d90fd5b905061189f565b5060408a0135151561176f565b61012435801515810361138c5790565b919082604091031261138c576020825192015190565b6001600160a01b039091168152602081019190915260400190565b3d15611968573d9061194e82611474565b9161195c6040519384611451565b82523d6000602084013e565b606090565b9081602091031261138c5751801515810361138c5790565b939190929361010435801515810361138c57611b0a575050508115611af8576001600160a01b03168015611aed5760408051916370a0823160e01b938484523060048501526020948585602481865afa948515611ae257600095611ab3575b5083516323b872dd60e01b8782015233602482015230604482015260648082019390935291825260a082016001600160401b038111838210176106ac578692611a2f91865284611b7b565b602484518094819382523060048301525afa938415611aa857600094611a77575b505081831115611a67575081039081116115bb5790565b5163312d207360e11b8152600490fd5b8181959293953d8311611aa1575b611a8f8183611451565b81010312610170575051913880611a50565b503d611a85565b82513d6000823e3d90fd5b90948682813d8311611adb575b611aca8183611451565b8101031261017057505193386119e4565b503d611ac0565b84513d6000823e3d90fd5b508034036108fd5790565b6040516365e52d5160e11b8152600490fd5b6040935090600060a492859694965196879586946311a5cc7760e31b865260048601523060248601523060448601526064850152608484015260018060a01b03165af190811561171557600091611b5f575090565b611b77915060403d8111610627576106178183611451565b5090565b60408051908101916001600160a01b03166001600160401b038311828410176106ac57611bea926040526000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af1611be461193d565b91611c72565b805190828215928315611c5a575b50505015611c035750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b611c6a935082018101910161196d565b388281611bf8565b91929015611cd45750815115611c86575090565b3b15611c8f5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611ce75750805190602001fd5b60405162461bcd60e51b815260206004820152908190611d0b9060248301906112f6565b0390fd5b6001600160401b0381116106ac5760051b60200190565b805115611d335760200190565b634e487b7160e01b600052603260045260246000fd5b805160011015611d335760400190565b63ffffffff929183169081156120825792604090815191611d7983611436565b600283526020808401918036843785611d9186611d26565b5260009283611d9f87611d49565b52838251998a9263883bdbfd60e01b845260249788850160049a888c8801525180915260448601929185905b8983831061205d5750505050509083809260018060a01b039d8e910392165afa9182156120545784918593611f43575b5050611e10611e0982611d49565b5191611d26565b5160060b9060060b0397667fffffffffffff1991667fffffffffffff8a13838b1217611efe5781611e4c81611e4484611d49565b511692611d26565b5116900391818311611efe578760030b9960060b8a15611f31576000199181148b831416611f1f578a810560020b9a8682129182611f10575b5050611ee9575b508681026001600160c01b031696870403611ed757901b600160201b600160c01b0316928315611ec75750505090046001600160801b031690565b634e487b7160e01b825260129052fd5b5050634e487b7160e01b815260118352fd5b9098627fffff198114611efe57019738611e8c565b634e487b7160e01b8552601187528585fd5b0760060b151590503880611e85565b634e487b7160e01b8652601188528686fd5b634e487b7160e01b8652601288528686fd5b915091503d8085833e611f568183611451565b810182828203126120505781516001600160401b0390818111610a6b5783019282601f85011215610a6b57835193611f8d85611d0f565b94611f9a87519687611451565b808652878087019160051b8301019185831161204c578801905b82821061202f5750505085810151918211610a6b570181601f82011215610a6f57805190611fed611fe483611d0f565b95519586611451565b818552858086019260051b820101928311610a6b578501905b828210612017575050503880611dfb565b81518c81168103610a45578152908501908501612006565b81518060060b8103612048578152908801908801611fb4565b8a80fd5b8980fd5b8480fd5b513d85823e3d90fd5b919460019396985084975081839295511681520195019201928d959389959392611dcb565b60405162461bcd60e51b8152602060048201526002602482015261042560f41b6044820152606490fd5b92909260020b91600083126000146124b65782600003925b620d89e8841161248d576001841615612483576ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b03169360028116612467575b6004811661244b575b6008811661242f575b60108116612413575b602081166123f7575b604081166123db575b6080908181166123c0575b61010081166123a5575b610200811661238a575b610400811661236f575b6108008116612354575b6110008116612339575b612000811661231e575b6140008116612303575b61800081166122e8575b6201000081166122cd575b6202000081166122b3575b620400008116612299575b620800001661227e575b50600012612255575b60ff9263ffffffff811661224d576000905b60201c9316929092016001600160a01b03908116926001600160801b039290919083851161222257848002948086048114901517156115bb57811691161015612218576115b8921690612656565b6115b892166125db565b9361222e8183926124bc565b941691161015612243576115b8921690612590565b6115b89216612507565b6001906121ca565b82156122685760001992909204916121b8565b634e487b7160e01b600052601260045260246000fd5b6b048a170391f7dc42444e8fa26000929502901c93906121af565b6d2216e584f5fa1ea926041bedfe98909502811c946121a5565b946e5d6af8dedb81196699c329225ee60402811c9461219a565b946f09aa508b5b7a84e1c677de54f3e99bc902811c9461218f565b946f31be135f97d08fd981231505542fcfa602811c94612184565b946f70d869a156d2a1b890bb3df62baf32f702811c9461217a565b946fa9f746462d870fdf8a65dc1f90e061e502811c94612170565b946fd097f3bdfd2022b8845ad8f792aa582502811c94612166565b946fe7159475a2c29b7443b29c7fa6e889d902811c9461215c565b946ff3392b0822b70005940c7a398e4b70f302811c94612152565b946ff987a7253ac413176f2b074cf7815e5402811c94612148565b946ffcbe86c7900a88aedcffc83b479aa3a402811c9461213e565b946ffe5dee046a99a2a811c461f1969c305302811c94612134565b936fff2ea16466c96a3843ec78b326b528610260801c93612129565b936fff973b41fa98c081472e6896dfb254c00260801c93612120565b936fffcb9843d60f6159c9db58835c9266440260801c93612117565b936fffe5caca7e10e4e61c3624eaa0941cd00260801c9361210e565b936ffff2e50f5f656932ef12357cf3c7fdcc0260801c93612105565b936ffff97272373d413259a46990580e213a0260801c936120fc565b600160801b6120e9565b60405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606490fd5b826120c4565b60001982820990828102928380841093039183830393600093146124fc57600160401b928484111561017057500990828211900360c01b910360401c1790565b505090505060401c90565b600160801b91600019828409928260801b92838086109503948086039514612582578483111561138c5782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b50508092501561138c570490565b60001982820990828102928380841093039183830393600093146125d057600160801b928484111561017057500990828211900360801b910360801c1790565b505090505060801c90565b600160c01b91600019828409928260c01b92838086109503948086039514612582578483111561138c5782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b600019828209908281029283808410930391838303936000931461269657600160c01b928484111561017057500990828211900360401b910360c01c1790565b505090505060c01c90565b156126a857565b60405162461bcd60e51b815260206004820152601b60248201527a14d85999505c1c1c9bdd994e88185c1c1c9bdd994819985a5b1959602a1b6044820152606490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220d9442887a868ceba26bbad78d16cd6559d26041f79b8babd2b35b2807d5b316d64736f6c63430008130033";

type UniswapV3SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Swapper__factory extends ContractFactory {
  constructor(...args: UniswapV3SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3Swapper";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Swapper> {
    return super.deploy(
      _yieldBox,
      _swapRouter,
      _factory,
      _owner,
      overrides || {}
    ) as Promise<UniswapV3Swapper>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _swapRouter,
      _factory,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3Swapper {
    return super.attach(address) as UniswapV3Swapper;
  }
  override connect(signer: Signer): UniswapV3Swapper__factory {
    return super.connect(signer) as UniswapV3Swapper__factory;
  }
  static readonly contractName: "UniswapV3Swapper";

  public readonly contractName: "UniswapV3Swapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3SwapperInterface {
    return new utils.Interface(_abi) as UniswapV3SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Swapper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Swapper;
  }
}
