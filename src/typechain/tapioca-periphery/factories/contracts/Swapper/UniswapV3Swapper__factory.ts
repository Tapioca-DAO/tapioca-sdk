/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UniswapV3Swapper,
  UniswapV3SwapperInterface,
} from "../../../contracts/Swapper/UniswapV3Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Factory",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "PoolFee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawFromYb",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "depositToYb",
        type: "bool",
      },
    ],
    name: "buildSwapData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultDexOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_newFee",
        type: "uint24",
      },
    ],
    name: "setPoolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenIn",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenInId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenOut",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenOutId",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapTokensData",
            name: "tokensData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shareOut",
                type: "uint256",
              },
            ],
            internalType: "struct ISwapper.SwapAmountData",
            name: "amountData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "withdrawFromYb",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "depositToYb",
                type: "bool",
              },
            ],
            internalType: "struct ISwapper.YieldBoxData",
            name: "yieldBoxData",
            type: "tuple",
          },
        ],
        internalType: "struct ISwapper.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "twapDuration",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0346200018657601f62002b3438819003918201601f19168301916001600160401b038311848410176200018b57808492606094604052833981010312620001865780516001600160a01b0380821692919083820362000186576020830151928184169081850362000186576040015194828616918287036200018657620000e8620000e892620000f095600054903360018060a01b03198316176000553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055633c000bb866ffffffffffffff1960025416176002551515620001a1565b1515620001a1565b60805260a05260c0526040516129459081620001ef82396080518181816102550152818161052b015281816105b70152818161065601528181610bb901528181610c6501528181610d0801528181610dfa01526111ae015260a05181818161035d015281816104170152818161096b01528181610a0701528181610ac20152610f89015260c051818181610e6d0152610f440152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b15620001a957565b60405162461bcd60e51b815260206004820152601a60248201527f537761707065723a2061646472657373206e6f742076616c69640000000000006044820152606490fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c908163089fe6aa14611304575080631a163210146112d457806326d89545146112ad5780633fa2ef5e146112195780635bf66e4814611198578063715018a61461115057806373dd250c146110ed5780637b2a8bd214610fdf5780638da5cb5b14610fb8578063c31c9c0714610f73578063c45a015514610f2e578063e3c711a014610de7578063efa84c6d146101735763f2fde38b0361000f5734610170576020366003190112610170576100d9611365565b6100e161144d565b6001600160a01b0390811690811561011c576000548260018060a01b0319821617600055166000805160206128f0833981519152600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b5036600319016101a0811261081e576101401361017057610164356001600160a01b038116900361017057610184356001600160401b03811161081e573660238201121561081e57818160040135916101cb83611432565b926101d9604051948561140f565b80845236602482840101116108a05780602460209301838601378301015281816004356001600160a01b038116808203610a8f5715801590610dca575b15610ceb57926044356001600160a01b0381168103610a8f57915b856084358015801581610ce0575b15610b65575061027991505b60a43590602435887f0000000000000000000000000000000000000000000000000000000000000000611993565b916001600160a01b038616610aa1575b5115610a93575b602081805181010312610a8f5760200151936001600160a01b038116156109f25780945b6001600160a01b0384161561095657835b62ffffff6002541690604051978861010081011060018060401b036101008b01111761094257610100890160405260018060a01b0316885260018060a01b03166020880152604087015230606087015260808601528160a08601526101443560c08601528560e086015260018060a01b0316156108f1575b506103466118ad565b6040516312a9293f60e21b815285906020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156108e65782916108ac575b506040805163414bf38960e01b815287516001600160a01b0390811660048301526020808a0151821660248401529289015162ffffff1660448301526060890151811660648301526080890151608483015260a089015160a483015260c089015160c483015260e0890151811660e483015290979190889061010490829034907f0000000000000000000000000000000000000000000000000000000000000000165af1968715610593578397610874575b50602001516001600160a01b03908116908216810361082257506001600160a01b0381163b1561081e57604051632e1a7d4d60e01b81526004810187905291908290602490829084906001600160a01b03165af18015610813576107e4575b508347106107935715610728575b6104bc6118ad565b6104d1575b6040838382519182526020820152f35b90506001600160a01b03811661059e575b50604051634d4d7cbd60e11b8152606435600482015230602482015260018060a01b036101643516604482015281606482015282608482015260408160a4818660018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19081156105935760409391610564575b50386104c1565b6105849150833d851161058c575b61057c818361140f565b8101906118bd565b90503861055d565b503d610572565b6040513d85823e3d90fd5b803b156106ec5760405163095ea7b360e01b60208201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316602482015260448082018590528152906001600160401b0360808301908111908311176106d65783809161063782808660806106a1980160405260208151910182865af161062b6118ee565b816106a7575b50611936565b60405163095ea7b360e01b60208201908152908390610695816106878a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316602484016118d3565b03601f19810183528261140f565b51925af161062b6118ee565b386104e2565b80518015925082156106bc575b505038610631565b6106cf925060208091830101910161191e565b38806106b4565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601460248201527314ddd85c1c195c8e881b9bc818dbdb9d1c9858dd60621b6044820152606490fd5b8380808086610164355af161073b6118ee565b506104b45760405162461bcd60e51b815260206004820152602560248201527f556e69737761705633537761707065723a20657468207472616e736665722066604482015264185a5b195960da1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f556e69737761705633537761707065723a2065746820756e77726170206661696044820152621b195960ea1b6064820152608490fd5b9094906001600160401b0381116107ff5760405293386104a6565b634e487b7160e01b82526041600452602482fd5b6040513d88823e3d90fd5b5080fd5b9291505015610832575b506104b4565b60405163a9059cbb60e01b602082015261086e916108698261085b8861016435602484016118d3565b03601f19810184528361140f565b611c4a565b3861082c565b9096506020813d6020116108a4575b816108906020938361140f565b810103126108a057519538610447565b8280fd5b3d9150610883565b90506020813d6020116108de575b816108c76020938361140f565b8101031261081e576108d890611582565b38610395565b3d91506108ba565b6040513d84823e3d90fd5b34036108fd573861033d565b60405162461bcd60e51b815260206004820152601f60248201527f556e69737761705633537761707065723a20676173206e6f742076616c6964006044820152606490fd5b634e487b7160e01b8a52604160045260248afd5b6040516312a9293f60e21b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156109e75788916109a9575b506102c5565b90506020813d6020116109df575b816109c46020938361140f565b810103126109db576109d590611582565b386109a3565b8780fd5b3d91506109b7565b6040513d8a823e3d90fd5b6040516312a9293f60e21b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610a84578791610a46575b50946102b4565b90506020813d602011610a7c575b81610a616020938361140f565b81010312610a7857610a7290611582565b38610a3f565b8680fd5b3d9150610a54565b6040513d89823e3d90fd5b8580fd5b50610a9c611547565b610290565b60405163095ea7b360e01b602082019081528891829190610af381610687897f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316602484016118d3565b5190828a5af1610b016118ee565b81610b36575b506102895760405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606490fd5b8051801592508215610b4b575b505038610b07565b610b5e925060208091830101910161191e565b3880610b43565b906024359182610c2f575b50505060643580610b86575b506102799061024b565b60c435610c255760405163442c159960e01b8152600481019190915260e4356024820152604481018890526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156109e757610bfa575b50610279905b90610b7c565b602090813d8311610c1e575b610c10818361140f565b81010312610a785738610bee565b503d610c06565b5061027990610bf4565b9192509015610cd9575060405163442c159960e01b8152600481019190915260a4356024820152604481018790526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610a84578791610ca7575b505b388080610b70565b90506020813d602011610cd1575b81610cc26020938361140f565b81010312610a78575138610c9d565b3d9150610cb5565b9050610c9f565b5060c435151561023f565b50604051630cf35bdd60e41b8082526024803560048401529094917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691608090829081855afa8015610a84576080918891610da9575b5095602460405180948193825260643560048301525afa908115610813578691610d76575b5091610231565b610d98915060803d608011610da2575b610d90818361140f565b8101906115d0565b5050905038610d6f565b503d610d86565b610dc09150823d8411610da257610d90818361140f565b5050905038610d4a565b506044356001600160a01b03811690819003610a8f571515610216565b503461017057610df63661139e565b50507f0000000000000000000000000000000000000000000000000000000000000000610e3f610e268284611609565b9190926020946060810135906080878201359101611709565b905060025494604051630b4c774160e11b8152858180610e6962ffffff8b16888a60048501611596565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215610f22578092610ed9575b5050610ebf9063ffffffff610ed1969760181c1690611e0b565b506001600160801b039091169061216e565b604051908152f35b9091508582813d8311610f1b575b610ef1818361140f565b810103126101705750610ed1949563ffffffff610f10610ebf93611582565b925081979650610ea5565b503d610ee7565b604051903d90823e3d90fd5b50346101705780600319360112610170576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101705780600319360112610170576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610170578060031936011261017057546040516001600160a01b039091168152602090f35b50346101705760c0366003190112610170576110e990610ffd611380565b61100561138f565b61100d611503565b50611016611503565b9261101f6114a5565b91604435835260643560208401526110356114a5565b918083526040830152600435602083015260243560608301526110566114da565b93151584521515602084015283526020830152604082015260405191829182919091610120602060406101408401956060815160018060a01b03808251168852858201518689015284820151168488015201516060860152606083820151805160808801528481015160a08801528381015160c0880152015160e086015201518051151561010085015201511515910152565b0390f35b50346101705760203660031901126101705760043562ffffff8082168092036108a05761111861144d565b816002549182167f2bff118b9b9e3deb4fc5204e6ba828351c954685d0b119d0e21add79f87833998580a362ffffff19161760025580f35b503461017057806003193601126101705761116961144d565b80546001600160a01b03198116825581906001600160a01b03166000805160206128f08339815191528280a380f35b5034610170576111a73661139e565b50506111f07f00000000000000000000000000000000000000000000000000000000000000006111d78184611609565b9290916020946060810135906080878201359101611709565b5060025494604051630b4c774160e11b8152858180610e6962ffffff8b16898960048501611596565b50346101705760c036600319011261017057611233611365565b906024356001600160a01b03818116929183900361081e576110e993611257611380565b9261126061138f565b90611269611503565b50611272611503565b9561127b6114a5565b94604435865260643560208701526112916114a5565b94168452604084015280602084015260608301526110566114da565b5034610170578060031936011261017057602063ffffffff60025460181c16604051908152f35b50346101705780600319360112610170576110e96112f0611547565b604051918291602083526020830190611325565b90503461081e578160031936011261081e5760209062ffffff600254168152f35b919082519283825260005b848110611351575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611330565b600435906001600160a01b038216820361137b57565b600080fd5b60843590811515820361137b57565b60a43590811515820361137b57565b6003198101610160811261137b576101401361137b576004916001600160401b0391610144359083821161137b578060238301121561137b578185013593841161137b576024848301011161137b576024019190565b604081019081106001600160401b038211176106d657604052565b601f909101601f19168101906001600160401b038211908210176106d657604052565b6001600160401b0381116106d657601f01601f191660200190565b6000546001600160a01b0316330361146157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60405190608082016001600160401b038111838210176106d65760405260006060838281528260208201528260408201520152565b60408051919082016001600160401b038111838210176106d65760405260006020838281520152565b60405190606082016001600160401b038111838210176106d657604052816115296114a5565b81526115336114a5565b602082015260406115426114da565b910152565b610e10420180421161156c5760405190602082015260208152611569816113f4565b90565b634e487b7160e01b600052601160045260246000fd5b51906001600160a01b038216820361137b57565b6001600160a01b0391821681529116602082015262ffffff909116604082015260600190565b356001600160a01b038116810361137b5790565b919082608091031261137b578151600581101561137b57916115f460208201611582565b91606061160360408401611582565b92015190565b91906001600160a01b03908161161e856115bc565b16158015906116f3575b15611644575050611569604061163d846115bc565b93016115bc565b1691604051630cf35bdd60e41b90818152602083013560048201526080928382602481895afa9182156116c65760609385936024926000916116d2575b509760405195869485938452013560048301525afa9182156116c6576000926116a957505090565b6116bf9250803d10610da257610d90818361140f565b5050905090565b6040513d6000823e3d90fd5b6116e99150853d8711610da257610d90818361140f565b5050905038611681565b5081611701604086016115bc565b161515611628565b9392843592600092839283929186158015816118a0575b15611735575050505050505060409092013590565b819293949699959897916117fe575b50505081611753575b50505050565b909192939450604083013580156000146117f4575060405163442c159960e01b8152600481019290925260609092013560248201526044810183905290602090829060649082906001600160a01b03165afa918215610f225780926117c0575b50505b903880808061174d565b9091506020823d82116117ec575b816117db6020938361140f565b8101031261017057505138806117b3565b3d91506117ce565b93505050506117b6565b929850909115611899575060405163442c159960e01b81526004810191909152602083810135602483015260448201859052816064816001600160a01b038b165afa90811561188e578491611859575b505b95388080611744565b90506020813d8211611886575b816118736020938361140f565b8101031261188257513861184e565b8380fd5b3d9150611866565b6040513d86823e3d90fd5b9050611850565b5060408a01351515611720565b61012435801515810361137b5790565b919082604091031261137b576020825192015190565b6001600160a01b039091168152602081019190915260400190565b3d15611919573d906118ff82611432565b9161190d604051938461140f565b82523d6000602084013e565b606090565b9081602091031261137b5751801515810361137b5790565b1561193d57565b60405162461bcd60e51b815260206004820152602860248201527f42617365537761707065723a3a73616665417070726f76653a20617070726f76604482015267194819985a5b195960c21b6064820152608490fd5b939190929361010435801515810361137b57611bd9575050508115611b9d576001600160a01b0316908115611b535760408051906370a0823160e01b90818352306004840152602091602494838587818a5afa948515611b4857600095611b19575b5082516323b872dd60e01b85820152338782015230604482015260648082019290925290815260a081016001600160401b03811182821017611b0457849291611a4091855288611c4a565b8583518098819382523060048301525afa948515611af957600095611aca575b5082851115611a8c5750508203918211611a78575090565b634e487b7160e01b60009081526011600452fd5b5162461bcd60e51b815260048101919091526018818401527714ddd85c1c195c8e881d1c985b9cd9995c8819985a5b195960421b6044820152606490fd5b90948282813d8311611af2575b611ae1818361140f565b810103126101705750519338611a60565b503d611ad7565b50513d6000823e3d90fd5b86634e487b7160e01b60005260416004526000fd5b90948482813d8311611b41575b611b30818361140f565b8101031261017057505193386119f5565b503d611b26565b83513d6000823e3d90fd5b8091503403611b5f5790565b60405162461bcd60e51b815260206004820152601660248201527514ddd85c1c195c8e8819d85cc81b9bdd081d985b1a5960521b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152730537761707065723a20616d6f756e7420697320360641b6044820152606490fd5b6040935090600060a492859694965196879586946311a5cc7760e31b865260048601523060248601523060448601526064850152608484015260018060a01b03165af19081156116c657600091611c2e575090565b611c46915060403d811161058c5761057c818361140f565b5090565b604051611ca8916001600160a01b0316611c63826113f4565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af1611ca26118ee565b91611d24565b80519081611cb557505050565b8280611cc593830101910161191e565b15611ccd5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b91929015611d865750815115611d38575090565b3b15611d415790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611d995750805190602001fd5b60405162461bcd60e51b815260206004820152908190611dbd906024830190611325565b0390fd5b6001600160401b0381116106d65760051b60200190565b805115611de55760200190565b634e487b7160e01b600052603260045260246000fd5b805160011015611de55760400190565b63ffffffff929183169081156121445760408051909490916001600160401b0360608401818111858210176106d6578792975260028452602090818501908336833786611e5787611dd8565b5260009384611e6588611dfb565b528481519a8b9463883bdbfd60e01b865260249889870160049b898d8a01525180915260448801929185905b8a83831061211b5750505050509085809260018060a01b039e8f910392165afa928315612111578592869461200a575b505050611ed7611ed082611dfb565b5191611dd8565b5160060b9060060b0397667fffffffffffff1991667fffffffffffff8a13838b1217611fc55781611f1381611f0b84611dfb565b511692611dd8565b5116900391818311611fc5578760030b9960060b8a15611ff8576000199181148b831416611fe6578a810560020b9a8682129182611fd7575b5050611fb0575b508681026001600160c01b031696870403611f9e57901b600160201b600160c01b0316928315611f8e5750505090046001600160801b031690565b634e487b7160e01b825260129052fd5b5050634e487b7160e01b815260118352fd5b9098627fffff198114611fc557019738611f53565b634e487b7160e01b8552601187528585fd5b0760060b151590503880611f4c565b634e487b7160e01b8652601188528686fd5b634e487b7160e01b8652601288528686fd5b91935091503d8086843e61201e818461140f565b8201908383830312610a8f578251818111610a785783019282601f85011215610a785783519361204d85611dc1565b9461205a8751968761140f565b808652878087019160051b8301019185831161210d578801905b8282106120f05750505085810151918211610a78570181601f82011215610a8f578051906120ad6120a483611dc1565b9551958661140f565b818552858086019260051b820101928311610a78578501905b8282106120d857505050388080611ec1565b81518c811681036109db5781529085019085016120c6565b81518060060b8103612109578152908801908801612074565b8a80fd5b8980fd5b81513d87823e3d90fd5b91946001939698999a5084975081839295511681520195019201928e979695938a959392611e91565b60405162461bcd60e51b8152602060048201526002602482015261042560f41b6044820152606490fd5b9291909260020b906000821260001461270457600160ff1b821461156c5781600003915b620d89e883116126db5760018316156126d1576ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b0316600284166126a7575b60049384811661267b575b6008811661264f575b60108116612623575b602081166125f7575b604081166125cb575b6080908181166125a0575b6101008116612575575b610200811661254a575b610400811661251f575b61080081166124f4575b61100081166124c9575b612000811661249e575b6140008116612473575b6180008116612448575b62010000811661241d575b6202000081166123f3575b6204000081166123b5575b620800001661237a575b5090600012612356575b63ffffffff8160201c91161560001461234d5760ff60005b168101809111612338576001600160a01b03908116936001600160801b039384861161230c57858002958087048114901517156122f757508116911610156122ed576115699216906128a4565b6115699216612829565b601190634e487b7160e01b6000525260246000fd5b509361231981839261270a565b94169116101561232e576115699216906127de565b6115699216612755565b601183634e487b7160e01b6000525260246000fd5b60ff60016122a0565b80156123655760001904612288565b601283634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa2918281029281840414901517156123a0571c600061227e565b601185634e487b7160e01b6000525260246000fd5b916d2216e584f5fa1ea926041bedfe98908181029181830414901517156123de57811c91612274565b601186634e487b7160e01b6000525260246000fd5b916e5d6af8dedb81196699c329225ee604908181029181830414901517156123de57811c91612269565b916f09aa508b5b7a84e1c677de54f3e99bc9908181029181830414901517156123de57811c9161225e565b916f31be135f97d08fd981231505542fcfa6908181029181830414901517156123de57811c91612253565b916f70d869a156d2a1b890bb3df62baf32f7908181029181830414901517156123de57811c91612249565b916fa9f746462d870fdf8a65dc1f90e061e5908181029181830414901517156123de57811c9161223f565b916fd097f3bdfd2022b8845ad8f792aa5825908181029181830414901517156123de57811c91612235565b916fe7159475a2c29b7443b29c7fa6e889d9908181029181830414901517156123de57811c9161222b565b916ff3392b0822b70005940c7a398e4b70f3908181029181830414901517156123de57811c91612221565b916ff987a7253ac413176f2b074cf7815e54908181029181830414901517156123de57811c91612217565b916ffcbe86c7900a88aedcffc83b479aa3a4908181029181830414901517156123de57811c9161220d565b916ffe5dee046a99a2a811c461f1969c3053908181029181830414901517156123de57811c91612203565b906fff2ea16466c96a3843ec78b326b52861908181029181830414901517156123a05760801c906121f8565b906fff973b41fa98c081472e6896dfb254c0908181029181830414901517156123a05760801c906121ef565b906fffcb9843d60f6159c9db58835c926644908181029181830414901517156123a05760801c906121e6565b906fffe5caca7e10e4e61c3624eaa0941cd0908181029181830414901517156123a05760801c906121dd565b906ffff2e50f5f656932ef12357cf3c7fdcc908181029181830414901517156123a05760801c906121d4565b6ffff97272373d413259a46990580e213a9081810291818304149015171561156c5760801c6121c9565b600160801b6121b7565b60405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606490fd5b81612192565b600019828209908281029283808410930391838303936000931461274a57600160401b928484111561017057500990828211900360c01b910360401c1790565b505090505060401c90565b600160801b91600019828409928260801b928380861095039480860395146127d0578483111561137b5782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b50508092501561137b570490565b600019828209908281029283808410930391838303936000931461281e57600160801b928484111561017057500990828211900360801b910360801c1790565b505090505060801c90565b600160c01b91600019828409928260c01b928380861095039480860395146127d0578483111561137b5782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b60001982820990828102928380841093039183830393600093146128e457600160c01b928484111561017057500990828211900360401b910360c01c1790565b505090505060c01c9056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212204c15df0d003a42217db711a49bd2c0a6a01932f7edf071b0e028c5c207b2618864736f6c63430008120033";

type UniswapV3SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Swapper__factory extends ContractFactory {
  constructor(...args: UniswapV3SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3Swapper";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Swapper> {
    return super.deploy(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    ) as Promise<UniswapV3Swapper>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _swapRouter,
      _factory,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3Swapper {
    return super.attach(address) as UniswapV3Swapper;
  }
  override connect(signer: Signer): UniswapV3Swapper__factory {
    return super.connect(signer) as UniswapV3Swapper__factory;
  }
  static readonly contractName: "UniswapV3Swapper";

  public readonly contractName: "UniswapV3Swapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3SwapperInterface {
    return new utils.Interface(_abi) as UniswapV3SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Swapper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Swapper;
  }
}
