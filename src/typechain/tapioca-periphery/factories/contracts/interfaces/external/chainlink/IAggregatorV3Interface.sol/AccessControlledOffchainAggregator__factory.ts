/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  AccessControlledOffchainAggregator,
  AccessControlledOffchainAggregatorInterface,
} from "../../../../../../contracts/interfaces/external/chainlink/IAggregatorV3Interface.sol/AccessControlledOffchainAggregator";

const _abi = [
  {
    inputs: [],
    name: "maxAnswer",
    outputs: [
      {
        internalType: "int192",
        name: "",
        type: "int192",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minAnswer",
    outputs: [
      {
        internalType: "int192",
        name: "",
        type: "int192",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class AccessControlledOffchainAggregator__factory {
  static readonly abi = _abi;
  static createInterface(): AccessControlledOffchainAggregatorInterface {
    return new utils.Interface(
      _abi
    ) as AccessControlledOffchainAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlledOffchainAggregator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccessControlledOffchainAggregator;
  }
}
