/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BalancerVaultMock,
  BalancerVaultMockInterface,
} from "../../../../deprecated/balancer/mocks/BalancerVaultMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_stablePool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "minAmountsOut",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IBalancerVault.ExitPoolRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "exitPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "enum IBalancerVault.PoolSpecialization",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "getPoolTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "maxAmountsIn",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IBalancerVault.JoinPoolRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "joinPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablePool",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c45380380610c4583398101604081905261002f91610078565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b2565b6001600160a01b038116811461007557600080fd5b50565b6000806040838503121561008b57600080fd5b825161009681610060565b60208401519092506100a781610060565b809150509250929050565b610b84806100c16000396000f3fe6080604052600436106100595760003560e01c80633fc8cef3146100655780638bdb3913146100a257806395ef4fa5146100c4578063b95cac28146100e4578063f6c00927146100f7578063f94d46681461013157600080fd5b3661006057005b600080fd5b34801561007157600080fd5b50600154610085906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ae57600080fd5b506100c26100bd366004610954565b610160565b005b3480156100d057600080fd5b50600054610085906001600160a01b031681565b6100c26100f2366004610954565b6101fb565b34801561010357600080fd5b506101236101123660046109c0565b50600080546001600160a01b031691565b6040516100999291906109d9565b34801561013d57600080fd5b5061015161014c3660046109c0565b610316565b60405161009993929190610a14565b61019b8330836020015160018151811061017c5761017c610aa1565b60209081029190910101516000546001600160a01b03169291906103a2565b6101f58282602001516001815181106101b6576101b6610aa1565b602002602001015183600001516001815181106101d5576101d5610aa1565b60200260200101516001600160a01b031661040d9092919063ffffffff16565b50505050565b6102578330836020015160018151811061021757610217610aa1565b6020026020010151846000015160018151811061023657610236610aa1565b60200260200101516001600160a01b03166103a2909392919063ffffffff16565b600054602082015180516001600160a01b0390921691637c928fe99190600190811061028557610285610aa1565b60200260200101516040518263ffffffff1660e01b81526004016102ab91815260200190565b600060405180830381600087803b1580156102c557600080fd5b505af11580156102d9573d6000803e3d6000fd5b505050506101f58282602001516001815181106102f8576102f8610aa1565b60209081029190910101516000546001600160a01b0316919061040d565b6040805160028082526060828101909352829160009181602001602082028036833750506001805483519396506001600160a01b031692869250811061035e5761035e610aa1565b6001600160a01b0392909216602092830291909101820152604080516002808252606082018352909290919083019080368337019050509150600090509193909250565b6040516001600160a01b03808516602483015283166044820152606481018290526101f59085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610442565b6040516001600160a01b03831660248201526044810182905261043d90849063a9059cbb60e01b906064016103d6565b505050565b6000610497826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661051c9092919063ffffffff16565b90508051600014806104b85750808060200190518101906104b89190610ab7565b61043d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b606061052b8484600085610533565b949350505050565b6060824710156105945760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610513565b600080866001600160a01b031685876040516105b09190610aff565b60006040518083038185875af1925050503d80600081146105ed576040519150601f19603f3d011682016040523d82523d6000602084013e6105f2565b606091505b50915091506106038783838761060e565b979650505050505050565b6060831561067d578251600003610676576001600160a01b0385163b6106765760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610513565b508161052b565b61052b83838151156106925781518083602001fd5b8060405162461bcd60e51b81526004016105139190610b1b565b6001600160a01b03811681146106c157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156106fd576106fd6106c4565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561072c5761072c6106c4565b604052919050565b600067ffffffffffffffff82111561074e5761074e6106c4565b5060051b60200190565b600082601f83011261076957600080fd5b8135602061077e61077983610734565b610703565b82815260059290921b8401810191818101908684111561079d57600080fd5b8286015b848110156107b857803583529183019183016107a1565b509695505050505050565b600082601f8301126107d457600080fd5b813567ffffffffffffffff8111156107ee576107ee6106c4565b610801601f8201601f1916602001610703565b81815284602083860101111561081657600080fd5b816020850160208301376000918101602001919091529392505050565b80151581146106c157600080fd5b803561084c81610833565b919050565b60006080828403121561086357600080fd5b61086b6106da565b9050813567ffffffffffffffff8082111561088557600080fd5b818401915084601f83011261089957600080fd5b813560206108a961077983610734565b82815260059290921b840181019181810190888411156108c857600080fd5b948201945b838610156108ef5785356108e0816106ac565b825294820194908201906108cd565b8652508581013593508284111561090557600080fd5b61091187858801610758565b9085015250604084013591508082111561092a57600080fd5b50610937848285016107c3565b60408301525061094960608301610841565b606082015292915050565b6000806000806080858703121561096a57600080fd5b84359350602085013561097c816106ac565b9250604085013561098c816106ac565b9150606085013567ffffffffffffffff8111156109a857600080fd5b6109b487828801610851565b91505092959194509250565b6000602082840312156109d257600080fd5b5035919050565b6001600160a01b03831681526040810160038310610a0757634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b606080825284519082018190526000906020906080840190828801845b82811015610a565781516001600160a01b031684529284019290840190600101610a31565b5050508381038285015285518082528683019183019060005b81811015610a8b57835183529284019291840191600101610a6f565b5050809350505050826040830152949350505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610ac957600080fd5b8151610ad481610833565b9392505050565b60005b83811015610af6578181015183820152602001610ade565b50506000910152565b60008251610b11818460208701610adb565b9190910192915050565b6020815260008251806020840152610b3a816040850160208701610adb565b601f01601f1916919091016040019291505056fea264697066735822122068daf55c6526b3f9738afd54cb897cc801eeb16f004bd1f7d41e6693100b71d064736f6c63430008120033";

type BalancerVaultMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerVaultMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerVaultMock__factory extends ContractFactory {
  constructor(...args: BalancerVaultMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BalancerVaultMock";
  }

  override deploy(
    _stablePool: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BalancerVaultMock> {
    return super.deploy(
      _stablePool,
      _weth,
      overrides || {}
    ) as Promise<BalancerVaultMock>;
  }
  override getDeployTransaction(
    _stablePool: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stablePool, _weth, overrides || {});
  }
  override attach(address: string): BalancerVaultMock {
    return super.attach(address) as BalancerVaultMock;
  }
  override connect(signer: Signer): BalancerVaultMock__factory {
    return super.connect(signer) as BalancerVaultMock__factory;
  }
  static readonly contractName: "BalancerVaultMock";

  public readonly contractName: "BalancerVaultMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerVaultMockInterface {
    return new utils.Interface(_abi) as BalancerVaultMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerVaultMock {
    return new Contract(address, _abi, signerOrProvider) as BalancerVaultMock;
  }
}
