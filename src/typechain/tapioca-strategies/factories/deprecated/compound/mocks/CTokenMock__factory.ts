/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CTokenMock,
  CTokenMockInterface,
} from "../../../../deprecated/compound/mocks/CTokenMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "_comptroller",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accrualBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "comptroller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comptrollerAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRateStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "extractTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasMintRestrictions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "redeemTokens",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "redeemTokens",
        type: "uint256",
      },
    ],
    name: "redeemUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveFactorMantissa",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_fee",
        type: "uint32",
      },
    ],
    name: "setTransferFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBorrows",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferFee",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "updateMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610160604052600c8054600160301b600160d01b03191690553480156200002557600080fd5b5060405162002897380380620028978339810160408190526200004891620004f0565b6040518060400160405280600a81526020016943546f6b656e4d6f636b60b01b8152506040518060400160405280600381526020016243544d60e81b81525069152d02c7e14af68000006012338480604051806040016040528060018152602001603160f81b81525087878160039081620000c49190620005cc565b506004620000d38282620005cc565b505050620000f16005836200024260201b6200100f1790919060201c565b610120526200010e81600662000242602090811b6200100f17901c565b61014052815160208084019190912060e052815190820120610100524660a0526200019c60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250620001b13362000292565b600c805460ff191660ff8416908117909155620001d090600a620007ab565b620001de906103e8620007c3565b600b55620001ec81620002e4565b620001f8308462000367565b5050600c805461ff0019166101001790555050600d80546001600160a01b039485166001600160a01b031991821617909155600e8054939094169216919091179091555062000868565b600060208351101562000262576200025a836200042a565b90506200028c565b8262000279836200046d60201b620010401760201c565b90620002869082620005cc565b5060ff90505b92915050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620002ee62000470565b6001600160a01b038116620003595760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620003648162000292565b50565b6001600160a01b038216620003bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000350565b8060026000828254620003d39190620007dd565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080829050601f8151111562000458578260405163305a27a960e01b8152600401620003509190620007f3565b8051620004658262000843565b179392505050565b90565b6009546001600160a01b03163314620004cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000350565b565b505050565b80516001600160a01b0381168114620004eb57600080fd5b919050565b600080604083850312156200050457600080fd5b6200050f83620004d3565b91506200051f60208401620004d3565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200055357607f821691505b6020821081036200057457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004ce57600081815260208120601f850160051c81016020861015620005a35750805b601f850160051c820191505b81811015620005c457828155600101620005af565b505050505050565b81516001600160401b03811115620005e857620005e862000528565b6200060081620005f984546200053e565b846200057a565b602080601f8311600181146200063857600084156200061f5750858301515b600019600386901b1c1916600185901b178555620005c4565b600085815260208120601f198616915b82811015620006695788860151825594840194600190910190840162000648565b5085821015620006885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620006ef578160001904821115620006d357620006d362000698565b80851615620006e157918102915b93841c9390800290620006b3565b509250929050565b60008262000708575060016200028c565b8162000717575060006200028c565b81600181146200073057600281146200073b576200075b565b60019150506200028c565b60ff8411156200074f576200074f62000698565b50506001821b6200028c565b5060208310610133831016604e8410600b841016171562000780575081810a6200028c565b6200078c8383620006ae565b8060001904821115620007a357620007a362000698565b029392505050565b6000620007bc60ff841683620006f7565b9392505050565b80820281158282048414176200028c576200028c62000698565b808201808211156200028c576200028c62000698565b600060208083528351808285015260005b81811015620008225785810183015185820160400152820162000804565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620005745760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051611fd4620008c36000396000610be701526000610bbc015260006115e9015260006115c10152600061151c01526000611546015260006115700152611fd46000f3fe6080604052600436106102815760003560e01c806370a082311161014f578063a9059cbb116100c1578063db006a751161007a578063db006a75146105d3578063dd62ed3e1461071b578063e01d55c51461073b578063e74b981b1461075b578063f2fde38b1461077b578063f8f9da28146102f257600080fd5b8063a9059cbb1461065c578063acb2ad6f1461067c578063d0e30db0146106b4578063d4a744ba146106bc578063d505accf146106db578063d6b5a2db146106fb57600080fd5b8063852a12e311610113578063852a12e3146105d35780638da5cb5b146105f35780638f840ddd146102f257806395d89b4114610611578063996517cf14610626578063a457c2d71461063c57600080fd5b806370a0823114610520578063715018a6146105565780637c928fe91461056b5780637ecebe001461058b57806384b0196e146105ab57600080fd5b80632e9ef976116101f3578063449a52f8116101ac578063449a52f81461048857806346904840146104a857806347bd3718146102f25780635fe3b567146104cf5780636c540baf146104ed5780636f307dc31461050057600080fd5b80632e9ef976146103d9578063313ce567146103f95780633644e5151461041b578063365ceb391461043057806339509351146104685780633b1d21a2146102f257600080fd5b8063182df0f511610245578063182df0f5146103255780631d0dc2671461034057806321442ec91461035557806322ae81af1461038257806323b872dd146103995780632e1a7d4d146103b957600080fd5b806306fdde031461028d578063095ea7b3146102b85780631249c58b146102e8578063173b9904146102f257806318160ddd1461031057600080fd5b3661028857005b600080fd5b34801561029957600080fd5b506102a261079b565b6040516102af9190611b65565b60405180910390f35b3480156102c457600080fd5b506102d86102d3366004611b9b565b61082d565b60405190151581526020016102af565b6102f0610847565b005b3480156102fe57600080fd5b5060015b6040519081526020016102af565b34801561031c57600080fd5b50600254610302565b34801561033157600080fd5b50670de0b6b3a7640000610302565b34801561034c57600080fd5b506102f0610867565b34801561036157600080fd5b50610302610370366004611bc5565b600a6020526000908152604090205481565b34801561038e57600080fd5b506103026201518081565b3480156103a557600080fd5b506102d86103b4366004611be0565b61088c565b3480156103c557600080fd5b506102f06103d4366004611c1c565b610912565b3480156103e557600080fd5b506102f06103f4366004611c35565b6109ce565b34801561040557600080fd5b50600c5460405160ff90911681526020016102af565b34801561042757600080fd5b50610302610a52565b34801561043c57600080fd5b50600e54610450906001600160a01b031681565b6040516001600160a01b0390911681526020016102af565b34801561047457600080fd5b506102d8610483366004611b9b565b610a61565b34801561049457600080fd5b506102f06104a3366004611b9b565b610a83565b3480156104b457600080fd5b50600c5461045090600160301b90046001600160a01b031681565b3480156104db57600080fd5b50600e546001600160a01b0316610450565b3480156104f957600080fd5b5043610302565b34801561050c57600080fd5b50600d54610450906001600160a01b031681565b34801561052c57600080fd5b5061030261053b366004611bc5565b6001600160a01b031660009081526020819052604090205490565b34801561056257600080fd5b506102f0610a99565b34801561057757600080fd5b506102f0610586366004611c1c565b610aad565b34801561059757600080fd5b506103026105a6366004611bc5565b610b90565b3480156105b757600080fd5b506105c0610bae565b6040516102af9796959493929190611c5b565b3480156105df57600080fd5b506103026105ee366004611c1c565b610c37565b3480156105ff57600080fd5b506009546001600160a01b0316610450565b34801561061d57600080fd5b506102a2610c75565b34801561063257600080fd5b50610302600b5481565b34801561064857600080fd5b506102d8610657366004611b9b565b610c84565b34801561066857600080fd5b506102d8610677366004611b9b565b610d0a565b34801561068857600080fd5b50600c5461069f9062010000900463ffffffff1681565b60405163ffffffff90911681526020016102af565b6102f0610d72565b3480156106c857600080fd5b50600c546102d890610100900460ff1681565b3480156106e757600080fd5b506102f06106f6366004611cf1565b610db3565b34801561070757600080fd5b506102f0610716366004611c1c565b610f17565b34801561072757600080fd5b50610302610736366004611d64565b610f2a565b34801561074757600080fd5b506102f0610756366004611c1c565b610f55565b34801561076757600080fd5b506102f0610776366004611bc5565b610f62565b34801561078757600080fd5b506102f0610796366004611bc5565b610f99565b6060600380546107aa90611d97565b80601f01602080910402602001604051908101604052809291908181526020018280546107d690611d97565b80156108235780601f106107f857610100808354040283529160200191610823565b820191906000526020600020905b81548152906001019060200180831161080657829003601f168201915b5050505050905090565b60003361083b818585611043565b60019150505b92915050565b610855610586606434611de1565b61086433610677606434611de1565b50565b61086f611168565b600c805461ff001981166101009182900460ff1615909102179055565b600c546000908190620186a0906108af9062010000900463ffffffff1685611df4565b6108b99190611e0b565b905060006108c78285611de1565b9050336108d58782846111c2565b6108e087878461123c565b821561090557600c54610905908890600160301b90046001600160a01b03168561123c565b5060019695505050505050565b3360009081526020819052604090205481111561095e5760405162461bcd60e51b815260206004820152600560248201526422b93937b960d91b60448201526064015b60405180910390fd5b61096833826113e0565b604051339082156108fc029083906000818181858888f19350505050158015610995573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b6109d6611168565b620186a063ffffffff821610610a2e5760405162461bcd60e51b815260206004820152601760248201527f45524332304d6f636b3a2066656520746f6f20686967680000000000000000006044820152606401610955565b600c805463ffffffff909216620100000265ffffffff000019909216919091179055565b6000610a5c61150f565b905090565b60003361083b818585610a748383610f2a565b610a7e9190611e2d565b611043565b610a8b611168565b610a95828261163a565b5050565b610aa1611168565b610aab60006116f9565b565b600c54610100900460ff1615610b7457600b54811115610b0f5760405162461bcd60e51b815260206004820152601960248201527f45524332304d6f636b3a20616d6f756e7420746f6f20626967000000000000006044820152606401610955565b336000908152600a60205260409020544290610b2f906201518090611e2d565b1115610b745760405162461bcd60e51b815260206004820152601460248201527345524332304d6f636b3a20746f6f206561726c7960601b6044820152606401610955565b336000818152600a60205260409020429055610864908261163a565b6001600160a01b038116600090815260076020526040812054610841565b600060608082808083610be27f0000000000000000000000000000000000000000000000000000000000000000600561174b565b610c0d7f0000000000000000000000000000000000000000000000000000000000000000600661174b565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b604051600090339083156108fc0290849084818181858888f19350505050158015610c66573d6000803e3d6000fd5b50610c7133836113e0565b5090565b6060600480546107aa90611d97565b60003381610c928286610f2a565b905083811015610cf25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610955565b610cff8286868403611043565b506001949350505050565b600c546000908190620186a090610d2d9062010000900463ffffffff1685611df4565b610d379190611e0b565b9050610d4d3385610d488487611de1565b61123c565b801561083b57600c5461083b903390600160301b90046001600160a01b03168361123c565b610d7c333461163a565b60405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b83421115610e035760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610955565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610e328c6117ef565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610e8d82611817565b90506000610e9d82878787611844565b9050896001600160a01b0316816001600160a01b031614610f005760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610955565b610f0b8a8a8a611043565b50505050505050505050565b610f1f611168565b61086430338361123c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610f5d611168565b600b55565b610f6a611168565b600c80546001600160a01b03909216600160301b026601000000000000600160d01b0319909216919091179055565b610fa1611168565b6001600160a01b0381166110065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610955565b610864816116f9565b600060208351101561102b576110248361186c565b9050610841565b816110368482611ea4565b5060ff9050610841565b90565b6001600160a01b0383166110a55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610955565b6001600160a01b0382166111065760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610955565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6009546001600160a01b03163314610aab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610955565b60006111ce8484610f2a565b9050600019811461123657818110156112295760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610955565b6112368484848403611043565b50505050565b6001600160a01b0383166112a05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610955565b6001600160a01b0382166113025760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610955565b6001600160a01b0383166000908152602081905260409020548181101561137a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610955565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611236565b6001600160a01b0382166114405760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610955565b6001600160a01b038216600090815260208190526040902054818110156114b45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610955565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161115b565b505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561156857507f000000000000000000000000000000000000000000000000000000000000000046145b1561159257507f000000000000000000000000000000000000000000000000000000000000000090565b610a5c604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b0382166116905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610955565b80600260008282546116a29190611e2d565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060ff831461175e57611024836118aa565b81805461176a90611d97565b80601f016020809104026020016040519081016040528092919081815260200182805461179690611d97565b80156117e35780601f106117b8576101008083540402835291602001916117e3565b820191906000526020600020905b8154815290600101906020018083116117c657829003601f168201915b50505050509050610841565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600061084161182461150f565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000611855878787876118e9565b91509150611862816119ad565b5095945050505050565b600080829050601f81511115611897578260405163305a27a960e01b81526004016109559190611b65565b80516118a282611f64565b179392505050565b606060006118b783611af7565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561192057506000905060036119a4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611974573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661199d576000600192509250506119a4565b9150600090505b94509492505050565b60008160048111156119c1576119c1611f88565b036119c95750565b60018160048111156119dd576119dd611f88565b03611a2a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610955565b6002816004811115611a3e57611a3e611f88565b03611a8b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610955565b6003816004811115611a9f57611a9f611f88565b036108645760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610955565b600060ff8216601f81111561084157604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015611b4557602081850181015186830182015201611b29565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611b786020830184611b1f565b9392505050565b80356001600160a01b0381168114611b9657600080fd5b919050565b60008060408385031215611bae57600080fd5b611bb783611b7f565b946020939093013593505050565b600060208284031215611bd757600080fd5b611b7882611b7f565b600080600060608486031215611bf557600080fd5b611bfe84611b7f565b9250611c0c60208501611b7f565b9150604084013590509250925092565b600060208284031215611c2e57600080fd5b5035919050565b600060208284031215611c4757600080fd5b813563ffffffff81168114611b7857600080fd5b60ff60f81b881681526000602060e081840152611c7b60e084018a611b1f565b8381036040850152611c8d818a611b1f565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611cdf57835183529284019291840191600101611cc3565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215611d0c57600080fd5b611d1588611b7f565b9650611d2360208901611b7f565b95506040880135945060608801359350608088013560ff81168114611d4757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611d7757600080fd5b611d8083611b7f565b9150611d8e60208401611b7f565b90509250929050565b600181811c90821680611dab57607f821691505b60208210810361181157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561084157610841611dcb565b808202811582820484141761084157610841611dcb565b600082611e2857634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561084157610841611dcb565b634e487b7160e01b600052604160045260246000fd5b601f82111561150a57600081815260208120601f850160051c81016020861015611e7d5750805b601f850160051c820191505b81811015611e9c57828155600101611e89565b505050505050565b815167ffffffffffffffff811115611ebe57611ebe611e40565b611ed281611ecc8454611d97565b84611e56565b602080601f831160018114611f075760008415611eef5750858301515b600019600386901b1c1916600185901b178555611e9c565b600085815260208120601f198616915b82811015611f3657888601518255948401946001909101908401611f17565b5085821015611f545787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b805160208083015191908110156118115760001960209190910360031b1b16919050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209294fad0d68ea941d2d7f7b3bc700ab477cd4600ab6d0d31c9ca65f227d0f93464736f6c63430008120033";

type CTokenMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CTokenMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CTokenMock__factory extends ContractFactory {
  constructor(...args: CTokenMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CTokenMock";
  }

  override deploy(
    _underlying: PromiseOrValue<string>,
    _comptroller: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CTokenMock> {
    return super.deploy(
      _underlying,
      _comptroller,
      overrides || {}
    ) as Promise<CTokenMock>;
  }
  override getDeployTransaction(
    _underlying: PromiseOrValue<string>,
    _comptroller: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _underlying,
      _comptroller,
      overrides || {}
    );
  }
  override attach(address: string): CTokenMock {
    return super.attach(address) as CTokenMock;
  }
  override connect(signer: Signer): CTokenMock__factory {
    return super.connect(signer) as CTokenMock__factory;
  }
  static readonly contractName: "CTokenMock";

  public readonly contractName: "CTokenMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTokenMockInterface {
    return new utils.Interface(_abi) as CTokenMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CTokenMock {
    return new Contract(address, _abi, signerOrProvider) as CTokenMock;
  }
}
