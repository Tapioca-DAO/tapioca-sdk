/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ComptrollerMock,
  ComptrollerMockInterface,
} from "../../../../deprecated/compound/mocks/ComptrollerMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compReceivable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "extractTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCompAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasMintRestrictions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isComptroller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "mintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_fee",
        type: "uint32",
      },
    ],
    name: "setTransferFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleRestrictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferFee",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "updateMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610160604052600c8054600160301b600160d01b03191690553480156200002557600080fd5b506040518060400160405280600d81526020016c436f6d70546f6b656e4d6f636b60981b8152506040518060400160405280600381526020016243544d60e81b81525069152d02c7e14af68000006012338480604051806040016040528060018152602001603160f81b81525087878160039081620000a5919062000529565b506004620000b4828262000529565b505050620000d2600583620001f460201b62000f121790919060201c565b61012052620000ef816006620001f4602090811b62000f1217901c565b61014052815160208084019190912060e052815190820120610100524660a0526200017d60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250620001923362000244565b600c805460ff191660ff8416908117909155620001b190600a62000708565b620001bf906103e862000720565b600b55620001cd8162000296565b620001d9308462000319565b5050600c805461ff00191661010017905550620007c5915050565b600060208351101562000214576200020c83620003dc565b90506200023e565b826200022b836200041f60201b62000f431760201c565b9062000238908262000529565b5060ff90505b92915050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620002a062000422565b6001600160a01b0381166200030b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620003168162000244565b50565b6001600160a01b038216620003715760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000302565b80600260008282546200038591906200073a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080829050601f815111156200040a578260405163305a27a960e01b815260040162000302919062000750565b80516200041782620007a0565b179392505050565b90565b6009546001600160a01b031633146200047e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000302565b565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620004b057607f821691505b602082108103620004d157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200048057600081815260208120601f850160051c81016020861015620005005750805b601f850160051c820191505b8181101562000521578281556001016200050c565b505050505050565b81516001600160401b0381111562000545576200054562000485565b6200055d816200055684546200049b565b84620004d7565b602080601f8311600181146200059557600084156200057c5750858301515b600019600386901b1c1916600185901b17855562000521565b600085815260208120601f198616915b82811015620005c657888601518255948401946001909101908401620005a5565b5085821015620005e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200064c578160001904821115620006305762000630620005f5565b808516156200063e57918102915b93841c939080029062000610565b509250929050565b60008262000665575060016200023e565b8162000674575060006200023e565b81600181146200068d57600281146200069857620006b8565b60019150506200023e565b60ff841115620006ac57620006ac620005f5565b50506001821b6200023e565b5060208310610133831016604e8410600b8410161715620006dd575081810a6200023e565b620006e983836200060b565b8060001904821115620007005762000700620005f5565b029392505050565b60006200071960ff84168362000654565b9392505050565b80820281158282048414176200023e576200023e620005f5565b808201808211156200023e576200023e620005f5565b600060208083528351808285015260005b818110156200077f5785810183015185820160400152820162000761565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620004d15760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051611ed7620008206000396000610b0501526000610ada015260006114ec015260006114c40152600061141f01526000611449015260006114730152611ed76000f3fe60806040526004361061021d5760003560e01c80637ecebe0011610123578063acb2ad6f116100ab578063dd62ed3e1161006f578063dd62ed3e14610636578063e01d55c514610656578063e74b981b14610676578063e9af029214610696578063f2fde38b146106b657600080fd5b8063acb2ad6f14610597578063d0e30db0146105cf578063d4a744ba146105d7578063d505accf146105f6578063d6b5a2db1461061657600080fd5b806395d89b41116100f257806395d89b4114610519578063996517cf1461052e5780639d1b5a0a14610544578063a457c2d714610557578063a9059cbb1461057757600080fd5b80637ecebe001461048b57806384b0196e146104ab57806385b7beb8146104d35780638da5cb5b146104fb57600080fd5b80632e9ef976116101a6578063449a52f811610175578063449a52f8146103c157806346904840146103e157806370a0823114610420578063715018a6146104565780637c928fe91461046b57600080fd5b80632e9ef9761461034a578063313ce5671461036a5780633644e5151461038c57806339509351146103a157600080fd5b80631d0dc267116101ed5780631d0dc267146102af57806321442ec9146102c657806322ae81af146102f357806323b872dd1461030a5780632e1a7d4d1461032a57600080fd5b80627e3dd21461022957806306fdde031461024e578063095ea7b31461027057806318160ddd1461029057600080fd5b3661022457005b600080fd5b34801561023557600080fd5b5060015b60405190151581526020015b60405180910390f35b34801561025a57600080fd5b506102636106d6565b6040516102459190611a68565b34801561027c57600080fd5b5061023961028b366004611a9e565b610768565b34801561029c57600080fd5b506002545b604051908152602001610245565b3480156102bb57600080fd5b506102c4610782565b005b3480156102d257600080fd5b506102a16102e1366004611ac8565b600a6020526000908152604090205481565b3480156102ff57600080fd5b506102a16201518081565b34801561031657600080fd5b50610239610325366004611ae3565b6107a7565b34801561033657600080fd5b506102c4610345366004611b1f565b61082d565b34801561035657600080fd5b506102c4610365366004611b38565b6108e9565b34801561037657600080fd5b50600c5460405160ff9091168152602001610245565b34801561039857600080fd5b506102a161096d565b3480156103ad57600080fd5b506102396103bc366004611a9e565b61097c565b3480156103cd57600080fd5b506102c46103dc366004611a9e565b61099e565b3480156103ed57600080fd5b50600c5461040890600160301b90046001600160a01b031681565b6040516001600160a01b039091168152602001610245565b34801561042c57600080fd5b506102a161043b366004611ac8565b6001600160a01b031660009081526020819052604090205490565b34801561046257600080fd5b506102c46109b4565b34801561047757600080fd5b506102c4610486366004611b1f565b6109c8565b34801561049757600080fd5b506102a16104a6366004611ac8565b610aae565b3480156104b757600080fd5b506104c0610acc565b6040516102459796959493929190611b5e565b3480156104df57600080fd5b506102a16104ee366004611ac8565b50670de0b6b3a764000090565b34801561050757600080fd5b506009546001600160a01b0316610408565b34801561052557600080fd5b50610263610b55565b34801561053a57600080fd5b506102a1600b5481565b34801561055057600080fd5b5030610408565b34801561056357600080fd5b50610239610572366004611a9e565b610b64565b34801561058357600080fd5b50610239610592366004611a9e565b610bea565b3480156105a357600080fd5b50600c546105ba9062010000900463ffffffff1681565b60405163ffffffff9091168152602001610245565b6102c4610c52565b3480156105e357600080fd5b50600c5461023990610100900460ff1681565b34801561060257600080fd5b506102c4610611366004611bf4565b610c93565b34801561062257600080fd5b506102c4610631366004611b1f565b610df7565b34801561064257600080fd5b506102a1610651366004611c67565b610e0a565b34801561066257600080fd5b506102c4610671366004611b1f565b610e35565b34801561068257600080fd5b506102c4610691366004611ac8565b610e42565b3480156106a257600080fd5b506102c46106b1366004611ac8565b610e79565b3480156106c257600080fd5b506102c46106d1366004611ac8565b610e9c565b6060600380546106e590611c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461071190611c9a565b801561075e5780601f106107335761010080835404028352916020019161075e565b820191906000526020600020905b81548152906001019060200180831161074157829003601f168201915b5050505050905090565b600033610776818585610f46565b60019150505b92915050565b61078a61106b565b600c805461ff001981166101009182900460ff1615909102179055565b600c546000908190620186a0906107ca9062010000900463ffffffff1685611ce4565b6107d49190611cfb565b905060006107e28285611d1d565b9050336107f08782846110c5565b6107fb87878461113f565b821561082057600c54610820908890600160301b90046001600160a01b03168561113f565b5060019695505050505050565b336000908152602081905260409020548111156108795760405162461bcd60e51b815260206004820152600560248201526422b93937b960d91b60448201526064015b60405180910390fd5b61088333826112e3565b604051339082156108fc029083906000818181858888f193505050501580156108b0573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b6108f161106b565b620186a063ffffffff8216106109495760405162461bcd60e51b815260206004820152601760248201527f45524332304d6f636b3a2066656520746f6f20686967680000000000000000006044820152606401610870565b600c805463ffffffff909216620100000265ffffffff000019909216919091179055565b6000610977611412565b905090565b60003361077681858561098f8383610e0a565b6109999190611d30565b610f46565b6109a661106b565b6109b0828261153d565b5050565b6109bc61106b565b6109c660006115fc565b565b600c54610100900460ff1615610a8f57600b54811115610a2a5760405162461bcd60e51b815260206004820152601960248201527f45524332304d6f636b3a20616d6f756e7420746f6f20626967000000000000006044820152606401610870565b336000908152600a60205260409020544290610a4a906201518090611d30565b1115610a8f5760405162461bcd60e51b815260206004820152601460248201527345524332304d6f636b3a20746f6f206561726c7960601b6044820152606401610870565b336000818152600a60205260409020429055610aab908261153d565b50565b6001600160a01b03811660009081526007602052604081205461077c565b600060608082808083610b007f0000000000000000000000000000000000000000000000000000000000000000600561164e565b610b2b7f0000000000000000000000000000000000000000000000000000000000000000600661164e565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546106e590611c9a565b60003381610b728286610e0a565b905083811015610bd25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610870565b610bdf8286868403610f46565b506001949350505050565b600c546000908190620186a090610c0d9062010000900463ffffffff1685611ce4565b610c179190611cfb565b9050610c2d3385610c288487611d1d565b61113f565b801561077657600c54610776903390600160301b90046001600160a01b03168361113f565b610c5c333461153d565b60405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b83421115610ce35760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610870565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d128c6116f2565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d6d8261171a565b90506000610d7d82878787611747565b9050896001600160a01b0316816001600160a01b031614610de05760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610870565b610deb8a8a8a610f46565b50505050505050505050565b610dff61106b565b610aab30338361113f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610e3d61106b565b600b55565b610e4a61106b565b600c80546001600160a01b03909216600160301b026601000000000000600160d01b0319909216919091179055565b610e8a670de0b6b3a76400006109c8565b6109b081670de0b6b3a7640000610bea565b610ea461106b565b6001600160a01b038116610f095760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610870565b610aab816115fc565b6000602083511015610f2e57610f278361176f565b905061077c565b81610f398482611da7565b5060ff905061077c565b90565b6001600160a01b038316610fa85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610870565b6001600160a01b0382166110095760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610870565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6009546001600160a01b031633146109c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610870565b60006110d18484610e0a565b90506000198114611139578181101561112c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610870565b6111398484848403610f46565b50505050565b6001600160a01b0383166111a35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610870565b6001600160a01b0382166112055760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610870565b6001600160a01b0383166000908152602081905260409020548181101561127d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610870565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611139565b6001600160a01b0382166113435760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610870565b6001600160a01b038216600090815260208190526040902054818110156113b75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610870565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161105e565b505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561146b57507f000000000000000000000000000000000000000000000000000000000000000046145b1561149557507f000000000000000000000000000000000000000000000000000000000000000090565b610977604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b0382166115935760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610870565b80600260008282546115a59190611d30565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060ff831461166157610f27836117ad565b81805461166d90611c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461169990611c9a565b80156116e65780601f106116bb576101008083540402835291602001916116e6565b820191906000526020600020905b8154815290600101906020018083116116c957829003601f168201915b5050505050905061077c565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600061077c611727611412565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000611758878787876117ec565b91509150611765816118b0565b5095945050505050565b600080829050601f8151111561179a578260405163305a27a960e01b81526004016108709190611a68565b80516117a582611e67565b179392505050565b606060006117ba836119fa565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561182357506000905060036118a7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611877573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118a0576000600192509250506118a7565b9150600090505b94509492505050565b60008160048111156118c4576118c4611e8b565b036118cc5750565b60018160048111156118e0576118e0611e8b565b0361192d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610870565b600281600481111561194157611941611e8b565b0361198e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610870565b60038160048111156119a2576119a2611e8b565b03610aab5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610870565b600060ff8216601f81111561077c57604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015611a4857602081850181015186830182015201611a2c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611a7b6020830184611a22565b9392505050565b80356001600160a01b0381168114611a9957600080fd5b919050565b60008060408385031215611ab157600080fd5b611aba83611a82565b946020939093013593505050565b600060208284031215611ada57600080fd5b611a7b82611a82565b600080600060608486031215611af857600080fd5b611b0184611a82565b9250611b0f60208501611a82565b9150604084013590509250925092565b600060208284031215611b3157600080fd5b5035919050565b600060208284031215611b4a57600080fd5b813563ffffffff81168114611a7b57600080fd5b60ff60f81b881681526000602060e081840152611b7e60e084018a611a22565b8381036040850152611b90818a611a22565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611be257835183529284019291840191600101611bc6565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215611c0f57600080fd5b611c1888611a82565b9650611c2660208901611a82565b95506040880135945060608801359350608088013560ff81168114611c4a57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611c7a57600080fd5b611c8383611a82565b9150611c9160208401611a82565b90509250929050565b600181811c90821680611cae57607f821691505b60208210810361171457634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761077c5761077c611cce565b600082611d1857634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561077c5761077c611cce565b8082018082111561077c5761077c611cce565b634e487b7160e01b600052604160045260246000fd5b601f82111561140d57600081815260208120601f850160051c81016020861015611d805750805b601f850160051c820191505b81811015611d9f57828155600101611d8c565b505050505050565b815167ffffffffffffffff811115611dc157611dc1611d43565b611dd581611dcf8454611c9a565b84611d59565b602080601f831160018114611e0a5760008415611df25750858301515b600019600386901b1c1916600185901b178555611d9f565b600085815260208120601f198616915b82811015611e3957888601518255948401946001909101908401611e1a565b5085821015611e575787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b805160208083015191908110156117145760001960209190910360031b1b16919050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212203160c6321362e3cf0e91eaba4bd43d109d51e0a9831cd56529a791dbe56c4f7e64736f6c63430008120033";

type ComptrollerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComptrollerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComptrollerMock__factory extends ContractFactory {
  constructor(...args: ComptrollerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ComptrollerMock";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ComptrollerMock> {
    return super.deploy(overrides || {}) as Promise<ComptrollerMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ComptrollerMock {
    return super.attach(address) as ComptrollerMock;
  }
  override connect(signer: Signer): ComptrollerMock__factory {
    return super.connect(signer) as ComptrollerMock__factory;
  }
  static readonly contractName: "ComptrollerMock";

  public readonly contractName: "ComptrollerMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComptrollerMockInterface {
    return new utils.Interface(_abi) as ComptrollerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComptrollerMock {
    return new Contract(address, _abi, signerOrProvider) as ComptrollerMock;
  }
}
