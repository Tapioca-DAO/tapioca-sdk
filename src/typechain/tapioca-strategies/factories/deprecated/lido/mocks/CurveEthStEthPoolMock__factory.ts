/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CurveEthStEthPoolMock,
  CurveEthStEthPoolMockInterface,
} from "../../../../deprecated/lido/mocks/CurveEthStEthPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_steth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "exchange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    name: "get_dy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "steth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161049e38038061049e83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61040b806100936000396000f3fe6080604052600436106100385760003560e01c80633df02124146100445780635e0d443f1461006a578063953d7ee21461008b57600080fd5b3661003f57005b600080fd5b6100576100523660046102ff565b6100c3565b6040519081526020015b60405180910390f35b34801561007657600080fd5b50610057610085366004610341565b92915050565b34801561009757600080fd5b506000546100ab906001600160a01b031681565b6040516001600160a01b039091168152602001610061565b600080546100dc906001600160a01b03163330866100ef565b6100e63384610218565b50909392505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610153919061037d565b6000604051808303816000865af19150503d8060008114610190576040519150601f19603f3d011682016040523d82523d6000602084013e610195565b606091505b50915091508180156101bf5750805115806101bf5750808060200190518101906101bf91906103ac565b6102105760405162461bcd60e51b815260206004820181905260248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c656460448201526064015b60405180910390fd5b505050505050565b604080516000808252602082019092526001600160a01b038416908390604051610242919061037d565b60006040518083038185875af1925050503d806000811461027f576040519150601f19603f3d011682016040523d82523d6000602084013e610284565b606091505b50509050806102e35760405162461bcd60e51b815260206004820152602560248201527f537461726761746553747261746567793a20455448207472616e736665722066604482015264185a5b195960da1b6064820152608401610207565b505050565b8035600f81900b81146102fa57600080fd5b919050565b6000806000806080858703121561031557600080fd5b61031e856102e8565b935061032c602086016102e8565b93969395505050506040820135916060013590565b60008060006060848603121561035657600080fd5b61035f846102e8565b925061036d602085016102e8565b9150604084013590509250925092565b6000825160005b8181101561039e5760208186018101518583015201610384565b506000920191825250919050565b6000602082840312156103be57600080fd5b815180151581146103ce57600080fd5b939250505056fea2646970667358221220fdc0e475ea1fcf5ebd99957004d701c0729da6c7fd8f0d89db89b66f891c9b9164736f6c63430008120033";

type CurveEthStEthPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveEthStEthPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveEthStEthPoolMock__factory extends ContractFactory {
  constructor(...args: CurveEthStEthPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CurveEthStEthPoolMock";
  }

  override deploy(
    _steth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurveEthStEthPoolMock> {
    return super.deploy(
      _steth,
      overrides || {}
    ) as Promise<CurveEthStEthPoolMock>;
  }
  override getDeployTransaction(
    _steth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_steth, overrides || {});
  }
  override attach(address: string): CurveEthStEthPoolMock {
    return super.attach(address) as CurveEthStEthPoolMock;
  }
  override connect(signer: Signer): CurveEthStEthPoolMock__factory {
    return super.connect(signer) as CurveEthStEthPoolMock__factory;
  }
  static readonly contractName: "CurveEthStEthPoolMock";

  public readonly contractName: "CurveEthStEthPoolMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveEthStEthPoolMockInterface {
    return new utils.Interface(_abi) as CurveEthStEthPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveEthStEthPoolMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CurveEthStEthPoolMock;
  }
}
