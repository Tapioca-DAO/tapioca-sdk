/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StargateStrategy,
  StargateStrategyInterface,
} from "../../stargate/StargateStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpStaking",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_stakingPid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stgEthPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_oracleData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_old",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_new",
        type: "uint256",
      },
    ],
    name: "DepositThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_new",
        type: "address",
      },
    ],
    name: "MultiSwapper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "addLiquidityRouter",
    outputs: [
      {
        internalType: "contract IRouterETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheapWithdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "dexData",
        type: "bytes",
      },
    ],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultSwapData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lpRouterPid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpStaking",
    outputs: [
      {
        internalType: "contract ILPStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpStakingPid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "setDefaultSwapData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDepositThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setMultiSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "setSlippage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stgEthPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stgNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stgTokenReward",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenType",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_val",
        type: "bool",
      },
    ],
    name: "updatePaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101406040526032600d553480156200001757600080fd5b5060405162003666380380620036668339810160408190526200003a916200065d565b6001600160a01b03808b16608052891660a052600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360016002556001600160a01b0389811660c052600380546001600160a01b0319908116878416179091556004805490911685831617815589821660e081905291891661012052600588905560408051632a795bcf60e21b8152905163a9e56f3c928281019260209291908290030181865afa15801562000110573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013691906200074d565b6001600160a01b0316610100816001600160a01b03168152505060e0516001600160a01b0316633e0dc34e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000191573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b7919062000774565b61ffff16600655600780546001600160a01b0319166001600160a01b0387811691821790925560405163095ea7b360e01b81529189166004830152600060248301529063095ea7b3906044016020604051808303816000875af115801562000223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200024991906200079a565b5060075460405163095ea7b360e01b81526001600160a01b03898116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156200029f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c591906200079a565b506007546101005160405163095ea7b360e01b81526001600160a01b0391821660048201526000602482015291169063095ea7b3906044016020604051808303816000875af11580156200031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200034391906200079a565b506007546101005160405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200039c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c291906200079a565b50610120516001600160a01b0316636c099dee6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000405573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200042b91906200074d565b600880546001600160a01b0319166001600160a01b0392831690811790915560405163095ea7b360e01b81529186166004830152600060248301529063095ea7b3906044016020604051808303816000875af115801562000490573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b691906200079a565b5060085460405163095ea7b360e01b81526001600160a01b03868116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156200050c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200053291906200079a565b50600b80546001600160a01b0319166001600160a01b038416179055600c6200055c82826200084d565b505050505050505050505062000919565b6001600160a01b03811681146200058357600080fd5b50565b805162000593816200056d565b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620005c057600080fd5b81516001600160401b0380821115620005dd57620005dd62000598565b604051601f8301601f19908116603f0116810190828211818310171562000608576200060862000598565b816040528381526020925086838588010111156200062557600080fd5b600091505b838210156200064957858201830151818301840152908201906200062a565b600093810190920192909252949350505050565b6000806000806000806000806000806101408b8d0312156200067e57600080fd5b8a516200068b816200056d565b60208c0151909a506200069e816200056d565b60408c0151909950620006b1816200056d565b60608c0151909850620006c4816200056d565b60808c015160a08d01519198509650620006de816200056d565b9450620006ee60c08c0162000586565b9350620006fe60e08c0162000586565b92506200070f6101008c0162000586565b6101208c01519092506001600160401b038111156200072d57600080fd5b6200073b8d828e01620005ae565b9150509295989b9194979a5092959850565b6000602082840312156200076057600080fd5b81516200076d816200056d565b9392505050565b6000602082840312156200078757600080fd5b815161ffff811681146200076d57600080fd5b600060208284031215620007ad57600080fd5b815180151581146200076d57600080fd5b600181811c90821680620007d357607f821691505b602082108103620007f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200084857600081815260208120601f850160051c81016020861015620008235750805b601f850160051c820191505b8181101562000844578281556001016200082f565b5050505b505050565b81516001600160401b0381111562000869576200086962000598565b62000881816200087a8454620007be565b84620007fa565b602080601f831160018114620008b95760008415620008a05750858301515b600019600386901b1c1916600185901b17855562000844565b600085815260208120601f198616915b82811015620008ea57888601518255948401946001909101908401620008c9565b5085821015620009095787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e0516101005161012051612c4e62000a1860003960008181610530015281816108c20152818161095e01528181610cc501528181611350015281816113e00152818161190301528181611a520152611e3e01526000818161071e015281816114780152611ed601526000818161060d015261180501526000818161064101528181610a6a01528181610c1101528181610dec015281816114f50152818161179f015281816119c401528181611c4301528181611d8801528181611f5001528181611fd90152818161209f01526120db015260006106ea0152600081816105b90152818161111a01526117230152612c4e6000f3fe6080604052600436106102345760003560e01c80637dc0d1d01161012e578063e30c3978116100ab578063f0fa55a91161006f578063f0fa55a914610683578063f168c2d2146106a3578063f3fef3a3146106b8578063f6b4dfb4146106d8578063f887ea401461070c57600080fd5b8063e30c3978146105db578063e3575f05146103ec578063e9e6d512146105fb578063eb6d3a111461062f578063ec32e1b91461066357600080fd5b8063afa91cc6116100f2578063afa91cc614610552578063b25ea8fb14610572578063ce845d1d146103ec578063db2e21bc14610592578063de406577146105a757600080fd5b80637dc0d1d0146104b25780637e9e576c146104d25780638da5cb5b146104e85780639a3f7aa0146105085780639bf1401c1461051e57600080fd5b806348dcb051116101bc5780635c975abb116101805780635c975abb14610421578063637d895d146104525780637284e41614610472578063734daaa11461048757806374645ff31461049d57600080fd5b806348dcb051146103a25780634cce992d146103b75780634e71e0c8146103d757806350188301146103ec5780635185bbc81461040157600080fd5b806322a58c5d1161020357806322a58c5d146102e85780632b3297f91461030857806330fa738c1461034057806341852dc21461036257806347b3f37c1461038257600080fd5b806306fdde0314610240578063078dfbe71461028357806308cdc2a8146102a557806317d70f7c146102c557600080fd5b3661023b57005b600080fd5b34801561024c57600080fd5b50604080518082019091526008815267537461726761746560c01b60208201525b60405161027a9190612363565b60405180910390f35b34801561028f57600080fd5b506102a361029e3660046123a0565b610740565b005b3480156102b157600080fd5b506102a36102c03660046123eb565b610857565b3480156102d157600080fd5b506102da600081565b60405190815260200161027a565b3480156102f457600080fd5b506102a3610303366004612447565b61089f565b34801561031457600080fd5b50600354610328906001600160a01b031681565b6040516001600160a01b03909116815260200161027a565b34801561034c57600080fd5b50610355600181565b60405161027a91906124f8565b34801561036e57600080fd5b50600754610328906001600160a01b031681565b34801561038e57600080fd5b50600454610328906001600160a01b031681565b3480156103ae57600080fd5b506102da610c98565b3480156103c357600080fd5b506102a36103d2366004612520565b610f00565b3480156103e357600080fd5b506102a3610f5e565b3480156103f857600080fd5b506102da61101b565b34801561040d57600080fd5b506102a361041c366004612539565b61102a565b34801561042d57600080fd5b5060085461044290600160a01b900460ff1681565b604051901515815260200161027a565b34801561045e57600080fd5b50600854610328906001600160a01b031681565b34801561047e57600080fd5b5061026d611061565b34801561049357600080fd5b506102da60095481565b3480156104a957600080fd5b5061026d611081565b3480156104be57600080fd5b50600b54610328906001600160a01b031681565b3480156104de57600080fd5b506102da60055481565b3480156104f457600080fd5b50600054610328906001600160a01b031681565b34801561051457600080fd5b506102da60065481565b34801561052a57600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b34801561055e57600080fd5b506102a361056d366004612520565b61110f565b34801561057e57600080fd5b506102a361058d3660046125ab565b611182565b34801561059e57600080fd5b506102da61125a565b3480156105b357600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b3480156105e757600080fd5b50600154610328906001600160a01b031681565b34801561060757600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b34801561063b57600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b34801561066f57600080fd5b506102a361067e3660046125db565b61156b565b34801561068f57600080fd5b506102a361069e366004612520565b6116dc565b3480156106af57600080fd5b5061026d61170b565b3480156106c457600080fd5b506102a36106d33660046125f8565b611718565b3480156106e457600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b34801561071857600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146107735760405162461bcd60e51b815260040161076a90612624565b60405180910390fd5b8115610836576001600160a01b03831615158061078d5750805b6107d15760405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b604482015260640161076a565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055505050565b600180546001600160a01b0319166001600160a01b0385161790555b505050565b6000546001600160a01b031633146108815760405162461bcd60e51b815260040161076a90612624565b60088054911515600160a01b0260ff60a01b19909216919091179055565b600554604051632f607fdd60e01b815260048101919091523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632f607fdd90604401602060405180830381865afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190612659565b905080156109c357600554604051631c57762b60e31b81526004810191909152600060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2bbb15890604401600060405180830381600087803b1580156109aa57600080fd5b505af11580156109be573d6000803e3d6000fd5b505050505b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190612659565b9050801561085257600354600854604051631fd177af60e11b81526000926001600160a01b0390811692633fa2ef5e92610a9a92909116907f0000000000000000000000000000000000000000000000000000000000000000908790879081908190600401612672565b61014060405180830381865afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc9190612753565b600354604051630b7ecdc960e31b81529192506000916001600160a01b0390911690635bf66e4890610b14908590899060040161287c565b602060405180830381865afa158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b559190612659565b90506000612710600d5483610b6a91906128bd565b610b7491906128da565b610b7e90836128fc565b60035460405163efa84c6d60e01b81529192506001600160a01b03169063efa84c6d90610bb5908690859030908c9060040161290f565b60408051808303816000875af1158015610bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf79190612955565b50506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c849190612659565b9050610c8f81611789565b50505050505050565b600554604051632f607fdd60e01b8152600481019190915230602482015260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632f607fdd90604401602060405180830381865afa158015610d0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d309190612659565b6008546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610d7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da29190612659565b9050610dae8183612979565b6000935091508115610efb57600354600854604051631fd177af60e11b81526000926001600160a01b0390811692633fa2ef5e92610e1c92909116907f0000000000000000000000000000000000000000000000000000000000000000908890879081908190600401612672565b61014060405180830381865afa158015610e3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5e9190612753565b600354604051630b7ecdc960e31b81529192506001600160a01b031690635bf66e4890610e8f90849060040161298c565b602060405180830381865afa158015610eac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed09190612659565b9350612710600d5485610ee391906128bd565b610eed91906128da565b610ef790856128fc565b9350505b505090565b6000546001600160a01b03163314610f2a5760405162461bcd60e51b815260040161076a90612624565b6009546040518291907f3b779194d2cc7daf4de546bec10f6f325d421b2e202c11aa24e86e39845860cc90600090a3600955565b6001546001600160a01b0316338114610fb95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604482015260640161076a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b60006110256119a2565b905090565b6000546001600160a01b031633146110545760405162461bcd60e51b815260040161076a90612624565b600a610852828483612a3b565b60606040518060600160405280602b8152602001612bee602b9139905090565b600c805461108e906129b3565b80601f01602080910402602001604051908101604052809291908181526020018280546110ba906129b3565b80156111075780601f106110dc57610100808354040283529160200191611107565b820191906000526020600020905b8154815290600101906020018083116110ea57829003601f168201915b505050505081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111765760405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b604482015260640161076a565b61117f81611bd6565b50565b6000546001600160a01b031633146111ac5760405162461bcd60e51b815260040161076a90612624565b6000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146111f9576040519150601f19603f3d011682016040523d82523d6000602084013e6111fe565b606091505b50509050806108525760405162461bcd60e51b815260206004820152602260248201527f537461726761746553747261746567793a207472616e73666572206661696c65604482015261321760f11b606482015260840161076a565b600080546001600160a01b031633146112855760405162461bcd60e51b815260040161076a90612624565b6008805460ff60a01b1916600160a01b179055600a805461132d91906112aa906129b3565b80601f01602080910402602001604051908101604052809291908181526020018280546112d6906129b3565b80156113235780601f106112f857610100808354040283529160200191611323565b820191906000526020600020905b81548152906001019060200180831161130657829003601f168201915b505050505061089f565b6005546040516393f1a40b60e01b815260048101919091523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906393f1a40b906044016040805180830381865afa15801561139e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c29190612955565b50600554604051630441a3e760e41b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163441a3e709161141e918590600401918252602082015260400190565b600060405180830381600087803b15801561143857600080fd5b505af115801561144c573d6000803e3d6000fd5b505060065460405163c4de93a560e01b815261ffff9091166004820152602481018490523060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063c4de93a591506064016020604051808303816000875af11580156114cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ef9190612659565b504791507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561154e57600080fd5b505af1158015611562573d6000803e3d6000fd5b50505050505090565b6000546001600160a01b031633146115955760405162461bcd60e51b815260040161076a90612624565b6003546040516001600160a01b038084169216907fe36d79dcda63d47bee388b7dde8bba0b326a1b459889de48dc94dcf3504eda4b90600090a360085460035460405163095ea7b360e01b81526001600160a01b0391821660048201526000602482015291169063095ea7b3906044016020604051808303816000875af1158015611624573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116489190612afb565b50600380546001600160a01b0319166001600160a01b0383811691821790925560085460405163095ea7b360e01b8152600481019290925260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156116b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d89190612afb565b5050565b6000546001600160a01b031633146117065760405162461bcd60e51b815260040161076a90612624565b600d55565b600a805461108e906129b3565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461177f5760405162461bcd60e51b815260206004820152600c60248201526b09cdee840b2d2cad8c884def60a31b604482015260640161076a565b6116d88282611d01565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156117eb57600080fd5b505af11580156117ff573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ed995307826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561185e57600080fd5b505af1158015611872573d6000803e3d6000fd5b50506007546040516370a0823160e01b8152306004820152600094506001600160a01b0390911692506370a082319150602401602060405180830381865afa1580156118c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e69190612659565b600554604051631c57762b60e31b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163e2bbb15891611941918590600401918252602082015260400190565b600060405180830381600087803b15801561195b57600080fd5b505af115801561196f573d6000803e3d6000fd5b50506040518492507fde22222b0ac0d69f2a19cd7b1443a29a5f37346640fff3506bdd6a9a9497f9d39150600090a25050565b6040516370a0823160e01b815230600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2f9190612659565b6005546040516393f1a40b60e01b815260048101919091523060248201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906393f1a40b906044016040805180830381865afa158015611aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac49190612955565b50600b5460405163eeb8a8d360e01b815291935060009182916001600160a01b03169063eeb8a8d390611afc90600c90600401612b18565b6040805180830381865afa158015611b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3c9190612ba3565b9150915081611b8d5760405162461bcd60e51b815260206004820152601c60248201527f53746172676174653a206f7261636c652063616c6c206661696c656400000000604482015260640161076a565b670de0b6b3a7640000611ba082866128bd565b611baa91906128da565b93506000611bb6610c98565b905080611bc38587612979565b611bcd9190612979565b94505050505090565b611bde6121a1565b600854600160a01b900460ff1615611c2b5760405162461bcd60e51b815260206004820152601060248201526f14dd185c99d85d194e881c185d5cd95960821b604482015260640161076a565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611c92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb69190612659565b9050600954811115611ccb57611ccb81611789565b60405182907f9447d5abbf0af693ca2937bf8b1ec6a8c9dc4fbac672911c633fb31c78e5e3ca90600090a25061117f6001600255565b611d096121a1565b6000611d136119a2565b905081811015611d705760405162461bcd60e51b815260206004820152602260248201527f537461726761746553747261746567793a20616d6f756e74206e6f742076616c6044820152611a5960f21b606482015260840161076a565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dfb9190612659565b905080831115611fc457611e15600a80546112aa906129b3565b6000611e2182856128fc565b600554604051630441a3e760e41b81529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163441a3e7091611e7c918590600401918252602082015260400190565b600060405180830381600087803b158015611e9657600080fd5b505af1158015611eaa573d6000803e3d6000fd5b505060065460405163c4de93a560e01b815261ffff9091166004820152602481018490523060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063c4de93a591506064016020604051808303816000875af1158015611f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4d9190612659565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b158015611fa957600080fd5b505af1158015611fbd573d6000803e3d6000fd5b5050505050505b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015612028573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061204c9190612659565b8311156120925760405162461bcd60e51b81526020600482015260146024820152730a6e8c2e4cec2e8ca7440dcdee840cadcdeeaced60631b604482015260640161076a565b6120c66001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001685856121f8565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561212a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061214e9190612659565b9050801561215f5761215f81611789565b60405183906001600160a01b038616907f058b581e2433b8b02263f5b0e5c2889fcb7b3495112884a3147619038fba46d890600090a350506116d86001600255565b60028054036121f25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161076a565b60028055565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916122549190612bd1565b6000604051808303816000865af19150503d8060008114612291576040519150601f19603f3d011682016040523d82523d6000602084013e612296565b606091505b50915091508180156122c05750805115806122c05750808060200190518101906122c09190612afb565b61230c5760405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604482015260640161076a565b5050505050565b60005b8381101561232e578181015183820152602001612316565b50506000910152565b6000815180845261234f816020860160208601612313565b601f01601f19169290920160200192915050565b6020815260006123766020830184612337565b9392505050565b6001600160a01b038116811461117f57600080fd5b801515811461117f57600080fd5b6000806000606084860312156123b557600080fd5b83356123c08161237d565b925060208401356123d081612392565b915060408401356123e081612392565b809150509250925092565b6000602082840312156123fd57600080fd5b813561237681612392565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561244157612441612408565b60405290565b60006020828403121561245957600080fd5b813567ffffffffffffffff8082111561247157600080fd5b818401915084601f83011261248557600080fd5b81358181111561249757612497612408565b604051601f8201601f19908116603f011681019083821181831017156124bf576124bf612408565b816040528281528760208487010111156124d857600080fd5b826020860160208301376000928101602001929092525095945050505050565b602081016005831061251a57634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561253257600080fd5b5035919050565b6000806020838503121561254c57600080fd5b823567ffffffffffffffff8082111561256457600080fd5b818501915085601f83011261257857600080fd5b81358181111561258757600080fd5b86602082850101111561259957600080fd5b60209290920196919550909350505050565b600080604083850312156125be57600080fd5b8235915060208301356125d08161237d565b809150509250929050565b6000602082840312156125ed57600080fd5b81356123768161237d565b6000806040838503121561260b57600080fd5b82356126168161237d565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561266b57600080fd5b5051919050565b6001600160a01b039687168152949095166020850152604084019290925260608301521515608082015290151560a082015260c00190565b6000608082840312156126bc57600080fd5b6126c461241e565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b60006040828403121561270057600080fd5b6040516040810181811067ffffffffffffffff8211171561272357612723612408565b8060405250809150825161273681612392565b8152602083015161274681612392565b6020919091015292915050565b600081830361014081121561276757600080fd5b6040516060810181811067ffffffffffffffff8211171561278a5761278a612408565b604052608082121561279b57600080fd5b6127a361241e565b915083516127b08161237d565b82526020848101519083015260408401516127ca8161237d565b6040830152606084810151908301528181526127e985608086016126aa565b60208201526127fc8561010086016126ee565b6040820152949350505050565b805180516001600160a01b03908116845260208083015181860152604080840151909216828601526060928301518386015280840151805160808701528082015160a08701528083015160c08701529092015160e085015290910151805115156101008401520151151561012090910152565b600061016061288b8386612809565b8061014084015261289e81840185612337565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176128d4576128d46128a7565b92915050565b6000826128f757634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156128d4576128d46128a7565b60006101a061291e8388612809565b61014083018690526001600160a01b038516610160840152610180830181905261294a81840185612337565b979650505050505050565b6000806040838503121561296857600080fd5b505080516020909101519092909150565b808201808211156128d4576128d46128a7565b600061016061299b8385612809565b61014083018190526000908301525061018001919050565b600181811c908216806129c757607f821691505b6020821081036129e757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561085257600081815260208120601f850160051c81016020861015612a145750805b601f850160051c820191505b81811015612a3357828155600101612a20565b505050505050565b67ffffffffffffffff831115612a5357612a53612408565b612a6783612a6183546129b3565b836129ed565b6000601f841160018114612a9b5760008515612a835750838201355b600019600387901b1c1916600186901b17835561230c565b600083815260209020601f19861690835b82811015612acc5786850135825560209485019460019092019101612aac565b5086821015612ae95760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b600060208284031215612b0d57600080fd5b815161237681612392565b6000602080835260008454612b2c816129b3565b80848701526040600180841660008114612b4d5760018114612b6757612b95565b60ff1985168984015283151560051b890183019550612b95565b896000528660002060005b85811015612b8d5781548b8201860152908301908801612b72565b8a0184019650505b509398975050505050505050565b60008060408385031215612bb657600080fd5b8251612bc181612392565b6020939093015192949293505050565b60008251612be3818460208701612313565b919091019291505056fe537461726761746520737472617465677920666f722077726170706564206e617469766520617373657473a26469706673582212204d50041de67de573b060fe1d545e1f3a77e966ebfe7e42ba679c6639f31c58fe64736f6c63430008120033";

type StargateStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargateStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargateStrategy__factory extends ContractFactory {
  constructor(...args: StargateStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StargateStrategy";
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _ethRouter: PromiseOrValue<string>,
    _lpStaking: PromiseOrValue<string>,
    _stakingPid: PromiseOrValue<BigNumberish>,
    _lpToken: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _stgEthPool: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _oracleData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StargateStrategy> {
    return super.deploy(
      _yieldBox,
      _token,
      _ethRouter,
      _lpStaking,
      _stakingPid,
      _lpToken,
      _swapper,
      _stgEthPool,
      _oracle,
      _oracleData,
      overrides || {}
    ) as Promise<StargateStrategy>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _ethRouter: PromiseOrValue<string>,
    _lpStaking: PromiseOrValue<string>,
    _stakingPid: PromiseOrValue<BigNumberish>,
    _lpToken: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _stgEthPool: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _oracleData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yieldBox,
      _token,
      _ethRouter,
      _lpStaking,
      _stakingPid,
      _lpToken,
      _swapper,
      _stgEthPool,
      _oracle,
      _oracleData,
      overrides || {}
    );
  }
  override attach(address: string): StargateStrategy {
    return super.attach(address) as StargateStrategy;
  }
  override connect(signer: Signer): StargateStrategy__factory {
    return super.connect(signer) as StargateStrategy__factory;
  }
  static readonly contractName: "StargateStrategy";

  public readonly contractName: "StargateStrategy";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargateStrategyInterface {
    return new utils.Interface(_abi) as StargateStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StargateStrategy {
    return new Contract(address, _abi, signerOrProvider) as StargateStrategy;
  }
}
