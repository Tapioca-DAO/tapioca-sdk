/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StargateRouterMock,
  StargateRouterMockInterface,
} from "../../../stargate/mocks/StargateRouterMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stgToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_amountLP",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "instantRedeemLocal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stgToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161062338038061062383398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610590806100936000396000f3fe60806040526004361061002d5760003560e01c80639afb25de14610039578063c4de93a51461007657600080fd5b3661003457005b600080fd5b34801561004557600080fd5b50600054610059906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561008257600080fd5b50610096610091366004610469565b6100a4565b60405190815260200161006d565b600080546100bd906001600160a01b03163330866100cf565b6100c7828461012f565b509092915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610129908590610204565b50505050565b604080516000808252602082019092526001600160a01b03841690839060405161015991906104e2565b60006040518083038185875af1925050503d8060008114610196576040519150601f19603f3d011682016040523d82523d6000602084013e61019b565b606091505b50509050806101ff5760405162461bcd60e51b815260206004820152602560248201527f537461726761746553747261746567793a20455448207472616e736665722066604482015264185a5b195960da1b60648201526084015b60405180910390fd5b505050565b6000610259826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166102d99092919063ffffffff16565b905080516000148061027a57508080602001905181019061027a91906104fe565b6101ff5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101f6565b60606102e884846000856102f0565b949350505050565b6060824710156103515760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101f6565b600080866001600160a01b0316858760405161036d91906104e2565b60006040518083038185875af1925050503d80600081146103aa576040519150601f19603f3d011682016040523d82523d6000602084013e6103af565b606091505b50915091506103c0878383876103cb565b979650505050505050565b6060831561043a578251600003610433576001600160a01b0385163b6104335760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f6565b50816102e8565b6102e8838381511561044f5781518083602001fd5b8060405162461bcd60e51b81526004016101f69190610527565b60008060006060848603121561047e57600080fd5b833561ffff8116811461049057600080fd5b92506020840135915060408401356001600160a01b03811681146104b357600080fd5b809150509250925092565b60005b838110156104d95781810151838201526020016104c1565b50506000910152565b600082516104f48184602087016104be565b9190910192915050565b60006020828403121561051057600080fd5b8151801515811461052057600080fd5b9392505050565b60208152600082518060208401526105468160408501602087016104be565b601f01601f1916919091016040019291505056fea2646970667358221220d9faaaec3a708c25dfaa2a4e3fbe1deb436755f0b1c758763b00c79f80ac794c64736f6c63430008120033";

type StargateRouterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargateRouterMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargateRouterMock__factory extends ContractFactory {
  constructor(...args: StargateRouterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StargateRouterMock";
  }

  override deploy(
    _stgToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StargateRouterMock> {
    return super.deploy(
      _stgToken,
      overrides || {}
    ) as Promise<StargateRouterMock>;
  }
  override getDeployTransaction(
    _stgToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stgToken, overrides || {});
  }
  override attach(address: string): StargateRouterMock {
    return super.attach(address) as StargateRouterMock;
  }
  override connect(signer: Signer): StargateRouterMock__factory {
    return super.connect(signer) as StargateRouterMock__factory;
  }
  static readonly contractName: "StargateRouterMock";

  public readonly contractName: "StargateRouterMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargateRouterMockInterface {
    return new utils.Interface(_abi) as StargateRouterMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StargateRouterMock {
    return new Contract(address, _abi, signerOrProvider) as StargateRouterMock;
  }
}
