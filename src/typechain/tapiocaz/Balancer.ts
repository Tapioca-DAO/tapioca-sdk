/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export declare namespace IStargateRouterBase {
  export type LzTxObjStruct = {
    dstGasForCall: PromiseOrValue<BigNumberish>;
    dstNativeAmount: PromiseOrValue<BigNumberish>;
    dstNativeAddr: PromiseOrValue<BytesLike>;
  };

  export type LzTxObjStructOutput = [BigNumber, BigNumber, string] & {
    dstGasForCall: BigNumber;
    dstNativeAmount: BigNumber;
    dstNativeAddr: string;
  };
}

export interface BalancerInterface extends utils.Interface {
  functions: {
    "addRebalanceAmount(address,uint16,uint256)": FunctionFragment;
    "checker(address,uint16)": FunctionFragment;
    "connectedOFTs(address,uint16)": FunctionFragment;
    "emergencySaveTokens(address,uint256)": FunctionFragment;
    "initConnectedOFT(address,uint16,address,bytes)": FunctionFragment;
    "instantRedeemLocal(uint16,uint256,address)": FunctionFragment;
    "owner()": FunctionFragment;
    "rebalance(address,uint16,uint256,uint256,bytes)": FunctionFragment;
    "redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))": FunctionFragment;
    "redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))": FunctionFragment;
    "retryRevert(uint16,bytes,uint256)": FunctionFragment;
    "router()": FunctionFragment;
    "routerETH()": FunctionFragment;
    "setOwner(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addRebalanceAmount"
      | "addRebalanceAmount(address,uint16,uint256)"
      | "checker"
      | "checker(address,uint16)"
      | "connectedOFTs"
      | "connectedOFTs(address,uint16)"
      | "emergencySaveTokens"
      | "emergencySaveTokens(address,uint256)"
      | "initConnectedOFT"
      | "initConnectedOFT(address,uint16,address,bytes)"
      | "instantRedeemLocal"
      | "instantRedeemLocal(uint16,uint256,address)"
      | "owner"
      | "owner()"
      | "rebalance"
      | "rebalance(address,uint16,uint256,uint256,bytes)"
      | "redeemLocal"
      | "redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))"
      | "redeemRemote"
      | "redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))"
      | "retryRevert"
      | "retryRevert(uint16,bytes,uint256)"
      | "router"
      | "router()"
      | "routerETH"
      | "routerETH()"
      | "setOwner"
      | "setOwner(address)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addRebalanceAmount",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addRebalanceAmount(address,uint16,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "checker",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "checker(address,uint16)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "connectedOFTs",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "connectedOFTs(address,uint16)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "emergencySaveTokens",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "emergencySaveTokens(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "initConnectedOFT",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "initConnectedOFT(address,uint16,address,bytes)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "instantRedeemLocal",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "instantRedeemLocal(uint16,uint256,address)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "rebalance",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "rebalance(address,uint16,uint256,uint256,bytes)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemLocal",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      IStargateRouterBase.LzTxObjStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      IStargateRouterBase.LzTxObjStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemRemote",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      IStargateRouterBase.LzTxObjStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      IStargateRouterBase.LzTxObjStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "retryRevert",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "retryRevert(uint16,bytes,uint256)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(functionFragment: "router", values?: undefined): string;
  encodeFunctionData(functionFragment: "router()", values?: undefined): string;
  encodeFunctionData(functionFragment: "routerETH", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "routerETH()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setOwner",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setOwner(address)",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "addRebalanceAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addRebalanceAmount(address,uint16,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "checker", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "checker(address,uint16)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "connectedOFTs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "connectedOFTs(address,uint16)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emergencySaveTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emergencySaveTokens(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initConnectedOFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initConnectedOFT(address,uint16,address,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "instantRedeemLocal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "instantRedeemLocal(uint16,uint256,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "rebalance", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "rebalance(address,uint16,uint256,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemLocal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemRemote",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retryRevert",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retryRevert(uint16,bytes,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "router", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "router()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "routerETH", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "routerETH()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setOwner(address)",
    data: BytesLike
  ): Result;

  events: {
    "ConnectedChainUpdated(address,uint16,address)": EventFragment;
    "OwnerUpdated(address,address)": EventFragment;
    "RebalanceAmountUpdated(address,uint16,uint256,uint256)": EventFragment;
    "Rebalanced(address,uint16,uint256,uint256,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ConnectedChainUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ConnectedChainUpdated(address,uint16,address)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnerUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "OwnerUpdated(address,address)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RebalanceAmountUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RebalanceAmountUpdated(address,uint16,uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Rebalanced"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Rebalanced(address,uint16,uint256,uint256,bool)"
  ): EventFragment;
}

export interface ConnectedChainUpdatedEventObject {
  _srcOft: string;
  _dstChainId: number;
  _dstOft: string;
}
export type ConnectedChainUpdatedEvent = TypedEvent<
  [string, number, string],
  ConnectedChainUpdatedEventObject
>;

export type ConnectedChainUpdatedEventFilter =
  TypedEventFilter<ConnectedChainUpdatedEvent>;

export interface OwnerUpdatedEventObject {
  user: string;
  newOwner: string;
}
export type OwnerUpdatedEvent = TypedEvent<
  [string, string],
  OwnerUpdatedEventObject
>;

export type OwnerUpdatedEventFilter = TypedEventFilter<OwnerUpdatedEvent>;

export interface RebalanceAmountUpdatedEventObject {
  _srcOft: string;
  _dstChainId: number;
  _amount: BigNumber;
  _totalAmount: BigNumber;
}
export type RebalanceAmountUpdatedEvent = TypedEvent<
  [string, number, BigNumber, BigNumber],
  RebalanceAmountUpdatedEventObject
>;

export type RebalanceAmountUpdatedEventFilter =
  TypedEventFilter<RebalanceAmountUpdatedEvent>;

export interface RebalancedEventObject {
  _srcOft: string;
  _dstChainId: number;
  _slippage: BigNumber;
  _amount: BigNumber;
  _isNative: boolean;
}
export type RebalancedEvent = TypedEvent<
  [string, number, BigNumber, BigNumber, boolean],
  RebalancedEventObject
>;

export type RebalancedEventFilter = TypedEventFilter<RebalancedEvent>;

export interface Balancer extends BaseContract {
  contractName: "Balancer";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BalancerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addRebalanceAmount(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "addRebalanceAmount(address,uint16,uint256)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    checker(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean, string] & { canExec: boolean; execPayload: string }>;

    "checker(address,uint16)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean, string] & { canExec: boolean; execPayload: string }>;

    connectedOFTs(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, string, BigNumber] & {
        srcPoolId: BigNumber;
        dstPoolId: BigNumber;
        dstOft: string;
        rebalanceable: BigNumber;
      }
    >;

    "connectedOFTs(address,uint16)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, string, BigNumber] & {
        srcPoolId: BigNumber;
        dstPoolId: BigNumber;
        dstOft: string;
        rebalanceable: BigNumber;
      }
    >;

    emergencySaveTokens(
      _token: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "emergencySaveTokens(address,uint256)"(
      _token: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    initConnectedOFT(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _dstOft: PromiseOrValue<string>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "initConnectedOFT(address,uint16,address,bytes)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _dstOft: PromiseOrValue<string>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    instantRedeemLocal(
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "instantRedeemLocal(uint16,uint256,address)"(
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    rebalance(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _slippage: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "rebalance(address,uint16,uint256,uint256,bytes)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _slippage: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    redeemLocal(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))"(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    redeemRemote(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _minAmountLD: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))"(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _minAmountLD: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    retryRevert(
      _srcChainId: PromiseOrValue<BigNumberish>,
      _srcAddress: PromiseOrValue<BytesLike>,
      _nonce: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "retryRevert(uint16,bytes,uint256)"(
      _srcChainId: PromiseOrValue<BigNumberish>,
      _srcAddress: PromiseOrValue<BytesLike>,
      _nonce: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    router(overrides?: CallOverrides): Promise<[string]>;

    "router()"(overrides?: CallOverrides): Promise<[string]>;

    routerETH(overrides?: CallOverrides): Promise<[string]>;

    "routerETH()"(overrides?: CallOverrides): Promise<[string]>;

    setOwner(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setOwner(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addRebalanceAmount(
    _srcOft: PromiseOrValue<string>,
    _dstChainId: PromiseOrValue<BigNumberish>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "addRebalanceAmount(address,uint16,uint256)"(
    _srcOft: PromiseOrValue<string>,
    _dstChainId: PromiseOrValue<BigNumberish>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  checker(
    _srcOft: PromiseOrValue<string>,
    _dstChainId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<[boolean, string] & { canExec: boolean; execPayload: string }>;

  "checker(address,uint16)"(
    _srcOft: PromiseOrValue<string>,
    _dstChainId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<[boolean, string] & { canExec: boolean; execPayload: string }>;

  connectedOFTs(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, string, BigNumber] & {
      srcPoolId: BigNumber;
      dstPoolId: BigNumber;
      dstOft: string;
      rebalanceable: BigNumber;
    }
  >;

  "connectedOFTs(address,uint16)"(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, string, BigNumber] & {
      srcPoolId: BigNumber;
      dstPoolId: BigNumber;
      dstOft: string;
      rebalanceable: BigNumber;
    }
  >;

  emergencySaveTokens(
    _token: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "emergencySaveTokens(address,uint256)"(
    _token: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  initConnectedOFT(
    _srcOft: PromiseOrValue<string>,
    _dstChainId: PromiseOrValue<BigNumberish>,
    _dstOft: PromiseOrValue<string>,
    _ercData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "initConnectedOFT(address,uint16,address,bytes)"(
    _srcOft: PromiseOrValue<string>,
    _dstChainId: PromiseOrValue<BigNumberish>,
    _dstOft: PromiseOrValue<string>,
    _ercData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  instantRedeemLocal(
    _srcPoolId: PromiseOrValue<BigNumberish>,
    _amountLP: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "instantRedeemLocal(uint16,uint256,address)"(
    _srcPoolId: PromiseOrValue<BigNumberish>,
    _amountLP: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  rebalance(
    _srcOft: PromiseOrValue<string>,
    _dstChainId: PromiseOrValue<BigNumberish>,
    _slippage: PromiseOrValue<BigNumberish>,
    _amount: PromiseOrValue<BigNumberish>,
    _ercData: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "rebalance(address,uint16,uint256,uint256,bytes)"(
    _srcOft: PromiseOrValue<string>,
    _dstChainId: PromiseOrValue<BigNumberish>,
    _slippage: PromiseOrValue<BigNumberish>,
    _amount: PromiseOrValue<BigNumberish>,
    _ercData: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  redeemLocal(
    _dstChainId: PromiseOrValue<BigNumberish>,
    _srcPoolId: PromiseOrValue<BigNumberish>,
    _dstPoolId: PromiseOrValue<BigNumberish>,
    _refundAddress: PromiseOrValue<string>,
    _amountLP: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<BytesLike>,
    _lzTxParams: IStargateRouterBase.LzTxObjStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))"(
    _dstChainId: PromiseOrValue<BigNumberish>,
    _srcPoolId: PromiseOrValue<BigNumberish>,
    _dstPoolId: PromiseOrValue<BigNumberish>,
    _refundAddress: PromiseOrValue<string>,
    _amountLP: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<BytesLike>,
    _lzTxParams: IStargateRouterBase.LzTxObjStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  redeemRemote(
    _dstChainId: PromiseOrValue<BigNumberish>,
    _srcPoolId: PromiseOrValue<BigNumberish>,
    _dstPoolId: PromiseOrValue<BigNumberish>,
    _refundAddress: PromiseOrValue<string>,
    _amountLP: PromiseOrValue<BigNumberish>,
    _minAmountLD: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<BytesLike>,
    _lzTxParams: IStargateRouterBase.LzTxObjStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))"(
    _dstChainId: PromiseOrValue<BigNumberish>,
    _srcPoolId: PromiseOrValue<BigNumberish>,
    _dstPoolId: PromiseOrValue<BigNumberish>,
    _refundAddress: PromiseOrValue<string>,
    _amountLP: PromiseOrValue<BigNumberish>,
    _minAmountLD: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<BytesLike>,
    _lzTxParams: IStargateRouterBase.LzTxObjStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  retryRevert(
    _srcChainId: PromiseOrValue<BigNumberish>,
    _srcAddress: PromiseOrValue<BytesLike>,
    _nonce: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "retryRevert(uint16,bytes,uint256)"(
    _srcChainId: PromiseOrValue<BigNumberish>,
    _srcAddress: PromiseOrValue<BytesLike>,
    _nonce: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  router(overrides?: CallOverrides): Promise<string>;

  "router()"(overrides?: CallOverrides): Promise<string>;

  routerETH(overrides?: CallOverrides): Promise<string>;

  "routerETH()"(overrides?: CallOverrides): Promise<string>;

  setOwner(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setOwner(address)"(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addRebalanceAmount(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "addRebalanceAmount(address,uint16,uint256)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    checker(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean, string] & { canExec: boolean; execPayload: string }>;

    "checker(address,uint16)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean, string] & { canExec: boolean; execPayload: string }>;

    connectedOFTs(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, string, BigNumber] & {
        srcPoolId: BigNumber;
        dstPoolId: BigNumber;
        dstOft: string;
        rebalanceable: BigNumber;
      }
    >;

    "connectedOFTs(address,uint16)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, string, BigNumber] & {
        srcPoolId: BigNumber;
        dstPoolId: BigNumber;
        dstOft: string;
        rebalanceable: BigNumber;
      }
    >;

    emergencySaveTokens(
      _token: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "emergencySaveTokens(address,uint256)"(
      _token: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    initConnectedOFT(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _dstOft: PromiseOrValue<string>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    "initConnectedOFT(address,uint16,address,bytes)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _dstOft: PromiseOrValue<string>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    instantRedeemLocal(
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "instantRedeemLocal(uint16,uint256,address)"(
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    rebalance(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _slippage: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    "rebalance(address,uint16,uint256,uint256,bytes)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _slippage: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    redeemLocal(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))"(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    redeemRemote(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _minAmountLD: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))"(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _minAmountLD: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    retryRevert(
      _srcChainId: PromiseOrValue<BigNumberish>,
      _srcAddress: PromiseOrValue<BytesLike>,
      _nonce: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "retryRevert(uint16,bytes,uint256)"(
      _srcChainId: PromiseOrValue<BigNumberish>,
      _srcAddress: PromiseOrValue<BytesLike>,
      _nonce: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    router(overrides?: CallOverrides): Promise<string>;

    "router()"(overrides?: CallOverrides): Promise<string>;

    routerETH(overrides?: CallOverrides): Promise<string>;

    "routerETH()"(overrides?: CallOverrides): Promise<string>;

    setOwner(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setOwner(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ConnectedChainUpdated(address,uint16,address)"(
      _srcOft?: PromiseOrValue<string> | null,
      _dstChainId?: PromiseOrValue<BigNumberish> | null,
      _dstOft?: PromiseOrValue<string> | null
    ): ConnectedChainUpdatedEventFilter;
    ConnectedChainUpdated(
      _srcOft?: PromiseOrValue<string> | null,
      _dstChainId?: PromiseOrValue<BigNumberish> | null,
      _dstOft?: PromiseOrValue<string> | null
    ): ConnectedChainUpdatedEventFilter;

    "OwnerUpdated(address,address)"(
      user?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnerUpdatedEventFilter;
    OwnerUpdated(
      user?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnerUpdatedEventFilter;

    "RebalanceAmountUpdated(address,uint16,uint256,uint256)"(
      _srcOft?: PromiseOrValue<string> | null,
      _dstChainId?: PromiseOrValue<BigNumberish> | null,
      _amount?: PromiseOrValue<BigNumberish> | null,
      _totalAmount?: null
    ): RebalanceAmountUpdatedEventFilter;
    RebalanceAmountUpdated(
      _srcOft?: PromiseOrValue<string> | null,
      _dstChainId?: PromiseOrValue<BigNumberish> | null,
      _amount?: PromiseOrValue<BigNumberish> | null,
      _totalAmount?: null
    ): RebalanceAmountUpdatedEventFilter;

    "Rebalanced(address,uint16,uint256,uint256,bool)"(
      _srcOft?: PromiseOrValue<string> | null,
      _dstChainId?: PromiseOrValue<BigNumberish> | null,
      _slippage?: PromiseOrValue<BigNumberish> | null,
      _amount?: null,
      _isNative?: null
    ): RebalancedEventFilter;
    Rebalanced(
      _srcOft?: PromiseOrValue<string> | null,
      _dstChainId?: PromiseOrValue<BigNumberish> | null,
      _slippage?: PromiseOrValue<BigNumberish> | null,
      _amount?: null,
      _isNative?: null
    ): RebalancedEventFilter;
  };

  estimateGas: {
    addRebalanceAmount(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "addRebalanceAmount(address,uint16,uint256)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    checker(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "checker(address,uint16)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    connectedOFTs(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "connectedOFTs(address,uint16)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    emergencySaveTokens(
      _token: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "emergencySaveTokens(address,uint256)"(
      _token: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    initConnectedOFT(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _dstOft: PromiseOrValue<string>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "initConnectedOFT(address,uint16,address,bytes)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _dstOft: PromiseOrValue<string>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    instantRedeemLocal(
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "instantRedeemLocal(uint16,uint256,address)"(
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    rebalance(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _slippage: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "rebalance(address,uint16,uint256,uint256,bytes)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _slippage: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    redeemLocal(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))"(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    redeemRemote(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _minAmountLD: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))"(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _minAmountLD: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    retryRevert(
      _srcChainId: PromiseOrValue<BigNumberish>,
      _srcAddress: PromiseOrValue<BytesLike>,
      _nonce: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "retryRevert(uint16,bytes,uint256)"(
      _srcChainId: PromiseOrValue<BigNumberish>,
      _srcAddress: PromiseOrValue<BytesLike>,
      _nonce: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    router(overrides?: CallOverrides): Promise<BigNumber>;

    "router()"(overrides?: CallOverrides): Promise<BigNumber>;

    routerETH(overrides?: CallOverrides): Promise<BigNumber>;

    "routerETH()"(overrides?: CallOverrides): Promise<BigNumber>;

    setOwner(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setOwner(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addRebalanceAmount(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "addRebalanceAmount(address,uint16,uint256)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    checker(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "checker(address,uint16)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    connectedOFTs(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "connectedOFTs(address,uint16)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    emergencySaveTokens(
      _token: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "emergencySaveTokens(address,uint256)"(
      _token: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    initConnectedOFT(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _dstOft: PromiseOrValue<string>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "initConnectedOFT(address,uint16,address,bytes)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _dstOft: PromiseOrValue<string>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    instantRedeemLocal(
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "instantRedeemLocal(uint16,uint256,address)"(
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rebalance(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _slippage: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "rebalance(address,uint16,uint256,uint256,bytes)"(
      _srcOft: PromiseOrValue<string>,
      _dstChainId: PromiseOrValue<BigNumberish>,
      _slippage: PromiseOrValue<BigNumberish>,
      _amount: PromiseOrValue<BigNumberish>,
      _ercData: PromiseOrValue<BytesLike>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    redeemLocal(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))"(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    redeemRemote(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _minAmountLD: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))"(
      _dstChainId: PromiseOrValue<BigNumberish>,
      _srcPoolId: PromiseOrValue<BigNumberish>,
      _dstPoolId: PromiseOrValue<BigNumberish>,
      _refundAddress: PromiseOrValue<string>,
      _amountLP: PromiseOrValue<BigNumberish>,
      _minAmountLD: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<BytesLike>,
      _lzTxParams: IStargateRouterBase.LzTxObjStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    retryRevert(
      _srcChainId: PromiseOrValue<BigNumberish>,
      _srcAddress: PromiseOrValue<BytesLike>,
      _nonce: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "retryRevert(uint16,bytes,uint256)"(
      _srcChainId: PromiseOrValue<BigNumberish>,
      _srcAddress: PromiseOrValue<BytesLike>,
      _nonce: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    router(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "router()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    routerETH(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "routerETH()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setOwner(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setOwner(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
