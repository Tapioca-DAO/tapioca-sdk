/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export declare namespace TapiocaWrapper {
  export type ExecutionCallStruct = {
    toft: PromiseOrValue<string>;
    value: PromiseOrValue<BigNumberish>;
    bytecode: PromiseOrValue<BytesLike>;
    revertOnFailure: PromiseOrValue<boolean>;
  };

  export type ExecutionCallStructOutput = [
    string,
    BigNumber,
    string,
    boolean
  ] & {
    toft: string;
    value: BigNumber;
    bytecode: string;
    revertOnFailure: boolean;
  };
}

export interface TapiocaWrapperInterface extends utils.Interface {
  functions: {
    "createTOFT(address,bytes,bytes32,bool)": FunctionFragment;
    "executeCalls((address,uint256,bytes,bool)[])": FunctionFragment;
    "executeTOFT(address,bytes,bool)": FunctionFragment;
    "harvestableTapiocaOFTsLength()": FunctionFragment;
    "lastTOFT()": FunctionFragment;
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "tapiocaOFTLength()": FunctionFragment;
    "tapiocaOFTs(uint256)": FunctionFragment;
    "tapiocaOFTsByErc20(address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "createTOFT"
      | "createTOFT(address,bytes,bytes32,bool)"
      | "executeCalls"
      | "executeCalls((address,uint256,bytes,bool)[])"
      | "executeTOFT"
      | "executeTOFT(address,bytes,bool)"
      | "harvestableTapiocaOFTsLength"
      | "harvestableTapiocaOFTsLength()"
      | "lastTOFT"
      | "lastTOFT()"
      | "owner"
      | "owner()"
      | "renounceOwnership"
      | "renounceOwnership()"
      | "tapiocaOFTLength"
      | "tapiocaOFTLength()"
      | "tapiocaOFTs"
      | "tapiocaOFTs(uint256)"
      | "tapiocaOFTsByErc20"
      | "tapiocaOFTsByErc20(address)"
      | "transferOwnership"
      | "transferOwnership(address)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "createTOFT",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<boolean>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "createTOFT(address,bytes,bytes32,bool)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<boolean>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "executeCalls",
    values: [TapiocaWrapper.ExecutionCallStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "executeCalls((address,uint256,bytes,bool)[])",
    values: [TapiocaWrapper.ExecutionCallStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "executeTOFT",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<boolean>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "executeTOFT(address,bytes,bool)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<boolean>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "harvestableTapiocaOFTsLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "harvestableTapiocaOFTsLength()",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "lastTOFT", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "lastTOFT()",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tapiocaOFTLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tapiocaOFTLength()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tapiocaOFTs",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "tapiocaOFTs(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "tapiocaOFTsByErc20",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "tapiocaOFTsByErc20(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership(address)",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(functionFragment: "createTOFT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "createTOFT(address,bytes,bytes32,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeCalls",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeCalls((address,uint256,bytes,bool)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeTOFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeTOFT(address,bytes,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "harvestableTapiocaOFTsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "harvestableTapiocaOFTsLength()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "lastTOFT", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "lastTOFT()", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tapiocaOFTLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tapiocaOFTLength()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tapiocaOFTs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tapiocaOFTs(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tapiocaOFTsByErc20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tapiocaOFTsByErc20(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership(address)",
    data: BytesLike
  ): Result;

  events: {
    "CreateOFT(address,address)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "SetFees(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CreateOFT"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CreateOFT(address,address)"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "OwnershipTransferred(address,address)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetFees"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetFees(uint256)"): EventFragment;
}

export interface CreateOFTEventObject {
  _tapiocaOFT: string;
  _erc20: string;
}
export type CreateOFTEvent = TypedEvent<[string, string], CreateOFTEventObject>;

export type CreateOFTEventFilter = TypedEventFilter<CreateOFTEvent>;

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface SetFeesEventObject {
  _newFee: BigNumber;
}
export type SetFeesEvent = TypedEvent<[BigNumber], SetFeesEventObject>;

export type SetFeesEventFilter = TypedEventFilter<SetFeesEvent>;

export interface TapiocaWrapper extends BaseContract {
  contractName: "TapiocaWrapper";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TapiocaWrapperInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    createTOFT(
      _erc20: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _salt: PromiseOrValue<BytesLike>,
      _linked: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "createTOFT(address,bytes,bytes32,bool)"(
      _erc20: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _salt: PromiseOrValue<BytesLike>,
      _linked: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    executeCalls(
      _call: TapiocaWrapper.ExecutionCallStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "executeCalls((address,uint256,bytes,bool)[])"(
      _call: TapiocaWrapper.ExecutionCallStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    executeTOFT(
      _toft: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _revertOnFailure: PromiseOrValue<boolean>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "executeTOFT(address,bytes,bool)"(
      _toft: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _revertOnFailure: PromiseOrValue<boolean>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    harvestableTapiocaOFTsLength(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "harvestableTapiocaOFTsLength()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    lastTOFT(overrides?: CallOverrides): Promise<[string]>;

    "lastTOFT()"(overrides?: CallOverrides): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    tapiocaOFTLength(overrides?: CallOverrides): Promise<[BigNumber]>;

    "tapiocaOFTLength()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    tapiocaOFTs(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "tapiocaOFTs(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    tapiocaOFTsByErc20(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "tapiocaOFTsByErc20(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  createTOFT(
    _erc20: PromiseOrValue<string>,
    _bytecode: PromiseOrValue<BytesLike>,
    _salt: PromiseOrValue<BytesLike>,
    _linked: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "createTOFT(address,bytes,bytes32,bool)"(
    _erc20: PromiseOrValue<string>,
    _bytecode: PromiseOrValue<BytesLike>,
    _salt: PromiseOrValue<BytesLike>,
    _linked: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  executeCalls(
    _call: TapiocaWrapper.ExecutionCallStruct[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "executeCalls((address,uint256,bytes,bool)[])"(
    _call: TapiocaWrapper.ExecutionCallStruct[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  executeTOFT(
    _toft: PromiseOrValue<string>,
    _bytecode: PromiseOrValue<BytesLike>,
    _revertOnFailure: PromiseOrValue<boolean>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "executeTOFT(address,bytes,bool)"(
    _toft: PromiseOrValue<string>,
    _bytecode: PromiseOrValue<BytesLike>,
    _revertOnFailure: PromiseOrValue<boolean>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  harvestableTapiocaOFTsLength(overrides?: CallOverrides): Promise<BigNumber>;

  "harvestableTapiocaOFTsLength()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  lastTOFT(overrides?: CallOverrides): Promise<string>;

  "lastTOFT()"(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "renounceOwnership()"(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  tapiocaOFTLength(overrides?: CallOverrides): Promise<BigNumber>;

  "tapiocaOFTLength()"(overrides?: CallOverrides): Promise<BigNumber>;

  tapiocaOFTs(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "tapiocaOFTs(uint256)"(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  tapiocaOFTsByErc20(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  "tapiocaOFTsByErc20(address)"(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    createTOFT(
      _erc20: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _salt: PromiseOrValue<BytesLike>,
      _linked: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    "createTOFT(address,bytes,bytes32,bool)"(
      _erc20: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _salt: PromiseOrValue<BytesLike>,
      _linked: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    executeCalls(
      _call: TapiocaWrapper.ExecutionCallStruct[],
      overrides?: CallOverrides
    ): Promise<[boolean, string[]] & { success: boolean; results: string[] }>;

    "executeCalls((address,uint256,bytes,bool)[])"(
      _call: TapiocaWrapper.ExecutionCallStruct[],
      overrides?: CallOverrides
    ): Promise<[boolean, string[]] & { success: boolean; results: string[] }>;

    executeTOFT(
      _toft: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _revertOnFailure: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<[boolean, string] & { success: boolean; result: string }>;

    "executeTOFT(address,bytes,bool)"(
      _toft: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _revertOnFailure: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<[boolean, string] & { success: boolean; result: string }>;

    harvestableTapiocaOFTsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "harvestableTapiocaOFTsLength()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lastTOFT(overrides?: CallOverrides): Promise<string>;

    "lastTOFT()"(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    tapiocaOFTLength(overrides?: CallOverrides): Promise<BigNumber>;

    "tapiocaOFTLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    tapiocaOFTs(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "tapiocaOFTs(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    tapiocaOFTsByErc20(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    "tapiocaOFTsByErc20(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "CreateOFT(address,address)"(
      _tapiocaOFT?: PromiseOrValue<string> | null,
      _erc20?: PromiseOrValue<string> | null
    ): CreateOFTEventFilter;
    CreateOFT(
      _tapiocaOFT?: PromiseOrValue<string> | null,
      _erc20?: PromiseOrValue<string> | null
    ): CreateOFTEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;

    "SetFees(uint256)"(_newFee?: null): SetFeesEventFilter;
    SetFees(_newFee?: null): SetFeesEventFilter;
  };

  estimateGas: {
    createTOFT(
      _erc20: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _salt: PromiseOrValue<BytesLike>,
      _linked: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "createTOFT(address,bytes,bytes32,bool)"(
      _erc20: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _salt: PromiseOrValue<BytesLike>,
      _linked: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    executeCalls(
      _call: TapiocaWrapper.ExecutionCallStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "executeCalls((address,uint256,bytes,bool)[])"(
      _call: TapiocaWrapper.ExecutionCallStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    executeTOFT(
      _toft: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _revertOnFailure: PromiseOrValue<boolean>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "executeTOFT(address,bytes,bool)"(
      _toft: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _revertOnFailure: PromiseOrValue<boolean>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    harvestableTapiocaOFTsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "harvestableTapiocaOFTsLength()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lastTOFT(overrides?: CallOverrides): Promise<BigNumber>;

    "lastTOFT()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    tapiocaOFTLength(overrides?: CallOverrides): Promise<BigNumber>;

    "tapiocaOFTLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    tapiocaOFTs(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tapiocaOFTs(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tapiocaOFTsByErc20(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tapiocaOFTsByErc20(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createTOFT(
      _erc20: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _salt: PromiseOrValue<BytesLike>,
      _linked: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "createTOFT(address,bytes,bytes32,bool)"(
      _erc20: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _salt: PromiseOrValue<BytesLike>,
      _linked: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    executeCalls(
      _call: TapiocaWrapper.ExecutionCallStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "executeCalls((address,uint256,bytes,bool)[])"(
      _call: TapiocaWrapper.ExecutionCallStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    executeTOFT(
      _toft: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _revertOnFailure: PromiseOrValue<boolean>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "executeTOFT(address,bytes,bool)"(
      _toft: PromiseOrValue<string>,
      _bytecode: PromiseOrValue<BytesLike>,
      _revertOnFailure: PromiseOrValue<boolean>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    harvestableTapiocaOFTsLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "harvestableTapiocaOFTsLength()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lastTOFT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "lastTOFT()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    tapiocaOFTLength(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "tapiocaOFTLength()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tapiocaOFTs(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tapiocaOFTs(uint256)"(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tapiocaOFTsByErc20(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tapiocaOFTsByErc20(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
