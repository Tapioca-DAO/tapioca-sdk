/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TapiocaWrapper,
  TapiocaWrapperInterface,
} from "../TapiocaWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "TapiocaWrapper__AlreadyDeployed",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__FailedDeploy",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__MngmtFeeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__NoTOFTDeployed",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__NotEnough",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "TapiocaWrapper__TOFTExecutionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ITapiocaOFT",
        name: "_tapiocaOFT",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "CreateOFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "SetFees",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_linked",
        type: "bool",
      },
    ],
    name: "createTOFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "toft",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "bytecode",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "revertOnFailure",
            type: "bool",
          },
        ],
        internalType: "struct TapiocaWrapper.ExecutionCall[]",
        name: "_call",
        type: "tuple[]",
      },
    ],
    name: "executeCalls",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_toft",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_revertOnFailure",
        type: "bool",
      },
    ],
    name: "executeTOFT",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestableTapiocaOFTsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTOFT",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapiocaOFTLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tapiocaOFTs",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tapiocaOFTsByErc20",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100a157601f610dc238819003918201601f19168301916001600160401b038311848410176100a6578084926020946040528339810103126100a157516001600160a01b038116908190036100a1576000805460405192916001600160a01b0319918216919033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a333161717600055610d0590816100bd8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c8063078dfbe7146108f95780632f3e1b91146108da57806339930d73146108bb5780633b6ac5a3146108825780634e71e0c8146107e25780638da5cb5b146107ba578063b3c7d6a3146104bd578063b8454db8146103f6578063c5181c70146103a1578063c99e12b21461035a578063e30c3978146103315763e72d8edc146100a557600080fd5b60208060031936011261032d576001600160401b03918035919083831161032957366023840112156103295782810135848111610325576024808501948136918460051b0101116103215793949060018060a01b03610108818a54163314610ab4565b8895899361011584610b83565b986101228b519a8b610aff565b848a52601f1961013186610b83565b01888d5b8c83821061031157505050508b945b8086106101c85750505050505034106101bb57509390835193808501911515855285850152825180915260608401948060608360051b870101940192955b82871061018f5785850386f35b9091929382806101ab600193605f198a82030186528851610a43565b9601920196019592919092610182565b8451625752dd60e11b8152fd5b9193959092949850876101dc8a8486610b9a565b013581018091116102ff57948b6101f48a8486610b9a565b358281168091036102fb578961020b8c8688610b9a565b0135908d61021a8d8789610b9a565b9081013590601e19813603018212156102f757018035908882116102f7578c019281360384136102f7578f93828695519384928337810185815203925af198610261610b53565b61026b828d610bbc565b5289606061027a838688610b9a565b01359081151582036102f357816102ea575b506102b95760001981146102a7576001019492909391610144565b634e487b7160e01b8d5260118852858dfd5b876102e68d886102cb8f958e96610bbc565b5191519485946310847b0960e01b8652850152830190610a43565b0390fd5b9050153861028c565b8e80fd5b8480fd5b5080fd5b634e487b7160e01b8c5260118752848cfd5b60609082018301528a9101610135565b8780fd5b8680fd5b8580fd5b8380fd5b5050346102fb57816003193601126102fb5760015490516001600160a01b039091168152602090f35b503461039d57602036600319011261039d57359160025483101561039a5750610384602092610a83565b905491519160018060a01b039160031b1c168152f35b80fd5b8280fd5b50913461039a578060031936011261039a576002549283156103e85760001984019384116103d55760208361038486610a83565b634e487b7160e01b825260119052602490fd5b8251634df930f160e01b8152fd5b5082606036600319011261039a5761040c6109ec565b906024356001600160401b0381116102fb5761042c829136908601610a16565b610434610a07565b9460018060a01b039261044b848654163314610ab4565b8289519384928337810185815203923491165af191610468610b53565b91806104b5575b610493575061048f90835193849315158452806020850152830190610a43565b0390f35b6102e660209285519384936310847b0960e01b85528401526024830190610a43565b50821561046f565b503461039d57608036600319011261039d576104d76109ec565b916024356001600160401b0381116102f7576104f69036908401610a16565b6044359491606435801592908315036103215787546001600160a01b0394906105229086163314610ab4565b84811697888a5260209488865286888c2054166107a357918694929185949260001461078657926105b6916105bc946105ab61055f368786610bd0565b8051908b01208c51808c019182526001600160601b031930606090811b821660208501529590951b90941660348201526048808201939093528381039283018452929160680182610aff565b519020923691610bd0565b90610c07565b165b16938351633c2f4f4360e11b815282818381895afa90811561077c57879185918a91610741575b50160361073357600254600160401b9390848110156107205780600161060e9201600255610a83565b819291549060031b9188831b921b19161790558587528082528387209360018060a01b03199486868254161790558051622a579d60e11b8152838184818a5afa918215610717575088916106ea575b504614610690575b505050507f7512d1d2a31be00735451a10b76db5dca1e1581b1cb23d7910b4741e8eb148768380a380f35b600354928310156106d75760018301806003558310156106c457506003865285200180549091168217905538808080610665565b634e487b7160e01b875260329052602486fd5b634e487b7160e01b875260419052602486fd5b90508281813d8311610710575b6107018183610aff565b8101031261032157513861065d565b503d6106f7565b513d8a823e3d90fd5b634e487b7160e01b895260418352602489fd5b835163f083e5f760e01b8152fd5b925050508281813d8311610775575b61075a8183610aff565b810103126103215751838116810361032157838791386105e5565b503d610750565b85513d8a823e3d90fd5b926105b69161079d946105ab61055f368786610bd0565b166105be565b8751638a8d142560e01b8152808a018b9052602490fd5b5050346102fb57816003193601126102fb57905490516001600160a01b039091168152602090f35b50903461039d578260031936011261039d576001546001600160a01b0392909183831691903383900361083f575050808454938416600080516020610cb08339815191528680a36001600160a01b03199283161783551660015580f35b906020606492519162461bcd60e51b8352820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b503461039d57602036600319011261039d576020926001600160a01b0391839190836108ac6109ec565b16825285522054169051908152f35b5050346102fb57816003193601126102fb576020906003549051908152f35b5050346102fb57816003193601126102fb576020906002549051908152f35b50903461039d57606036600319011261039d576109146109ec565b916024359182151583036102f75761092a610a07565b9260018060a01b03948591610943838954163314610ab4565b156109d35716928315908115916109cb575b5015610990575050808354928316600080516020610cb08339815191528580a36001600160a01b031991821617825560018054909116905580f35b906020606492519162461bcd60e51b835282015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152fd5b905038610955565b93505050501660018060a01b0319600154161760015580f35b600435906001600160a01b0382168203610a0257565b600080fd5b604435908115158203610a0257565b9181601f84011215610a02578235916001600160401b038311610a025760208381860195010111610a0257565b919082519283825260005b848110610a6f575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610a4e565b600254811015610a9e57600260005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b15610abb57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b601f909101601f19168101906001600160401b03821190821017610b2257604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111610b2257601f01601f191660200190565b3d15610b7e573d90610b6482610b38565b91610b726040519384610aff565b82523d6000602084013e565b606090565b6001600160401b038111610b225760051b60200190565b9190811015610a9e5760051b81013590607e1981360301821215610a02570190565b8051821015610a9e5760209160051b010190565b929192610bdc82610b38565b91610bea6040519384610aff565b829481845281830111610a02578281602093846000960137010152565b90805115610c6b576020815191016000f5906001600160a01b03821615610c2a57565b60405162461bcd60e51b8152602060048201526019602482015278437265617465323a204661696c6564206f6e206465706c6f7960381b6044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220af4096d7718f9c8cb504084206ae194c88f3396aae7b571492fbfd52e8293ce364736f6c63430008130033";

type TapiocaWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TapiocaWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TapiocaWrapper__factory extends ContractFactory {
  constructor(...args: TapiocaWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TapiocaWrapper";
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TapiocaWrapper> {
    return super.deploy(_owner, overrides || {}) as Promise<TapiocaWrapper>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): TapiocaWrapper {
    return super.attach(address) as TapiocaWrapper;
  }
  override connect(signer: Signer): TapiocaWrapper__factory {
    return super.connect(signer) as TapiocaWrapper__factory;
  }
  static readonly contractName: "TapiocaWrapper";

  public readonly contractName: "TapiocaWrapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TapiocaWrapperInterface {
    return new utils.Interface(_abi) as TapiocaWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TapiocaWrapper {
    return new Contract(address, _abi, signerOrProvider) as TapiocaWrapper;
  }
}
