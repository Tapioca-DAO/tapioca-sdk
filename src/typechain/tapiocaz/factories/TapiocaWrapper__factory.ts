/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TapiocaWrapper,
  TapiocaWrapperInterface,
} from "../TapiocaWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "TapiocaWrapper__AlreadyDeployed",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__FailedDeploy",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__MngmtFeeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__NoTOFTDeployed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "TapiocaWrapper__TOFTExecutionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ITapiocaOFT",
        name: "_tapiocaOFT",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "CreateOFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "HarvestFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "SetFees",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_linked",
        type: "bool",
      },
    ],
    name: "createTOFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "toft",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "bytecode",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "revertOnFailure",
            type: "bool",
          },
        ],
        internalType: "struct TapiocaWrapper.ExecutionCall[]",
        name: "_call",
        type: "tuple[]",
      },
    ],
    name: "executeCalls",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_toft",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_revertOnFailure",
        type: "bool",
      },
    ],
    name: "executeTOFT",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestableTapiocaOFTsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTOFT",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tapiocaOFTLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tapiocaOFTs",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tapiocaOFTsByErc20",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007057601f610da138819003918201601f19168301916001600160401b038311848410176100755780849260209460405283398101031261007057516001600160a01b0381168103610070576100619061005c3361008b565b61008b565b604051610cce90816100d38239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6040608081526004908136101561001557600080fd5b600091823560e01c8063138cc18f146108ee5780632f3e1b91146108cf57806339930d73146108b05780633b6ac5a314610875578063715018a61461081b5780638da5cb5b146107f3578063b3c7d6a3146104ea578063b8454db814610421578063c5181c70146103cc578063c99e12b214610389578063e4c472061461016a5763f2fde38b146100a557600080fd5b34610166576020366003190112610166576100be6109b4565b906100c7610a6d565b6001600160a01b0391821692831561011457505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50602080600319360112610366578135906001600160401b038083116103855736602384011215610385578284013593818511610381576024808501948136918860051b01011161037d579296939491906101c3610a6d565b84936101ce84610b6c565b966101db89519889610aea565b848852601f196101ea86610b6c565b01875b81811061036e57505086945b80861061026757505050505050835193808501911515855285850152825180915260608401948060608360051b870101940192955b82871061023b5785850386f35b909192938280610257600193605f198a820301865288516109fc565b960192019601959291909261022e565b909192939496809a965061027c888385610b83565b356001600160a01b0381169081900361036a5761029a898486610b83565b8881013590601e1981360301821215610366570190813591888311610366578901918036038313610366578392818e5192839283378101848152039134905af1966102e3610b3c565b6102ed828b610ba5565b52878a6102fb838587610b83565b01359081151582036103625781610359575b506103295761031b90610ac5565b9493929190999695996101f9565b846103558b8661033a8b958e610ba5565b5191519485946310847b0960e01b86528501528301906109fc565b0390fd5b9050153861030d565b8c80fd5b8380fd5b5080fd5b60608a82018d01528b016101ed565b8780fd5b8680fd5b8580fd5b50346101665760203660031901126101665735916001548310156103c957506103b3602092610a3c565b905491519160018060a01b039160031b1c168152f35b80fd5b5091346103c957806003193601126103c957600154928315610413576000198401938411610400576020836103b386610a3c565b634e487b7160e01b825260119052602490fd5b8251634df930f160e01b8152fd5b508260603660031901126103c9576104376109b4565b906024356001600160401b03811161036a5761045690369085016109cf565b604435939184151585036103665790839291610470610a6d565b81885192839283378101848152039134906001600160a01b03165af191610495610b3c565b91806104e2575b6104c057506104bc908351938493151584528060208501528301906109fc565b0390f35b61035560209285519384936310847b0960e01b855284015260248301906109fc565b50821561049c565b5034610166576080366003190112610166576105046109b4565b916024356001600160401b0381116107ef5761052390369084016109cf565b60443594916064358015929083150361037d5761053e610a6d565b60018060a01b039384811697888a526020946003865286888c2054166107d85791869492918594926000146107bb57926105e6916105ec946105db610584368786610bb9565b8a8151910120926105cd8d519384928d84019630908892606894929184526bffffffffffffffffffffffff19809260601b16602085015260601b16603483015260488201520190565b03601f198101835282610aea565b519020923691610bb9565b90610bf0565b165b16938351633c2f4f4360e11b815282818381895afa9081156107b157879185918a91610776575b50160361076857600154600160401b9390848110156107555780600161063e9201600155610a3c565b8154600391821b89811b94901b1916929092179055868852825283872080546001600160a01b031990811687179091558451622a579d60e11b8152909490838184818a5afa91821561074c5750889161071f575b5046146106c5575b505050507f7512d1d2a31be00735451a10b76db5dca1e1581b1cb23d7910b4741e8eb148768380a380f35b6002549283101561070c5760018301806002558310156106f95750600286528520018054909116821790553880808061069a565b634e487b7160e01b875260329052602486fd5b634e487b7160e01b875260419052602486fd5b90508281813d8311610745575b6107368183610aea565b8101031261037d575138610692565b503d61072c565b513d8a823e3d90fd5b634e487b7160e01b895260418352602489fd5b835163f083e5f760e01b8152fd5b925050508281813d83116107aa575b61078f8183610aea565b8101031261037d5751838116810361037d5783879138610615565b503d610785565b85513d8a823e3d90fd5b926105e6916107d2946105db610584368786610bb9565b166105ee565b8751638a8d142560e01b8152808a018b9052602490fd5b8480fd5b50503461036a578160031936011261036a57905490516001600160a01b039091168152602090f35b83346103c957806003193601126103c957610834610a6d565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461036a57602036600319011261036a576020916001600160a01b039082908261089f6109b4565b168152600385522054169051908152f35b50503461036a578160031936011261036a576020906002549051908152f35b50503461036a578160031936011261036a576020906001549051908152f35b5091346103c957806003193601126103c957805b6002805482101561098b578252602082208101546001600160a01b0316803b15610166578280918686518094819363138cc18f60e01b83525af1801561098157610956575b5061095190610ac5565b610902565b6001600160401b03811161096e578352610951610947565b634e487b7160e01b835260418552602483fd5b84513d85823e3d90fd5b82337ffafa110fb81a7f88423c7aa6e23116f2fbbc14aa953f81c5b5bf1571647f76b98280a280f35b600435906001600160a01b03821682036109ca57565b600080fd5b9181601f840112156109ca578235916001600160401b0383116109ca57602083818601950101116109ca57565b919082519283825260005b848110610a28575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610a07565b600154811015610a5757600160005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b03163303610a8157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000198114610ad45760010190565b634e487b7160e01b600052601160045260246000fd5b90601f801991011681019081106001600160401b03821117610b0b57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111610b0b57601f01601f191660200190565b3d15610b67573d90610b4d82610b21565b91610b5b6040519384610aea565b82523d6000602084013e565b606090565b6001600160401b038111610b0b5760051b60200190565b9190811015610a575760051b81013590605e19813603018212156109ca570190565b8051821015610a575760209160051b010190565b929192610bc582610b21565b91610bd36040519384610aea565b8294818452818301116109ca578281602093846000960137010152565b90805115610c54576020815191016000f5906001600160a01b03821615610c1357565b60405162461bcd60e51b8152602060048201526019602482015278437265617465323a204661696c6564206f6e206465706c6f7960381b6044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fdfea2646970667358221220d7ed9c6329235afc2c5bbeaa51d22cb5ee5e2db9799408a80c6a660d70d7f3c964736f6c63430008120033";

type TapiocaWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TapiocaWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TapiocaWrapper__factory extends ContractFactory {
  constructor(...args: TapiocaWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TapiocaWrapper";
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TapiocaWrapper> {
    return super.deploy(_owner, overrides || {}) as Promise<TapiocaWrapper>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): TapiocaWrapper {
    return super.attach(address) as TapiocaWrapper;
  }
  override connect(signer: Signer): TapiocaWrapper__factory {
    return super.connect(signer) as TapiocaWrapper__factory;
  }
  static readonly contractName: "TapiocaWrapper";

  public readonly contractName: "TapiocaWrapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TapiocaWrapperInterface {
    return new utils.Interface(_abi) as TapiocaWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TapiocaWrapper {
    return new Contract(address, _abi, signerOrProvider) as TapiocaWrapper;
  }
}
