/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TapiocaWrapper,
  TapiocaWrapperInterface,
} from "../TapiocaWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "TapiocaWrapper__AlreadyDeployed",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__FailedDeploy",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__MngmtFeeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__NoTOFTDeployed",
    type: "error",
  },
  {
    inputs: [],
    name: "TapiocaWrapper__NotEnough",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "TapiocaWrapper__TOFTExecutionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ITapiocaOFT",
        name: "_tapiocaOFT",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "CreateOFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "SetFees",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_linked",
        type: "bool",
      },
    ],
    name: "createTOFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "toft",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "bytecode",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "revertOnFailure",
            type: "bool",
          },
        ],
        internalType: "struct TapiocaWrapper.ExecutionCall[]",
        name: "_call",
        type: "tuple[]",
      },
    ],
    name: "executeCalls",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_toft",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_revertOnFailure",
        type: "bool",
      },
    ],
    name: "executeTOFT",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestableTapiocaOFTsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTOFT",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tapiocaOFTLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tapiocaOFTs",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tapiocaOFTsByErc20",
    outputs: [
      {
        internalType: "contract ITapiocaOFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007057601f610cff38819003918201601f19168301916001600160401b038311848410176100755780849260209460405283398101031261007057516001600160a01b0381168103610070576100619061005c3361008b565b61008b565b604051610c2c90816100d38239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604081815260048036101561001557600080fd5b600092833560e01c9081632f3e1b91146108f95750806339930d73146108da5780633b6ac5a31461089f578063715018a6146108575780638da5cb5b1461082f578063b3c7d6a314610535578063b8454db81461046c578063c5181c7014610417578063c99e12b2146103d4578063e72d8edc1461014f5763f2fde38b1461009c57600080fd5b3461014b57602036600319011261014b576100b5610915565b906100be6109ce565b6001600160a01b039182169283156100f957505082546001600160a01b031981168317845516600080516020610bd78339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50602090816003193601126103d0578035916001600160401b03918284116103cc57366023850112156103cc5783810135938385116103c8576024808201918136918860051b0101116103c457906101a89594956109ce565b879488926101b582610aaa565b976101c28a51998a610a26565b828952601f196101d184610aaa565b01878c5b8b8382106103b457505050508a935b838510610267575050505050341061025a57509390835193808501911515855285850152825180915260608401948060608360051b870101940192955b82871061022e5785850386f35b90919293828061024a600193605f198a8203018652885161095d565b9601920196019592919092610221565b8451625752dd60e11b8152fd5b91939750919386610279898785610ac1565b013581018091116103a257938a610291898385610ac1565b356001600160a01b0381169081900361039e57886102b08b8587610ac1565b0135906102be8b8587610ac1565b8d81013590601e198136030182121561039a570180359087821161039a578b0192813603841361039a5784938f8390519384928337810185815203925af197610305610a7a565b61030f828c610ae3565b5288606061031e838587610ac1565b0135908115158203610396578161038d575b5061035d57600019811461034b5760010193919290926101e4565b634e487b7160e01b8c5260118752848cfd5b866103898c8761036e8c958f610ae3565b5191519485946310847b0960e01b865285015283019061095d565b0390fd5b90501538610330565b8d80fd5b8480fd5b5080fd5b634e487b7160e01b8b5260118652838bfd5b60609082018301528991016101d5565b8780fd5b8680fd5b8580fd5b8380fd5b503461014b57602036600319011261014b57359160015483101561041457506103fe60209261099d565b905491519160018060a01b039160031b1c168152f35b80fd5b50913461041457806003193601126104145760015492831561045e57600019840193841161044b576020836103fe8661099d565b634e487b7160e01b825260119052602490fd5b8251634df930f160e01b8152fd5b5082606036600319011261041457610482610915565b906024356001600160401b03811161039e576104a19036908501610930565b604435939184151585036103d057908392916104bb6109ce565b81885192839283378101848152039134906001600160a01b03165af1916104e0610a7a565b918061052d575b61050b57506105079083519384931515845280602085015283019061095d565b0390f35b61038960209285519384936310847b0960e01b8552840152602483019061095d565b5082156104e7565b503461014b57608036600319011261014b5761054f610915565b916024356001600160401b03811161039a5761056e9036908401610930565b6044359491606435801592908315036103c4576105896109ce565b60018060a01b039384811697888a526020946003865286888c2054166108185791869492918594926000146107fb57926106269161062c9461061b6105cf368786610af7565b8051908b01208c51808c019182526001600160601b031930606090811b821660208501529590951b90941660348201526048808201939093528381039283018452929160680182610a26565b519020923691610af7565b90610b2e565b165b16938351633c2f4f4360e11b815282818381895afa9081156107f157879185918a916107b6575b5016036107a857600154600160401b9390848110156107955780600161067e920160015561099d565b8154600391821b89811b94901b1916929092179055868852825283872080546001600160a01b031990811687179091558451622a579d60e11b8152909490838184818a5afa91821561078c5750889161075f575b504614610705575b505050507f7512d1d2a31be00735451a10b76db5dca1e1581b1cb23d7910b4741e8eb148768380a380f35b6002549283101561074c576001830180600255831015610739575060028652852001805490911682179055388080806106da565b634e487b7160e01b875260329052602486fd5b634e487b7160e01b875260419052602486fd5b90508281813d8311610785575b6107768183610a26565b810103126103c45751386106d2565b503d61076c565b513d8a823e3d90fd5b634e487b7160e01b895260418352602489fd5b835163f083e5f760e01b8152fd5b925050508281813d83116107ea575b6107cf8183610a26565b810103126103c4575183811681036103c45783879138610655565b503d6107c5565b85513d8a823e3d90fd5b92610626916108129461061b6105cf368786610af7565b1661062e565b8751638a8d142560e01b8152808a018b9052602490fd5b50503461039e578160031936011261039e57905490516001600160a01b039091168152602090f35b83346104145780600319360112610414576108706109ce565b80546001600160a01b03198116825581906001600160a01b0316600080516020610bd78339815191528280a380f35b50503461039e57602036600319011261039e576020916001600160a01b03908290826108c9610915565b168152600385522054169051908152f35b50503461039e578160031936011261039e576020906002549051908152f35b84903461039e578160031936011261039e576020906001548152f35b600435906001600160a01b038216820361092b57565b600080fd5b9181601f8401121561092b578235916001600160401b03831161092b576020838186019501011161092b57565b919082519283825260005b848110610989575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610968565b6001548110156109b857600160005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b031633036109e257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b601f909101601f19168101906001600160401b03821190821017610a4957604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111610a4957601f01601f191660200190565b3d15610aa5573d90610a8b82610a5f565b91610a996040519384610a26565b82523d6000602084013e565b606090565b6001600160401b038111610a495760051b60200190565b91908110156109b85760051b81013590607e198136030182121561092b570190565b80518210156109b85760209160051b010190565b929192610b0382610a5f565b91610b116040519384610a26565b82948184528183011161092b578281602093846000960137010152565b90805115610b92576020815191016000f5906001600160a01b03821615610b5157565b60405162461bcd60e51b8152602060048201526019602482015278437265617465323a204661696c6564206f6e206465706c6f7960381b6044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212203a3c185f1895c351808e5cbe45b18c5a5222c582b41d1020e09e445434adc3ca64736f6c63430008120033";

type TapiocaWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TapiocaWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TapiocaWrapper__factory extends ContractFactory {
  constructor(...args: TapiocaWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TapiocaWrapper";
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TapiocaWrapper> {
    return super.deploy(_owner, overrides || {}) as Promise<TapiocaWrapper>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): TapiocaWrapper {
    return super.attach(address) as TapiocaWrapper;
  }
  override connect(signer: Signer): TapiocaWrapper__factory {
    return super.connect(signer) as TapiocaWrapper__factory;
  }
  static readonly contractName: "TapiocaWrapper";

  public readonly contractName: "TapiocaWrapper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TapiocaWrapperInterface {
    return new utils.Interface(_abi) as TapiocaWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TapiocaWrapper {
    return new Contract(address, _abi, signerOrProvider) as TapiocaWrapper;
  }
}
