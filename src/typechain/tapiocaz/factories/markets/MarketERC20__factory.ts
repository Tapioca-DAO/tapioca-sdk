/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MarketERC20,
  MarketERC20Interface,
} from "../../markets/MarketERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ApprovalBorrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowanceBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveBorrow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitBorrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162001ccd38038062001ccd8339810160408190526200003591620001cc565b6040805180820190915260018152603160f81b602082015281906200005c8260006200010b565b610120526200006d8160016200010b565b61014052815160208084019190912060e052815190820120610100524660a052620000fb60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200043b565b60006020835110156200012b57620001238362000144565b90506200013e565b8162000138848262000315565b5060ff90505b92915050565b600080829050601f815111156200017b578260405163305a27a960e01b8152600401620001729190620003e1565b60405180910390fd5b8051620001888262000416565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001c3578181015183820152602001620001a9565b50506000910152565b600060208284031215620001df57600080fd5b81516001600160401b0380821115620001f757600080fd5b818401915084601f8301126200020c57600080fd5b81518181111562000221576200022162000190565b604051601f8201601f19908116603f011681019083821181831017156200024c576200024c62000190565b816040528281528760208487010111156200026657600080fd5b62000279836020830160208801620001a6565b979650505050505050565b600181811c908216806200029957607f821691505b602082108103620002ba57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000310576000816000526020600020601f850160051c81016020861015620002eb5750805b601f850160051c820191505b818110156200030c57828155600101620002f7565b5050505b505050565b81516001600160401b0381111562000331576200033162000190565b620003498162000342845462000284565b84620002c0565b602080601f831160018114620003815760008415620003685750858301515b600019600386901b1c1916600185901b1785556200030c565b600085815260208120601f198616915b82811015620003b25788860151825594840194600190910190840162000391565b5085821015620003d15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000825180602084015262000402816040850160208701620001a6565b601f01601f19169190910160400192915050565b80516020808301519190811015620002ba5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516118376200049660003960006107850152600061075b01526000610d3f01526000610d1701526000610c7201526000610c9c01526000610cc601526118376000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80637ecebe0011610097578063bc197c8111610066578063bc197c8114610246578063d505accf14610293578063dd62ed3e146102a6578063f23a6e61146102d157600080fd5b80637ecebe00146101cf5780637fa0b84e1461020557806384b0196e14610218578063a9059cbb1461023357600080fd5b80631da8bf10116100d35780631da8bf101461017f57806323b872dd146101945780633644e515146101a757806370a08231146101af57600080fd5b8062a02a201461010457806301ffc9a714610142578063095ea7b31461016557806318160ddd14610178575b600080fd5b61012f61011236600461129b565b600460209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101556101503660046112ce565b61030a565b6040519015158152602001610139565b610155610173366004611317565b6103ef565b600061012f565b61019261018d366004611341565b610405565b005b6101556101a23660046113b4565b61041f565b61012f610731565b61012f6101bd3660046113f0565b60026020526000908152604090205481565b61012f6101dd3660046113f0565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205490565b610155610213366004611317565b610740565b61022061074d565b604051610139979695949392919061146f565b610155610241366004611317565b6107f1565b6102626102543660046115bf565b600098975050505050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610139565b6101926102a1366004611341565b6109d7565b61012f6102b436600461129b565b600360209081526000928352604080842090915290825290205481565b6102626102df36600461167a565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f698f69ae00000000000000000000000000000000000000000000000000000000148061039d57507fffffffff0000000000000000000000000000000000000000000000000000000082167f9d8ff7da00000000000000000000000000000000000000000000000000000000145b806103e957507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b92915050565b60006103fc3384846109e8565b50600192915050565b610416600088888888888888610a56565b50505050505050565b600081156106c05773ffffffffffffffffffffffffffffffffffffffff8416600090815260026020526040902054828110156104bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f770000000000000000000060448201526064015b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146106be5773ffffffffffffffffffffffffffffffffffffffff851660009081526003602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105ed57838110156105b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f77000000000000000060448201526064016104b3565b6105bb8482611721565b73ffffffffffffffffffffffffffffffffffffffff871660009081526003602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851661066a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f45524332303a206e6f207a65726f20616464726573730000000000000000000060448201526064016104b3565b6106748483611721565b73ffffffffffffffffffffffffffffffffffffffff80881660009081526002602052604080822093909355908716815290812080548692906106b7908490611734565b9091555050505b505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161071f91815260200190565b60405180910390a35060019392505050565b600061073b610c58565b905090565b60006103fc338484610d90565b6000606080828080836107807f000000000000000000000000000000000000000000000000000000000000000083610df6565b6107ab7f00000000000000000000000000000000000000000000000000000000000000006001610df6565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60008115158061081657503373ffffffffffffffffffffffffffffffffffffffff8416145b15610981573360009081526002602052604090205482811015610895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f770000000000000000000060448201526064016104b3565b3373ffffffffffffffffffffffffffffffffffffffff85161461097f5773ffffffffffffffffffffffffffffffffffffffff841661092f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f45524332303a206e6f207a65726f20616464726573730000000000000000000060448201526064016104b3565b6109398382611721565b336000908152600260205260408082209290925573ffffffffffffffffffffffffffffffffffffffff861681529081208054859290610979908490611734565b90915550505b505b60405182815273ffffffffffffffffffffffffffffffffffffffff84169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350600192915050565b610416600188888888888888610a56565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b83421115610ac0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104b3565b600088610aed577fe9685ff6d48c617fe4f692c50e602cce27cbad0290beb93cfa77eac43968d58c610b0f565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c95b888888610b1b8c610ea1565b60408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610b8382610edd565b90506000610b9382878787610f25565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104b3565b8a15610c4057610c3b8a8a8a6109e8565b610c4b565b610c4b8a8a8a610d90565b5050505050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015610cbe57507f000000000000000000000000000000000000000000000000000000000000000046145b15610ce857507f000000000000000000000000000000000000000000000000000000000000000090565b61073b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526004602090815260408083209487168084529490915280822085905551849392917fe50de2333c10a9502fcb1d8ae13a51bbf423153dfc63c2b8997665b32154afc391a4505050565b606060ff8314610e1057610e0983610f4d565b90506103e9565b818054610e1c90611747565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4890611747565b8015610e955780601f10610e6a57610100808354040283529160200191610e95565b820191906000526020600020905b815481529060010190602001808311610e7857829003601f168201915b505050505090506103e9565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260056020526040812080549082610ed38361179a565b9091555092915050565b60006103e9610eea610c58565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6000806000610f3687878787610f8c565b91509150610f438161107b565b5095945050505050565b60606000610f5a83611231565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610fc35750600090506003611072565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611017573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661106b57600060019250925050611072565b9150600090505b94509492505050565b600081600481111561108f5761108f6117d2565b036110975750565b60018160048111156110ab576110ab6117d2565b03611112576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104b3565b6002816004811115611126576111266117d2565b0361118d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104b3565b60038160048111156111a1576111a16117d2565b0361122e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016104b3565b50565b600060ff8216601f8111156103e9576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461129657600080fd5b919050565b600080604083850312156112ae57600080fd5b6112b783611272565b91506112c560208401611272565b90509250929050565b6000602082840312156112e057600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461131057600080fd5b9392505050565b6000806040838503121561132a57600080fd5b61133383611272565b946020939093013593505050565b600080600080600080600060e0888a03121561135c57600080fd5b61136588611272565b965061137360208901611272565b95506040880135945060608801359350608088013560ff8116811461139757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806000606084860312156113c957600080fd5b6113d284611272565b92506113e060208501611272565b9150604084013590509250925092565b60006020828403121561140257600080fd5b61131082611272565b6000815180845260005b8181101561143157602081850181015186830182015201611415565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e060208401526114ac60e084018a61140b565b83810360408501526114be818a61140b565b6060850189905273ffffffffffffffffffffffffffffffffffffffff8816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b8181101561151f57835183529284019291840191600101611503565b50909c9b505050505050505050505050565b60008083601f84011261154357600080fd5b50813567ffffffffffffffff81111561155b57600080fd5b6020830191508360208260051b850101111561157657600080fd5b9250929050565b60008083601f84011261158f57600080fd5b50813567ffffffffffffffff8111156115a757600080fd5b60208301915083602082850101111561157657600080fd5b60008060008060008060008060a0898b0312156115db57600080fd5b6115e489611272565b97506115f260208a01611272565b9650604089013567ffffffffffffffff8082111561160f57600080fd5b61161b8c838d01611531565b909850965060608b013591508082111561163457600080fd5b6116408c838d01611531565b909650945060808b013591508082111561165957600080fd5b506116668b828c0161157d565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561169357600080fd5b61169c87611272565b95506116aa60208801611272565b94506040870135935060608701359250608087013567ffffffffffffffff8111156116d457600080fd5b6116e089828a0161157d565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156103e9576103e96116f2565b808201808211156103e9576103e96116f2565b600181811c9082168061175b57607f821691505b602082108103611794577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117cb576117cb6116f2565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220ab8b2b0a67176c2e9d7fb905c2400600e785f924b780044cc7851c86729c5a9564736f6c63430008160033";

type MarketERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketERC20__factory extends ContractFactory {
  constructor(...args: MarketERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MarketERC20";
  }

  override deploy(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketERC20> {
    return super.deploy(name, overrides || {}) as Promise<MarketERC20>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, overrides || {});
  }
  override attach(address: string): MarketERC20 {
    return super.attach(address) as MarketERC20;
  }
  override connect(signer: Signer): MarketERC20__factory {
    return super.connect(signer) as MarketERC20__factory;
  }
  static readonly contractName: "MarketERC20";

  public readonly contractName: "MarketERC20";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketERC20Interface {
    return new utils.Interface(_abi) as MarketERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketERC20 {
    return new Contract(address, _abi, signerOrProvider) as MarketERC20;
  }
}
