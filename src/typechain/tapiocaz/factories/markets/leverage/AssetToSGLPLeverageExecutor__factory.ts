/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AssetToSGLPLeverageExecutor,
  AssetToSGLPLeverageExecutorInterface,
} from "../../../markets/leverage/AssetToSGLPLeverageExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IZeroXSwapper",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "contract IGmxRewardRouterV2",
        name: "_glpRewardRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "MinAmountNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "NotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "refundDustAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "refundDustAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetAmountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_pauseState",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IZeroXSwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    name: "setWeth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract IZeroXSwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWeth9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200262b3803806200262b8339810160408190526200003491620001a0565b838382620000423362000137565b6001600160a01b0382166200006a5760405163d23f952160e01b815260040160405180910390fd5b600180546001600160a01b039485166001600160a01b031991821617909155600280549385169390911692909217909155600380546001600160a81b03191691831691909117905560408051633e9b6c6f60e21b815290519184169163fa6db1bc916004808201926020929091908290030181865afa158015620000f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000118919062000208565b6001600160a01b0390811660a05291909116608052506200022f915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200019d57600080fd5b50565b60008060008060808587031215620001b757600080fd5b8451620001c48162000187565b6020860151909450620001d78162000187565b6040860151909350620001ea8162000187565b6060860151909250620001fd8162000187565b939692955090935050565b6000602082840312156200021b57600080fd5b8151620002288162000187565b9392505050565b60805160a0516123ba6200027160003960008181610a2d01528181610b1c01528181610fa80152611098015260008181610a9e015261101a01526123ba6000f3fe6080604052600436106100d65760003560e01c8063715018a61161007f578063b8d1452f11610059578063b8d1452f14610230578063bedb86fb14610250578063dbd01de114610270578063f2fde38b1461029057600080fd5b8063715018a6146101dd5780638da5cb5b146101f25780639c82f2a41461021057600080fd5b80635182caca116100b05780635182caca146101615780635c975abb1461018f578063690fad4c146101ca57600080fd5b80632b3297f9146100e25780633fc8cef31461011f578063437be6221461013f57600080fd5b366100dd57005b600080fd5b3480156100ee57600080fd5b50600154610102906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012b57600080fd5b50600354610102906001600160a01b031681565b34801561014b57600080fd5b5061015f61015a366004611cec565b6102b0565b005b34801561016d57600080fd5b5061018161017c366004611d19565b61032c565b604051908152602001610116565b34801561019b57600080fd5b5060035474010000000000000000000000000000000000000000900460ff166040519015158152602001610116565b6101816101d8366004611d19565b610552565b3480156101e957600080fd5b5061015f6107cf565b3480156101fe57600080fd5b506000546001600160a01b0316610102565b34801561021c57600080fd5b5061015f61022b366004611cec565b6107e3565b34801561023c57600080fd5b5061015f61024b366004611cec565b61085f565b34801561025c57600080fd5b5061015f61026b366004611dda565b6108db565b34801561027c57600080fd5b50600254610102906001600160a01b031681565b34801561029c57600080fd5b5061015f6102ab366004611cec565b6108fc565b6102b86109a8565b6002546040516001600160a01b038084169216907f53d43647b4e7165b1dd70c590a9244d650c4d257cbb62b799357578e780579ad90600090a3600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6002546040517fe67e9908000000000000000000000000000000000000000000000000000000008152600060048201819052336024830152916001600160a01b03169063e67e990890604401602060405180830381865afa158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b99190611df7565b6103ef576040517f0d20b1c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006103fd83850185611ee8565b6040517f39f47693000000000000000000000000000000000000000000000000000000008152306004820152602481018790529091506000906001600160a01b038916906339f47693906044016020604051808303816000875af1158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d9190612031565b90506000886001600160a01b031663785e9e866040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f3919061204a565b9050600061050b846020015185604001518486610a1c565b90506105438b600186602001518c85896000015160405160200161052f91906120b7565b604051602081830303815290604052610b8e565b9b9a5050505050505050505050565b600061055c610f12565b3415610594576040517f0a7287b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002546040517fe67e9908000000000000000000000000000000000000000000000000000000008152600060048201523360248201526001600160a01b039091169063e67e990890604401602060405180830381865afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190611df7565b610656576040517f0d20b1c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061066483850185611ee8565b9050600061068a8960008a85602001518a876000015160405160200161052f91906120b7565b905061069f8260200151828460400151610f97565b92506000876001600160a01b031663785e9e866040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610705919061204a565b905061071b6001600160a01b0382168986611109565b6040517f62355638000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481018590526001600160a01b038916906362355638906064016020604051808303816000875af1158015610787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ab9190612031565b93506107c26001600160a01b038216896000611109565b5050509695505050505050565b6107d76109a8565b6107e1600061143c565b565b6107eb6109a8565b6001546040516001600160a01b038084169216907f53d43647b4e7165b1dd70c590a9244d650c4d257cbb62b799357578e780579ad90600090a3600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6108676109a8565b6003546040516001600160a01b038084169216907f53d43647b4e7165b1dd70c590a9244d650c4d257cbb62b799357578e780579ad90600090a3600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6108e36109a8565b80156108f4576108f16114a4565b50565b6108f1611530565b6109046109a8565b6001600160a01b03811661099f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108f18161143c565b6000546001600160a01b031633146107e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610996565b6000610a526001600160a01b0384167f000000000000000000000000000000000000000000000000000000000000000084611109565b6040517f0f3aa5540000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015260248201849052604482018690523060648301527f00000000000000000000000000000000000000000000000000000000000000001690630f3aa554906084016020604051808303816000875af1158015610ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0b9190612031565b9050610b426001600160a01b0384167f00000000000000000000000000000000000000000000000000000000000000006000611109565b83811015610b86576040517f8b29af590000000000000000000000000000000000000000000000000000000081526004810185905260248101829052604401610996565b949350505050565b60008082806020019051810190610ba5919061213c565b60208101515185935090915015610bc657610bc08685611587565b90965091505b60008160400151806020019051810190610be091906121fd565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b038916906370a0823190602401602060405180830381865afa158015610c43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c679190612031565b6001549091508490610c86906001600160a01b038b8116911683611109565b60015484516040517fd9c4ff870000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163d9c4ff8791610cd39187918a916004016122b9565b6020604051808303816000875af1158015610cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d169190612031565b8451909550851015610d615783516040517f034e31d6000000000000000000000000000000000000000000000000000000008152600481019190915260248101869052604401610996565b600154610d7c906001600160a01b038b811691166000611109565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038b16906370a0823190602401602060405180830381865afa158015610ddc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e009190612031565b905080831115610ec5576000610e168285612315565b905082811015610ec3576001600160a01b038b1663a9059cbb8e610e3a8487612315565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610e9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec19190611df7565b505b505b84602001516020015115610ee557610ede8b8a88611712565b9550610f03565b8a1515600103610f0357610f036001600160a01b038a163388611975565b50505050509695505050505050565b60035474010000000000000000000000000000000000000000900460ff16156107e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610996565b6000610fcd6001600160a01b0385167f000000000000000000000000000000000000000000000000000000000000000085611109565b6040517f364e23110000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820185905260006044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063364e2311906084016020604051808303816000875af1158015611063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110879190612031565b90506110be6001600160a01b0385167f00000000000000000000000000000000000000000000000000000000000000006000611109565b81811015611102576040517f8b29af590000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610996565b9392505050565b6000836001600160a01b03163b1161117d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f53616665417070726f76653a206e6f20636f6e747261637400000000000000006044820152606401610996565b6040516001600160a01b0383811660248301526000604483018190529160609186169060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052516112069190612355565b6000604051808303816000865af19150503d8060008114611243576040519150601f19603f3d011682016040523d82523d6000602084013e611248565b606091505b5090925090508180156112735750805115806112735750808060200190518101906112739190611df7565b6112d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c656400000000006044820152606401610996565b8215611435576040516001600160a01b0385811660248301526044820185905286169060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052516113629190612355565b6000604051808303816000865af19150503d806000811461139f576040519150601f19603f3d011682016040523d82523d6000602084013e6113a4565b606091505b5090925090508180156113cf5750805115806113cf5750808060200190518101906113cf9190611df7565b611435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c656400000000006044820152606401610996565b5050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114ac610f12565b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115133390565b6040516001600160a01b03909116815260200160405180910390a1565b6115386119fa565b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611513565b6040517f39f476930000000000000000000000000000000000000000000000000000000081523060048201526024810182905260009081906001600160a01b038516906339f47693906044016020604051808303816000875af11580156115f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116169190612031565b9050836001600160a01b031663785e9e866040518163ffffffff1660e01b8152600401602060405180830381865afa158015611656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167a919061204a565b93506001600160a01b03841661170757600360009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156116da57600080fd5b505af11580156116ee573d6000803e3d6000fd5b50506003546001600160a01b0316945061170b92505050565b8391505b9250929050565b600080836001600160a01b031663785e9e866040518163ffffffff1660e01b8152600401602060405180830381865afa158015611753573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611777919061204a565b9050600060018615151461178b573061178d565b335b90506001600160a01b0382166118af576003546040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b1580156117fc57600080fd5b505af1158015611810573d6000803e3d6000fd5b50506040517f623556380000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018890528816925063623556389150869060640160206040518083038185885af1158015611883573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906118a89190612031565b925061196c565b6118c36001600160a01b0383168686611109565b6040517f623556380000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038281166024830152604482018690528616906362355638906064016020604051808303816000875af1158015611931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119559190612031565b925061196c6001600160a01b038316866000611109565b50509392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526119f5908490611a7e565b505050565b60035474010000000000000000000000000000000000000000900460ff166107e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610996565b6000611ad3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b809092919063ffffffff16565b9050805160001480611af4575080806020019051810190611af49190611df7565b6119f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610996565b6060610b86848460008585600080866001600160a01b03168587604051611ba79190612355565b60006040518083038185875af1925050503d8060008114611be4576040519150601f19603f3d011682016040523d82523d6000602084013e611be9565b606091505b5091509150611bfa87838387611c05565b979650505050505050565b60608315611c8e578251600003611c87576001600160a01b0385163b611c87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610996565b5081610b86565b610b868383815115611ca35781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109969190612371565b6001600160a01b03811681146108f157600080fd5b600060208284031215611cfe57600080fd5b813561110281611cd7565b8035611d1481611cd7565b919050565b60008060008060008060a08789031215611d3257600080fd5b8635611d3d81611cd7565b95506020870135611d4d81611cd7565b94506040870135611d5d81611cd7565b935060608701359250608087013567ffffffffffffffff80821115611d8157600080fd5b818901915089601f830112611d9557600080fd5b813581811115611da457600080fd5b8a6020828501011115611db657600080fd5b6020830194508093505050509295509295509295565b80151581146108f157600080fd5b600060208284031215611dec57600080fd5b813561110281611dcc565b600060208284031215611e0957600080fd5b815161110281611dcc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611e6657611e66611e14565b60405290565b6040805190810167ffffffffffffffff81118282101715611e6657611e66611e14565b604051601f8201601f1916810167ffffffffffffffff81118282101715611eb857611eb8611e14565b604052919050565b600067ffffffffffffffff821115611eda57611eda611e14565b50601f01601f191660200190565b60006020808385031215611efb57600080fd5b823567ffffffffffffffff80821115611f1357600080fd5b9084019060608287031215611f2757600080fd5b611f2f611e43565b823582811115611f3e57600080fd5b83018088036080811215611f5157600080fd5b611f59611e43565b823581526040601f1983011215611f6f57600080fd5b611f77611e6c565b915086830135611f8681611dcc565b82526040830135611f9681611dcc565b828801528087019190915260608201359084821115611fb457600080fd5b818301945089601f860112611fc857600080fd5b84359250611fdd611fd884611ec0565b611e8f565b91508282528987848701011115611ff357600080fd5b8287860188840137600092820187019290925260408201528152612018838501611d09565b9381019390935250604090810135908201529392505050565b60006020828403121561204357600080fd5b5051919050565b60006020828403121561205c57600080fd5b815161110281611cd7565b60005b8381101561208257818101518382015260200161206a565b50506000910152565b600081518084526120a3816020860160208601612067565b601f01601f19169290920160200192915050565b602081528151602082015260006020830151805115156040840152602081015115156060840152506040830151608080840152610b8660a084018261208b565b600082601f83011261210857600080fd5b8151612116611fd882611ec0565b81815284602083860101111561212b57600080fd5b610b86826020830160208701612067565b60006020828403121561214e57600080fd5b815167ffffffffffffffff8082111561216657600080fd5b90830190818503608081121561217b57600080fd5b612183611e43565b835181526040601f198301121561219957600080fd5b6121a1611e6c565b915060208401516121b181611dcc565b825260408401516121c181611dcc565b8060208401525081602082015260608401519150828211156121e257600080fd5b6121ee878386016120f7565b60408201529695505050505050565b60006020828403121561220f57600080fd5b815167ffffffffffffffff8082111561222757600080fd5b908301906080828603121561223b57600080fd5b60405160808101818110838211171561225657612256611e14565b604052825161226481611cd7565b8152602083015161227481611cd7565b6020820152604083015161228781611cd7565b604082015260608301518281111561229e57600080fd5b6122aa878286016120f7565b60608301525095945050505050565b6060815260006001600160a01b038086511660608401528060208701511660808401528060408701511660a0840152506060850151608060c084015261230260e084018261208b565b6020840195909552505060400152919050565b8181038181111561234f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60008251612367818460208701612067565b9190910192915050565b602081526000611102602083018461208b56fea2646970667358221220bb1405a974090ea9e2b96fee1edbd8de5d9a20b12db896a860aa766724ae53fe64736f6c63430008160033";

type AssetToSGLPLeverageExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetToSGLPLeverageExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetToSGLPLeverageExecutor__factory extends ContractFactory {
  constructor(...args: AssetToSGLPLeverageExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AssetToSGLPLeverageExecutor";
  }

  override deploy(
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _glpRewardRouter: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetToSGLPLeverageExecutor> {
    return super.deploy(
      _swapper,
      _cluster,
      _glpRewardRouter,
      _weth,
      overrides || {}
    ) as Promise<AssetToSGLPLeverageExecutor>;
  }
  override getDeployTransaction(
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _glpRewardRouter: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _swapper,
      _cluster,
      _glpRewardRouter,
      _weth,
      overrides || {}
    );
  }
  override attach(address: string): AssetToSGLPLeverageExecutor {
    return super.attach(address) as AssetToSGLPLeverageExecutor;
  }
  override connect(signer: Signer): AssetToSGLPLeverageExecutor__factory {
    return super.connect(signer) as AssetToSGLPLeverageExecutor__factory;
  }
  static readonly contractName: "AssetToSGLPLeverageExecutor";

  public readonly contractName: "AssetToSGLPLeverageExecutor";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetToSGLPLeverageExecutorInterface {
    return new utils.Interface(_abi) as AssetToSGLPLeverageExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetToSGLPLeverageExecutor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AssetToSGLPLeverageExecutor;
  }
}
