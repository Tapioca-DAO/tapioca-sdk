/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AssetTotsDaiLeverageExecutor,
  AssetTotsDaiLeverageExecutorInterface,
} from "../../../markets/leverage/AssetTotsDaiLeverageExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IZeroXSwapper",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "MinAmountNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "refundDustAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "refundDustAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetAmountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IZeroXSwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    name: "setWeth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract IZeroXSwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWeth9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200219d3803806200219d83398101604081905262000034916200011a565b8282826200004233620000b1565b6001600160a01b0382166200006a5760405163d23f952160e01b815260040160405180910390fd5b600180546001600160a01b039485166001600160a01b031991821617909155600280549385169382169390931790925560038054919093169116179055506200016e915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200011757600080fd5b50565b6000806000606084860312156200013057600080fd5b83516200013d8162000101565b6020850151909350620001508162000101565b6040850151909250620001638162000101565b809150509250925092565b61201f806200017e6000396000f3fe6080604052600436106100c05760003560e01c8063715018a611610074578063b8d1452f1161004e578063b8d1452f146101df578063dbd01de1146101ff578063f2fde38b1461021f57600080fd5b8063715018a61461018c5780638da5cb5b146101a15780639c82f2a4146101bf57600080fd5b8063437be622116100a5578063437be622146101295780635182caca1461014b578063690fad4c1461017957600080fd5b80632b3297f9146100cc5780633fc8cef31461010957600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506001546100ec906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011557600080fd5b506003546100ec906001600160a01b031681565b34801561013557600080fd5b506101496101443660046119fd565b61023f565b005b34801561015757600080fd5b5061016b610166366004611a21565b6102bb565b604051908152602001610100565b61016b610187366004611a21565b610509565b34801561019857600080fd5b50610149610825565b3480156101ad57600080fd5b506000546001600160a01b03166100ec565b3480156101cb57600080fd5b506101496101da3660046119fd565b610839565b3480156101eb57600080fd5b506101496101fa3660046119fd565b6108b5565b34801561020b57600080fd5b506002546100ec906001600160a01b031681565b34801561022b57600080fd5b5061014961023a3660046119fd565b610931565b6102476109db565b6002546040516001600160a01b038084169216907f53d43647b4e7165b1dd70c590a9244d650c4d257cbb62b799357578e780579ad90600090a3600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6002546040517fe67e9908000000000000000000000000000000000000000000000000000000008152600060048201819052336024830152916001600160a01b03169063e67e990890604401602060405180830381865afa158015610324573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103489190611ae2565b61037e576040517f0d20b1c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061038a88610a4f565b6040517f39f476930000000000000000000000000000000000000000000000000000000081523060048201526024810189905291935091506000906001600160a01b038a16906339f47693906044016020604051808303816000875af11580156103f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041c9190611aff565b6040517fba08765200000000000000000000000000000000000000000000000000000000815260048101829052306024820181905260448201529091506000906001600160a01b0385169063ba087652906064016020604051808303816000875af115801561048f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b39190611aff565b90506104fa8b6001858c858c8c8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b5f92505050565b9b9a5050505050505050505050565b60003415610543576040517f0a7287b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002546040517fe67e9908000000000000000000000000000000000000000000000000000000008152600060048201523360248201526001600160a01b039091169063e67e990890604401602060405180830381865afa1580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf9190611ae2565b610605576040517f0d20b1c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061061187610a4f565b91509150600061065c8a60008b858b8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b5f92505050565b90506106726001600160a01b0383168483610ee3565b6040517f6e553f65000000000000000000000000000000000000000000000000000000008152600481018290523060248201526001600160a01b03841690636e553f65906044016020604051808303816000875af11580156106d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fc9190611aff565b9350600061070c86880188611bec565b805190915085101561075c5780516040517f034e31d60000000000000000000000000000000000000000000000000000000081526004810191909152602481018690526044015b60405180910390fd5b6107706001600160a01b0385168a87610ee3565b6040517f62355638000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481018690526001600160a01b038a16906362355638906064016020604051808303816000875af11580156107dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108009190611aff565b94506108176001600160a01b0385168a6000610ee3565b505050509695505050505050565b61082d6109db565b6108376000611216565b565b6108416109db565b6001546040516001600160a01b038084169216907f53d43647b4e7165b1dd70c590a9244d650c4d257cbb62b799357578e780579ad90600090a3600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6108bd6109db565b6003546040516001600160a01b038084169216907f53d43647b4e7165b1dd70c590a9244d650c4d257cbb62b799357578e780579ad90600090a3600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6109396109db565b6001600160a01b0381166109cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610753565b6109d881611216565b50565b6000546001600160a01b03163314610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610753565b600080826001600160a01b031663785e9e866040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab49190611cef565b91506001600160a01b038216610af6576040517fb0e0140200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816001600160a01b031663f4b9fa756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b589190611cef565b9050915091565b60008082806020019051810190610b769190611d75565b60208101515185935090915015610b9757610b91868561127e565b90965091505b60008160400151806020019051810190610bb19190611e36565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b038916906370a0823190602401602060405180830381865afa158015610c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c389190611aff565b6001549091508490610c57906001600160a01b038b8116911683610ee3565b60015484516040517fd9c4ff870000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163d9c4ff8791610ca49187918a91600401611f1e565b6020604051808303816000875af1158015610cc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce79190611aff565b8451909550851015610d325783516040517f034e31d6000000000000000000000000000000000000000000000000000000008152600481019190915260248101869052604401610753565b600154610d4d906001600160a01b038b811691166000610ee3565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038b16906370a0823190602401602060405180830381865afa158015610dad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd19190611aff565b905080831115610e96576000610de78285611f7a565b905082811015610e94576001600160a01b038b1663a9059cbb8e610e0b8487611f7a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610e6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e929190611ae2565b505b505b84602001516020015115610eb657610eaf8b8a88611409565b9550610ed4565b8a1515600103610ed457610ed46001600160a01b038a16338861166c565b50505050509695505050505050565b6000836001600160a01b03163b11610f57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f53616665417070726f76653a206e6f20636f6e747261637400000000000000006044820152606401610753565b6040516001600160a01b0383811660248301526000604483018190529160609186169060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905251610fe09190611fba565b6000604051808303816000865af19150503d806000811461101d576040519150601f19603f3d011682016040523d82523d6000602084013e611022565b606091505b50909250905081801561104d57508051158061104d57508080602001905181019061104d9190611ae2565b6110b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c656400000000006044820152606401610753565b821561120f576040516001600160a01b0385811660248301526044820185905286169060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790525161113c9190611fba565b6000604051808303816000865af19150503d8060008114611179576040519150601f19603f3d011682016040523d82523d6000602084013e61117e565b606091505b5090925090508180156111a95750805115806111a95750808060200190518101906111a99190611ae2565b61120f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c656400000000006044820152606401610753565b5050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040517f39f476930000000000000000000000000000000000000000000000000000000081523060048201526024810182905260009081906001600160a01b038516906339f47693906044016020604051808303816000875af11580156112e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130d9190611aff565b9050836001600160a01b031663785e9e866040518163ffffffff1660e01b8152600401602060405180830381865afa15801561134d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113719190611cef565b93506001600160a01b0384166113fe57600360009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156113d157600080fd5b505af11580156113e5573d6000803e3d6000fd5b50506003546001600160a01b0316945061140292505050565b8391505b9250929050565b600080836001600160a01b031663785e9e866040518163ffffffff1660e01b8152600401602060405180830381865afa15801561144a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146e9190611cef565b905060006001861515146114825730611484565b335b90506001600160a01b0382166115a6576003546040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b1580156114f357600080fd5b505af1158015611507573d6000803e3d6000fd5b50506040517f623556380000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018890528816925063623556389150869060640160206040518083038185885af115801561157a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061159f9190611aff565b9250611663565b6115ba6001600160a01b0383168686610ee3565b6040517f623556380000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038281166024830152604482018690528616906362355638906064016020604051808303816000875af1158015611628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164c9190611aff565b92506116636001600160a01b038316866000610ee3565b50509392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526116ec9084906116f1565b505050565b6000611746826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117f39092919063ffffffff16565b90508051600014806117675750808060200190518101906117679190611ae2565b6116ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610753565b6060611802848460008561180a565b949350505050565b60608247101561189c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610753565b600080866001600160a01b031685876040516118b89190611fba565b60006040518083038185875af1925050503d80600081146118f5576040519150601f19603f3d011682016040523d82523d6000602084013e6118fa565b606091505b509150915061190b87838387611916565b979650505050505050565b6060831561199f578251600003611998576001600160a01b0385163b611998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610753565b5081611802565b61180283838151156119b45781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107539190611fd6565b6001600160a01b03811681146109d857600080fd5b600060208284031215611a0f57600080fd5b8135611a1a816119e8565b9392505050565b60008060008060008060a08789031215611a3a57600080fd5b8635611a45816119e8565b95506020870135611a55816119e8565b94506040870135611a65816119e8565b935060608701359250608087013567ffffffffffffffff80821115611a8957600080fd5b818901915089601f830112611a9d57600080fd5b813581811115611aac57600080fd5b8a6020828501011115611abe57600080fd5b6020830194508093505050509295509295509295565b80151581146109d857600080fd5b600060208284031215611af457600080fd5b8151611a1a81611ad4565b600060208284031215611b1157600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611b6a57611b6a611b18565b60405290565b6040805190810167ffffffffffffffff81118282101715611b6a57611b6a611b18565b604051601f8201601f1916810167ffffffffffffffff81118282101715611bbc57611bbc611b18565b604052919050565b600067ffffffffffffffff821115611bde57611bde611b18565b50601f01601f191660200190565b60006020808385031215611bff57600080fd5b823567ffffffffffffffff80821115611c1757600080fd5b908401908186036080811215611c2c57600080fd5b611c34611b47565b833581526040601f1983011215611c4a57600080fd5b611c52611b70565b915084840135611c6181611ad4565b82526040840135611c7181611ad4565b828601528085019190915260608301359082821115611c8f57600080fd5b818401935087601f850112611ca357600080fd5b83359250611cb8611cb384611bc4565b611b93565b91508282528785848601011115611cce57600080fd5b82858501868401376000928201909401919091526040830152509392505050565b600060208284031215611d0157600080fd5b8151611a1a816119e8565b60005b83811015611d27578181015183820152602001611d0f565b50506000910152565b600082601f830112611d4157600080fd5b8151611d4f611cb382611bc4565b818152846020838601011115611d6457600080fd5b611802826020830160208701611d0c565b600060208284031215611d8757600080fd5b815167ffffffffffffffff80821115611d9f57600080fd5b908301908185036080811215611db457600080fd5b611dbc611b47565b835181526040601f1983011215611dd257600080fd5b611dda611b70565b91506020840151611dea81611ad4565b82526040840151611dfa81611ad4565b806020840152508160208201526060840151915082821115611e1b57600080fd5b611e2787838601611d30565b60408201529695505050505050565b600060208284031215611e4857600080fd5b815167ffffffffffffffff80821115611e6057600080fd5b9083019060808286031215611e7457600080fd5b604051608081018181108382111715611e8f57611e8f611b18565b6040528251611e9d816119e8565b81526020830151611ead816119e8565b60208201526040830151611ec0816119e8565b6040820152606083015182811115611ed757600080fd5b611ee387828601611d30565b60608301525095945050505050565b60008151808452611f0a816020860160208601611d0c565b601f01601f19169290920160200192915050565b6060815260006001600160a01b038086511660608401528060208701511660808401528060408701511660a0840152506060850151608060c0840152611f6760e0840182611ef2565b6020840195909552505060400152919050565b81810381811115611fb4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60008251611fcc818460208701611d0c565b9190910192915050565b602081526000611a1a6020830184611ef256fea264697066735822122048d51f60efc863b1cc5f492d98c88b88719eb123852f021d067fc02fcb4802f464736f6c63430008160033";

type AssetTotsDaiLeverageExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetTotsDaiLeverageExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetTotsDaiLeverageExecutor__factory extends ContractFactory {
  constructor(...args: AssetTotsDaiLeverageExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AssetTotsDaiLeverageExecutor";
  }

  override deploy(
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetTotsDaiLeverageExecutor> {
    return super.deploy(
      _swapper,
      _cluster,
      _weth,
      overrides || {}
    ) as Promise<AssetTotsDaiLeverageExecutor>;
  }
  override getDeployTransaction(
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _swapper,
      _cluster,
      _weth,
      overrides || {}
    );
  }
  override attach(address: string): AssetTotsDaiLeverageExecutor {
    return super.attach(address) as AssetTotsDaiLeverageExecutor;
  }
  override connect(signer: Signer): AssetTotsDaiLeverageExecutor__factory {
    return super.connect(signer) as AssetTotsDaiLeverageExecutor__factory;
  }
  static readonly contractName: "AssetTotsDaiLeverageExecutor";

  public readonly contractName: "AssetTotsDaiLeverageExecutor";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetTotsDaiLeverageExecutorInterface {
    return new utils.Interface(_abi) as AssetTotsDaiLeverageExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetTotsDaiLeverageExecutor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AssetTotsDaiLeverageExecutor;
  }
}
