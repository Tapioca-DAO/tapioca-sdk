/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SimpleLeverageExecutor,
  SimpleLeverageExecutorInterface,
} from "../../../markets/leverage/SimpleLeverageExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IZeroXSwapper",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "MinAmountNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "refundDustAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "swapperData",
        type: "bytes",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "refundDustAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetAmountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "swapperData",
        type: "bytes",
      },
    ],
    name: "getCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IZeroXSwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    name: "setWeth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract IZeroXSwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWeth9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d5538038062001d5583398101604081905262000034916200011a565b8282826200004233620000b1565b6001600160a01b0382166200006a5760405163d23f952160e01b815260040160405180910390fd5b600180546001600160a01b039485166001600160a01b031991821617909155600280549385169382169390931790925560038054919093169116179055506200016e915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200011757600080fd5b50565b6000806000606084860312156200013057600080fd5b83516200013d8162000101565b6020850151909350620001508162000101565b6040850151909250620001638162000101565b809150509250925092565b611bd7806200017e6000396000f3fe6080604052600436106100c05760003560e01c8063715018a611610074578063b8d1452f1161004e578063b8d1452f1461020e578063dbd01de11461022e578063f2fde38b1461025b57600080fd5b8063715018a6146101ae5780638da5cb5b146101c35780639c82f2a4146101ee57600080fd5b8063437be622116100a5578063437be622146101505780635182caca14610172578063690fad4c146101a057600080fd5b80632b3297f9146100cc5780633fc8cef31461012357600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506001546100f99073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561012f57600080fd5b506003546100f99073ffffffffffffffffffffffffffffffffffffffff1681565b34801561015c57600080fd5b5061017061016b3660046116c2565b61027b565b005b34801561017e57600080fd5b5061019261018d3660046116e6565b610311565b60405190815260200161011a565b61019261018d3660046116e6565b3480156101ba57600080fd5b50610170610431565b3480156101cf57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166100f9565b3480156101fa57600080fd5b506101706102093660046116c2565b610445565b34801561021a57600080fd5b506101706102293660046116c2565b6104db565b34801561023a57600080fd5b506002546100f99073ffffffffffffffffffffffffffffffffffffffff1681565b34801561026757600080fd5b506101706102763660046116c2565b610571565b61028361062d565b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f53d43647b4e7165b1dd70c590a9244d650c4d257cbb62b799357578e780579ad90600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6002546040517fe67e99080000000000000000000000000000000000000000000000000000000081526000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063e67e990890604401602060405180830381865afa158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab91906117ae565b6103e1576040517f0d20b1c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61042687600188888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506106ae92505050565b979650505050505050565b61043961062d565b6104436000610a9a565b565b61044d61062d565b60015460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f53d43647b4e7165b1dd70c590a9244d650c4d257cbb62b799357578e780579ad90600090a3600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6104e361062d565b60035460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f53d43647b4e7165b1dd70c590a9244d650c4d257cbb62b799357578e780579ad90600090a3600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61057961062d565b73ffffffffffffffffffffffffffffffffffffffff8116610621576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61062a81610a9a565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610618565b600080828060200190518101906106c591906118f0565b602081015151859350909150156106e6576106e08685610b0f565b90965091505b6000816040015180602001905181019061070091906119ab565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa158015610770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107949190611a67565b60015490915084906107c09073ffffffffffffffffffffffffffffffffffffffff8b8116911683610ce8565b60015484516040517fd9c4ff8700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163d9c4ff879161081a9187918a91600401611aac565b6020604051808303816000875af1158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d9190611a67565b84519095508510156108a85783516040517f034e31d6000000000000000000000000000000000000000000000000000000008152600481019190915260248101869052604401610618565b6001546108d09073ffffffffffffffffffffffffffffffffffffffff8b811691166000610ce8565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8b16906370a0823190602401602060405180830381865afa15801561093d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109619190611a67565b905080831115610a405760006109778285611b15565b905082811015610a3e5773ffffffffffffffffffffffffffffffffffffffff8b1663a9059cbb8e6109a88487611b15565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015610a18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3c91906117ae565b505b505b84602001516020015115610a6057610a598b8a88611042565b9550610a8b565b8a1515600103610a8b57610a8b73ffffffffffffffffffffffffffffffffffffffff8a163388611300565b50505050509695505050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040517f39f4769300000000000000000000000000000000000000000000000000000000815230600482015260248101829052600090819073ffffffffffffffffffffffffffffffffffffffff8516906339f47693906044016020604051808303816000875af1158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab9190611a67565b90508373ffffffffffffffffffffffffffffffffffffffff1663785e9e866040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1c9190611b55565b935073ffffffffffffffffffffffffffffffffffffffff8416610cdd57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610ca357600080fd5b505af1158015610cb7573d6000803e3d6000fd5b505060035473ffffffffffffffffffffffffffffffffffffffff169450610ce192505050565b8391505b9250929050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11610d69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f53616665417070726f76653a206e6f20636f6e747261637400000000000000006044820152606401610618565b60405173ffffffffffffffffffffffffffffffffffffffff83811660248301526000604483018190529160609186169060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905251610dff9190611b72565b6000604051808303816000865af19150503d8060008114610e3c576040519150601f19603f3d011682016040523d82523d6000602084013e610e41565b606091505b509092509050818015610e6c575080511580610e6c575080806020019051810190610e6c91906117ae565b610ed2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c656400000000006044820152606401610618565b821561103b5760405173ffffffffffffffffffffffffffffffffffffffff85811660248301526044820185905286169060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905251610f689190611b72565b6000604051808303816000865af19150503d8060008114610fa5576040519150601f19603f3d011682016040523d82523d6000602084013e610faa565b606091505b509092509050818015610fd5575080511580610fd5575080806020019051810190610fd591906117ae565b61103b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c656400000000006044820152606401610618565b5050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff1663785e9e866040518163ffffffff1660e01b8152600401602060405180830381865afa158015611090573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b49190611b55565b905060006001861515146110c857306110ca565b335b905073ffffffffffffffffffffffffffffffffffffffff8216611213576003546040517f2e1a7d4d0000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff90911690632e1a7d4d90602401600060405180830381600087803b15801561115357600080fd5b505af1158015611167573d6000803e3d6000fd5b50506040517f6235563800000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8481166024830152604482018890528816925063623556389150869060640160206040518083038185885af11580156111e7573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061120c9190611a67565b92506112f7565b61123473ffffffffffffffffffffffffffffffffffffffff83168686610ce8565b6040517f6235563800000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8281166024830152604482018690528616906362355638906064016020604051808303816000875af11580156112af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d39190611a67565b92506112f773ffffffffffffffffffffffffffffffffffffffff8316866000610ce8565b50509392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261138d908490611392565b505050565b60006113f4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114a19092919063ffffffff16565b905080516000148061141557508080602001905181019061141591906117ae565b61138d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610618565b60606114b084846000856114b8565b949350505050565b60608247101561154a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610618565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516115739190611b72565b60006040518083038185875af1925050503d80600081146115b0576040519150601f19603f3d011682016040523d82523d6000602084013e6115b5565b606091505b509150915061042687838387606083156116575782516000036116505773ffffffffffffffffffffffffffffffffffffffff85163b611650576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610618565b50816114b0565b6114b0838381511561166c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106189190611b8e565b73ffffffffffffffffffffffffffffffffffffffff8116811461062a57600080fd5b6000602082840312156116d457600080fd5b81356116df816116a0565b9392505050565b60008060008060008060a087890312156116ff57600080fd5b863561170a816116a0565b9550602087013561171a816116a0565b9450604087013561172a816116a0565b935060608701359250608087013567ffffffffffffffff8082111561174e57600080fd5b818901915089601f83011261176257600080fd5b81358181111561177157600080fd5b8a602082850101111561178357600080fd5b6020830194508093505050509295509295509295565b805180151581146117a957600080fd5b919050565b6000602082840312156117c057600080fd5b6116df82611799565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561181b5761181b6117c9565b60405290565b6040805190810167ffffffffffffffff8111828210171561181b5761181b6117c9565b60005b8381101561185f578181015183820152602001611847565b50506000910152565b600082601f83011261187957600080fd5b815167ffffffffffffffff80821115611894576118946117c9565b604051601f8301601f19908116603f011681019082821181831017156118bc576118bc6117c9565b816040528381528660208588010111156118d557600080fd5b6118e6846020830160208901611844565b9695505050505050565b60006020828403121561190257600080fd5b815167ffffffffffffffff8082111561191a57600080fd5b90830190818503608081121561192f57600080fd5b6119376117f8565b835181526040601f198301121561194d57600080fd5b611955611821565b915061196360208501611799565b825261197160408501611799565b6020830152816020820152606084015191508282111561199057600080fd5b61199c87838601611868565b60408201529695505050505050565b6000602082840312156119bd57600080fd5b815167ffffffffffffffff808211156119d557600080fd5b90830190608082860312156119e957600080fd5b604051608081018181108382111715611a0457611a046117c9565b6040528251611a12816116a0565b81526020830151611a22816116a0565b60208201526040830151611a35816116a0565b6040820152606083015182811115611a4c57600080fd5b611a5887828601611868565b60608301525095945050505050565b600060208284031215611a7957600080fd5b5051919050565b60008151808452611a98816020860160208601611844565b601f01601f19169290920160200192915050565b60608152600073ffffffffffffffffffffffffffffffffffffffff8086511660608401528060208701511660808401528060408701511660a0840152506060850151608060c0840152611b0260e0840182611a80565b6020840195909552505060400152919050565b81810381811115611b4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600060208284031215611b6757600080fd5b81516116df816116a0565b60008251611b84818460208701611844565b9190910192915050565b6020815260006116df6020830184611a8056fea26469706673582212201480d1d719eb6e6caf6d215adef46140859771df61ca37f110d81d2e9a233e4d64736f6c63430008160033";

type SimpleLeverageExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleLeverageExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleLeverageExecutor__factory extends ContractFactory {
  constructor(...args: SimpleLeverageExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SimpleLeverageExecutor";
  }

  override deploy(
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleLeverageExecutor> {
    return super.deploy(
      _swapper,
      _cluster,
      _weth,
      overrides || {}
    ) as Promise<SimpleLeverageExecutor>;
  }
  override getDeployTransaction(
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _swapper,
      _cluster,
      _weth,
      overrides || {}
    );
  }
  override attach(address: string): SimpleLeverageExecutor {
    return super.attach(address) as SimpleLeverageExecutor;
  }
  override connect(signer: Signer): SimpleLeverageExecutor__factory {
    return super.connect(signer) as SimpleLeverageExecutor__factory;
  }
  static readonly contractName: "SimpleLeverageExecutor";

  public readonly contractName: "SimpleLeverageExecutor";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleLeverageExecutorInterface {
    return new utils.Interface(_abi) as SimpleLeverageExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleLeverageExecutor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleLeverageExecutor;
  }
}
