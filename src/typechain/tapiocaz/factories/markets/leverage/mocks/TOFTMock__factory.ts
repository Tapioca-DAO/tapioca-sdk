/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TOFTMock,
  TOFTMockInterface,
} from "../../../../markets/leverage/mocks/TOFTMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "contract IPearlmit",
        name: "_pearlmit",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TOFTMock_NotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IPearlmit",
        name: "oldPearlmit",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IPearlmit",
        name: "newPearlmit",
        type: "address",
      },
    ],
    name: "PearlmitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20_",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pearlmit",
    outputs: [
      {
        internalType: "contract IPearlmit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPearlmit",
        name: "_pearlmit",
        type: "address",
      },
    ],
    name: "setPearlmit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [
      {
        internalType: "uint256",
        name: "minted",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001af738038062001af783398101604081905262000034916200019d565b8060405180604001604052806008815260200167544f46544d6f636b60c01b815250604051806040016040528060048152602001635446544d60e01b815250816003908162000084919062000283565b50600462000093828262000283565b505050620000b0620000aa6200012e60201b60201c565b62000132565b600654604080516001600160a01b03928316815291831660208301527f19e743977bfa1080c4f475f13f05433b43465aa361d8a3fec33c3165f773b599910160405180910390a1600680546001600160a01b039283166001600160a01b0319918216179091556007805494909216931692909217909155506200034f565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146200019a57600080fd5b50565b60008060408385031215620001b157600080fd5b8251620001be8162000184565b6020840151909250620001d18162000184565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200020757607f821691505b6020821081036200022857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027e576000816000526020600020601f850160051c81016020861015620002595750805b601f850160051c820191505b818110156200027a5782815560010162000265565b5050505b505050565b81516001600160401b038111156200029f576200029f620001dc565b620002b781620002b08454620001f2565b846200022e565b602080601f831160018114620002ef5760008415620002d65750858301515b600019600386901b1c1916600185901b1785556200027a565b600085815260208120601f198616915b828110156200032057888601518255948401946001909101908401620002ff565b50858210156200033f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611798806200035f6000396000f3fe6080604052600436106101635760003560e01c8063715018a6116100c0578063a457c2d711610074578063dd62ed3e11610059578063dd62ed3e146103ef578063e2eec30b14610442578063f2fde38b1461046f57600080fd5b8063a457c2d7146103af578063a9059cbb146103cf57600080fd5b80638da5cb5b116100a55780638da5cb5b1461034f578063902bd45e1461037a57806395d89b411461039a57600080fd5b8063715018a61461030f578063785e9e861461032457600080fd5b8063395093511161011757806362355638116100fc57806362355638146102675780636411be201461027a57806370a08231146102cc57600080fd5b8063395093511461022557806339f476931461024557600080fd5b806318160ddd1161014857806318160ddd146101ca57806323b872dd146101e9578063313ce5671461020957600080fd5b806306fdde031461016f578063095ea7b31461019a57600080fd5b3661016a57005b600080fd5b34801561017b57600080fd5b5061018461048f565b604051610191919061155a565b60405180910390f35b3480156101a657600080fd5b506101ba6101b53660046115cd565b610521565b6040519015158152602001610191565b3480156101d657600080fd5b506002545b604051908152602001610191565b3480156101f557600080fd5b506101ba6102043660046115f9565b61053b565b34801561021557600080fd5b5060405160128152602001610191565b34801561023157600080fd5b506101ba6102403660046115cd565b61055f565b34801561025157600080fd5b506102656102603660046115cd565b6105ab565b005b6101db6102753660046115f9565b6106b5565b34801561028657600080fd5b506006546102a79073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610191565b3480156102d857600080fd5b506101db6102e736600461163a565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b34801561031b57600080fd5b50610265610827565b34801561033057600080fd5b5060075473ffffffffffffffffffffffffffffffffffffffff166102a7565b34801561035b57600080fd5b5060055473ffffffffffffffffffffffffffffffffffffffff166102a7565b34801561038657600080fd5b5061026561039536600461163a565b61083b565b3480156103a657600080fd5b506101846108de565b3480156103bb57600080fd5b506101ba6103ca3660046115cd565b6108ed565b3480156103db57600080fd5b506101ba6103ea3660046115cd565b6109a4565b3480156103fb57600080fd5b506101db61040a36600461165e565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b34801561044e57600080fd5b506007546102a79073ffffffffffffffffffffffffffffffffffffffff1681565b34801561047b57600080fd5b5061026561048a36600461163a565b6109b2565b60606003805461049e90611697565b80601f01602080910402602001604051908101604052809291908181526020018280546104ca90611697565b80156105175780601f106104ec57610100808354040283529160200191610517565b820191906000526020600020905b8154815290600101906020018083116104fa57829003601f168201915b5050505050905090565b60003361052f818585610a4f565b60019150505b92915050565b600033610549858285610bce565b610554858585610c8b565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061052f90829086906105a69087906116ea565b610a4f565b6105b53382610eac565b60075473ffffffffffffffffffffffffffffffffffffffff16156105fb576007546105f79073ffffffffffffffffffffffffffffffffffffffff16838361103c565b5050565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610655576040519150601f19603f3d011682016040523d82523d6000602084013e61065a565b606091505b50509050806106b05760405162461bcd60e51b815260206004820181905260248201527f544f46544d6f636b3a206661696c656420746f207472616e736665722045544860448201526064015b60405180910390fd5b505050565b60006106c183836110c9565b60075473ffffffffffffffffffffffffffffffffffffffff16156107d1576006546007546040517fdd71105d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152306024830152918216604482015260648101859052600092919091169063dd71105d906084016020604051808303816000875af115801561076d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107919190611724565b905080156107cb576040517fd23b17bb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610820565b8134146108205760405162461bcd60e51b815260206004820181905260248201527f544f46544d6f636b3a206661696c656420746f2072656365697665642045544860448201526064016106a7565b5092915050565b61082f6111a2565b6108396000611209565b565b6108436111a2565b6006546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527f19e743977bfa1080c4f475f13f05433b43465aa361d8a3fec33c3165f773b599910160405180910390a1600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606004805461049e90611697565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156109975760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016106a7565b6105548286868403610a4f565b60003361052f818585610c8b565b6109ba6111a2565b73ffffffffffffffffffffffffffffffffffffffff8116610a435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106a7565b610a4c81611209565b50565b73ffffffffffffffffffffffffffffffffffffffff8316610ad75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106a7565b73ffffffffffffffffffffffffffffffffffffffff8216610b605760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016106a7565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c855781811015610c785760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106a7565b610c858484848403610a4f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610d145760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106a7565b73ffffffffffffffffffffffffffffffffffffffff8216610d9d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016106a7565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610e395760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016106a7565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610c85565b73ffffffffffffffffffffffffffffffffffffffff8216610f355760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016106a7565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610fd15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016106a7565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526106b0908490611280565b73ffffffffffffffffffffffffffffffffffffffff821661112c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106a7565b806002600082825461113e91906116ea565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60055473ffffffffffffffffffffffffffffffffffffffff1633146108395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a7565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006112e2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113759092919063ffffffff16565b90508051600014806113035750808060200190518101906113039190611724565b6106b05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106a7565b6060611384848460008561138c565b949350505050565b6060824710156114045760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106a7565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161142d9190611746565b60006040518083038185875af1925050503d806000811461146a576040519150601f19603f3d011682016040523d82523d6000602084013e61146f565b606091505b50915091506114808783838761148b565b979650505050505050565b606083156115075782516000036115005773ffffffffffffffffffffffffffffffffffffffff85163b6115005760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106a7565b5081611384565b611384838381511561151c5781518083602001fd5b8060405162461bcd60e51b81526004016106a7919061155a565b60005b83811015611551578181015183820152602001611539565b50506000910152565b6020815260008251806020840152611579816040850160208701611536565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610a4c57600080fd5b600080604083850312156115e057600080fd5b82356115eb816115ab565b946020939093013593505050565b60008060006060848603121561160e57600080fd5b8335611619816115ab565b92506020840135611629816115ab565b929592945050506040919091013590565b60006020828403121561164c57600080fd5b8135611657816115ab565b9392505050565b6000806040838503121561167157600080fd5b823561167c816115ab565b9150602083013561168c816115ab565b809150509250929050565b600181811c908216806116ab57607f821691505b6020821081036116e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b80820180821115610535577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006020828403121561173657600080fd5b8151801515811461165757600080fd5b60008251611758818460208701611536565b919091019291505056fea2646970667358221220d6d4cd7e742af422abf4ca31df302b058e99f9e6481c22c82f5bb7bff64b3ad064736f6c63430008160033";

type TOFTMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TOFTMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TOFTMock__factory extends ContractFactory {
  constructor(...args: TOFTMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TOFTMock";
  }

  override deploy(
    _erc20: PromiseOrValue<string>,
    _pearlmit: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TOFTMock> {
    return super.deploy(
      _erc20,
      _pearlmit,
      overrides || {}
    ) as Promise<TOFTMock>;
  }
  override getDeployTransaction(
    _erc20: PromiseOrValue<string>,
    _pearlmit: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_erc20, _pearlmit, overrides || {});
  }
  override attach(address: string): TOFTMock {
    return super.attach(address) as TOFTMock;
  }
  override connect(signer: Signer): TOFTMock__factory {
    return super.connect(signer) as TOFTMock__factory;
  }
  static readonly contractName: "TOFTMock";

  public readonly contractName: "TOFTMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TOFTMockInterface {
    return new utils.Interface(_abi) as TOFTMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TOFTMock {
    return new Contract(address, _abi, signerOrProvider) as TOFTMock;
  }
}
