/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export type IExerciseOptionsDataStruct = {
  from: PromiseOrValue<string>;
  target: PromiseOrValue<string>;
  paymentTokenAmount: PromiseOrValue<BigNumberish>;
  oTAPTokenID: PromiseOrValue<BigNumberish>;
  tapAmount: PromiseOrValue<BigNumberish>;
};

export type IExerciseOptionsDataStructOutput = [
  string,
  string,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  from: string;
  target: string;
  paymentTokenAmount: BigNumber;
  oTAPTokenID: BigNumber;
  tapAmount: BigNumber;
};

export type SendParamStruct = {
  dstEid: PromiseOrValue<BigNumberish>;
  to: PromiseOrValue<BytesLike>;
  amountLD: PromiseOrValue<BigNumberish>;
  minAmountLD: PromiseOrValue<BigNumberish>;
  extraOptions: PromiseOrValue<BytesLike>;
  composeMsg: PromiseOrValue<BytesLike>;
  oftCmd: PromiseOrValue<BytesLike>;
};

export type SendParamStructOutput = [
  number,
  string,
  BigNumber,
  BigNumber,
  string,
  string,
  string
] & {
  dstEid: number;
  to: string;
  amountLD: BigNumber;
  minAmountLD: BigNumber;
  extraOptions: string;
  composeMsg: string;
  oftCmd: string;
};

export type MessagingFeeStruct = {
  nativeFee: PromiseOrValue<BigNumberish>;
  lzTokenFee: PromiseOrValue<BigNumberish>;
};

export type MessagingFeeStructOutput = [BigNumber, BigNumber] & {
  nativeFee: BigNumber;
  lzTokenFee: BigNumber;
};

export type LZSendParamStruct = {
  sendParam: SendParamStruct;
  fee: MessagingFeeStruct;
  extraOptions: PromiseOrValue<BytesLike>;
  refundAddress: PromiseOrValue<string>;
};

export type LZSendParamStructOutput = [
  SendParamStructOutput,
  MessagingFeeStructOutput,
  string,
  string
] & {
  sendParam: SendParamStructOutput;
  fee: MessagingFeeStructOutput;
  extraOptions: string;
  refundAddress: string;
};

export type ExerciseOptionsMsgStruct = {
  optionsData: IExerciseOptionsDataStruct;
  withdrawOnOtherChain: PromiseOrValue<boolean>;
  lzSendParams: LZSendParamStruct;
};

export type ExerciseOptionsMsgStructOutput = [
  IExerciseOptionsDataStructOutput,
  boolean,
  LZSendParamStructOutput
] & {
  optionsData: IExerciseOptionsDataStructOutput;
  withdrawOnOtherChain: boolean;
  lzSendParams: LZSendParamStructOutput;
};

export type IOptionsLockDataStruct = {
  lock: PromiseOrValue<boolean>;
  target: PromiseOrValue<string>;
  lockDuration: PromiseOrValue<BigNumberish>;
  amount: PromiseOrValue<BigNumberish>;
  fraction: PromiseOrValue<BigNumberish>;
};

export type IOptionsLockDataStructOutput = [
  boolean,
  string,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  lock: boolean;
  target: string;
  lockDuration: BigNumber;
  amount: BigNumber;
  fraction: BigNumber;
};

export type IOptionsParticipateDataStruct = {
  participate: PromiseOrValue<boolean>;
  target: PromiseOrValue<string>;
  tOLPTokenId: PromiseOrValue<BigNumberish>;
};

export type IOptionsParticipateDataStructOutput = [
  boolean,
  string,
  BigNumber
] & { participate: boolean; target: string; tOLPTokenId: BigNumber };

export type ILendOrRepayParamsStruct = {
  repay: PromiseOrValue<boolean>;
  depositAmount: PromiseOrValue<BigNumberish>;
  repayAmount: PromiseOrValue<BigNumberish>;
  marketHelper: PromiseOrValue<string>;
  magnetar: PromiseOrValue<string>;
  market: PromiseOrValue<string>;
  removeCollateral: PromiseOrValue<boolean>;
  removeCollateralAmount: PromiseOrValue<BigNumberish>;
  lockData: IOptionsLockDataStruct;
  participateData: IOptionsParticipateDataStruct;
};

export type ILendOrRepayParamsStructOutput = [
  boolean,
  BigNumber,
  BigNumber,
  string,
  string,
  string,
  boolean,
  BigNumber,
  IOptionsLockDataStructOutput,
  IOptionsParticipateDataStructOutput
] & {
  repay: boolean;
  depositAmount: BigNumber;
  repayAmount: BigNumber;
  marketHelper: string;
  magnetar: string;
  market: string;
  removeCollateral: boolean;
  removeCollateralAmount: BigNumber;
  lockData: IOptionsLockDataStructOutput;
  participateData: IOptionsParticipateDataStructOutput;
};

export type MagnetarWithdrawDataStruct = {
  yieldBox: PromiseOrValue<string>;
  assetId: PromiseOrValue<BigNumberish>;
  receiver: PromiseOrValue<string>;
  amount: PromiseOrValue<BigNumberish>;
  unwrap: PromiseOrValue<boolean>;
  withdraw: PromiseOrValue<boolean>;
};

export type MagnetarWithdrawDataStructOutput = [
  string,
  BigNumber,
  string,
  BigNumber,
  boolean,
  boolean
] & {
  yieldBox: string;
  assetId: BigNumber;
  receiver: string;
  amount: BigNumber;
  unwrap: boolean;
  withdraw: boolean;
};

export type MarketLendOrRepayMsgStruct = {
  user: PromiseOrValue<string>;
  lendParams: ILendOrRepayParamsStruct;
  withdrawParams: MagnetarWithdrawDataStruct;
};

export type MarketLendOrRepayMsgStructOutput = [
  string,
  ILendOrRepayParamsStructOutput,
  MagnetarWithdrawDataStructOutput
] & {
  user: string;
  lendParams: ILendOrRepayParamsStructOutput;
  withdrawParams: MagnetarWithdrawDataStructOutput;
};

export type MarketPermitActionMsgStruct = {
  target: PromiseOrValue<string>;
  owner: PromiseOrValue<string>;
  spender: PromiseOrValue<string>;
  value: PromiseOrValue<BigNumberish>;
  deadline: PromiseOrValue<BigNumberish>;
  v: PromiseOrValue<BigNumberish>;
  r: PromiseOrValue<BytesLike>;
  s: PromiseOrValue<BytesLike>;
  permitAsset: PromiseOrValue<boolean>;
};

export type MarketPermitActionMsgStructOutput = [
  string,
  string,
  string,
  BigNumber,
  BigNumber,
  number,
  string,
  string,
  boolean
] & {
  target: string;
  owner: string;
  spender: string;
  value: BigNumber;
  deadline: BigNumber;
  v: number;
  r: string;
  s: string;
  permitAsset: boolean;
};

export type ICommonExternalContractsStruct = {
  magnetar: PromiseOrValue<string>;
  singularity: PromiseOrValue<string>;
  bigBang: PromiseOrValue<string>;
  marketHelper: PromiseOrValue<string>;
};

export type ICommonExternalContractsStructOutput = [
  string,
  string,
  string,
  string
] & {
  magnetar: string;
  singularity: string;
  bigBang: string;
  marketHelper: string;
};

export type IOptionsExitDataStruct = {
  exit: PromiseOrValue<boolean>;
  target: PromiseOrValue<string>;
  oTAPTokenID: PromiseOrValue<BigNumberish>;
};

export type IOptionsExitDataStructOutput = [boolean, string, BigNumber] & {
  exit: boolean;
  target: string;
  oTAPTokenID: BigNumber;
};

export type IOptionsUnlockDataStruct = {
  unlock: PromiseOrValue<boolean>;
  target: PromiseOrValue<string>;
  tokenId: PromiseOrValue<BigNumberish>;
};

export type IOptionsUnlockDataStructOutput = [boolean, string, BigNumber] & {
  unlock: boolean;
  target: string;
  tokenId: BigNumber;
};

export type IRemoveAndRepayStruct = {
  removeAssetFromSGL: PromiseOrValue<boolean>;
  removeAmount: PromiseOrValue<BigNumberish>;
  repayAssetOnBB: PromiseOrValue<boolean>;
  repayAmount: PromiseOrValue<BigNumberish>;
  removeCollateralFromBB: PromiseOrValue<boolean>;
  collateralAmount: PromiseOrValue<BigNumberish>;
  exitData: IOptionsExitDataStruct;
  unlockData: IOptionsUnlockDataStruct;
  assetWithdrawData: MagnetarWithdrawDataStruct;
  collateralWithdrawData: MagnetarWithdrawDataStruct;
};

export type IRemoveAndRepayStructOutput = [
  boolean,
  BigNumber,
  boolean,
  BigNumber,
  boolean,
  BigNumber,
  IOptionsExitDataStructOutput,
  IOptionsUnlockDataStructOutput,
  MagnetarWithdrawDataStructOutput,
  MagnetarWithdrawDataStructOutput
] & {
  removeAssetFromSGL: boolean;
  removeAmount: BigNumber;
  repayAssetOnBB: boolean;
  repayAmount: BigNumber;
  removeCollateralFromBB: boolean;
  collateralAmount: BigNumber;
  exitData: IOptionsExitDataStructOutput;
  unlockData: IOptionsUnlockDataStructOutput;
  assetWithdrawData: MagnetarWithdrawDataStructOutput;
  collateralWithdrawData: MagnetarWithdrawDataStructOutput;
};

export type MarketRemoveAssetMsgStruct = {
  user: PromiseOrValue<string>;
  externalData: ICommonExternalContractsStruct;
  removeAndRepayData: IRemoveAndRepayStruct;
};

export type MarketRemoveAssetMsgStructOutput = [
  string,
  ICommonExternalContractsStructOutput,
  IRemoveAndRepayStructOutput
] & {
  user: string;
  externalData: ICommonExternalContractsStructOutput;
  removeAndRepayData: IRemoveAndRepayStructOutput;
};

export type RemoteTransferMsgStruct = {
  owner: PromiseOrValue<string>;
  lzSendParam: LZSendParamStruct;
  composeMsg: PromiseOrValue<BytesLike>;
};

export type RemoteTransferMsgStructOutput = [
  string,
  LZSendParamStructOutput,
  string
] & { owner: string; lzSendParam: LZSendParamStructOutput; composeMsg: string };

export type YieldBoxApproveAllMsgStruct = {
  target: PromiseOrValue<string>;
  owner: PromiseOrValue<string>;
  spender: PromiseOrValue<string>;
  deadline: PromiseOrValue<BigNumberish>;
  v: PromiseOrValue<BigNumberish>;
  r: PromiseOrValue<BytesLike>;
  s: PromiseOrValue<BytesLike>;
  permit: PromiseOrValue<boolean>;
};

export type YieldBoxApproveAllMsgStructOutput = [
  string,
  string,
  string,
  BigNumber,
  number,
  string,
  string,
  boolean
] & {
  target: string;
  owner: string;
  spender: string;
  deadline: BigNumber;
  v: number;
  r: string;
  s: string;
  permit: boolean;
};

export type YieldBoxApproveAssetMsgStruct = {
  target: PromiseOrValue<string>;
  owner: PromiseOrValue<string>;
  spender: PromiseOrValue<string>;
  assetId: PromiseOrValue<BigNumberish>;
  deadline: PromiseOrValue<BigNumberish>;
  v: PromiseOrValue<BigNumberish>;
  r: PromiseOrValue<BytesLike>;
  s: PromiseOrValue<BytesLike>;
  permit: PromiseOrValue<boolean>;
};

export type YieldBoxApproveAssetMsgStructOutput = [
  string,
  string,
  string,
  BigNumber,
  BigNumber,
  number,
  string,
  string,
  boolean
] & {
  target: string;
  owner: string;
  spender: string;
  assetId: BigNumber;
  deadline: BigNumber;
  v: number;
  r: string;
  s: string;
  permit: boolean;
};

export type ERC20PermitApprovalMsgStruct = {
  token: PromiseOrValue<string>;
  owner: PromiseOrValue<string>;
  spender: PromiseOrValue<string>;
  value: PromiseOrValue<BigNumberish>;
  deadline: PromiseOrValue<BigNumberish>;
  v: PromiseOrValue<BigNumberish>;
  r: PromiseOrValue<BytesLike>;
  s: PromiseOrValue<BytesLike>;
};

export type ERC20PermitApprovalMsgStructOutput = [
  string,
  string,
  string,
  BigNumber,
  BigNumber,
  number,
  string,
  string
] & {
  token: string;
  owner: string;
  spender: string;
  value: BigNumber;
  deadline: BigNumber;
  v: number;
  r: string;
  s: string;
};

export type ERC721PermitApprovalMsgStruct = {
  token: PromiseOrValue<string>;
  spender: PromiseOrValue<string>;
  tokenId: PromiseOrValue<BigNumberish>;
  deadline: PromiseOrValue<BigNumberish>;
  v: PromiseOrValue<BigNumberish>;
  r: PromiseOrValue<BytesLike>;
  s: PromiseOrValue<BytesLike>;
};

export type ERC721PermitApprovalMsgStructOutput = [
  string,
  string,
  BigNumber,
  BigNumber,
  number,
  string,
  string
] & {
  token: string;
  spender: string;
  tokenId: BigNumber;
  deadline: BigNumber;
  v: number;
  r: string;
  s: string;
};

export type ComposeMsgDataStruct = {
  index: PromiseOrValue<BigNumberish>;
  gas: PromiseOrValue<BigNumberish>;
  value: PromiseOrValue<BigNumberish>;
  data: PromiseOrValue<BytesLike>;
  prevData: PromiseOrValue<BytesLike>;
  prevOptionsData: PromiseOrValue<BytesLike>;
};

export type ComposeMsgDataStructOutput = [
  number,
  BigNumber,
  BigNumber,
  string,
  string,
  string
] & {
  index: number;
  gas: BigNumber;
  value: BigNumber;
  data: string;
  prevData: string;
  prevOptionsData: string;
};

export type PrepareLzCallDataStruct = {
  dstEid: PromiseOrValue<BigNumberish>;
  recipient: PromiseOrValue<BytesLike>;
  amountToSendLD: PromiseOrValue<BigNumberish>;
  minAmountToCreditLD: PromiseOrValue<BigNumberish>;
  msgType: PromiseOrValue<BigNumberish>;
  composeMsgData: ComposeMsgDataStruct;
  lzReceiveGas: PromiseOrValue<BigNumberish>;
  lzReceiveValue: PromiseOrValue<BigNumberish>;
  refundAddress: PromiseOrValue<string>;
};

export type PrepareLzCallDataStructOutput = [
  number,
  string,
  BigNumber,
  BigNumber,
  number,
  ComposeMsgDataStructOutput,
  BigNumber,
  BigNumber,
  string
] & {
  dstEid: number;
  recipient: string;
  amountToSendLD: BigNumber;
  minAmountToCreditLD: BigNumber;
  msgType: number;
  composeMsgData: ComposeMsgDataStructOutput;
  lzReceiveGas: BigNumber;
  lzReceiveValue: BigNumber;
  refundAddress: string;
};

export type PrepareLzCallReturnStruct = {
  composeMsg: PromiseOrValue<BytesLike>;
  composeOptions: PromiseOrValue<BytesLike>;
  sendParam: SendParamStruct;
  msgFee: MessagingFeeStruct;
  lzSendParam: LZSendParamStruct;
  oftMsgOptions: PromiseOrValue<BytesLike>;
};

export type PrepareLzCallReturnStructOutput = [
  string,
  string,
  SendParamStructOutput,
  MessagingFeeStructOutput,
  LZSendParamStructOutput,
  string
] & {
  composeMsg: string;
  composeOptions: string;
  sendParam: SendParamStructOutput;
  msgFee: MessagingFeeStructOutput;
  lzSendParam: LZSendParamStructOutput;
  oftMsgOptions: string;
};

export declare namespace IPearlmit {
  export type SignatureApprovalStruct = {
    tokenType: PromiseOrValue<BigNumberish>;
    token: PromiseOrValue<string>;
    id: PromiseOrValue<BigNumberish>;
    amount: PromiseOrValue<BigNumberish>;
    operator: PromiseOrValue<string>;
  };

  export type SignatureApprovalStructOutput = [
    number,
    string,
    BigNumber,
    BigNumber,
    string
  ] & {
    tokenType: number;
    token: string;
    id: BigNumber;
    amount: BigNumber;
    operator: string;
  };

  export type PermitBatchTransferFromStruct = {
    approvals: IPearlmit.SignatureApprovalStruct[];
    owner: PromiseOrValue<string>;
    nonce: PromiseOrValue<BigNumberish>;
    sigDeadline: PromiseOrValue<BigNumberish>;
    signedPermit: PromiseOrValue<BytesLike>;
    executor: PromiseOrValue<string>;
    hashedData: PromiseOrValue<BytesLike>;
  };

  export type PermitBatchTransferFromStructOutput = [
    IPearlmit.SignatureApprovalStructOutput[],
    string,
    BigNumber,
    number,
    string,
    string,
    string
  ] & {
    approvals: IPearlmit.SignatureApprovalStructOutput[];
    owner: string;
    nonce: BigNumber;
    sigDeadline: number;
    signedPermit: string;
    executor: string;
    hashedData: string;
  };
}

export interface UsdoHelperInterface extends utils.Interface {
  functions: {
    "MSG_SEND()": FunctionFragment;
    "buildExerciseOptionMsg(((address,address,uint256,uint256,uint256),bool,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address)))": FunctionFragment;
    "buildMarketLendOrRepayMsg((address,(bool,uint256,uint256,address,address,address,bool,uint256,(bool,address,uint128,uint128,uint256),(bool,address,uint256)),(address,uint256,address,uint256,bool,bool)))": FunctionFragment;
    "buildMarketPermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool))": FunctionFragment;
    "buildMarketRemoveAssetMsg((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))": FunctionFragment;
    "buildRemoteTransferMsg((address,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address),bytes))": FunctionFragment;
    "buildToeComposeMsgAndOptions(address,bytes,uint16,uint16,uint32,bytes,bytes)": FunctionFragment;
    "buildYieldBoxApproveAllMsg((address,address,address,uint256,uint8,bytes32,bytes32,bool))": FunctionFragment;
    "buildYieldBoxApproveAssetMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool)[])": FunctionFragment;
    "encodeERC20PermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32)[])": FunctionFragment;
    "encodeERC721PermitApprovalMsg((address,address,uint256,uint256,uint8,bytes32,bytes32)[])": FunctionFragment;
    "encodePearlmitApprovalMsg(address,((uint8,address,uint256,uint200,address)[],address,uint256,uint48,bytes,address,bytes32))": FunctionFragment;
    "prepareLzCall(address,(uint32,bytes32,uint256,uint256,uint16,(uint8,uint128,uint128,bytes,bytes,bytes),uint128,uint128,address))": FunctionFragment;
    "toLD(uint64,uint256)": FunctionFragment;
    "toSD(uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "MSG_SEND"
      | "MSG_SEND()"
      | "buildExerciseOptionMsg"
      | "buildExerciseOptionMsg(((address,address,uint256,uint256,uint256),bool,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address)))"
      | "buildMarketLendOrRepayMsg"
      | "buildMarketLendOrRepayMsg((address,(bool,uint256,uint256,address,address,address,bool,uint256,(bool,address,uint128,uint128,uint256),(bool,address,uint256)),(address,uint256,address,uint256,bool,bool)))"
      | "buildMarketPermitApprovalMsg"
      | "buildMarketPermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool))"
      | "buildMarketRemoveAssetMsg"
      | "buildMarketRemoveAssetMsg((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"
      | "buildRemoteTransferMsg"
      | "buildRemoteTransferMsg((address,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address),bytes))"
      | "buildToeComposeMsgAndOptions"
      | "buildToeComposeMsgAndOptions(address,bytes,uint16,uint16,uint32,bytes,bytes)"
      | "buildYieldBoxApproveAllMsg"
      | "buildYieldBoxApproveAllMsg((address,address,address,uint256,uint8,bytes32,bytes32,bool))"
      | "buildYieldBoxApproveAssetMsg"
      | "buildYieldBoxApproveAssetMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool)[])"
      | "encodeERC20PermitApprovalMsg"
      | "encodeERC20PermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32)[])"
      | "encodeERC721PermitApprovalMsg"
      | "encodeERC721PermitApprovalMsg((address,address,uint256,uint256,uint8,bytes32,bytes32)[])"
      | "encodePearlmitApprovalMsg"
      | "encodePearlmitApprovalMsg(address,((uint8,address,uint256,uint200,address)[],address,uint256,uint48,bytes,address,bytes32))"
      | "prepareLzCall"
      | "prepareLzCall(address,(uint32,bytes32,uint256,uint256,uint16,(uint8,uint128,uint128,bytes,bytes,bytes),uint128,uint128,address))"
      | "toLD"
      | "toLD(uint64,uint256)"
      | "toSD"
      | "toSD(uint256,uint256)"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "MSG_SEND", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "MSG_SEND()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "buildExerciseOptionMsg",
    values: [ExerciseOptionsMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildExerciseOptionMsg(((address,address,uint256,uint256,uint256),bool,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address)))",
    values: [ExerciseOptionsMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildMarketLendOrRepayMsg",
    values: [MarketLendOrRepayMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildMarketLendOrRepayMsg((address,(bool,uint256,uint256,address,address,address,bool,uint256,(bool,address,uint128,uint128,uint256),(bool,address,uint256)),(address,uint256,address,uint256,bool,bool)))",
    values: [MarketLendOrRepayMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildMarketPermitApprovalMsg",
    values: [MarketPermitActionMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildMarketPermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool))",
    values: [MarketPermitActionMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildMarketRemoveAssetMsg",
    values: [MarketRemoveAssetMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildMarketRemoveAssetMsg((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))",
    values: [MarketRemoveAssetMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildRemoteTransferMsg",
    values: [RemoteTransferMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildRemoteTransferMsg((address,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address),bytes))",
    values: [RemoteTransferMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildToeComposeMsgAndOptions",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "buildToeComposeMsgAndOptions(address,bytes,uint16,uint16,uint32,bytes,bytes)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "buildYieldBoxApproveAllMsg",
    values: [YieldBoxApproveAllMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildYieldBoxApproveAllMsg((address,address,address,uint256,uint8,bytes32,bytes32,bool))",
    values: [YieldBoxApproveAllMsgStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "buildYieldBoxApproveAssetMsg",
    values: [YieldBoxApproveAssetMsgStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "buildYieldBoxApproveAssetMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool)[])",
    values: [YieldBoxApproveAssetMsgStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeERC20PermitApprovalMsg",
    values: [ERC20PermitApprovalMsgStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeERC20PermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32)[])",
    values: [ERC20PermitApprovalMsgStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeERC721PermitApprovalMsg",
    values: [ERC721PermitApprovalMsgStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeERC721PermitApprovalMsg((address,address,uint256,uint256,uint8,bytes32,bytes32)[])",
    values: [ERC721PermitApprovalMsgStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "encodePearlmitApprovalMsg",
    values: [PromiseOrValue<string>, IPearlmit.PermitBatchTransferFromStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "encodePearlmitApprovalMsg(address,((uint8,address,uint256,uint200,address)[],address,uint256,uint48,bytes,address,bytes32))",
    values: [PromiseOrValue<string>, IPearlmit.PermitBatchTransferFromStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "prepareLzCall",
    values: [PromiseOrValue<string>, PrepareLzCallDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "prepareLzCall(address,(uint32,bytes32,uint256,uint256,uint16,(uint8,uint128,uint128,bytes,bytes,bytes),uint128,uint128,address))",
    values: [PromiseOrValue<string>, PrepareLzCallDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "toLD",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "toLD(uint64,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "toSD",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "toSD(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(functionFragment: "MSG_SEND", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "MSG_SEND()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "buildExerciseOptionMsg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildExerciseOptionMsg(((address,address,uint256,uint256,uint256),bool,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildMarketLendOrRepayMsg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildMarketLendOrRepayMsg((address,(bool,uint256,uint256,address,address,address,bool,uint256,(bool,address,uint128,uint128,uint256),(bool,address,uint256)),(address,uint256,address,uint256,bool,bool)))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildMarketPermitApprovalMsg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildMarketPermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildMarketRemoveAssetMsg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildMarketRemoveAssetMsg((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildRemoteTransferMsg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildRemoteTransferMsg((address,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address),bytes))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildToeComposeMsgAndOptions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildToeComposeMsgAndOptions(address,bytes,uint16,uint16,uint32,bytes,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildYieldBoxApproveAllMsg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildYieldBoxApproveAllMsg((address,address,address,uint256,uint8,bytes32,bytes32,bool))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildYieldBoxApproveAssetMsg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buildYieldBoxApproveAssetMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeERC20PermitApprovalMsg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeERC20PermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeERC721PermitApprovalMsg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeERC721PermitApprovalMsg((address,address,uint256,uint256,uint8,bytes32,bytes32)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodePearlmitApprovalMsg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodePearlmitApprovalMsg(address,((uint8,address,uint256,uint200,address)[],address,uint256,uint48,bytes,address,bytes32))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "prepareLzCall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "prepareLzCall(address,(uint32,bytes32,uint256,uint256,uint16,(uint8,uint128,uint128,bytes,bytes,bytes),uint128,uint128,address))",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "toLD", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "toLD(uint64,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "toSD", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "toSD(uint256,uint256)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface UsdoHelper extends BaseContract {
  contractName: "UsdoHelper";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: UsdoHelperInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    MSG_SEND(overrides?: CallOverrides): Promise<[number]>;

    "MSG_SEND()"(overrides?: CallOverrides): Promise<[number]>;

    buildExerciseOptionMsg(
      _msg: ExerciseOptionsMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "buildExerciseOptionMsg(((address,address,uint256,uint256,uint256),bool,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address)))"(
      _msg: ExerciseOptionsMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    buildMarketLendOrRepayMsg(
      _msg: MarketLendOrRepayMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "buildMarketLendOrRepayMsg((address,(bool,uint256,uint256,address,address,address,bool,uint256,(bool,address,uint128,uint128,uint256),(bool,address,uint256)),(address,uint256,address,uint256,bool,bool)))"(
      _msg: MarketLendOrRepayMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    buildMarketPermitApprovalMsg(
      _marketPermitActionMsg: MarketPermitActionMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    "buildMarketPermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool))"(
      _marketPermitActionMsg: MarketPermitActionMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    buildMarketRemoveAssetMsg(
      _msg: MarketRemoveAssetMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "buildMarketRemoveAssetMsg((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"(
      _msg: MarketRemoveAssetMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    buildRemoteTransferMsg(
      _remoteTransferMsg: RemoteTransferMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "buildRemoteTransferMsg((address,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address),bytes))"(
      _remoteTransferMsg: RemoteTransferMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    buildToeComposeMsgAndOptions(
      _toeToken: PromiseOrValue<string>,
      _msg: PromiseOrValue<BytesLike>,
      _msgType: PromiseOrValue<BigNumberish>,
      _msgIndex: PromiseOrValue<BigNumberish>,
      _dstEid: PromiseOrValue<BigNumberish>,
      _extraOptions: PromiseOrValue<BytesLike>,
      _tapComposedMsg: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string, string] & { message: string; options: string }>;

    "buildToeComposeMsgAndOptions(address,bytes,uint16,uint16,uint32,bytes,bytes)"(
      _toeToken: PromiseOrValue<string>,
      _msg: PromiseOrValue<BytesLike>,
      _msgType: PromiseOrValue<BigNumberish>,
      _msgIndex: PromiseOrValue<BigNumberish>,
      _dstEid: PromiseOrValue<BigNumberish>,
      _extraOptions: PromiseOrValue<BytesLike>,
      _tapComposedMsg: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string, string] & { message: string; options: string }>;

    buildYieldBoxApproveAllMsg(
      _yieldBoxApprovalAllMsg: YieldBoxApproveAllMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    "buildYieldBoxApproveAllMsg((address,address,address,uint256,uint8,bytes32,bytes32,bool))"(
      _yieldBoxApprovalAllMsg: YieldBoxApproveAllMsgStruct,
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    buildYieldBoxApproveAssetMsg(
      _approvalMsg: YieldBoxApproveAssetMsgStruct[],
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    "buildYieldBoxApproveAssetMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool)[])"(
      _approvalMsg: YieldBoxApproveAssetMsgStruct[],
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    encodeERC20PermitApprovalMsg(
      _erc20PermitApprovalMsg: ERC20PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    "encodeERC20PermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32)[])"(
      _erc20PermitApprovalMsg: ERC20PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    encodeERC721PermitApprovalMsg(
      _erc721PermitApprovalMsg: ERC721PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    "encodeERC721PermitApprovalMsg((address,address,uint256,uint256,uint8,bytes32,bytes32)[])"(
      _erc721PermitApprovalMsg: ERC721PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    encodePearlmitApprovalMsg(
      _pearlmit: PromiseOrValue<string>,
      _data: IPearlmit.PermitBatchTransferFromStruct,
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    "encodePearlmitApprovalMsg(address,((uint8,address,uint256,uint200,address)[],address,uint256,uint48,bytes,address,bytes32))"(
      _pearlmit: PromiseOrValue<string>,
      _data: IPearlmit.PermitBatchTransferFromStruct,
      overrides?: CallOverrides
    ): Promise<[string] & { msg_: string }>;

    prepareLzCall(
      _toeToken: PromiseOrValue<string>,
      _prepareLzCallData: PrepareLzCallDataStruct,
      overrides?: CallOverrides
    ): Promise<
      [PrepareLzCallReturnStructOutput] & {
        prepareLzCallReturn_: PrepareLzCallReturnStructOutput;
      }
    >;

    "prepareLzCall(address,(uint32,bytes32,uint256,uint256,uint16,(uint8,uint128,uint128,bytes,bytes,bytes),uint128,uint128,address))"(
      _toeToken: PromiseOrValue<string>,
      _prepareLzCallData: PrepareLzCallDataStruct,
      overrides?: CallOverrides
    ): Promise<
      [PrepareLzCallReturnStructOutput] & {
        prepareLzCallReturn_: PrepareLzCallReturnStructOutput;
      }
    >;

    toLD(
      _amountSD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { amountLD: BigNumber }>;

    "toLD(uint64,uint256)"(
      _amountSD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { amountLD: BigNumber }>;

    toSD(
      _amountLD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { amountSD: BigNumber }>;

    "toSD(uint256,uint256)"(
      _amountLD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { amountSD: BigNumber }>;
  };

  MSG_SEND(overrides?: CallOverrides): Promise<number>;

  "MSG_SEND()"(overrides?: CallOverrides): Promise<number>;

  buildExerciseOptionMsg(
    _msg: ExerciseOptionsMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  "buildExerciseOptionMsg(((address,address,uint256,uint256,uint256),bool,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address)))"(
    _msg: ExerciseOptionsMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  buildMarketLendOrRepayMsg(
    _msg: MarketLendOrRepayMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  "buildMarketLendOrRepayMsg((address,(bool,uint256,uint256,address,address,address,bool,uint256,(bool,address,uint128,uint128,uint256),(bool,address,uint256)),(address,uint256,address,uint256,bool,bool)))"(
    _msg: MarketLendOrRepayMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  buildMarketPermitApprovalMsg(
    _marketPermitActionMsg: MarketPermitActionMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  "buildMarketPermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool))"(
    _marketPermitActionMsg: MarketPermitActionMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  buildMarketRemoveAssetMsg(
    _msg: MarketRemoveAssetMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  "buildMarketRemoveAssetMsg((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"(
    _msg: MarketRemoveAssetMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  buildRemoteTransferMsg(
    _remoteTransferMsg: RemoteTransferMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  "buildRemoteTransferMsg((address,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address),bytes))"(
    _remoteTransferMsg: RemoteTransferMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  buildToeComposeMsgAndOptions(
    _toeToken: PromiseOrValue<string>,
    _msg: PromiseOrValue<BytesLike>,
    _msgType: PromiseOrValue<BigNumberish>,
    _msgIndex: PromiseOrValue<BigNumberish>,
    _dstEid: PromiseOrValue<BigNumberish>,
    _extraOptions: PromiseOrValue<BytesLike>,
    _tapComposedMsg: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<[string, string] & { message: string; options: string }>;

  "buildToeComposeMsgAndOptions(address,bytes,uint16,uint16,uint32,bytes,bytes)"(
    _toeToken: PromiseOrValue<string>,
    _msg: PromiseOrValue<BytesLike>,
    _msgType: PromiseOrValue<BigNumberish>,
    _msgIndex: PromiseOrValue<BigNumberish>,
    _dstEid: PromiseOrValue<BigNumberish>,
    _extraOptions: PromiseOrValue<BytesLike>,
    _tapComposedMsg: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<[string, string] & { message: string; options: string }>;

  buildYieldBoxApproveAllMsg(
    _yieldBoxApprovalAllMsg: YieldBoxApproveAllMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  "buildYieldBoxApproveAllMsg((address,address,address,uint256,uint8,bytes32,bytes32,bool))"(
    _yieldBoxApprovalAllMsg: YieldBoxApproveAllMsgStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  buildYieldBoxApproveAssetMsg(
    _approvalMsg: YieldBoxApproveAssetMsgStruct[],
    overrides?: CallOverrides
  ): Promise<string>;

  "buildYieldBoxApproveAssetMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool)[])"(
    _approvalMsg: YieldBoxApproveAssetMsgStruct[],
    overrides?: CallOverrides
  ): Promise<string>;

  encodeERC20PermitApprovalMsg(
    _erc20PermitApprovalMsg: ERC20PermitApprovalMsgStruct[],
    overrides?: CallOverrides
  ): Promise<string>;

  "encodeERC20PermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32)[])"(
    _erc20PermitApprovalMsg: ERC20PermitApprovalMsgStruct[],
    overrides?: CallOverrides
  ): Promise<string>;

  encodeERC721PermitApprovalMsg(
    _erc721PermitApprovalMsg: ERC721PermitApprovalMsgStruct[],
    overrides?: CallOverrides
  ): Promise<string>;

  "encodeERC721PermitApprovalMsg((address,address,uint256,uint256,uint8,bytes32,bytes32)[])"(
    _erc721PermitApprovalMsg: ERC721PermitApprovalMsgStruct[],
    overrides?: CallOverrides
  ): Promise<string>;

  encodePearlmitApprovalMsg(
    _pearlmit: PromiseOrValue<string>,
    _data: IPearlmit.PermitBatchTransferFromStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  "encodePearlmitApprovalMsg(address,((uint8,address,uint256,uint200,address)[],address,uint256,uint48,bytes,address,bytes32))"(
    _pearlmit: PromiseOrValue<string>,
    _data: IPearlmit.PermitBatchTransferFromStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  prepareLzCall(
    _toeToken: PromiseOrValue<string>,
    _prepareLzCallData: PrepareLzCallDataStruct,
    overrides?: CallOverrides
  ): Promise<PrepareLzCallReturnStructOutput>;

  "prepareLzCall(address,(uint32,bytes32,uint256,uint256,uint16,(uint8,uint128,uint128,bytes,bytes,bytes),uint128,uint128,address))"(
    _toeToken: PromiseOrValue<string>,
    _prepareLzCallData: PrepareLzCallDataStruct,
    overrides?: CallOverrides
  ): Promise<PrepareLzCallReturnStructOutput>;

  toLD(
    _amountSD: PromiseOrValue<BigNumberish>,
    _decimalConversionRate: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "toLD(uint64,uint256)"(
    _amountSD: PromiseOrValue<BigNumberish>,
    _decimalConversionRate: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  toSD(
    _amountLD: PromiseOrValue<BigNumberish>,
    _decimalConversionRate: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "toSD(uint256,uint256)"(
    _amountLD: PromiseOrValue<BigNumberish>,
    _decimalConversionRate: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    MSG_SEND(overrides?: CallOverrides): Promise<number>;

    "MSG_SEND()"(overrides?: CallOverrides): Promise<number>;

    buildExerciseOptionMsg(
      _msg: ExerciseOptionsMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    "buildExerciseOptionMsg(((address,address,uint256,uint256,uint256),bool,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address)))"(
      _msg: ExerciseOptionsMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    buildMarketLendOrRepayMsg(
      _msg: MarketLendOrRepayMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    "buildMarketLendOrRepayMsg((address,(bool,uint256,uint256,address,address,address,bool,uint256,(bool,address,uint128,uint128,uint256),(bool,address,uint256)),(address,uint256,address,uint256,bool,bool)))"(
      _msg: MarketLendOrRepayMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    buildMarketPermitApprovalMsg(
      _marketPermitActionMsg: MarketPermitActionMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    "buildMarketPermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool))"(
      _marketPermitActionMsg: MarketPermitActionMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    buildMarketRemoveAssetMsg(
      _msg: MarketRemoveAssetMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    "buildMarketRemoveAssetMsg((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"(
      _msg: MarketRemoveAssetMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    buildRemoteTransferMsg(
      _remoteTransferMsg: RemoteTransferMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    "buildRemoteTransferMsg((address,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address),bytes))"(
      _remoteTransferMsg: RemoteTransferMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    buildToeComposeMsgAndOptions(
      _toeToken: PromiseOrValue<string>,
      _msg: PromiseOrValue<BytesLike>,
      _msgType: PromiseOrValue<BigNumberish>,
      _msgIndex: PromiseOrValue<BigNumberish>,
      _dstEid: PromiseOrValue<BigNumberish>,
      _extraOptions: PromiseOrValue<BytesLike>,
      _tapComposedMsg: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string, string] & { message: string; options: string }>;

    "buildToeComposeMsgAndOptions(address,bytes,uint16,uint16,uint32,bytes,bytes)"(
      _toeToken: PromiseOrValue<string>,
      _msg: PromiseOrValue<BytesLike>,
      _msgType: PromiseOrValue<BigNumberish>,
      _msgIndex: PromiseOrValue<BigNumberish>,
      _dstEid: PromiseOrValue<BigNumberish>,
      _extraOptions: PromiseOrValue<BytesLike>,
      _tapComposedMsg: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string, string] & { message: string; options: string }>;

    buildYieldBoxApproveAllMsg(
      _yieldBoxApprovalAllMsg: YieldBoxApproveAllMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    "buildYieldBoxApproveAllMsg((address,address,address,uint256,uint8,bytes32,bytes32,bool))"(
      _yieldBoxApprovalAllMsg: YieldBoxApproveAllMsgStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    buildYieldBoxApproveAssetMsg(
      _approvalMsg: YieldBoxApproveAssetMsgStruct[],
      overrides?: CallOverrides
    ): Promise<string>;

    "buildYieldBoxApproveAssetMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool)[])"(
      _approvalMsg: YieldBoxApproveAssetMsgStruct[],
      overrides?: CallOverrides
    ): Promise<string>;

    encodeERC20PermitApprovalMsg(
      _erc20PermitApprovalMsg: ERC20PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<string>;

    "encodeERC20PermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32)[])"(
      _erc20PermitApprovalMsg: ERC20PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<string>;

    encodeERC721PermitApprovalMsg(
      _erc721PermitApprovalMsg: ERC721PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<string>;

    "encodeERC721PermitApprovalMsg((address,address,uint256,uint256,uint8,bytes32,bytes32)[])"(
      _erc721PermitApprovalMsg: ERC721PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<string>;

    encodePearlmitApprovalMsg(
      _pearlmit: PromiseOrValue<string>,
      _data: IPearlmit.PermitBatchTransferFromStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    "encodePearlmitApprovalMsg(address,((uint8,address,uint256,uint200,address)[],address,uint256,uint48,bytes,address,bytes32))"(
      _pearlmit: PromiseOrValue<string>,
      _data: IPearlmit.PermitBatchTransferFromStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    prepareLzCall(
      _toeToken: PromiseOrValue<string>,
      _prepareLzCallData: PrepareLzCallDataStruct,
      overrides?: CallOverrides
    ): Promise<PrepareLzCallReturnStructOutput>;

    "prepareLzCall(address,(uint32,bytes32,uint256,uint256,uint16,(uint8,uint128,uint128,bytes,bytes,bytes),uint128,uint128,address))"(
      _toeToken: PromiseOrValue<string>,
      _prepareLzCallData: PrepareLzCallDataStruct,
      overrides?: CallOverrides
    ): Promise<PrepareLzCallReturnStructOutput>;

    toLD(
      _amountSD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "toLD(uint64,uint256)"(
      _amountSD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    toSD(
      _amountLD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "toSD(uint256,uint256)"(
      _amountLD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    MSG_SEND(overrides?: CallOverrides): Promise<BigNumber>;

    "MSG_SEND()"(overrides?: CallOverrides): Promise<BigNumber>;

    buildExerciseOptionMsg(
      _msg: ExerciseOptionsMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "buildExerciseOptionMsg(((address,address,uint256,uint256,uint256),bool,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address)))"(
      _msg: ExerciseOptionsMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    buildMarketLendOrRepayMsg(
      _msg: MarketLendOrRepayMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "buildMarketLendOrRepayMsg((address,(bool,uint256,uint256,address,address,address,bool,uint256,(bool,address,uint128,uint128,uint256),(bool,address,uint256)),(address,uint256,address,uint256,bool,bool)))"(
      _msg: MarketLendOrRepayMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    buildMarketPermitApprovalMsg(
      _marketPermitActionMsg: MarketPermitActionMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "buildMarketPermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool))"(
      _marketPermitActionMsg: MarketPermitActionMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    buildMarketRemoveAssetMsg(
      _msg: MarketRemoveAssetMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "buildMarketRemoveAssetMsg((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"(
      _msg: MarketRemoveAssetMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    buildRemoteTransferMsg(
      _remoteTransferMsg: RemoteTransferMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "buildRemoteTransferMsg((address,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address),bytes))"(
      _remoteTransferMsg: RemoteTransferMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    buildToeComposeMsgAndOptions(
      _toeToken: PromiseOrValue<string>,
      _msg: PromiseOrValue<BytesLike>,
      _msgType: PromiseOrValue<BigNumberish>,
      _msgIndex: PromiseOrValue<BigNumberish>,
      _dstEid: PromiseOrValue<BigNumberish>,
      _extraOptions: PromiseOrValue<BytesLike>,
      _tapComposedMsg: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "buildToeComposeMsgAndOptions(address,bytes,uint16,uint16,uint32,bytes,bytes)"(
      _toeToken: PromiseOrValue<string>,
      _msg: PromiseOrValue<BytesLike>,
      _msgType: PromiseOrValue<BigNumberish>,
      _msgIndex: PromiseOrValue<BigNumberish>,
      _dstEid: PromiseOrValue<BigNumberish>,
      _extraOptions: PromiseOrValue<BytesLike>,
      _tapComposedMsg: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    buildYieldBoxApproveAllMsg(
      _yieldBoxApprovalAllMsg: YieldBoxApproveAllMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "buildYieldBoxApproveAllMsg((address,address,address,uint256,uint8,bytes32,bytes32,bool))"(
      _yieldBoxApprovalAllMsg: YieldBoxApproveAllMsgStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    buildYieldBoxApproveAssetMsg(
      _approvalMsg: YieldBoxApproveAssetMsgStruct[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "buildYieldBoxApproveAssetMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool)[])"(
      _approvalMsg: YieldBoxApproveAssetMsgStruct[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    encodeERC20PermitApprovalMsg(
      _erc20PermitApprovalMsg: ERC20PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "encodeERC20PermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32)[])"(
      _erc20PermitApprovalMsg: ERC20PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    encodeERC721PermitApprovalMsg(
      _erc721PermitApprovalMsg: ERC721PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "encodeERC721PermitApprovalMsg((address,address,uint256,uint256,uint8,bytes32,bytes32)[])"(
      _erc721PermitApprovalMsg: ERC721PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    encodePearlmitApprovalMsg(
      _pearlmit: PromiseOrValue<string>,
      _data: IPearlmit.PermitBatchTransferFromStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "encodePearlmitApprovalMsg(address,((uint8,address,uint256,uint200,address)[],address,uint256,uint48,bytes,address,bytes32))"(
      _pearlmit: PromiseOrValue<string>,
      _data: IPearlmit.PermitBatchTransferFromStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    prepareLzCall(
      _toeToken: PromiseOrValue<string>,
      _prepareLzCallData: PrepareLzCallDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "prepareLzCall(address,(uint32,bytes32,uint256,uint256,uint16,(uint8,uint128,uint128,bytes,bytes,bytes),uint128,uint128,address))"(
      _toeToken: PromiseOrValue<string>,
      _prepareLzCallData: PrepareLzCallDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    toLD(
      _amountSD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "toLD(uint64,uint256)"(
      _amountSD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    toSD(
      _amountLD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "toSD(uint256,uint256)"(
      _amountLD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    MSG_SEND(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "MSG_SEND()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    buildExerciseOptionMsg(
      _msg: ExerciseOptionsMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "buildExerciseOptionMsg(((address,address,uint256,uint256,uint256),bool,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address)))"(
      _msg: ExerciseOptionsMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    buildMarketLendOrRepayMsg(
      _msg: MarketLendOrRepayMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "buildMarketLendOrRepayMsg((address,(bool,uint256,uint256,address,address,address,bool,uint256,(bool,address,uint128,uint128,uint256),(bool,address,uint256)),(address,uint256,address,uint256,bool,bool)))"(
      _msg: MarketLendOrRepayMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    buildMarketPermitApprovalMsg(
      _marketPermitActionMsg: MarketPermitActionMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "buildMarketPermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool))"(
      _marketPermitActionMsg: MarketPermitActionMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    buildMarketRemoveAssetMsg(
      _msg: MarketRemoveAssetMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "buildMarketRemoveAssetMsg((address,(address,address,address,address),(bool,uint256,bool,uint256,bool,uint256,(bool,address,uint256),(bool,address,uint256),(address,uint256,address,uint256,bool,bool),(address,uint256,address,uint256,bool,bool))))"(
      _msg: MarketRemoveAssetMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    buildRemoteTransferMsg(
      _remoteTransferMsg: RemoteTransferMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "buildRemoteTransferMsg((address,((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),(uint256,uint256),bytes,address),bytes))"(
      _remoteTransferMsg: RemoteTransferMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    buildToeComposeMsgAndOptions(
      _toeToken: PromiseOrValue<string>,
      _msg: PromiseOrValue<BytesLike>,
      _msgType: PromiseOrValue<BigNumberish>,
      _msgIndex: PromiseOrValue<BigNumberish>,
      _dstEid: PromiseOrValue<BigNumberish>,
      _extraOptions: PromiseOrValue<BytesLike>,
      _tapComposedMsg: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "buildToeComposeMsgAndOptions(address,bytes,uint16,uint16,uint32,bytes,bytes)"(
      _toeToken: PromiseOrValue<string>,
      _msg: PromiseOrValue<BytesLike>,
      _msgType: PromiseOrValue<BigNumberish>,
      _msgIndex: PromiseOrValue<BigNumberish>,
      _dstEid: PromiseOrValue<BigNumberish>,
      _extraOptions: PromiseOrValue<BytesLike>,
      _tapComposedMsg: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    buildYieldBoxApproveAllMsg(
      _yieldBoxApprovalAllMsg: YieldBoxApproveAllMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "buildYieldBoxApproveAllMsg((address,address,address,uint256,uint8,bytes32,bytes32,bool))"(
      _yieldBoxApprovalAllMsg: YieldBoxApproveAllMsgStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    buildYieldBoxApproveAssetMsg(
      _approvalMsg: YieldBoxApproveAssetMsgStruct[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "buildYieldBoxApproveAssetMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32,bool)[])"(
      _approvalMsg: YieldBoxApproveAssetMsgStruct[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    encodeERC20PermitApprovalMsg(
      _erc20PermitApprovalMsg: ERC20PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "encodeERC20PermitApprovalMsg((address,address,address,uint256,uint256,uint8,bytes32,bytes32)[])"(
      _erc20PermitApprovalMsg: ERC20PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    encodeERC721PermitApprovalMsg(
      _erc721PermitApprovalMsg: ERC721PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "encodeERC721PermitApprovalMsg((address,address,uint256,uint256,uint8,bytes32,bytes32)[])"(
      _erc721PermitApprovalMsg: ERC721PermitApprovalMsgStruct[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    encodePearlmitApprovalMsg(
      _pearlmit: PromiseOrValue<string>,
      _data: IPearlmit.PermitBatchTransferFromStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "encodePearlmitApprovalMsg(address,((uint8,address,uint256,uint200,address)[],address,uint256,uint48,bytes,address,bytes32))"(
      _pearlmit: PromiseOrValue<string>,
      _data: IPearlmit.PermitBatchTransferFromStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    prepareLzCall(
      _toeToken: PromiseOrValue<string>,
      _prepareLzCallData: PrepareLzCallDataStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "prepareLzCall(address,(uint32,bytes32,uint256,uint256,uint16,(uint8,uint128,uint128,bytes,bytes,bytes),uint128,uint128,address))"(
      _toeToken: PromiseOrValue<string>,
      _prepareLzCallData: PrepareLzCallDataStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    toLD(
      _amountSD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "toLD(uint64,uint256)"(
      _amountSD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    toSD(
      _amountLD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "toSD(uint256,uint256)"(
      _amountLD: PromiseOrValue<BigNumberish>,
      _decimalConversionRate: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
