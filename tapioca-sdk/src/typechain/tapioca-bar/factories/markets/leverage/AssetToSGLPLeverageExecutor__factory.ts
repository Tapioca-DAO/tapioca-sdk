/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AssetToSGLPLeverageExecutor,
  AssetToSGLPLeverageExecutorInterface,
} from "../../../markets/leverage/AssetToSGLPLeverageExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yb",
        type: "address",
      },
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "contract IGmxRewardRouterV2",
        name: "_glpRewardRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GlpNotValid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "NotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "buildSwapDefaultData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collateralId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620020dd380380620020dd833981016040819052620000359162000159565b600080546001600160a01b0319163390811782556040518792879287929091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b03928316608052600380549284166001600160a01b031993841617905560028054918416918316919091179055600080549091163317905582811660a052811660e081905260408051633e9b6c6f60e21b8152905163fa6db1bc916004808201926020929091908290030181865afa15801562000102573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001289190620001d9565b6001600160a01b031660c05250620002009350505050565b6001600160a01b03811681146200015657600080fd5b50565b600080600080600060a086880312156200017257600080fd5b85516200017f8162000140565b6020870151909550620001928162000140565b6040870151909450620001a58162000140565b6060870151909350620001b88162000140565b6080870151909250620001cb8162000140565b809150509295509295909350565b600060208284031215620001ec57600080fd5b8151620001f98162000140565b9392505050565b60805160a05160c05160e051611e646200027960003960008181610d2d0152611144015260008181610caf01526110c5015260008181610190015281816105e80152818161061401528181610a4a01528181610aba0152610aed01526000818161028601528181610fab01526110320152611e646000f3fe6080604052600436106100d25760003560e01c80638da5cb5b1161007f578063dbd01de111610059578063dbd01de114610247578063de40657714610274578063e2211658146102a8578063e30c3978146102d557600080fd5b80638da5cb5b146101e75780639c82f2a414610214578063c990ad1c1461023457600080fd5b80633e413bee116100b05780633e413bee1461017e578063437be622146101b25780634e71e0c8146101d257600080fd5b8063078dfbe7146100d75780630fb5d60d146100f95780632b3297f91461012c575b600080fd5b3480156100e357600080fd5b506100f76100f236600461174e565b610302565b005b34801561010557600080fd5b50610119610114366004611799565b6104f1565b6040519081526020015b60405180910390f35b34801561013857600080fd5b506003546101599073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610123565b34801561018a57600080fd5b506101597f000000000000000000000000000000000000000000000000000000000000000081565b3480156101be57600080fd5b506100f76101cd366004611857565b6106ae565b3480156101de57600080fd5b506100f7610776565b3480156101f357600080fd5b506000546101599073ffffffffffffffffffffffffffffffffffffffff1681565b34801561022057600080fd5b506100f761022f366004611857565b61088c565b610119610242366004611799565b610954565b34801561025357600080fd5b506002546101599073ffffffffffffffffffffffffffffffffffffffff1681565b34801561028057600080fd5b506101597f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b457600080fd5b506102c86102c336600461187b565b610b22565b604051610123919061192a565b3480156102e157600080fd5b506001546101599073ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff163314610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b81156104ac5773ffffffffffffffffffffffffffffffffffffffff83161515806103af5750805b610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4f776e61626c653a207a65726f20616464726573730000000000000000000000604482015260640161037f565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600180549091169055505050565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516179055505050565b6002546040517fe67e99080000000000000000000000000000000000000000000000000000000081526000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063e67e990890604401602060405180830381865afa158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b919061193d565b6105c1576040517f0d20b1c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105c9610b6d565b600080806105d985870187611a5d565b925092509250600061060d898c7f000000000000000000000000000000000000000000000000000000000000000087610c91565b905061063e7f00000000000000000000000000000000000000000000000000000000000000008b8386866000610dee565b945082851015610692576040517f28e217f500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b16600482015260240161037f565b61069f8c8b308b89610f8f565b50505050979650505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461072f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161037f565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff163381146107f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604482015260640161037f565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b60005473ffffffffffffffffffffffffffffffffffffffff16331461090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161037f565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6002546040517fe67e99080000000000000000000000000000000000000000000000000000000081526000600482018190523360248301529173ffffffffffffffffffffffffffffffffffffffff169063e67e990890604401602060405180830381865afa1580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee919061193d565b610a24576040517f0d20b1c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a2c610b6d565b60008080610a3c85870187611aad565b9250925092506000610a738b7f00000000000000000000000000000000000000000000000000000000000000008b87876000610dee565b905083811015610ae7576040517f28e217f500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016600482015260240161037f565b610b13817f0000000000000000000000000000000000000000000000000000000000000000848d6110a7565b945061069f8c8b308b89610f8f565b6060610b658484846040518060400160405280600281526020017f3078000000000000000000000000000000000000000000000000000000000000815250611205565b949350505050565b60035473ffffffffffffffffffffffffffffffffffffffff16610bbc576040517f1da137b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002546003546040517fe67e99080000000000000000000000000000000000000000000000000000000081526000600482015273ffffffffffffffffffffffffffffffffffffffff918216602482015291169063e67e990890604401602060405180830381865afa158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c59919061193d565b610c8f576040517f21aa578400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000610cd473ffffffffffffffffffffffffffffffffffffffff85167f000000000000000000000000000000000000000000000000000000000000000087611385565b6040517f0f3aa55400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201879052604482018490523060648301527f00000000000000000000000000000000000000000000000000000000000000001690630f3aa554906084016020604051808303816000875af1158015610d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9a9190611afd565b905081811015610b65576040517f28e217f500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260240161037f565b6003546040517fcf144a4e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff888116600483015287811660248301526044820187905260006064830181905292839291169063cf144a4e9060840161014060405180830381865afa158015610e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9d9190611bbf565b905073ffffffffffffffffffffffffffffffffffffffff881615610ee257600354610ee29073ffffffffffffffffffffffffffffffffffffffff8a8116911688611385565b6003546040517fefa84c6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063efa84c6d908590610f409085908a9030908b90600401611c75565b604080518083038185885af1158015610f5d573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f829190611d38565b5098975050505050505050565b610fd073ffffffffffffffffffffffffffffffffffffffff85167f000000000000000000000000000000000000000000000000000000000000000083611385565b6040517f9a9af97a0000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff8481166024830152838116604483015260648201839052600060848301527f00000000000000000000000000000000000000000000000000000000000000001690639a9af97a9060a40160408051808303816000875af115801561107a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109e9190611d38565b50505050505050565b60006110ea73ffffffffffffffffffffffffffffffffffffffff85167f000000000000000000000000000000000000000000000000000000000000000087611385565b6040517f364e231100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526024820187905260006044830152606482018590527f0000000000000000000000000000000000000000000000000000000000000000169063364e2311906084016020604051808303816000875af115801561118d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b19190611afd565b905082811015610b65576040517f28e217f500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260240161037f565b6003546040517fcf144a4e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152858116602483015260448201859052600060648301819052606093909291169063cf144a4e9060840161014060405180830381865afa158015611292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b69190611bbf565b6003546040517f5bf66e4800000000000000000000000000000000000000000000000000000000815291925060009173ffffffffffffffffffffffffffffffffffffffff90911690635bf66e48906113149085908890600401611d5c565b602060405180830381865afa158015611331573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113559190611afd565b9050808460405160200161136a929190611df9565b60405160208183030381529060405292505050949350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11611406576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f53616665417070726f76653a206e6f20636f6e74726163740000000000000000604482015260640161037f565b60405173ffffffffffffffffffffffffffffffffffffffff838116602483015260006044830181905291606091861690606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052516114ba9190611e12565b6000604051808303816000865af19150503d80600081146114f7576040519150601f19603f3d011682016040523d82523d6000602084013e6114fc565b606091505b509092509050818015611527575080511580611527575080806020019051810190611527919061193d565b61158d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c65640000000000604482015260640161037f565b82156117145760405173ffffffffffffffffffffffffffffffffffffffff858116602483015260448201859052861690606401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052516116419190611e12565b6000604051808303816000865af19150503d806000811461167e576040519150601f19603f3d011682016040523d82523d6000602084013e611683565b606091505b5090925090508180156116ae5750805115806116ae5750808060200190518101906116ae919061193d565b611714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c65640000000000604482015260640161037f565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461173d57600080fd5b50565b801515811461173d57600080fd5b60008060006060848603121561176357600080fd5b833561176e8161171b565b9250602084013561177e81611740565b9150604084013561178e81611740565b809150509250925092565b600080600080600080600060c0888a0312156117b457600080fd5b8735965060208801356117c68161171b565b955060408801356117d68161171b565b94506060880135935060808801356117ed8161171b565b925060a088013567ffffffffffffffff8082111561180a57600080fd5b818a0191508a601f83011261181e57600080fd5b81358181111561182d57600080fd5b8b602082850101111561183f57600080fd5b60208301945080935050505092959891949750929550565b60006020828403121561186957600080fd5b81356118748161171b565b9392505050565b60008060006060848603121561189057600080fd5b833561189b8161171b565b925060208401356118ab8161171b565b929592945050506040919091013590565b60005b838110156118d75781810151838201526020016118bf565b50506000910152565b600081518084526118f88160208601602086016118bc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061187460208301846118e0565b60006020828403121561194f57600080fd5b815161187481611740565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156119ac576119ac61195a565b60405290565b600082601f8301126119c357600080fd5b813567ffffffffffffffff808211156119de576119de61195a565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611a2457611a2461195a565b81604052838152866020858801011115611a3d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611a7257600080fd5b8335925060208401359150604084013567ffffffffffffffff811115611a9757600080fd5b611aa3868287016119b2565b9150509250925092565b600080600060608486031215611ac257600080fd5b83359250602084013567ffffffffffffffff811115611ae057600080fd5b611aec868287016119b2565b925050604084013590509250925092565b600060208284031215611b0f57600080fd5b5051919050565b600060808284031215611b2857600080fd5b611b30611989565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b600060408284031215611b6c57600080fd5b6040516040810181811067ffffffffffffffff82111715611b8f57611b8f61195a565b80604052508091508251611ba281611740565b81526020830151611bb281611740565b6020919091015292915050565b6000818303610140811215611bd357600080fd5b6040516060810181811067ffffffffffffffff82111715611bf657611bf661195a565b6040526080821215611c0757600080fd5b611c0f611989565b91508351611c1c8161171b565b8252602084810151908301526040840151611c368161171b565b604083015260608481015190830152818152611c558560808601611b16565b6020820152611c68856101008601611b5a565b6040820152949350505050565b8451805173ffffffffffffffffffffffffffffffffffffffff908116835260208083015181850152604080840151909216828501526060928301518385015280880151805160808601528082015160a08601528083015160c08601529092015160e0840152860151805115156101008401520151151561012082015260006101a08561014084015273ffffffffffffffffffffffffffffffffffffffff851661016084015280610180840152611d2d818401856118e0565b979650505050505050565b60008060408385031215611d4b57600080fd5b505080516020909101519092909150565b8251805173ffffffffffffffffffffffffffffffffffffffff908116835260208083015181850152604080840151909216828501526060928301518385015280860151805160808601528082015160a08601528083015160c08601529092015160e08401528401518051151561010084015201511515610120820152600061016080610140840152611df0818401856118e0565b95945050505050565b828152604060208201526000610b6560408301846118e0565b60008251611e248184602087016118bc565b919091019291505056fea2646970667358221220e001cb1f8a2c610a67d9a68ba79703b3b25130be057c2fe721f37e1a7851494064736f6c63430008160033";

type AssetToSGLPLeverageExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetToSGLPLeverageExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetToSGLPLeverageExecutor__factory extends ContractFactory {
  constructor(...args: AssetToSGLPLeverageExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AssetToSGLPLeverageExecutor";
  }

  override deploy(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _glpRewardRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetToSGLPLeverageExecutor> {
    return super.deploy(
      _yb,
      _swapper,
      _cluster,
      _usdc,
      _glpRewardRouter,
      overrides || {}
    ) as Promise<AssetToSGLPLeverageExecutor>;
  }
  override getDeployTransaction(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _glpRewardRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _yb,
      _swapper,
      _cluster,
      _usdc,
      _glpRewardRouter,
      overrides || {}
    );
  }
  override attach(address: string): AssetToSGLPLeverageExecutor {
    return super.attach(address) as AssetToSGLPLeverageExecutor;
  }
  override connect(signer: Signer): AssetToSGLPLeverageExecutor__factory {
    return super.connect(signer) as AssetToSGLPLeverageExecutor__factory;
  }
  static readonly contractName: "AssetToSGLPLeverageExecutor";

  public readonly contractName: "AssetToSGLPLeverageExecutor";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetToSGLPLeverageExecutorInterface {
    return new utils.Interface(_abi) as AssetToSGLPLeverageExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetToSGLPLeverageExecutor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AssetToSGLPLeverageExecutor;
  }
}
