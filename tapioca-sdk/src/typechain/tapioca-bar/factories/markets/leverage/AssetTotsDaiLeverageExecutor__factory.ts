/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AssetTotsDaiLeverageExecutor,
  AssetTotsDaiLeverageExecutorInterface,
} from "../../../markets/leverage/AssetTotsDaiLeverageExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IYieldBox",
        name: "_yb",
        type: "address",
      },
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "NotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapperNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotValid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "buildSwapDefaultData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cluster",
    outputs: [
      {
        internalType: "contract ICluster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collateralId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICluster",
        name: "_cluster",
        type: "address",
      },
    ],
    name: "setCluster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapper",
    outputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract IYieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001d6238038062001d628339810160408190526200003491620000da565b600080546001600160a01b0319163390811782556040518592859285929091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b03928316608052600380549284166001600160a01b03199384161790556002805491909316908216179091556000805490911633179055506200012e915050565b6001600160a01b0381168114620000d757600080fd5b50565b600080600060608486031215620000f057600080fd5b8351620000fd81620000c1565b60208501519093506200011081620000c1565b60408501519092506200012381620000c1565b809150509250925092565b608051611c0a620001586000396000818161021301528181610f3e0152610fb80152611c0a6000f3fe6080604052600436106100c75760003560e01c80639c82f2a411610074578063de4065771161004e578063de40657714610201578063e221165814610235578063e30c39781461026257600080fd5b80639c82f2a4146101ae578063c990ad1c146101ce578063dbd01de1146101e157600080fd5b8063437be622116100a5578063437be622146101595780634e71e0c8146101795780638da5cb5b1461018e57600080fd5b8063078dfbe7146100cc5780630fb5d60d146100ee5780632b3297f914610121575b600080fd5b3480156100d857600080fd5b506100ec6100e7366004611597565b610282565b005b3480156100fa57600080fd5b5061010e6101093660046115e2565b610430565b6040519081526020015b60405180910390f35b34801561012d57600080fd5b50600354610141906001600160a01b031681565b6040516001600160a01b039091168152602001610118565b34801561016557600080fd5b506100ec6101743660046116a0565b610721565b34801561018557600080fd5b506100ec6107cf565b34801561019a57600080fd5b50600054610141906001600160a01b031681565b3480156101ba57600080fd5b506100ec6101c93660046116a0565b6108be565b61010e6101dc3660046115e2565b61096c565b3480156101ed57600080fd5b50600254610141906001600160a01b031681565b34801561020d57600080fd5b506101417f000000000000000000000000000000000000000000000000000000000000000081565b34801561024157600080fd5b506102556102503660046116c4565b610b5d565b6040516101189190611755565b34801561026e57600080fd5b50600154610141906001600160a01b031681565b6000546001600160a01b031633146102fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b81156103f8576001600160a01b0383161515806103155750805b61037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4f776e61626c653a207a65726f2061646472657373000000000000000000000060448201526064016102f2565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600180549091169055505050565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038516179055505050565b6002546040517fe67e9908000000000000000000000000000000000000000000000000000000008152600060048201819052336024830152916001600160a01b03169063e67e990890604401602060405180830381865afa158015610499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bd9190611768565b6104f3576040517f0d20b1c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104fb610ba8565b60008061050a8486018661180e565b9150915060008061051a8b610cb2565b6040517f39f47693000000000000000000000000000000000000000000000000000000008152306004820152602481018c905291935091506001600160a01b038c16906339f4769390604401600060405180830381600087803b15801561058057600080fd5b505af1158015610594573d6000803e3d6000fd5b50506040517fc6e6f592000000000000000000000000000000000000000000000000000000008152600481018c9052600092506001600160a01b038516915063ba08765290829063c6e6f59290602401602060405180830381865afa158015610601573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062591906118ad565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152306024820181905260448201526064016020604051808303816000875af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac91906118ad565b90506106bd828c8388886000610dc2565b955084861015610704576040517f28e217f50000000000000000000000000000000000000000000000000000000081526001600160a01b038c1660048201526024016102f2565b6107118d8c308c8a610f2f565b5050505050979650505050505050565b6000546001600160a01b03163314610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f2565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6001546001600160a01b0316338114610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e657260448201526064016102f2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b6000546001600160a01b03163314610932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f2565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6002546040517fe67e9908000000000000000000000000000000000000000000000000000000008152600060048201819052336024830152916001600160a01b03169063e67e990890604401602060405180830381865afa1580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f99190611768565b610a2f576040517f0d20b1c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a37610ba8565b600080610a468486018661180e565b91509150600080610a568a610cb2565b915091506000610a6b8c838c88886000610dc2565b905084811015610ab2576040517f28e217f50000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016102f2565b610ac66001600160a01b038316848361102d565b6040517f6e553f65000000000000000000000000000000000000000000000000000000008152600481018290523060248201526001600160a01b03841690636e553f65906044016020604051808303816000875af1158015610b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5091906118ad565b9550610704838c88611360565b6060610ba08484846040518060400160405280600281526020017f307800000000000000000000000000000000000000000000000000000000000081525061140b565b949350505050565b6003546001600160a01b0316610bea576040517f1da137b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002546003546040517fe67e9908000000000000000000000000000000000000000000000000000000008152600060048201526001600160a01b03918216602482015291169063e67e990890604401602060405180830381865afa158015610c56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7a9190611768565b610cb0576040517f21aa578400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080826001600160a01b031663785e9e866040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1791906118c6565b91506001600160a01b038216610d59576040517fb0e0140200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816001600160a01b031663f4b9fa756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbb91906118c6565b9050915091565b6003546040517fcf144a4e0000000000000000000000000000000000000000000000000000000081526001600160a01b03888116600483015287811660248301526044820187905260006064830181905292839291169063cf144a4e9060840161014060405180830381865afa158015610e40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e64919061198c565b90506001600160a01b03881615610e8f57600354610e8f906001600160a01b038a811691168861102d565b6003546040517fefa84c6d0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063efa84c6d908590610ee09085908a9030908b90600401611a42565b604080518083038185885af1158015610efd573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f229190611aeb565b5098975050505050505050565b610f636001600160a01b0385167f00000000000000000000000000000000000000000000000000000000000000008361102d565b6040517f9a9af97a000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b038481166024830152838116604483015260648201839052600060848301527f00000000000000000000000000000000000000000000000000000000000000001690639a9af97a9060a40160408051808303816000875af1158015611000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110249190611aeb565b50505050505050565b6000836001600160a01b03163b116110a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f53616665417070726f76653a206e6f20636f6e7472616374000000000000000060448201526064016102f2565b6040516001600160a01b0383811660248301526000604483018190529160609186169060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790525161112a9190611b0f565b6000604051808303816000865af19150503d8060008114611167576040519150601f19603f3d011682016040523d82523d6000602084013e61116c565b606091505b5090925090508180156111975750805115806111975750808060200190518101906111979190611768565b6111fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c6564000000000060448201526064016102f2565b8215611359576040516001600160a01b0385811660248301526044820185905286169060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052516112869190611b0f565b6000604051808303816000865af19150503d80600081146112c3576040519150601f19603f3d011682016040523d82523d6000602084013e6112c8565b606091505b5090925090508180156112f35750805115806112f35750808060200190518101906112f39190611768565b611359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53616665417070726f76653a20617070726f7665206661696c6564000000000060448201526064016102f2565b5050505050565b6113746001600160a01b038416838361102d565b6040517f6235563800000000000000000000000000000000000000000000000000000000815230600482018190526024820152604481018290526001600160a01b038316906362355638906064016020604051808303816000875af11580156113e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140591906118ad565b50505050565b6003546040517fcf144a4e0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152858116602483015260448201859052600060648301819052606093909291169063cf144a4e9060840161014060405180830381865afa15801561148b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114af919061198c565b6003546040517f5bf66e480000000000000000000000000000000000000000000000000000000081529192506000916001600160a01b0390911690635bf66e48906115009085908890600401611b2b565b602060405180830381865afa15801561151d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154191906118ad565b90508084604051602001611556929190611bbb565b60405160208183030381529060405292505050949350505050565b6001600160a01b038116811461158657600080fd5b50565b801515811461158657600080fd5b6000806000606084860312156115ac57600080fd5b83356115b781611571565b925060208401356115c781611589565b915060408401356115d781611589565b809150509250925092565b600080600080600080600060c0888a0312156115fd57600080fd5b87359650602088013561160f81611571565b9550604088013561161f81611571565b945060608801359350608088013561163681611571565b925060a088013567ffffffffffffffff8082111561165357600080fd5b818a0191508a601f83011261166757600080fd5b81358181111561167657600080fd5b8b602082850101111561168857600080fd5b60208301945080935050505092959891949750929550565b6000602082840312156116b257600080fd5b81356116bd81611571565b9392505050565b6000806000606084860312156116d957600080fd5b83356116e481611571565b925060208401356116f481611571565b929592945050506040919091013590565b60005b83811015611720578181015183820152602001611708565b50506000910152565b60008151808452611741816020860160208601611705565b601f01601f19169290920160200192915050565b6020815260006116bd6020830184611729565b60006020828403121561177a57600080fd5b81516116bd81611589565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156117d7576117d7611785565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561180657611806611785565b604052919050565b6000806040838503121561182157600080fd5b8235915060208084013567ffffffffffffffff8082111561184157600080fd5b818601915086601f83011261185557600080fd5b81358181111561186757611867611785565b61187984601f19601f840116016117dd565b9150808252878482850101111561188f57600080fd5b80848401858401376000848284010152508093505050509250929050565b6000602082840312156118bf57600080fd5b5051919050565b6000602082840312156118d857600080fd5b81516116bd81611571565b6000608082840312156118f557600080fd5b6118fd6117b4565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b60006040828403121561193957600080fd5b6040516040810181811067ffffffffffffffff8211171561195c5761195c611785565b8060405250809150825161196f81611589565b8152602083015161197f81611589565b6020919091015292915050565b60008183036101408112156119a057600080fd5b6040516060810181811067ffffffffffffffff821117156119c3576119c3611785565b60405260808212156119d457600080fd5b6119dc6117b4565b915083516119e981611571565b8252602084810151908301526040840151611a0381611571565b604083015260608481015190830152818152611a2285608086016118e3565b6020820152611a35856101008601611927565b6040820152949350505050565b845180516001600160a01b03908116835260208083015181850152604080840151909216828501526060928301518385015280880151805160808601528082015160a08601528083015160c08601529092015160e0840152860151805115156101008401520151151561012082015260006101a0856101408401526001600160a01b03851661016084015280610180840152611ae081840185611729565b979650505050505050565b60008060408385031215611afe57600080fd5b505080516020909101519092909150565b60008251611b21818460208701611705565b9190910192915050565b825180516001600160a01b03908116835260208083015181850152604080840151909216828501526060928301518385015280860151805160808601528082015160a08601528083015160c08601529092015160e08401528401518051151561010084015201511515610120820152600061016080610140840152611bb281840185611729565b95945050505050565b828152604060208201526000610ba0604083018461172956fea26469706673582212203d901198852f6a3e3fd63043d88132c6edb38d267ad5e964ebbeea6514c910af64736f6c63430008160033";

type AssetTotsDaiLeverageExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetTotsDaiLeverageExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetTotsDaiLeverageExecutor__factory extends ContractFactory {
  constructor(...args: AssetTotsDaiLeverageExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AssetTotsDaiLeverageExecutor";
  }

  override deploy(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetTotsDaiLeverageExecutor> {
    return super.deploy(
      _yb,
      _swapper,
      _cluster,
      overrides || {}
    ) as Promise<AssetTotsDaiLeverageExecutor>;
  }
  override getDeployTransaction(
    _yb: PromiseOrValue<string>,
    _swapper: PromiseOrValue<string>,
    _cluster: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yb, _swapper, _cluster, overrides || {});
  }
  override attach(address: string): AssetTotsDaiLeverageExecutor {
    return super.attach(address) as AssetTotsDaiLeverageExecutor;
  }
  override connect(signer: Signer): AssetTotsDaiLeverageExecutor__factory {
    return super.connect(signer) as AssetTotsDaiLeverageExecutor__factory;
  }
  static readonly contractName: "AssetTotsDaiLeverageExecutor";

  public readonly contractName: "AssetTotsDaiLeverageExecutor";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetTotsDaiLeverageExecutorInterface {
    return new utils.Interface(_abi) as AssetTotsDaiLeverageExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetTotsDaiLeverageExecutor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AssetTotsDaiLeverageExecutor;
  }
}
