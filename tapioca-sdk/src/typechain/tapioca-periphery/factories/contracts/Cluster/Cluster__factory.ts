/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Cluster,
  ClusterInterface,
} from "../../../contracts/Cluster/Cluster";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_lzChainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "_lzChainId",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_oldStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_newStatus",
        type: "bool",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_editor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_oldStatus",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_newStatus",
        type: "bool",
      },
    ],
    name: "EditorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_oldChain",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_newChain",
        type: "uint256",
      },
    ],
    name: "LzChainUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_lzChainId",
        type: "uint32",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "batchUpdateContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "editor",
        type: "address",
      },
    ],
    name: "isEditor",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_lzChainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lzChainId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_lzChainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "updateContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_editor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "updateEditor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_lzChainId",
        type: "uint32",
      },
    ],
    name: "updateLzChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dce380380610dce83398101604081905261002f91610190565b61003833610066565b6000805463ffffffff60a01b1916600160a01b63ffffffff85160217905561005f816100b6565b50506101df565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100be610134565b6001600160a01b0381166101285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61013181610066565b50565b6000546001600160a01b0316331461018e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161011f565b565b600080604083850312156101a357600080fd5b825163ffffffff811681146101b757600080fd5b60208401519092506001600160a01b03811681146101d457600080fd5b809150509250929050565b610be0806101ee6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063917c415611610076578063d539e8a41161005b578063d539e8a4146101a3578063e67e9908146101b6578063f2fde38b146101c957600080fd5b8063917c415614610133578063a07481541461017057600080fd5b80636cb37a83116100a75780636cb37a83146100eb578063715018a6146100fe5780638da5cb5b1461010657600080fd5b8063201b5c94146100c35780636726b635146100d8575b600080fd5b6100d66100d1366004610972565b6101dc565b005b6100d66100e63660046109b5565b61035b565b6100d66100f93660046109d7565b610400565b6100d66104b6565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b60005461015b9074010000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff909116815260200161012a565b61019361017e366004610a0a565b60016020526000908152604090205460ff1681565b604051901515815260200161012a565b6100d66101b1366004610a54565b6104ca565b6101936101c4366004610b51565b6106fe565b6100d66101d7366004610a0a565b610773565b3360009081526001602052604090205460ff16158015610214575060005473ffffffffffffffffffffffffffffffffffffffff163314155b1561024b576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8263ffffffff1660000361027d5760005474010000000000000000000000000000000000000000900463ffffffff1692505b63ffffffff8316600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff871680855290835292819020549051851515815260ff90911615159392917f3c1cc52b5e0da1c7fb11f1a8b629743f52870199acd6845a085f51aece8fb93f910160405180910390a463ffffffff909216600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff90941683529290522080549115157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909216919091179055565b61036361082f565b6000805460405163ffffffff808516937401000000000000000000000000000000000000000090930416917f151a97d786320cda18adb054f64fa5333bf7f260aa3b29a84795f2f9004bb3d191a36000805463ffffffff90921674010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b61040861082f565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600160205260408082205490518415159360ff9092161515927fdf1df62f3c31dd6f0a6dcedf036e75fb8b63b09cbe74cb9909e21aa11df6e3a391a473ffffffffffffffffffffffffffffffffffffffff91909116600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6104be61082f565b6104c860006108b0565b565b3360009081526001602052604090205460ff16158015610502575060005473ffffffffffffffffffffffffffffffffffffffff163314155b15610539576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8263ffffffff1660000361056b5760005474010000000000000000000000000000000000000000900463ffffffff1692505b60005b82518110156106f85763ffffffff8416600090815260026020526040812084519091908590849081106105a3576105a3610b7b565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615158463ffffffff1684838151811061060e5761060e610b7b565b602002602001015173ffffffffffffffffffffffffffffffffffffffff167f3c1cc52b5e0da1c7fb11f1a8b629743f52870199acd6845a085f51aece8fb93f8560405161065f911515815260200190565b60405180910390a463ffffffff84166000908152600260205260408120845184929086908590811061069357610693610b7b565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff16825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560010161056e565b50505050565b60008263ffffffff166000036107325760005474010000000000000000000000000000000000000000900463ffffffff1692505b5063ffffffff8216600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1692915050565b61077b61082f565b73ffffffffffffffffffffffffffffffffffffffff8116610823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61082c816108b0565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161081a565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803563ffffffff8116811461093957600080fd5b919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461093957600080fd5b8035801515811461093957600080fd5b60008060006060848603121561098757600080fd5b61099084610925565b925061099e6020850161093e565b91506109ac60408501610962565b90509250925092565b6000602082840312156109c757600080fd5b6109d082610925565b9392505050565b600080604083850312156109ea57600080fd5b6109f38361093e565b9150610a0160208401610962565b90509250929050565b600060208284031215610a1c57600080fd5b6109d08261093e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600060608486031215610a6957600080fd5b610a7284610925565b925060208085013567ffffffffffffffff80821115610a9057600080fd5b818701915087601f830112610aa457600080fd5b813581811115610ab657610ab6610a25565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715610af957610af9610a25565b60405291825284820192508381018501918a831115610b1757600080fd5b938501935b82851015610b3c57610b2d8561093e565b84529385019392850192610b1c565b8097505050505050506109ac60408501610962565b60008060408385031215610b6457600080fd5b610b6d83610925565b9150610a016020840161093e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122015820d7258831103735c4103b66d2a26ad74285df70b2055b8c77351e671f1d464736f6c63430008160033";

type ClusterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClusterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cluster__factory extends ContractFactory {
  constructor(...args: ClusterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Cluster";
  }

  override deploy(
    _lzChainId: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cluster> {
    return super.deploy(
      _lzChainId,
      _owner,
      overrides || {}
    ) as Promise<Cluster>;
  }
  override getDeployTransaction(
    _lzChainId: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_lzChainId, _owner, overrides || {});
  }
  override attach(address: string): Cluster {
    return super.attach(address) as Cluster;
  }
  override connect(signer: Signer): Cluster__factory {
    return super.connect(signer) as Cluster__factory;
  }
  static readonly contractName: "Cluster";

  public readonly contractName: "Cluster";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClusterInterface {
    return new utils.Interface(_abi) as ClusterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Cluster {
    return new Contract(address, _abi, signerOrProvider) as Cluster;
  }
}
